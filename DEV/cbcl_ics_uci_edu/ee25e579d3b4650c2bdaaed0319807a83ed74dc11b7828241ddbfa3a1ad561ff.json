{"url": "https://cbcl.ics.uci.edu/public_data/shilab/PASseq_szang_20160302/PAS-seq_pipeline_usingBowtie.txt", "content": "############################\n# PAS-seq Pipeline using Bowtie1.0\n############################\n\n0. Preprocess\n# To remove reads that don't include polyA as well as the barcodes from each read. \nUse \"preprocess.py\" in myPythonTool folder.\n\n1. Alignment \nmodule load bowtie/1.0.0\nbowtie [mm9_indexed_refGenome] -q [input.fastq] -n 2 -m 1 -S > [output.sam] 2> [output.log]\n\n1.5 Remove internal priming reads\n\n\n2. Remove duplicates\n# Convert SAM file to BED format so that duplicates can be removed using \"PCRdup_BEDcombiner.py\" but this step is later discarded in \"tophat_process\".\n# To apply \"PAS_incrementer.py\", the input format is also BED.\nconvert2bed --input=sam [--output=bed] < [input.sam] > [output.bed]\n\n3. Prepare BAMs\n# convert BED file to BAM format so \"bamCoverage\" can be applied to generate bigwigs but later I switched to \"bedGraphtoBigwig\". \n\nmodule load bedtools/2.23.0\nbedtools bedtobam -i [input.bed] -g [genome_reference] > [output.bam]\n\nmodule load samtools/1.1\nsamtools sort -T [temp.file] -o [output.sorted.bam] [input.bam]\n\n4. Generate tracks\n# generated tracks on forward strand, reverse strand, and combined. \n# bamCoverage is a function in deepTools\nbamCoverage -b [input.sorted.bam] --normalizeUsingRPKM --samFlagExclude 16 --ignoreDuplicates --binSize=2 -p 32 -o [output.f.bw]\nbamCoverage -b [input.sorted.bam] --normalizeUsingRPKM --samFlagInclude 16 --ignoreDuplicates --binSize=2 -p 32 -o [output.r.bw]\nbamCoverage -b [input.sorted.bam] --normalizeUsingRPKM --ignoreDuplicates --binSize=2 -p 32 -o [output.c.bw]\n\n\n5. Generate read counts table \n# using masterlist \u00e2\u20ac\u201d Tian PAS data.txt, as reference, available at:\nhttps://cbcl.ics.uci.edu/public_data/shilab/PASseq_szang_20160302/Tian%20PAS%20data.txt\n\n\n\n", "encoding": "Windows-1252"}