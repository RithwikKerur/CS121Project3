{"url": "https://cradl.ics.uci.edu/theseus/", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\r\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\r\n<head>\r\n\t<title>Theseus</title>\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"/>\r\n\t<meta name=\"Author\" content=\"Erik Trainer\"/>\r\n\t<meta name=\"description\" content=\"Theseus is a visual interface that exposes information about colleagues that\r\n\tengenders trustworthiness among remote team members.\"/>\r\n\t<meta name=\"keywords\" content=\"social networks, UC Irvine, ISR, visualization\"/>\r\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"/>\r\n</head>\r\n\r\n<body>\r\n<div id=\"wrapper\">\r\n\r\n<div id=\"masthead\">\r\n</div>\r\n\r\n<div id=\"buttons\">\r\n<ul>\r\n\t<li><a class=\"button\" href=\"index.html\" id=\"selected\">Overview</a></li>\r\n\t<li><a class=\"button\" href=\"approach.html\">Methodology</a></li>\r\n\t<li><a class=\"button\" href=\"publications.html\">Publications</a></li>\r\n\t<li><a class=\"button\" href=\"funding.html\">Funding</a></li>\r\n\t<li><a class=\"button\" href=\"personnel.html\">Personnel</a></li>\r\n</ul>\r\n</div>\r\n\r\n<!--</div>-->\r\n\r\n<div id=\"main\">\r\n<div id=\"content\">\r\n\r\n<h2>Introduction</h2>\r\n<p>\r\nTheseus is a prototype interface that can increase a software developer's perceived trustworthiness\r\nof their distributed team members by exposing important information about them through a\r\nset of appropriate visualizations. Theseus is a web application built using <a href=\"https://developers.google.com/web-toolkit/\">\r\nGWT, the Google Web Toolkit</a>. It integrates with a developer's Google contacts, their projects' work item repositories or issue trackers, e-mail, source-code and\r\nother contextual factors (such as time zone) to give the developer insights into their colleagues availability and responsiveness.\r\n</p>\r\n<p>&nbsp;</p>\r\n\r\n<h2>Motivation</h2>\r\n<p>\r\nTrust is a significant human-oriented aspect of successful and productive collaborations. A lack of information about distributed colleagues can work against developing trust in distributed teams.  Remote workers are likely to have much less information and lower quality information about their remote partners.  For example, if Chris had known Alex was working on three projects, the past two months of which he was in Brazil working on fixing bugs, he could have modified his expectations with respect to his availability.  Research has shown that a lack of situational knowledge and the reduced ability to process it effectively can cause individuals in remote teams to attribute breakdowns to the individual rather than the situation itself, eroding team cohesion and lasting solutions.  In this instance, a loss of trust is more difficult to repair.  When what is actually observed in the world (e.g., a developer's failure to deliver work on time) clashes with expectations (e.g., their perceived ability to deliver on time), trust can be slow to build between collaborators.  The explanations distributed software developers give for these breakdowns are called attributions (Figure 1).\r\n</p>\r\n\r\n<div class=\"image\"><img src=\"images/attribution.jpg\" height=\"75%\" width=\"75%\"></img><br/><strong>Figure 1.</strong> Dispositional attributions are reflective of low perceived trustworthiness, while situational attributions are reflective of high perceived trustworthiness.</div>\r\n\r\n<p>\r\nThere are several aspects of the process of setting expectations in the context of globally distributed software development that can be addressed and improved.  First, developing a sense of trust can take time due to the lack of information about other colleagues' activities and the lack of ways to manage this information in order to set realistic expectations.  Distributed developers can ultimately reach the same levels of trust as collocated team members; it just takes longer.  A tool that can partially automate this process can provide time savings.  Second, in software development, the interactions that help set expectations are typically hidden in project repositories or incomplete documents over time (Figure 2).   \r\n</p>\r\n\r\n<div class=\"image\"><img src=\"images/CTs.png\" height=\"60%\" width=\"60%\"></img><br/><strong>Figure 2.</strong> Collaborative traces (CTs) are epresentations of past and current activity of a group of developers manipulating software development artifacts</div>\r\n\r\n<p>\r\nFurther, a lack of situational information about colleagues can negatively and more importantly, inaccurately, bias trust judgments.  If a developer is involved in multiple projects across several time zones, one shouldn't expect same day responses, for example.  An approach that renders this information explicitly from project and team artifacts can prepare people to make trust judgments based on meaningful and more complete data.  Third, the sheer number of artifacts involved makes this data, if presented in textual form, difficult to interpret.  Visualizations can be more effective in revealing and summarizing this information. \t\r\n</p>\r\n\r\n<p align=\"right\">\r\n<a href=\"approach.html\">Continue to the Approach...&rsaquo;&rsaquo;</a>\r\n</p>\r\n<p>&nbsp;</p>\r\n\r\n<div id=\"logoline\">\r\n<a href=\"http://www.uci.edu/\"><img src=\"images/ucirvine.jpg\" alt=\"UC Irvine\"></img></a> \r\n</div>\r\n\r\n</div>\r\n\r\n<div id=\"topbar\"></div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}