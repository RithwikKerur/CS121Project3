{"url": "http://flamingo.ics.uci.edu/releases/2.0.1/", "content": "<!-- $Id: index.html 5187 2010-03-31 00:02:06Z abehm $ -->\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<html>\n<head>\n<title>FLAMINGO Package (Approximate String Matching) Release 2.0.1</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/white.css\">\n</head>\n<body class=\"page_padding\">\n\n<table width=\"100%\"><tr>\n<td>\n<a href=\"http://flamingo.ics.uci.edu/\"><img src=\"/images/flamingo_middle.jpg\"></a>\n<td align=\"center\">\n<h1>FLAMINGO Package<br>(Approximate String Matching)</h1>\n<h2>Release 2.0.1 (November 7, 2008)</h2>\n<h3>Department of Computer Science, UC Irvine</h3>\n<h3>This version is outdated. Our most recent release is <a href=\"/releases/latest/\">here</a>.</h3>\n</table>\n\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"http://www.ics.uci.edu/~abehm\">Alexander Behm</a> (Ph.D. Student)\n<li><a href=\"http://www.ics.uci.edu/~shengyuj\">Shengyue Ji</a> (Ph.D. Student)\n<li>Liang Jin</a>, graduated from UC Irvine in 2005.\n<li><a href=\"http://www.ics.uci.edu/~chenli\">Chen Li</a> (Faculty)\n<li><a href=\"http://www.jiahenglu.net/\">Jiaheng Lu</a>, postdoc, 2006-2008.  Now a faculty at Renmin University, China.\n<li>Yiming Lu, graduated from UC Irvine in 2008.\n<li><a href=\"http://www.ics.uci.edu/~rares\">Rares Vernica</a> (Ph.D. Student)\n</ul>\n\n<a href=\"/index.html\"> &#xab; Back to Flamingo Main Page</a>\n\n<h3>Getting Started</h3>\nPlease refer to the <a href=\"docs/GettingStartedDoc.html\">Flamingo Getting Started Guide</a>.\n\n<h3>Introduction</h3>\n\n<p>This release (in C++) includes the source code of several\nalgorithms for approximate string matching developed at UC Irvine. It\nincludes algorithms for approximate selection queries, selectivity\nestimation for approximate selection queries, approximate queries on\nmixed types, and others.  Although an implementation for approximate\njoins is included, the focus of this release is on approximate\nselection queries.\n\n<p>Here is a brief explanation of the terms used above:\n\n<ul>  \n<li><b>Approximate String Search</b>: Given a collection of strings and a single string,\nhow to find those strings in the collection that are \"similar to\" the\ngiven string? \n<br>\nThis functionality is implemented by the modules\n<a href=\"docs/CommonDoc.html\">Common</a>, \n<a href=\"docs/FilterTreeDoc.html\">FilterTree</a>,\n<a href=\"docs/ListMergerDoc.html\">Listmerger</a>, \n<a href=\"docs/StringMapDoc.html\">StringMap</a>,\nand\n<a href=\"docs/PartEnumDoc.html\">PartEnum</a>.  \nWe recommend getting started with\nthe FilterTree module for this purpose.\n\n<li><b>Selectivity Estimation for Approximate String Search</b>: Given\na collection of strings and a single string, how can we estimate the\nnumber of strings that are \"similar to\" the given string?  This\nfunctionality is implemented in the SEPIA module.\n\n<li><b>Approximate String Join</b>: Given two collections of strings (possibly the same\ncollection), how to find those pairs of strings that are \"similar to\"\neach other?\n</ul>  \n\n<p>There are various string similarity functions, such as \n<a href=\"http://en.wikipedia.org/wiki/Levenshtein_distance\">Levenshtein Distance (aka the Edit Distance)</a>,\n\n<a href=\"http://en.wikipedia.org/wiki/Jaccard_Similarity_Coefficient\">Jaccard Similarity</a>,\n<a href=\"http://en.wikipedia.org/wiki/Cosine_similarity\">Cosine Similarity</a>, and \n<a href=\"http://en.wikipedia.org/wiki/Dice%27s_coefficient\">Dice\nSimilarity</a>.  The following is a description of the modules\ncorresponding to the source directory structure:\n\n<ul>\n<li><b><a href=\"docs/CommonDoc.html\">Common</a></b>: This module contains classes for supporting \nthe following similarity functions / distance measures: \nLevenshtein Distance (aka Edit Distance), Jaccard Similarity, Cosine Similarity, Dice Similarity. It also\nprovides functionality for decomposing strings into grams.\n\n<li><b><a href=\"docs/FilterTreeDoc.html\">FilterTree</a></b>: This module provides functionality for approximate string search\nusing an inverted-list index. Furthermore, \nquery performance can be improved by adding filters, i.e. partitioning the string collection into \ndisjoint subsets according to some property (e.g. the length of the strings). \nThe use of filters is facilitated by a hierarchical structure (the FilterTree), \nin which each level in the tree corresponds to one filter. \nWe have implemented the length and checksum filter. \n\n<li><b><a href=\"docs/ListMergerDoc.html\">ListMerger</a></b>: Answering approximate string queries based on an inverted-list index \nrequires finding elements that occur at least T times on the inverted lists belonging \nto the grams in the query string (T depends on the similarity metric and the similarity threshold). \nThis problem is commonly referred to as the T-occurrence problem.\nThis module implements several algorithms for solving the T-occurrence problem\nas described in \"Efficient Merging and Filtering Algorithms for Approximate String Searches\",\nChen Li, Jiaheng Lu and Yiming Lu, ICDE 2008.\n\n<li><b><a href=\"docs/MatTreeDoc.html\">MAT-Tree</a></b>: MAT-tree is an indexing structure to support\nqueries on data with an approximate string predicate and a numeric\npredicate.  A typical query is: \"Find employee records whose name is\nsimilar to Speilberg and whose age is close to 45.\"  The indexing\nstructure is proposed in the following paper: \"Indexing Mixed Types\nfor Approximate Retrieval,\" Liang Jin, Nick Koudas, Chen Li, Anthony\nK.H. Tung, VLDB 2005, Trondheim, Norway.\n\n<li><b><a href=\"docs/SepiaDoc.html\">Sepia</a></b>: This technique solves the problem of estimating the\nselectivity of an approximate string predicate.  It can answer\nquestions such as: \"From a collection of strings, how many of them\nhave an edit distance within 3 to a given string?\".  Such information\ncan be used in optimizing queries of approximate string matching.  The\ntechnique was published in the paper: \"Selectivity Estimation for Fuzzy\nString Predicates in Large Data Sets,\" Liang Jin and Chen Li, VLDB\n2005, Trondheim, Norway.\n\n<li><b><a href=\"docs/StringMapDoc.html\">StringMap</a></b>: This algorithm maps strings from the\nedit-distance metric space to a high-dimensional Euclidean space, and\nuses a multi-dimensional indexing structure to answer approximate\nqueries.  The algorithm is published in the paper: \"Efficient Record\nLinkage in Large Data Sets,\" by Liang Jin, Chen Li, and Sharad\nMehrotra, in 8th International Conference on Database Systems for\nAdvanced Applications (DASFAA) 2003, Kyoto, Japan.\n\n<li><b><a href=\"docs/PartEnumDoc.html\">PartEnum</a></b>: This algorithm is published in the paper:\n\"Efficient Exact Set-Similarity Joins,\" Arvind Arasu, Venkatesh Ganti,\nRaghav Kaushik, VLDB 2006.  We implemented the algorithm to\nsupport approximate string matching queries, excluding approximate joins.\n\n</ul>\n\nIn addition, we have provided some commonly used functions in the\n<a href=\"src/util\">util</a> directory.\n\n<p>\n\n<h3>Changes in Version 2.0.1</h3>\n\n<ul>\n<li>Fixed compatibility issues for GCC 4.3.2\n</ul>\n\n<p>\n\n<table width=\"50%\">\n<tr><th><img src=\"/icons/blank.gif\" alt=\"[ICO]\"></th><th>Name</th><th width=\"100%\"></th></tr>\n<tr><th colspan=\"3\"><hr></th></tr>\n<tr><td valign=\"top\"><img src=\"/icons/back.gif\" alt=\"[DIR]\"></td><td nowrap><a href=\"/releases/\">Parent Directory</a></td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/folder.gif\" alt=\"[DIR]\"></td><td><a href=\"docs/\">docs/</a></td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/folder.gif\" alt=\"[DIR]\"></td><td><a href=\"src/\">src/</a></td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/compressed.gif\" alt=\"[DIR]\"></td><td nowrap><a href=\"flamingo-2.0.1.tgz\">flamingo-2.0.1.tgz</a></td><td align=\"right\">2.2M</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[DIR]\"></td><td><a href=\"README.txt\">README.txt</a></td></tr>\n<tr><th colspan=\"3\"><hr></th></tr>\n</table>\n\n<p class=\"small\"><b>Acknowledgements</b>: This release is partially\nsupported by the\nNSF <a href=\"http://www.nsf.gov/home/crssprgm/career/\">CAREER</a>\nAward\nNo. <a\nhref=\"http://www.nsf.gov/awardsearch/showAward.do?AwardNumber=0238586\">IIS-0238586</a>,\nthe NSF\naward <a\nhref=\"http://www.nsf.gov/awardsearch/showAward.do?AwardNumber=0742960\">No. IIS-0742960</a>,\nthe NSF-funded <a href=\"http://www.itr-rescue.org/\">RESCUE</a>\nproject, a Google Research Award, a gift fund from Microsoft and a\nfund from <a href=\"http://www.calit2.net/\">CalIt2</a>.\n<br>\nMany thanks to Sattam Alsubaiee, Minh Doan, and Kensuke Ohta for their\nvaluable testing and feedback on the code and documentation.\n\n<p class=\"small\"> <b>License Agreement</b>: Permission to use, copy,\nmodify, and distribute the implementations of MAT-Tree, SEPIA,\nStringMap, and FilterTree is permitted under the terms of the BSD\nlicense. The implementation of the PartEnum algorithm invented by\nMicrosoft researchers is limited to non commercial use, which would be\ncovered under the royalty free covenant that Microsoft made public.\n\n<hr>\n\n<p class=\"small\">For any questions regarding this release, please send email to\nflamingo AT ics.uci.edu\n\n<p><a href=\"http://www.ics.uci.edu\"><img src=\"/images/ics.jpg\"></a>\n\n<!-- Google Analytics -->\n<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n</script>\n<script type=\"text/javascript\">\n_uacct = \"UA-1396418-5\";\nurchinTracker();\n</script>\n\n</body>\n</html>\n", "encoding": "ascii"}