{"url": "http://flamingo.ics.uci.edu/releases/2.0/src/sepia/freqest/predicate.cc", "content": "/*\n  $Id: predicate.cc 4034 2008-10-03 01:17:40Z rares $\n\n  Copyright (C) 2007 by The Regents of the University of California\n\n  Redistribution of this file is permitted under the terms of the \n  BSD license\n\n  Date: 01/14/2006\n  Author: Rares Vernica <rares (at) ics.uci.edu>\n*/\n\n#include \"predicate.h\"\n\n#include <iterator>\n\nusing namespace std;\n\nistream& operator>>(istream &in, Predicate &p)\n{\n  char buf[DATASET_LEN];\n  in.get(buf, DATASET_LEN, in.widen('\\t'));\n  p.query.assign(buf);\n  in >> p.dist >> p.freq;\n  in.getline(buf, DATASET_LEN, in.widen('\\n'));\n  return in;\n}\n\nistream& operator>>(istream &in, VectPredicate &v)\n{\n  unsigned n;\n  in>>n;\n  char buf[DATASET_LEN];\n  in.getline(buf, DATASET_LEN, in.widen('\\n'));\n  in.getline(buf, DATASET_LEN, in.widen('\\n'));\n  for (unsigned i=0; i<n; i++) {\n    Predicate p;\n    in>>p;\n    v.push_back(p);\n  }\n  return in;\n}\n\nostream& operator<<(ostream &out, const Predicate &p) \n{\n  return out<<p.query<<\"\\t\"<<p.dist << \"\\t\" << p.freq;\n}\n\nostream& operator<<(ostream &out, const VectPredicate &v) \n{\n  out<<static_cast<unsigned>(v.size())<<endl<<endl;\n  copy(v.begin(), v.end(), ostream_iterator<Predicate>(out, \"\\n\"));\n  return out;\n}\n", "encoding": "ascii"}