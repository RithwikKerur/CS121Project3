{"url": "http://flamingo.ics.uci.edu/releases/2.0/docs/PartEnumDoc.html", "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>PartEnumDoc - Chen Li -- Group - Trac</title>\n<style type=\"text/css\">\n           @import url(media/trac.css);\n          </style>\n</head>\n<body>\n<p>\n<a href=\"index.html\">Back to Index</a>\n</p>\n<hr/>\n<div class=\"wikipage\">\n<div id=\"searchable\">\n<p>AppString\n&gt; AppStringDoc</p>\n<h1 id=\"PartEnum\">PartEnum</h1>\n<h2 id=\"Overview\">Overview</h2>\n<p>The module contains an implementation of the technique presented\nin [1]. The technique was invented in the <a class=\"ext-link\" href=\"http://research.microsoft.com/dmx/DataCleaning/\" shape=\"rect\">\n<span class=\"icon\">Data Debugger Project</span>\n</a> at Microsoft, Research.</p>\n<h2 id=\"Usage\">Usage</h2>\n<p>For compiling instructions, please see CompileDoc.</p>\n<p>The module uses C++ STL TR1 library provided by GNU GCC and\nBoost 1.34.1 library.</p>\n<p>For installing Boost library on a Debian (including Ubuntu)\nmachine, you need to run:</p>\n<pre class=\"wiki\" xml:space=\"preserve\">\n$ sudo apt-get install libboost-dev\n</pre>\n<p>An example of how to use the module is available in\nsrc/partenum/example.cc.</p>\n<h2 id=\"Interface\">Interface</h2>\n<p>The main class of the module is ParEnum which is declared in\nsrc/partenum/partenum.h.</p>\n<p>The main methods of PartEnum are:</p>\n<pre class=\"wiki\" xml:space=\"preserve\">\n  PartEnum(const vector&lt;string&gt; &amp;data, \n           unsigned q, \n           unsigned editdist, \n           unsigned n1, \n           unsigned n2);\n\n  PartEnum(const vector&lt;string&gt; &amp;data, \n           const string &amp;filename);\n\n  void build();\n  void saveIndex(const string &amp;filename) const;  \n\n  void search(const string &amp;query, vector&lt;unsigned&gt; &amp;results);\n  void search(const string &amp;query, const unsigned editdist,\n              vector&lt;unsigned&gt; &amp;results);\n</pre>\n<p>The main idea is that the user can create a PartEnum object by\nspecifying a vector of strings (dataset) and a few extra parameters\n(see [1] for details) or load an existing object from a file. If\nthe object was not loaded, then it needs to be built. Next, the\nuser has the option of saving the object to a file. In order to\nsearch approximately in the dataset for a given string, the user\ncalls the function <tt>search</tt>.</p>\n<h2 id=\"Performance\">Performance</h2>\n<p>Pentium D 3.4GHz Dual Core, 2GB memory, Linux (Ubuntu), g++. A\ndata set of 54,000 person names.</p>\n<table class=\"wiki\">\n<tr>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Technique</strong>\n</td>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Dataset Size</strong>\n</td>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Ed Threshold</strong>\n</td>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Q</strong>\n</td>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Time (ms)</strong>\n</td>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Index size (MB)</strong>\n</td>\n<td rowspan=\"1\" colspan=\"1\">\n<strong>Comments</strong>\n</td>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">Scan</td>\n<td rowspan=\"1\" colspan=\"1\">54k</td>\n<td rowspan=\"1\" colspan=\"1\">1</td>\n<td rowspan=\"1\" colspan=\"1\">-</td>\n<td rowspan=\"1\" colspan=\"1\">11.86</td>\n<td rowspan=\"1\" colspan=\"1\">1.3</td>\n<td rowspan=\"1\" colspan=\"1\"/>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">Scan</td>\n<td rowspan=\"1\" colspan=\"1\">54k</td>\n<td rowspan=\"1\" colspan=\"1\">2</td>\n<td rowspan=\"1\" colspan=\"1\">-</td>\n<td rowspan=\"1\" colspan=\"1\">21.30</td>\n<td rowspan=\"1\" colspan=\"1\">1.6</td>\n<td rowspan=\"1\" colspan=\"1\"/>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">Scan</td>\n<td rowspan=\"1\" colspan=\"1\">54k</td>\n<td rowspan=\"1\" colspan=\"1\">3</td>\n<td rowspan=\"1\" colspan=\"1\">-</td>\n<td rowspan=\"1\" colspan=\"1\">35.49</td>\n<td rowspan=\"1\" colspan=\"1\">4.2</td>\n<td rowspan=\"1\" colspan=\"1\"/>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">-</td>\n<td rowspan=\"1\" colspan=\"1\"/>\n<td rowspan=\"1\" colspan=\"1\"/>\n<td rowspan=\"1\" colspan=\"1\"/>\n<td rowspan=\"1\" colspan=\"1\"/>\n<td rowspan=\"1\" colspan=\"1\"/>\n<td rowspan=\"1\" colspan=\"1\"/>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">PartEnum</td>\n<td rowspan=\"1\" colspan=\"1\">54k</td>\n<td rowspan=\"1\" colspan=\"1\">1</td>\n<td rowspan=\"1\" colspan=\"1\">2</td>\n<td rowspan=\"1\" colspan=\"1\">1.21</td>\n<td rowspan=\"1\" colspan=\"1\">57.3</td>\n<td rowspan=\"1\" colspan=\"1\">n1=2,n2=8</td>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">PartEnum</td>\n<td rowspan=\"1\" colspan=\"1\">54k</td>\n<td rowspan=\"1\" colspan=\"1\">2</td>\n<td rowspan=\"1\" colspan=\"1\">2</td>\n<td rowspan=\"1\" colspan=\"1\">12.04</td>\n<td rowspan=\"1\" colspan=\"1\">60.2</td>\n<td rowspan=\"1\" colspan=\"1\">n1=3,n2=8</td>\n</tr>\n<tr>\n<td rowspan=\"1\" colspan=\"1\">PartEnum</td>\n<td rowspan=\"1\" colspan=\"1\">54k</td>\n<td rowspan=\"1\" colspan=\"1\">3</td>\n<td rowspan=\"1\" colspan=\"1\">1</td>\n<td rowspan=\"1\" colspan=\"1\">35.24</td>\n<td rowspan=\"1\" colspan=\"1\">34.8</td>\n<td rowspan=\"1\" colspan=\"1\">n1=2,n2=7</td>\n</tr>\n</table>\n<h2 id=\"Contributors\">Contributors</h2>\n<ul>\n<li>Rares Vernica</li>\n</ul>\n<hr/>\n<p>[1] Arvind Arasu, Venkatesh Ganti, Raghav Kaushik: Efficient\nExact Set-Similarity Joins. VLDB 2006: 918-929</p>\n</div>\n</div>\n<div class=\"footer\">\n<hr/>\n<p>\n<a href=\"index.html\">Back to Index</a>\n</p>\n</div>\n</body>\n</html>\n", "encoding": "ascii"}