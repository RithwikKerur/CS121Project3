{"url": "http://flamingo.ics.uci.edu/releases/3.0/docs/StringMapDoc.html", "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:html=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>StringMapDoc \u00e2\u20ac\u201c Group</title><style type=\"text/css\">\n           @import url(media/trac.css);\n          </style></head><body><p><a href=\"index.html\">Back to Index</a></p><hr></hr><div class=\"wikipage searchable\">\n<p>AppString\n&gt; AppStringDoc</p>\n<h1 id=\"StringMap\">StringMap</h1>\n<h2 id=\"Overview\">Overview</h2>\n<p>This module supports fuzzy string searching, i.e., finding\nstrings similar to a given a string or a collection of strings,\nwhere similarity is defined using edit distance. It supports both\njoin queries and string-string-search queries. The approach first\nmaps strings into a high-dimensional Euclidean space. An R-tree is\nconstructed from the mapped objects. The program will sample from\nthe strings to get a new threshold to be used to do search in the\nEuclidean space. A similarity string search is converted to a\nspatial search in the new Euclidean space using R-trees. [1,2]</p>\n<h2 id=\"Usage\">Usage</h2>\n<ul>\n<li><tt>make clean</tt></li>\n<li><tt>make</tt></li>\n<li><tt>date; time ./stringmap_unittest; date</tt></li>\n<li>After running it once, you can rerun it by using\n<tt>./stringmap_unittest load</tt> to save some time to do the\nmapping and construct the R-tree for the single-string-search\ncase.</li>\n<li><tt>stringmap_unittest.cpp</tt> shows how to use StringMap.\nSome parameters can be tuned, such as the sampling percentages,\nwhich should depend on the data size.</li>\n<li>Some R-tree parameters are defined in rtreeparams.h. e.g., the\ndimensionality of the Euclidean space is set to 20.</li>\n</ul>\n<h2 id=\"Interface\">Interface</h2>\n<p>This package includes three data files of names:</p>\n<ul>\n<li><tt>source1.txt</tt> (zipped to <tt>source1.zip</tt>) and\n<tt>source2.txt</tt> (zipped to <tt>source2.zip</tt>) are used for\ntesting join queries</li>\n<li><tt>source.txt</tt> (zipped to <tt>source.zip</tt>) is used for\ntesting single-string-search queries, which is a combination of\n<tt>source1.txt</tt> and <tt>source2.txt</tt>.</li>\n<li><tt>source-big.txt</tt> (zipped to <tt>source-big.zip</tt>) is\nused for testing single-string-search queries, which has more than\n111K full names.</li>\n</ul>\n<h2 id=\"Performance\">Performance</h2>\n<p>We ran this package on a Linux platform with a 2.8GHZ Pentium 4\nwith 1GB RAM. The join on source1.txt and source2.txt (2000 x 2000\nstrings) took about 105 seconds (including the time to compute the\nrecall, which was using nested loop and expensive), and with a\nrecall of 98.9%. We ran 100 single-string-search queries on 100K\nname strings, and the average search time is 0.079 seconds, with\nthe average recall 98.8%.</p>\n<h2 id=\"Contributors\">Contributors</h2>\n<ul>\n<li>Chen Li</li>\n<li>Liang Jin</li>\n</ul>\n<hr></hr>\n<p>[1] Liang Jin, Chen Li, Sharad Mehrotra: Efficient Record\nLinkage in Large Data Sets. DASFAA 2003: 137-<br></br>\n[2] Chen Li, Liang Jin, Sharad Mehrotra: Supporting Efficient\nRecord Linkage for Large Data Sets Using Mapping Techniques. World\nWide Web 9(4): 557-584</p>\n</div><div class=\"footer\"><hr></hr><p><a href=\"index.html\">Back to Index</a></p></div></body></html>\n", "encoding": "utf-8"}