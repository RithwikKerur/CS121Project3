{"url": "http://flamingo.ics.uci.edu/releases/3.0/src/stringmap/README-RTREE.txt", "content": "//\n// $Id: README-RTREE.txt 5027 2010-02-18 19:41:48Z rares $\n//\nThis diretory contains a C implementation of the R-tree data structure.\nThe implementation is originally from the test code of the authors, and\nlater ported to ANSI C on a variety of platforms by Daniel Green\n<dgreen (at) superliminal.com>.\n\nPaul Brooke <pbrooke (at) mindscape.com> discovered an interesting anomaly in\nthe original algorithm which uses the rectangular volumes of nodes as the\nfitting and splitting criteria which is that degenerate rectangles (i.e.\nflat in one or more dimensions) can appear as attractive candidate nodes\nto contain similarly degenerate nodes which are spatially quite distant.\n(A goal that R-trees are meant to avoid). For example, in two dimensions\ngiven two rects where one spans the volume (0,1) -> (1,2) and the other spans\n(1000,0) -> (1001,0), into which one should we add a third node spanning\n(0,0) -> (1,0)? Clearly it should go into the first one, but that doubles its\nvolume to two units whereas adding it to the second one leaves it unchanged\nat zero. These sorts of degeneracies are not rare cases since data are\noften axially aligned.\n\nBrooke suggested using the volume of the bounding sphere as the area metric\nfor nodes. This has worked quite well and is currently the metric being\nused by the code here. Also implemented but not currently used are metrics\nusing the N-dimensional surface area and the original implementation using\nthe N-dimensional box volume. There is also a fast approximation to the \nspherical volume as suggested by Brooke. To switch to using the original\nbox volume for example, simply change the calls to RTreeRectSphereicalVolume\nto use RTreeRectVolume instead. This is clearly an area deserving more \nreserach. The file sphvol.c contains the code used to generate the table\nof unit sphere volumes in the first 20 dimensions.", "encoding": "ascii"}