{"url": "http://flamingo.ics.uci.edu/releases/4.0/src/topk/src/topkroundrobin.cc", "content": "/*\n  $Id: topkroundrobin.cc 5772 2010-10-19 07:15:28Z abehm $\n\n  Copyright (C) 2007 by The Regents of the University of California\n \n  Redistribution of this file is permitted under the terms of the BSD\n  license\n\n  Date: 06/09/2008\n  Author: Rares Vernica <rares (at) ics.uci.edu>\n*/\n\n#include \"topkroundrobin.h\"\n\nusing namespace std;\n\nnamespace Topk \n{\n  namespace RoundRobin \n  {\n    void _updateTopkList(_TopkList &topkList, _TopkList::iterator pos);\n\n    void _updateTopkList(_TopkList &topkList, _TopkList::iterator pos) \n    {\n      _TopkList::iterator posNext = pos;\n      ++posNext;\n\n      if (posNext != topkList.end()) {\n        while (posNext != topkList.end() && posNext->min < pos->min)\n          ++posNext;\n        topkList.splice(posNext, topkList, pos);\n      }\n    }\n\n    bool _updateTopk(\n      const Query &que,\n      _TopkMap &topkMap, \n      _TopkList &topkList, \n      uint id, \n      float sc) \n    {\n      _TopkMap::const_iterator pos = topkMap.find(id);\n      if (pos != topkMap.end()) { // update and resort\n        _TopkList::iterator ps = pos->second;\n        ps->min = sc;\n          \n        _updateTopkList(topkList, ps);\n      }\n      else if (sc > topkList.front().min) { // delete, insert, and resort\n        _TopkMap::iterator pos = topkList.front().ptr;\n        if (pos != topkMap.end())\n          topkMap.erase(topkList.front().ptr);\n        topkList.pop_front();\n          \n        pair<_TopkMap::iterator, bool>\n          st = topkMap.insert(make_pair(id, topkList.begin()));\n        struct _TopkEl t;\n        t.min = sc;\n        t.ptr = st.first;\n        topkList.push_front(t);\n        st.first->second = topkList.begin();\n    \n        _updateTopkList(topkList, topkList.begin());\n      }\n      else\n        return false;\n      return true;\n    }\n  }\n}\n", "encoding": "ascii"}