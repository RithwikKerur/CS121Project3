{"url": "http://flamingo.ics.uci.edu/releases/1.0/src/util/ed.cc", "content": "/*\n    $Id: ed.cc 1109 2007-04-17 00:04:26Z rvernica $\n\n    Copyright (C) 2007 by The Regents of the University of California\n\n    Redistribution of this file is permitted under the terms of the\n    GNU Public License (GPL).\n\n    Date: 01/30/2007\n    Author: Rares Vernica <rvernica@ics.uci.edu>\n*/\n\n#include \"ed.h\"\n#include \"misc.h\"\n\nunsigned ed(const string &s1, const string &s2)\n{ \n  unsigned i, iCrt, iPre, j;\n  unsigned\n    n = s1.length(), \n    m = s2.length();\n\n  if (n == 0)\n    return m;\n  if (m == 0)\n    return n;\n\n  unsigned d[2][m + 1];\n\n  for (j = 0; j <= m; j++)\n    d[0][j] = j;\n\n  iCrt = 1;\n  iPre = 0;\n  for (i = 1; i <= n; i++) {\n    d[iCrt][0] = i;\n    for (j = 1; j <= m; j++)\n      d[iCrt][j] = min(d[iPre][j] + 1, \n                        d[iCrt][j - 1] + 1, \n                        d[iPre][j - 1] + (s1[i - 1] == s2[j - 1] ? 0 : 1));\n    iPre = !iPre;\n    iCrt = !iCrt;\n  }\n  \n  return d[iPre][m];\n}\n\nbool ed(const string &s1, const string &s2, unsigned threshold) \n{\n  unsigned i, j, ii, jj;\n  unsigned\n    n = s1.length(), \n    m = s2.length();\n\n  if (n == 0)\n    return m <= threshold;\n  if (m == 0)\n    return n <= threshold;\n  if ((n > m && n - m > threshold) ||  \n      (m > n &&  m - n > threshold))\n    return false;\n\n  unsigned d[n + 1][m + 1], dmin, dmax = threshold + 1;\n\n  for (i = 0; i <= n; i++)\n    d[i][0] = i;\n  for (j = 1; j <= m; j++)\n    d[0][j] = j;\n\n  for (ii = 1; ii <= n; ii++) {\n    dmin = dmax;\n    for (j = 1; j <= min(ii, m); j++) {\n      i = ii - j + 1;\n      d[i][j] = min(d[i - 1][j] + 1,\n                    d[i][j - 1] + 1,\n                    d[i - 1][j - 1] + (s1[i - 1] == s2[j - 1] ? 0 : 1));\n      dmin = min(dmin, d[i][j], d[i - 1][j]);\n    }\n    if (dmin > threshold)\n      return false;\n  }\n  \n  for (jj = 2; jj <= m; jj++) {\n    dmin = dmax;\n    for (j = jj; j <= min(n + jj - 1, m); j++) {\n      i = n - (j - jj);\n      d[i][j] = min(d[i - 1][j] + 1,\n                    d[i][j - 1] + 1,\n                    d[i - 1][j - 1] + (s1[i - 1] == s2[j - 1] ? 0 : 1));\n      dmin = min(dmin, d[i][j], d[i - 1][j]);\n    }\n    if (dmin > threshold)\n      return false;\n  }\n\n  return d[n][m] <= threshold;\n}\n\nunsigned edSwap(const string &s1, const string &s2)\n{ \n  unsigned i, iCrt, iPre, j;\n  unsigned\n    n = s1.length(), \n    m = s2.length();\n  unsigned d[2][m + 1];\n\n  for (j = 0; j <= m; j++)\n    d[0][j] = j;\n\n  iCrt = 1;\n  iPre = 0;\n  for (i = 1; i <= n; i++) {\n    d[iCrt][0] = i;\n    for (j = 1; j <= m; j++)\n      d[iCrt][j] = min(d[iPre][j] + 1,\n                       d[iCrt][j - 1] + 1,\n                       d[iPre][j - 1] + ((s1[i - 1] == s2[j - 1] ||\n                                          (i > 1 &&\n                                           j > 1 &&\n                                           s1[i - 1] == s2[j - 2] &&\n                                           s1[i - 2] == s2[j - 1])) ? 0 : 1));\n    iPre = !iPre;\n    iCrt = !iCrt;\n  }\n  \n  return d[iPre][m];\n}\n\n", "encoding": "ascii"}