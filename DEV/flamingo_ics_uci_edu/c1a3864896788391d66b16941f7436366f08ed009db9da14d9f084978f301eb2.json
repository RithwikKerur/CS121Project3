{"url": "http://flamingo.ics.uci.edu/releases/2.0/src/util/input.cc", "content": "/*\n  $Id: input.cc 4026 2008-10-01 00:23:25Z abehm $\n\n  Copyright (C) 2007 by The Regents of the University of California\n\n  Redistribution of this file is permitted under the terms of the\n  BSD license\n\n  Date: 02/16/2007\n  Author: Rares Vernica <rares (at) ics.uci.edu>\n*/\n\n#include \"input.h\"\n\nvoid readString(vector<string> &data, const string &filenameData, unsigned count, \n                unsigned maxLineLen)\n{\n  ifstream fileData(filenameData.c_str());\n  if (!fileData) {\n    cerr << \"can't open input file \\\"\" << filenameData << \"\\\"\" << endl;\n    exit(EXIT_FAILURE);\n  }\n\n  cerr << \"reading \\\"\" << filenameData << \"\\\"...\";\n  cerr.flush();\n\n  char line[maxLineLen + 1];\n  bool isIgnore = false;\n\n  while (true) {\n    fileData.getline(line, maxLineLen + 1);\n    if (fileData.eof())\n      break;\n    if (fileData.rdstate() & ios::failbit) {\n      isIgnore = true;\n      while (fileData.rdstate() & ios::failbit) {      \n        fileData.clear(fileData.rdstate() & ~ios::failbit);\n        fileData.getline(line, maxLineLen);\n      }\n      cerr << \"open reading input file \\\"\" << filenameData << \"\\\"\" << endl\n           << \"line length might exceed \" << maxLineLen << \" characters\" << endl;\n      exit(EXIT_FAILURE);\n    }\n    else\n      data.push_back(string(line));\n    if (count != 0 && data.size() == count)\n      break;\n  }\n\n  fileData.close();\n\n  if (isIgnore)\n    cerr << \"WARNING\" << endl \n         << \"some lines in the file exceeded \" << maxLineLen \n         << \" characters and were ignored\" << endl;\n  else\n    cerr << \"OK\" << endl;\n\n}\n\nbool existFileBin(const string &filename)  \n{\n  ifstream file(filename.c_str(), ios::in | ios::binary);\n  if (!file) \n    return false;\n  file.close();\n  return true;\n}\n\nbool existFile(const string &filename) \n{\n  ifstream file(filename.c_str(), ios::in);\n  if (!file) \n    return false;\n  file.close();\n  return true;\n}\n", "encoding": "ascii"}