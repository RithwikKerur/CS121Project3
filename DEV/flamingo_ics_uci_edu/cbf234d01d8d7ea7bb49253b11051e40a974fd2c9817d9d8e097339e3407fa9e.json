{"url": "http://flamingo.ics.uci.edu/releases/4.1/src/util/src/array.cc", "content": "/*\n  $Id: array.cc 5713 2010-09-09 03:11:22Z abehm $\n\n  Copyright (C) 2010 by The Regents of the University of California\n\n  Redistribution of this file is permitted under the terms of the BSD license.\n\n  Date: 05/16/2007\n  Author: Chen Li <chenli (at) ics.uci.edu>\n\t  Bin Wang <binwang (at) mail.neu.edu.cn>\n*/\n\n#include <iostream>\n#include <string>\n\n#include \"array.h\"\n\nvoid arrayIntersection(Array<unsigned> *& array1, Array<unsigned> *& array2, Array<unsigned> *& res)\n{\n  if( array1 == NULL || array2 == NULL ){\n\tres = NULL;\n\treturn;\n  }\n  if ( (array1->size() == 0) || (array2->size() == 0) ) {\n\tres = NULL;\n\treturn;\n  }\n\n  if (res->size() >0) {\n\tcout << \"wrong initionlized intersect array... \" << endl;\n  \treturn;\n  }\n\n  unsigned len1 = array1->size();\n  unsigned len2 = array2->size();\n\n  unsigned item1 = array1->at(0);\n  unsigned item2 = array2->at(0);\n\n  for( unsigned i=0, j=0; i<len1 && j<len2;)\n  {\n    if (item1 == item2){\n      res->append(item1);\n      if (i<len1-1) item1 = array1->at(1+i);\n      if (j<len2-1) item2 = array2->at(1+j);\n      i++;j++;\n    }else if(item1 < item2){\n\n      if (i<len1-1)item1 = array1->at(1+i); i++;\n    }else { \n\n\tif (j<len2-1) item2 = array2->at(1+j); j++;}\n  }\n}\n\n/*\n * srcArray = arcArray - subArray\n */\nvoid arrayDifference(Array<unsigned> * srcArray, Array<unsigned> *& subArray)\n{\n  if( srcArray == NULL || subArray == NULL ){\n\treturn;\n  }\n  if( srcArray->size() == 0 || subArray->size() == 0 ){\n\treturn;\n  }\n\n/*\nunsigned k=0;\nif ( (srcArray->at(0) == 33) && (subArray->at(0) == 5549) ){\n\tfor (k=0; k<srcArray->size(); k++) \n\t\tcout << \" \" << srcArray->at(k) ;   \n\tcout << endl;\n\tfor (k=0; k<subArray->size(); k++) \n\t\tcout << \" \" << subArray->at(k) ;   \n\tcout << endl;\n}\t\n*/\n\n  unsigned len1 = srcArray->size();\n  unsigned len2 = subArray->size();\n\n  unsigned item1 = srcArray->at(len1-1);\n  unsigned item2 = subArray->at(len2-1);\n\n  for( int i=len1-1, j=len2-1; i>=0 && j>=0;)\n  {\n    if (item1 == item2) {\n        if (i>0) item1 = srcArray->at(i-1);\n        if (j>0) item2 = subArray->at(j-1);\n        srcArray->erase(i);\n        i--;j--;\n    }\n    else if(item1 < item2)  {\n        if (j>0) item2 = subArray->at(j-1);\n        j--;\n    }\n    else { \n\tif (i>0) item1 = srcArray->at(i-1); \n\ti--;}\n  }\n\n//cout << \"srcArray->size = \" << srcArray->size() << endl;\n}\n\nvoid arrayDifference(Array<unsigned> * srcArray, Array<unsigned> * subArray, Array<unsigned> *& resultArray)\n{\n  if( srcArray == NULL || subArray == NULL ){\n\treturn;\n  }\n\n  if( srcArray->size() == 0 || subArray->size() == 0 ){\n\treturn;\n  }\n\n  int len1 = srcArray->size();\n  int len2 = subArray->size();\n\n  int i = 0;\n  int j = 0;\n  int item1 = srcArray->at(i);\n  int item2 = subArray->at(j);\n\n  while (true) {\n    if (item1 == item2) {\n      i ++;  \n      j ++;\n      if (i < len1) item1 = srcArray->at(i); \n      if (j < len2) item2 = subArray->at(j); \n   }\n   else if(item1 < item2)  { // append the item from the first array\n\tresultArray->append(item1);\n\ti ++;\n        if (i < len1) item1 = srcArray->at(i); \n    }\n\n  else  { // ignore  the item from the second array\n\tj ++;\n        if (j < len2) item2 = subArray->at(j); \n    }\n\n    if ( i >= len1 )\n\tbreak; // finished first array first\n      if ( j >= len2 )\n\tbreak; // finished second array first\n   }\n\n   // append the remaining items from the first array to the result\n   for (; i < len1; i++)\n     resultArray->append(srcArray->at(i));\n\n/*    unsigned len1 = srcArray->size();\n  unsigned len2 = subArray->size();\n\n  unsigned item1 = srcArray->at(0);\n  unsigned item2 = subArray->at(0);\n\n  for( int i=0, j=0; i<(int)len1;)\n  {\n    if (item1 == item2) {\n        if (i<(int)len1) item1 = srcArray->at(++i);\n        if (j<(int)len2) item2 = subArray->at(++j);\n    }\n    else if(item1 < item2)  {\n\tresultArray->append(item1);\n        if (i<(int)len1) item1 = srcArray->at(++i);\n    }\n    else { \n\tif (j<(int)len2) item2 = subArray->at(++j); \n\telse { resultArray->append(item1); item1 = srcArray->at(++i);}\n    }\n  }*/\n}\n\n/*\n * srcArray = arcArray \\cap otherArray\n */\nvoid intersect(Array<unsigned> * srcArray, Array<unsigned> *& otherArray)\n{\n  if( srcArray == NULL || otherArray == NULL )\n\treturn;\n\n  if ( (srcArray->size() == 0) || (otherArray->size() == 0) ) \n\treturn;\n\n  unsigned len1 = srcArray->size();\n  unsigned len2 = otherArray->size();\n/*\ncout << \"=== srcArray \" << endl;\nfor (unsigned i=0; i<len1; i++) {\n\tcout << \" \" << srcArray->at(i);\n}\ncout << endl;\ncout << \"=== otherArray \" << endl;\nfor (unsigned i=0; i<len2; i++) {\n\tcout << \" \" << otherArray->at(i);\n}\ncout << endl;\n*/\n  unsigned item1 = srcArray->at(len1-1);\n  unsigned item2 = otherArray->at(len2-1);\n\n  for( int i=len1-1, j=len2-1; i>=0 && j>=0;)\n  {\n    if (item1 == item2) {\n        if (i>0) item1 = srcArray->at(i-1);\n        if (j>0) item2 = otherArray->at(j-1);\n        i--;j--;\n    }\n    else if(item1 < item2)  {\n        if (j>0) item2 = otherArray->at(j-1);\n        j--;\n    }\n    else { \n\tif (i>0) item1 = srcArray->at(i-1); \n\tsrcArray->erase(i); \n\ti--;}\n  }\n/*\n//cout << \"srcArray->size = \" << srcArray->size() << endl;\ncout << \"=== after intersect: srcArray \" << endl;\nfor (unsigned i=0; i<srcArray->size(); i++) {\n\tcout << \" \" << srcArray->at(i);\n}\ncout << endl;\n*/\n}\n\nvoid arrayUnion(Array<unsigned> * srcArray, Array<unsigned> * otherArray, Array<unsigned> *& resultArray)\n{\n  if( srcArray == NULL && otherArray == NULL )\n\treturn;\n\n  if ( (srcArray->size() == 0) && (otherArray->size() == 0) ) \n\treturn;\n\n  unsigned len1 = srcArray->size();\n  unsigned len2 = otherArray->size();\n\n  unsigned item1 = srcArray->at(0);\n  unsigned item2 = otherArray->at(0);\n\n  for( unsigned i=0, j=0; i<len1 || j<len2;)\n  {\n    if (item1 == item2) {\n\tresultArray->append(item1);\n        if (i<len1) item1 = srcArray->at(++i);\n        if (j<len2) item2 = otherArray->at(++j);\n    }\n    else if(item1 < item2)  {\n\t\n        if (i<len1) { \n\t\tresultArray->append(item1);\n\t\titem1 = srcArray->at(++i);\n\t}else {resultArray->append(otherArray->at(j));++j;}\n    }\n    else { \n\tif (j<len2) {\n\t\tresultArray->append(item2);\t\t\n\t\titem2 = otherArray->at(++j); \n\t}else{resultArray->append(srcArray->at(i));++i;}\n    }\n  }\n}\n\n", "encoding": "ascii"}