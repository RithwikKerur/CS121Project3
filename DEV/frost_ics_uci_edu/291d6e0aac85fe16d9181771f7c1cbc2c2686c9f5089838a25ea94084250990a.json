{"url": "https://frost.ics.uci.edu/Ucigame/Ucigame-20101216/getting-started.html", "content": "<html>\r\n<head>\r\n\t<title>Ucigame - Getting Started</title>\r\n<link href=\"stylesheet.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n<body>\r\n\r\n<center><h2>Ucigame - Getting Started</h2></center>\r\n\r\n<h4>\r\n<a href=\"index.html\">Home</a> |\r\n<a href=\"getting-started.html\">Getting Started</a> |\r\n<a href=\"reference.html\">Reference</a> |\r\n<a href=\"java.html\">Introduction to Java</a> |\r\n<a href=\"gallery.html\">Gallery</a>\r\n</h4>\r\n\r\n<p>\r\nUcigame is designed for people who want to design\r\nand program 2D computer games.\r\nThis page will give you some useful information to get started.\r\n</p>\r\n\r\n<h4>Programming is in Java</h4>\r\n\r\n<p>\r\nComputer programming with Ucigame uses a very popular\r\nlanguage called Java.  Java is a versatile language\r\nwhich can be used to make all types of computer applications.\r\nJava has several features designed primarily for large\r\nsystems created by teams of many people.\r\nIn Ucigame we generally ignore those features.\r\n</p>\r\n\r\n<p>\r\nMany good books on Java have been written, and you\r\nmay want to own one.  However, those books generally\r\ntell you much more about the language then your will\r\nneed for writing many Ucigame programs,\r\nso feel free to skip whatever\r\ndoesn't seem relevant or comprehensible.\r\n</p>\r\n\r\n<h4>How to get started</h4>\r\n\r\n<p>\r\nYou need to have version 1.5.0 or later of Java, which can\r\nbe freely downloaded from Oracle, which now owns Sun Microsystems, the\r\ncompany which created Java.\r\nIt's also called the J2SE Development Kit (JDK)\r\n5 or 6 or 7.\r\nStart at <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">\r\nOracle's download page</a>.\r\n</p>\r\n\r\n<p>\r\nYou will also need a copy of\r\n<a href=\"ucigame.jar\">ucigame.jar</a>,\r\nwhich contains all the code necessary for Ucigame programming.\r\nDownload it by clicking on the link.\r\n(If you are using Internet Explorer, ucigame.jar may get renamed\r\nto ucigame.zip.  In this case, rename it back to ucigame.jar.)\r\nNow you need to put ucigame.jar in a place where it can be\r\nfound when you want to compile and run Java programs that use it.\r\nThere are two main options:\r\n</p>\r\n<ol>\r\n<li>This option may be best if you are running on your own computer.\r\nWhen Java was installed, its \"Java Runtime Environment\" or JRE was\r\nput on your computer.  In Windows, it might be in a folder called\r\nC:\\Program&nbsp;Files\\Java\\jre1.6.0.  (Note that it will have the\r\nversion number, such as 1.6.0, as part of the name.)\r\nInside that folder is a subfolder called lib, and inside of lib is\r\na subfolder called ext.  Look inside <em>that</em>, and you'll\r\nsee several .jar files.  Any .jar file in this folder is accessible\r\nto any Java program running the corresponding version of Java.\r\n(It's possible to have more than one version of Java on a computer,\r\nwhich can lead to much confusion.)  Copy ucigame.jar into this\r\nlib\\ext folder, and you're ready.\r\n<li>This option may be best if you are running on a shared computer.\r\nMove ucigame.jar into the folder where you will be writing your\r\ngame programs.  Now you need to tell Java to look in ucigame.jar\r\n(it knows to look in the lib\\ext folder without you telling it to,\r\nbut nowhere else). At the command prompt, type in\r\n<blockquote><tt>\r\n\tSET CLASSPATH=%CLASSPATH%;ucigame.jar;\r\n</tt></blockquote>\r\nThis command adds to the \"classpath,\" that is, the list of places\r\nJava looks for class files.\r\n</p>\r\n<li><i>[probably need other options for non-Windows and for specific\r\n\t\tprogramming environments]</i>\r\n</ol>\r\n<p>\r\nIf you get an error message like \"package ucigame does not exists\"\r\nwhen trying to compile, or an exception like\r\n\"java.lang.NoClassDefFoundError:&nbsp;ucigame/Ucigame\" when trying\r\nto run, that's a sure sign that there's a mismatch between your\r\nCLASSPATH and the location of ucigame.jar.\r\n</p>\r\n\r\n<p>\r\nOnce you have ucigame.jar and the classpath squared away,\r\nthe steps for creating a Ucigame game application are:\r\n</p>\r\n<ol>\r\n<li>Create a file called YourGame.java with the source code\r\nfor your game in it.  (This is a big step, of course.  Lot's\r\nof sample programs on this site can serve as models.)\r\n<li>At the command prompt, enter <tt>javac YourGame.java</tt>.\r\nThis <em>compiles</em> your program, which means that the\r\n.java file is transformed into one (or more) .class files.\r\nThe .class files are used to actually run the game.\r\n<li>You may get compiler errors; if so, fix them and repeat\r\nthe previous step.\r\n<li>Make sure that YourGame.class is now in your folder.\r\n<li>Run your game with <tt>java YourGame YourGame</tt>.\r\nThe name of the game has to be repeated on the command line.\r\nThis is something unique to Ucigame, and isn't true of Java\r\nprograms in general.\r\n<li>You can stop the game by pressing the Escape key.\r\n</ol>\r\n\r\n\r\n\r\n<h4>Running Ucigame games as applications and applets</h4>\r\n\r\n<p>\r\nJava programs can run as applications or as applets.\r\n</p>\r\n\r\n<p>\r\nApplets are Java classes that extend java.applet.Applet.\r\nSince\r\nthe Ucigame class extends JApplet which extends Applet, your game\r\nextends Applet.  Applets usually override four methods from\r\nthe Applet class: init, start, stop, and destroy;\r\nthe Ucigame class does this for you.\r\nApplets are run inside another program, typically a web browser.\r\n</p>\r\n\r\n<p>\r\nJava applications have a public static void main(String[]) method\r\nthat provides a starting point for execution.\r\nTypically applications\r\nare run on the command line with <tt>java ClassName</tt>.\r\nInside an Integrated Development Environment, an application can\r\nbe started by a button press or a menu option.\r\n</p>\r\n\r\n<p>\r\nSince the Ucigame class has a public static void main method and\r\nalso extends Applet, your game that extends Ucigame be run\r\neither way.\r\n</p>\r\n\r\n<h4>Creating and running Ucigame games with Eclipse</h4>\r\n\r\n\r\n<p>\r\nEclipse (<a href=\"http://www.eclipse.org/\">www.eclipse.org</a>)\r\nis a powerful and extendible set of tools for editing, managing,\r\nand running Java programs (and other languages too).\r\nHere are some tips for happy co-existence between Ucigame and Eclipse:\r\n</p>\r\n<ol>\r\n<li>To start, from Eclipse's menu select File > New > Java Project.\r\nThe recommended choice under \"Project Layout\" is\r\n\"Use project folder as root for sources and class files\" although\r\neither option will work fine.\r\n\r\n<li>An important step is to make sure ucigame.jar is available.\r\nThe file can be located anywhere on your disk; a convenient location\r\nis the top level of your project.\r\nFrom Eclipse's menu select Project > Properties >\r\nJava Build Path > Libraries tab > Add External JARs... .\r\nThen navigate to the location of ucigame.jar on your computer and click Open.\r\nFinally, click OK in the Properties dialog box.\r\n\r\n<li> To activate Eclipse's nifty Code Completion pop-up boxes,\r\nyou need to provide Eclipse with the JavaDocs for Ucigame.\r\nDownload <a href=\"ucigame-javadocs.zip\">ucigame-javadocs.zip</a>\r\n(perhaps to the same location as ucigame.jar), and unzip the file.\r\nYou will see a subdirectory named UcigameJavaDocs.\r\nFrom Eclipse's menu select Project > Properties >\r\nJava Build Path > Libraries tab.\r\nExpand the tree under ucigame.jar.\r\nHighligh Javadoc location and click on Edit...\r\nUse Browse to navigate to the location of UcigameJavaDocs on your computer and click OK.\r\nFinally, click OK in the Properties dialog box.\r\n\r\n<li>When you create the primary class for your game, make sure\r\nthat ucigame.Ucigame is specified as the Superclass.\r\n\r\n<li>It is usually convenient to store image files and sound files\r\nin their own subdirectories.  If you do this, these subdirectories should go\r\nin the same directory as the .class files.\r\n\r\n<li>Eclipse will be happy to launch your game as an application or as an\r\napplet.\r\nEclipse provides a built-in appletviewer that will run your Ucigame\r\ngame if it is running as an applet.\r\nIn most cases you will need to tell the appletview what the\r\ncorrect width and height of the window are.\r\n(A call to window.size() is ignored when a Ucigame game is running\r\nas an applet.)\r\nTo do this, from Eclipse's menu select Run > Run Configurations&nbsp;... >\r\nyour class's name under Java Applet > (x)=&nbsp;Parameters.\r\nPut the correct values in the Width and Height areas and click Apply.\r\n\r\n<li>You may prefer to run your game as an application.\r\nTo do this, from Eclipse's menu select Run > Run As > Java Application.\r\nEclipse will show you a \"Select Java Application\" dialog box, where\r\nyou can tell Eclipse the name of the class which has the main()\r\nmethod.  Choose the option which has your game class's name, and press OK.\r\nYou will now see an error message from Ucigame: \"Please repeat the\r\nprogram name.  For example, Java MyGame MyGame.\"  Press OK.\r\nFrom Eclipse's menu, select Run > Run Configurations&nbsp;... >\r\nyour class's name under Java Application > (x)=&nbsp;Arguments.\r\nIn the Program arguments area, type in the class name.\r\nPress Apply and then Run.\r\n\r\n</ol>\r\n\r\n\r\n<h4>Commonly encountered problems</h4>\r\n\r\n<p>\r\n<b>\r\nAt the command prompt I entered <i>javac *.java</i> and got this\r\nmessage: javac is not recognized as an internal or external command,\r\noperable program or batch file.\r\n</b>\r\n</p>\r\n<p>\r\nThe computer is not able to find the Java compiler program, javac.exe.\r\nFirst, make sure you have the Java Development Kit (JDK) installed.\r\nYou should have a directory with a name like\r\n<tt>C:\\Program&nbsp;Files\\Java\\jdk1.6.0_20\\bin</tt>, and in that\r\ndirectory there should be a file named javac.exe.\r\nIf this isn't the case, see How to get started, above.\r\nSecond, the system's PATH variable needs to include that directory.\r\nEnter <i>SET PATH</i> at the command prompt to see (and not modify)\r\nthe current value of PATH.\r\nIf PATH does not include the directory containing javac.exe, then\r\nmodify this system variable by going to the Control Panel and\r\nfinding a dialog box with a button titled \"Environment Variables.\"\r\nThis should enable you to see and edit PATH (sometimes Path).\r\nYou will need to restart your Command Prompt session, and possibly\r\nyour computer, for the new PATH to take effect.\r\n</p>\r\n\r\n\r\n<p>\r\n<b>\r\nI am trying to change the size of the window, and <tt>window.size()</tt>\r\nisn't working.\r\n</b>\r\n</p>\r\n<p>\r\nIt sounds like you are running your game as an applet.\r\nAs an applet, <tt>window.size()</tt> is ignored, and the window size is\r\ndetermined by the browser or appletviewer.\r\nIf you are using Eclipse, see the preceding section for information\r\non adjusting the window size values in Eclipse's appletviewer.\r\nIf you are running in a browser, the game's viewable area is controlled\r\nby the width and height parameters in the HTML applet tag.\r\n</p>\r\n\r\n\r\n\r\n<h4>What next?</h4>\r\n\r\n<p>\r\nClick on Gallery at the top of this page to see\r\nUcigame programs (including source) running as applets.\r\n</p>\r\n\r\n<br>\r\n<br>\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}