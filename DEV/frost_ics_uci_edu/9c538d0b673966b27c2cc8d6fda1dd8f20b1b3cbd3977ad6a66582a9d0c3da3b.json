{"url": "https://frost.ics.uci.edu/Ucigame/Ucigame-20101216/Gallery/Tank.html", "content": "<html>\r\n<head>\r\n    <title>Ucigame - Gallery - Tank</title>\r\n<link href=\"../stylesheet.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n<body>\r\n\r\n<center><h2>Ucigame - Gallery - Tank</h2></center>\r\n\r\n<h4>\r\n<a href=\"../index.html\">Home</a> |\r\n<a href=\"../getting-started.html\">Getting Started</a> |\r\n<a href=\"../reference.html\">Reference</a> |\r\n<a href=\"../java.html\">Introduction to Java</a> |\r\n<a href=\"../gallery.html\">Gallery</a>\r\n</h4>\r\n\r\n<p>\r\n<table>\r\n<tr>\r\n<td width=\"300\" valign=\"top\">\r\n<applet\r\n   code=\"Tank.class\"\r\n   codebase=\".\"\r\n   archive=\"../ucigame.jar\"\r\n   width=\"250\"\r\n   height=\"250\"\r\n   border=\"0\"\r\n>\r\nYour browser cannot show Java applets.\r\n</applet>\r\n</td>\r\n<td width=600 valign=\"top\" halign=\"center\">\r\nTank illustrates some slightly fancy use of pinning, some calculations\r\nto determine rotation, and the onKeyRelease() callback method.\r\n<br> <br>\r\nUp and down arrows aim the cannon. <br>\r\nHold down the space key to increase firing power, and release to fire. <br>\r\nR to reset and start over.\r\n</td>\r\n</tr>\r\n<tr>\r\n<td colspan=2>\r\n<br>\r\n<b>Tank.java</b>\r\n<br>\r\n<pre>\r\nimport ucigame.*;\r\n\r\npublic class Tank extends Ucigame\r\n{\r\n    Sprite platform;\r\n    Sprite gun;\r\n    Sprite shell;\r\n    Sprite movingShell;\r\n    int angle = 0;\r\n    double pullback = 0.0;\r\n    boolean spacePressed = false;\r\n    boolean shellBeingFired = false;\r\n    boolean waitForReset = false;\r\n    double shellX, shellY;\r\n    double velocityX, velocityY;\r\n    int framesInFlight = 0;\r\n\r\n    public void setup()\r\n    {\r\n        window.size(250, 250);\r\n        window.title(\"Tank\");\r\n        framerate(30);\r\n\r\n        Image bkg = getImage(\"images/tank-background.png\");\r\n        canvas.background(bkg);\r\n\r\n        platform = makeSprite(getImage(\"images/tank-platform.png\", 255, 255, 0));\r\n        gun = makeSprite(getImage(\"images/tank-gun.png\"));\r\n        shell = makeSprite(getImage(\"images/tank-shell.png\", 255, 255, 0));\r\n        movingShell = makeSprite(getImage(\"images/tank-shell.png\", 255, 255, 0));\r\n        movingShell.hide();\r\n\r\n        platform.position(5, 183);\r\n        platform.pin(gun, 22, 12);\r\n        gun.pin(shell, 14, 0);\r\n    }\r\n\r\n    public void draw()\r\n    {\r\n        canvas.clear();\r\n\r\n        if (shellBeingFired)\r\n        {\r\n            updateShellPosition();\r\n            if (shellY > canvas.height() - 10)\r\n            {\r\n                shellBeingFired = false;\r\n                waitForReset = true;\r\n            }\r\n        }\r\n\r\n        gun.rotate(angle, -1, 3);        // (-1, 3) is relative to the gun's ulh corner\r\n        shell.position(-pullback, 0);    // relative to the gun\r\n        platform.draw();\r\n        movingShell.draw();              // only if not hidden, if shellBeingFired = true;\r\n    }\r\n\r\n    // Any resemblance to actual physics is purely coincidental.\r\n    public void updateShellPosition()\r\n    {\r\n        shellX = shellX + velocityX;\r\n        shellY = shellY + velocityY;\r\n        movingShell.position(shellX, shellY);\r\n\r\n        velocityX = velocityX * 0.98;                        // drag\r\n        framesInFlight = framesInFlight + 1;\r\n        velocityY = velocityY + framesInFlight * 0.03;        // gravity\r\n    }\r\n\r\n    public void onKeyPress()\r\n    {\r\n        if (keyboard.isDown(keyboard.R))    // reset\r\n        {\r\n            pullback = angle = framesInFlight = 0;\r\n            spacePressed = shellBeingFired = waitForReset = false;\r\n            movingShell.hide();\r\n            shell.show();\r\n            return;\r\n        }\r\n\r\n        if (shellBeingFired || waitForReset)\r\n            return;\r\n\r\n        if (keyboard.isDown(keyboard.UP, keyboard.LEFT))\r\n        {\r\n            if (angle > -135)\r\n                angle = angle - 1;\r\n        }\r\n        if (keyboard.isDown(keyboard.DOWN, keyboard.RIGHT))\r\n        {\r\n            if (angle < 0)\r\n                angle = angle + 1;\r\n        }\r\n        if (keyboard.isDown(keyboard.SPACE))\r\n        {\r\n            spacePressed = true;\r\n            if (pullback < 15)\r\n                pullback = pullback + 0.2;\r\n        }\r\n    }\r\n\r\n    // Fire on space key up.\r\n    public void onKeyRelease()\r\n    {\r\n        if (spacePressed && !keyboard.isDown(keyboard.SPACE))\r\n        {\r\n            shellBeingFired = true;\r\n            spacePressed = false;\r\n            double angleInRadians = -angle * Math.PI / 180.0;\r\n            shellX = 23 + Math.cos(angleInRadians) * 24;\r\n            shellY = 195 - Math.sin(angleInRadians) * 24;\r\n            velocityX = Math.cos(angleInRadians) * pullback;\r\n            velocityY = -Math.sin(angleInRadians) * pullback;\r\n            shell.hide();\r\n            movingShell.show();\r\n            movingShell.position(shellX, shellY);\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</td>\r\n</tr>\r\n</table>\r\n\r\n<br>\r\n<br>\r\n\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}