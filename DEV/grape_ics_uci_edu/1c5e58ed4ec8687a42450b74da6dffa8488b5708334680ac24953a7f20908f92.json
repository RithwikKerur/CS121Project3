{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222-2017-fall-project1-create-project?format=txt", "content": "{{{#!div style=\"background-color:rgb(237,222,222)\"\r\n\r\n'''Download and deploy the codebase of Project 1'''\r\n\r\n * '''Download the codebase of Project 1''' [[BR]]\r\n\r\n  Please download the [attachment:codebase.zip codebase]   onto your own computer. Unzip the file.\r\n\r\n * '''Deploy the codebase'''\r\n\r\n * '''If you are developing in Eclipse'''[[BR]]\r\n\r\n  Please note that we used the latest version of Eclipse for C++ (Oxygen) from http://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers/oxygen1  , and if you use a different version, you may find instructions not match the menus perfectly.[[BR]]\r\n\r\n  Read the readme.txt under codebase.[[BR]]\r\n\r\n  Create a new C++ project named \"cs222\" in Eclipse. '''If you are using a Mac, select MacOSX GCC in the project setup. If you are using a Linux machine, use Linux GCC'''.[[BR]]\r\n\r\n  Create a folder named \"src\" under cs222, and another folder named \"rbf\" under src.\r\n\r\n  Copy all files in \"codebase/rbf\" under the rbf folder you have just created, and copy makefile.inc from \"codebase\" under the \"src\" folder you have just created.\r\n\r\n  There are 13 test cases, and each of these test cases is a stand-alone application that contains its own main() method, so Eclipse cannot compile the test cases properly when they are together. To handle this, we use our own makefile to build these test cases, instead of letting Eclipse generate one for us. To do this, right click \"cs222\" project, and select \"properties -> C/C++Build\", unclick \"Generate Makefiles automatically\", and set build location to \"${workspace_[loc:/cs222/src/rbf]  }\" (you can simply click \"Workspace...\" and select properly).\r\n\r\n  At this point, your project structure is similar to this picture (created by using MacOSX GCC toolchain) :[[BR]]  [[Image(eclipse_project1_picture.png, 250px)]]\r\n\r\n  Compile a test by doing Project -> Build All. After the cs222 binary is created in a test folder, Right click the binary and click \"Run As\"/\"Run Configurations\", double click on \"C/C++ Application\" to create a new application and use \"Search Project\" to choose the test to want to run. Then click \"Run\" to run this test case.\r\n\r\n[[Image(eclipse_project1_run_as_configuration.png, 600px)]]\r\n\r\n  Since we let Eclipse to read our makefile to build the project, it should work properly (there should be no difference of invoking it in Eclipse or command line.) If it does not work in Eclipse, please first try to make things work in your command line.\r\n\r\n  After you confirm that all test cases work properly, you can use the command-line tool to compile and test your code. In the end, the assistants will use the automated test script to test your code.\r\n\r\n * '''If you are not using Eclipse''' [[BR]]\r\n\r\n  Read the readme.txt under ./codebase/.[[BR]]\r\n\r\n  Go to the codebase, and modify the CODEROOT in makefile.inc properly (you may skip it initially, but only modify it when the rest steps do not work). [[BR]]\r\n\r\n  Go to folder \"rbf\", and type in:\r\n\r\n  make clean[[BR]]\r\n\r\n  make[[BR]]\r\n\r\n  ./rbftest1[[BR]]\r\n\r\n  You will be able to see the output.\r\n\r\n}}}", "encoding": "ascii"}