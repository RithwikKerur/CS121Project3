{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs221-2019-spring-project1?action=diff&version=1", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs221-2019-spring-project1 (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=history\" title=\"Page history\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=diff&amp;version=2\" title=\"Version 2\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span class=\"missing\">&larr; Previous Change</span></li><li><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=diff&amp;version=2\" title=\"Version 2\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=0\">Initial Version</a> and\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=1\">Version 1</a> of\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1\">cs221-2019-spring-project1</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs221-2019-spring-project1?version=1\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"8bf996db8b546b72f891c0ad\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"1\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"0\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            Apr 2, 2019 12:42:14 PM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-04-02T12%3A42%3A14-07%3A00&amp;precision=second\" title=\"See timeline at Apr 2, 2019 12:42:14 PM\">6 months</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          zuozhi\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=1\">cs221-2019-spring-project1</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version currently edited\">\n                    <a href=\"#L1\">\n                      v1</a>\n                  </th>\n                  <th title=\"Version 1\">\n                    <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=1#L1\">\n                      v1</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>1</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>2</th><td class=\"r\"><ins>= CS122B: Project 1 =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>3</th><td class=\"r\"><ins>'''Test Cases Due:&nbsp; &nbsp; &nbsp;Week 1 Sunday (Apr 7), Due on Github as Pull Requests'''[[BR]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>4</th><td class=\"r\"><ins>'''Review Due:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Week 2, Wed. (Apr 10),&nbsp; Due on Github as Pull Requests Comments'''[[BR]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>5</th><td class=\"r\"><ins>'''Final Code Due:&nbsp; &nbsp; &nbsp;Week 3, Wed. (Apr. 17),&nbsp; Due on Github.'''[[BR]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>6</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>7</th><td class=\"r\"><ins>= Setups =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>8</th><td class=\"r\"><ins>1. Setup Development Environment</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>9</th><td class=\"r\"><ins>1. Clone the CS221 repository</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>10</th><td class=\"r\"><ins>1. Join Github Organization and create a repo for your team</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>11</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>12</th><td class=\"r\"><ins>= Tasks =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>13</th><td class=\"r\"><ins>1. Implement a simple punctuations and white spaces based tokenizer.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>14</th><td class=\"r\"><ins>1. Implement a Dynamic-Programming based Word Break Tokenizer.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>15</th><td class=\"r\"><ins>1. Incorporate a porter stemmer.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>16</th><td class=\"r\"><ins>1. Optional Extra Credit: Implement a dynamic-programming based Chinese/Japanese tokenizer.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>17</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>18</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>19</th><td class=\"r\"><ins>= Setup Environments: =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>20</th><td class=\"r\"><ins>||= Task =||=Guide =||</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>21</th><td class=\"r\"><ins>|| Install Java@8 || We require [https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html Java 8].[[BR]]Verify installation and version: [[BR]]`local&gt; javac -version`[[BR]]You should see:[[BR]]`java version \"1.8.X\"` ||</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>22</th><td class=\"r\"><ins>|| Install Maven || [#setup-maven Setup Maven] || </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>23</th><td class=\"r\"><ins>|| Setup IntelliJ (IntelliJ is strongly recommended) || [https://www.jetbrains.com/idea/ Intellij] || </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>24</th><td class=\"r\"><ins>&nbsp;</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>25</th><td class=\"r\"><ins>= Clone CS 221 repository: =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>26</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>27</th><td class=\"r\"><ins>Go to [https://github.com/UCI-Chenli-teaching/spring19-cs221-project spring19-cs221-project] and follow the README instructions to import the CS221 project into your IntelliJ. IntelliJ is needed because a library we use is written in Kotlin, which has built-in support in IntelliJ.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>28</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>29</th><td class=\"r\"><ins>= Task 3: Join Github Organization and create a repo for your team. =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>30</th><td class=\"r\"><ins>This course uses Github for version control, submitting final code, submitting test cases and reviews. The students are expected to use Github as explained below.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>31</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>32</th><td class=\"r\"><ins>&nbsp;* Create an account on Github if you don't have one. Then provide us your username in the&nbsp; [https://docs.google.com/spreadsheets/d/1_iwJOT-bnYDk9tWNNy61GCyi1kRN7s3VHdn5h_2T1DA/edit?usp=sharing Google Spreadsheet].</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>33</th><td class=\"r\"><ins>&nbsp;* Wait for the invitation from our staff to join the [https://github.com/UCI-Chenli-teaching UCI-Chenli-teaching organization]. The invitation might take a few days to be sent out based on our schedule.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>34</th><td class=\"r\"><ins>&nbsp;* One member from each team needs to create a '''private''' repository. The repository name should be of the form 'cs221-spring19-team-x' where 'x' is your assigned team number, e.g., \"cs221-spring19-team-1\". Other members can then be added to the repository as collaborators (by following steps given [https://help.github.com/articles/inviting-collaborators-to-a-personal-repository/ here]).</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>35</th><td class=\"r\"><ins>&nbsp;* You must wait for the invitation from us and '''create a private repository within the organization UCI-Chenli-teaching'''. Don't create a private repository on your own. 1) Go to [https://github.com/UCI-Chenli-teaching UCI-Chenli-teaching organization]. 2) click the '''New''' button to create a repository. 3) Type in the name and choose '''private'''.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>36</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins>&nbsp;* You can then begin with your project using Github. Put the code of your project in your team's Github repository.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>We have a [https://grape.ics.uci.edu/wiki/public/wiki/cs221-2019-spring-project1-git wiki] to get you started with Github for this course. Go through one of these online tutorials to get familiar with Git and Github if you are not familiar with them.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins>&nbsp;* https://try.github.io</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins>&nbsp;* https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins>= Task 1: Implement a simple punctuations and white spaces based tokenizer (3 points) =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>46</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>47</th><td class=\"r\"><ins>Implement this tokenizer in `analysis/PunctuationTokenizer.java`</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>48</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins>For example: the text \"I am Happy Today!\" should be tokenized to [\"happy\", \"today\"].</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins>Requirements:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>&nbsp;- White spaces (space, tab, newline, etc..) and punctuations provided below should be used to tokenize the text.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins>&nbsp;- White spaces and punctuations should be removed from the token and results.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>&nbsp;- All tokens should be converted to lower case.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins>&nbsp;- Stop words should be filtered out. Use the stop word list provided in `StopWords.java`</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>= Task 2: Implement a Dynamic-Programming based Word Break Tokenizer (8 points) =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>60</th><td class=\"r\"><ins>Word break is a problem where given a dictionary and a string (text with all white spaces removed), determine how to break the string into sequence of words.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins>Implement this tokenizer in `analysis/PunctuationTokenizer.java`</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>62</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>63</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>64</th><td class=\"r\"><ins>For example:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>65</th><td class=\"r\"><ins>input string \"catanddog\" is broken to tokens [\"cat\", \"and\", \"dog\"]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>66</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>67</th><td class=\"r\"><ins>We provide an English dictionary corpus with frequency information in \"resources/cs221_frequency_dictionary_en.txt\".</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>68</th><td class=\"r\"><ins>Use frequency statistics to choose the optimal way when there are many alternatives to break a string.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>69</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>70</th><td class=\"r\"><ins>For example,</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>71</th><td class=\"r\"><ins>input string is \"ai\",</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>72</th><td class=\"r\"><ins>dictionary and probability is: \"a\": 0.1, \"i\": 0.1, and \"ai\": \"0.05\".</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>73</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>74</th><td class=\"r\"><ins>Alternative 1: [\"a\", \"i\"], with probability p(\"a\") * p(\"i\") = 0.01</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>75</th><td class=\"r\"><ins>Alternative 2: [\"ai\"], with probability p(\"ai\") = 0.05</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>76</th><td class=\"r\"><ins>Finally, [\"ai\"] is chosen as result because it has higher probability.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>77</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>78</th><td class=\"r\"><ins>Requirements:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>79</th><td class=\"r\"><ins>&nbsp;- Use Dynamic Programming for efficiency. Running time cannot be too slow.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>80</th><td class=\"r\"><ins>&nbsp;- Use the the given dictionary corpus and frequency statistics to determine optimal alternative.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>81</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp;The probability is calculated as the product of each token's probability, assuming the tokens are independent.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>82</th><td class=\"r\"><ins>&nbsp;- A match in dictionary is case insensitive. Output tokens should all be in lower case.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>83</th><td class=\"r\"><ins>&nbsp;- Stop words should be removed after breaking.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>84</th><td class=\"r\"><ins>&nbsp;- If there's no possible way to break the string, throw an exception.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>85</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>86</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>87</th><td class=\"r\"><ins>= Task 3: Incorporate a porter stemmer (2 points) =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>88</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>89</th><td class=\"r\"><ins>Stemming is the process of reducing a word into its \"stem\" (\"root\") form.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>90</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>91</th><td class=\"r\"><ins>Porter stemming is a classic and popular algorithm that uses a set of rules and steps to process a token.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>92</th><td class=\"r\"><ins>Implementing porter stemmer is not technically interesting - it just consists a bunch of if-else statements,</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>93</th><td class=\"r\"><ins>therefore we ask you to simply incorporate an existing porter stemmer implementation into this project.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>94</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>95</th><td class=\"r\"><ins>https://github.com/apache/lucene-solr/blob/master/lucene/analysis/common/src/java/org/apache/lucene/analysis/en/PorterStemmer.java</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>96</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>97</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>98</th><td class=\"r\"><ins>= Task 4:&nbsp; Implement a dynamic-programming based Chinese/Japanese tokenizer (Optional Extra Credit, 3 points) =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>99</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>100</th><td class=\"r\"><ins>Tokenizing Chinese or Japanese text is challenging because there's no spaces between words. It is very similar to the word break problem in task 2.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>101</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>102</th><td class=\"r\"><ins>Use the same dictionary-frequency and dynamic programming based algorithm in task 2 to implement a Chinese or Japanese Tokenizer. For fairness, you must choose a language that is NOT your mother language.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>103</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>104</th><td class=\"r\"><ins>You need to find a Chinese/Japanese dictionary corpus with frequency information on your own, and write at least 3 test cases to test the correctness of your tokenizer.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>105</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>106</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>107</th><td class=\"r\"><ins>= Task: Submitting Test Cases (3 points) =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>108</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>109</th><td class=\"r\"><ins>For this project, we require each team to submit at least 2 test cases. We expect you to write high-quality test cases, and grade will be based on the correctness, quality, and documentation of them. </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>110</th><td class=\"r\"><ins>For this project, each team will be assigned to writing test cases for 1 specific task:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>111</th><td class=\"r\"><ins>- team 1-12: Task 1: Punctuation-based Tokenizer</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>112</th><td class=\"r\"><ins>- team 13-24: Task 2: Dynamic-programming based Word Break Tokenizer</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>113</th><td class=\"r\"><ins>- team 25-last: Task3: Porter Stemmer</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>114</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>115</th><td class=\"r\"><ins>Test cases will </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>116</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>117</th><td class=\"r\"><ins>= Task: Peer Review Test Cases (2 points) = </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>118</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>119</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>120</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>121</th><td class=\"r\"><ins></ins></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}