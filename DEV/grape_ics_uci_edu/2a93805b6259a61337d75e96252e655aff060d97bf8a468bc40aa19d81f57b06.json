{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2018-winter-project5?version=11", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs122b-2018-winter-project5 \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"alternate\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5?version=11&amp;format=txt\" type=\"text/x-trac-wiki\" title=\"Plain Text\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5\" title=\"View latest version\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5?version=12\" title=\"Version 12\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5?version=10\" title=\"Version 10\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/folding.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n    <script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\"#content\").find(\"h1,h2,h3,h4,h5,h6\").addAnchor(_(\"Link to this section\"));\n        $(\"#content\").find(\".wikianchor\").each(function() {\n          $(this).addAnchor(babel.format(_(\"Link to #%(id)s\"), {id: $(this).attr('id')}));\n        });\n        $(\".foldable\").enableFolding(true, true);\n      });\n    </script>\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"pagepath\" class=\"noprint\">\n  <a class=\"pathentry first\" title=\"View WikiStart\" href=\"/wiki/public/wiki\">wiki:</a><a class=\"pathentry\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5\" title=\"View cs122b-2018-winter-project5\">cs122b-2018-winter-project5</a>\n</div>\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5?version=10\" title=\"Version 10\">Previous Version</a></span></li><li><a href=\"/wiki/public/wiki/cs122b-2018-winter-project5\" title=\"View latest version\">View Latest Version</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5?version=12\" title=\"Version 12\">Next Version</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n        <br />\n        <table id=\"info\" summary=\"Revision info\">\n          <tr><th scope=\"row\">Version 11 (modified by avinask, <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-12T21%3A03%3A44-07%3A00&amp;precision=second\" title=\"See timeline at Mar 12, 2018 9:03:44 PM\">19 months ago</a>)\n             (<a href=\"/wiki/public/wiki/cs122b-2018-winter-project5?action=diff&amp;version=11\">diff</a>)</th></tr>\n          <tr><td class=\"message\">\n            <p>\n--\n</p>\n\n          </td></tr>\n        </table>\n      <div class=\"wikipage searchable\">\n        \n          <div id=\"wikipage\" class=\"trac-content\"><p>\n</p><div class=\"wiki-toc\">\n<ol>\n  <li>\n    <a href=\"#CS122BProject5:ScalingFabflixandPerformanceTuning\">CS122B Project 5: Scaling Fabflix and Performance Tuning</a>\n    <ol>\n      <li>\n        <a href=\"#Task1:ConnectionPoolingandPreparedStatements\">Task 1: Connection Pooling and Prepared Statements</a>\n      </li>\n      <li>\n        <a href=\"#Task2:ScalingFabflix\">Task 2: Scaling Fabflix</a>\n      </li>\n      <li>\n        <a href=\"#Task3:MeasuringtheperformanceofFabflixsearchfeature\">Task 3: Measuring the performance of Fabflix search feature</a>\n        <ol>\n          <li>\n            <a href=\"#Task3.1:Preparingthecodebasefortimemeasurement\">Task 3.1: Preparing the codebase for time measurement</a>\n          </li>\n          <li>\n            <a href=\"#Task3.2:PreparingthetestplaninApacheJMeter\">Task 3.2: Preparing the test plan in Apache JMeter</a>\n          </li>\n          <li>\n            <a href=\"#Task3.3:Collectingtheperformanceresults\">Task 3.3: Collecting the performance results</a>\n          </li>\n        </ol>\n      </li>\n      <li>\n        <a href=\"#DeploymentOnAWS\">Deployment On AWS</a>\n      </li>\n      <li>\n        <a href=\"#SubmissionsDemonstrationandGradingCriteria\">Submissions, Demonstration and Grading Criteria</a>\n      </li>\n    </ol>\n  </li>\n</ol>\n</div><p>\n</p>\n<h1 id=\"CS122BProject5:ScalingFabflixandPerformanceTuning\">CS122B Project 5: Scaling Fabflix and Performance Tuning</h1>\n<p>\n<strong>Deadline: Sunday, 3/18/2018, 11:45pm. Due on Github </strong><br />\n</p>\n<blockquote>\n<p>\nThis project has the following tasks:\n</p>\n</blockquote>\n<ol><li>JDBC connection pooling and Prepared statements\n</li><li>Scaling Fabflix with a cluster of MySQL/Tomcat and a frontend load balancer;\n</li><li>Measuring the performance of Fabflix search feature\n</li></ol><hr />\n<p>\n<span id=\"Pooling\"></span>\n</p>\n<h2 id=\"Task1:ConnectionPoolingandPreparedStatements\">Task 1: Connection Pooling and Prepared Statements</h2>\n<p>\nIn this task, we will enable Fabflix with Connection Pooling and Prepared Statements.\n</p>\n<p>\n<strong>'Step 1:</strong> Enable JDBC connection pooling for Fabflix. We will use our running application of \"TomcatTest\" to show how to change it to use connection pooling.\n</p>\n<ol><li><strong>Copy the JDBC Driver's jar into $CATALINA_HOME/lib</strong> (the lib folder just inside tomcat directory. If the lib folder is not there, create it). Download and deploy the following <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/TomcatPooling.war\" title=\"Attachment 'TomcatPooling.war' in cs122b-2018-winter-project5\">TomcatPooling.war</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/TomcatPooling.war\" title=\"Download\">\u200b</a> file. The file <strong>TomcatPooling\\META-INF\\context.xml</strong> includes important information about the database, user name, password, and pooling configuration. If you want to change this file, you need to undeploy the war file, make those changes, make a new war file, and deploy the new war file. Otherwise, the Tomcat server may still use the previous context.xml. Check <a class=\"ext-link\" href=\"http://tomcat.apache.org/tomcat-8.5-doc/jndi-datasource-examples-howto.html\"><span class=\"icon\">\u200b</span>http://tomcat.apache.org/tomcat-8.5-doc/jndi-datasource-examples-howto.html</a> for more information about how to configure connection pooling.\n</li><li>Go to the link <a class=\"ext-link\" href=\"http://localhost:8080/TomcatPooling/servlet/TomcatTest\"><span class=\"icon\">\u200b</span>http://localhost:8080/TomcatPooling/servlet/TomcatTest</a> to test your application.  You must see a list of rows displayed on the webpage.\n</li><li>Look into the following files for the main changes in this war file   compared to the previous war file without connection pooling:\n<ul><li><strong>\\META-INF\\context.xml</strong>.\n</li><li><strong>\\WEB-INF\\sources\\TomcatTest.java</strong>\n</li><li><strong>\\WEB-INF\\web.xml</strong> (see the <strong>resource-ref</strong> tag).\n</li></ul></li></ol><p>\nYou may also find some useful links for connection pooling from <a class=\"ext-link\" href=\"http://archive.oreilly.com/pub/a/onjava/2006/04/19/database-connection-pooling-with-tomcat.html?page=1\"><span class=\"icon\">\u200b</span>this tutorial</a>.\n</p>\n<p>\n<strong>Step 2:</strong> Make sure to use Prepared Statements in all JDBC statements involved in search. You can use this <a class=\"ext-link\" href=\"http://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html\"><span class=\"icon\">\u200b</span>tutorial</a> on prepared statements.\n</p>\n<ul><li>Prepared statements are usually associated with one connection, which becomes tricky if you are using a connection pool. There is a setting 'cachePrepStmts' which can be set to true to cache the prepared statements.\n</li><li>You can make this setting true by adding the flag to the jdbc connection URL in the \\META-INF\\context.xml like this  -\n<pre class=\"wiki\">url=\"jdbc:mysql://&lt;IP&gt;:&lt;PORT&gt;/moviedb?autoReconnect=true&amp;amp;useSSL=false&amp;amp;cachePrepStmts=true\n</pre></li></ul><p>\n<span class=\"underline\"><strong>When you are done,</strong></span> write a brief explanation of how/where (file path and line numbers as seen on Github, and snapshots of your code) you use the JDBC connection pooling and prepared statements in your code. You should submit this report to Github.\n</p>\n<hr />\n<h2 id=\"Task2:ScalingFabflix\">Task 2: Scaling Fabflix</h2>\n<p>\n<span id=\"Replication\"></span>\n</p>\n<p>\n<strong>Step 1</strong>: Setup two AWS instances as two backend servers by following this  <a href=\"https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2018-winter-project5-mysql-master-slave\">MySQL replication tutorial</a>. We call them the \"master instance\" and the \"slave instance\" (in the context of MySQL replication).\n</p>\n<p>\n<strong>Step 2 (master/slave)</strong>: Create a dummy user for two example Tomcat applications:\n</p>\n<pre class=\"wiki\">shell&gt; mysql -u root -p\nmysql&gt; CREATE USER 'mytestuser'@'localhost' IDENTIFIED BY 'mypassword';\nmysql&gt; GRANT ALL ON *.* TO 'mytestuser'@'localhost';\n</pre><p>\n<strong>Step 3 (master/slave)</strong>: Setup Tomcat on each master/slave instance. (You should have done it many times.)\n</p>\n<p>\n<strong>Step 4 (master/slave)</strong>: On each master/slave instance, deploy <a href=\"https://grape.ics.uci.edu/wiki/public/attachment/wiki/cs122b-2018-winter-project5/TomcatTest.war\">TomcatTest.war</a>. Make the URL <a class=\"ext-link\" href=\"http://PUBLIC_IP:8080/TomcatTest/servlet/TomcatTest\"><span class=\"icon\">\u200b</span>http://PUBLIC_IP:8080/TomcatTest/servlet/TomcatTest</a> work. You may need to modify the username/password and IP address (use the internal AWS instance address). Also make sure to modify the AWS security group setting for these two instances to allow remote access to their 8080 port.\n</p>\n<p>\n<strong>Step 5 (master/slave)</strong>: On each master/slave instance, deploy <a href=\"https://grape.ics.uci.edu/wiki/public/attachment/wiki/cs122b-2018-winter-project5/Session.war\">Session.war</a>. Make the URL <a class=\"ext-link\" href=\"http://PUBLIC_IP:8080/Session/servlet/ShowSession?myname=Michael\"><span class=\"icon\">\u200b</span>http://PUBLIC_IP:8080/Session/servlet/ShowSession?myname=Michael</a> work.\n</p>\n<p>\n<strong>Step 6 (instance 1)</strong>: On the instance that runs the original Fablix instance (called \"instance 1\"), setup Apache and its proxy by doing the following:\n</p>\n<ol><li>Install Apache2 and related modules:\n<pre class=\"wiki\">instance1-shell&gt; sudo apt-get install apache2\ninstance1-shell&gt; sudo a2enmod proxy proxy_balancer proxy_http rewrite headers lbmethod_byrequests\ninstance1-shell&gt; sudo service apache2 restart\n</pre></li><li>Configure the Apache2 web server to use its <tt>proxy_balancer</tt> module for sharing (i.e., redirecting) requests to the backend instances. To do it, edit the following configuration file:\n<pre class=\"wiki\">instance1-shell&gt; sudo vim /etc/apache2/sites-enabled/000-default.conf\n</pre></li></ol><p>\nCreate a load balancer proxy, whose members are the backend instances.  In particular, define a proxy on top of the file, before the <tt>&lt;VirtualHost *:80&gt;</tt> tag.<br />\n</p>\n<pre class=\"wiki\">&lt;Proxy \"balancer://TomcatTest_balancer\"&gt;\n    BalancerMember \"http://172.2.2.2:8080/TomcatTest/\"\n    BalancerMember \"http://172.3.3.3:8080/TomcatTest/\"\n&lt;/Proxy&gt;\n</pre><p>\nHere we assume '172.2.2.2' and '172.3.3.3' are the private IP address of the master and slave instances, respectively.\n</p>\n<ol><li>Add two new rules in the body of the VirtualHost tag.<br />\n<pre class=\"wiki\">ProxyPass /TomcatTest balancer://TomcatTest_balancer\nProxyPassReverse /TomcatTest balancer://TomcatTest_balancer\n</pre></li><li>Restart Apache:\n<pre class=\"wiki\">instance1-shell&gt; sudo service apache2 restart\n</pre></li><li>Modify the security group of the two backend instances to allow instance 1 to access their 8080 port.\n</li></ol><p>\nThese settings will redirect HTTP requests to \"instance1_IP/TomcatTest\" to one of the two backend instances. To test it, use a browser to point to <a class=\"ext-link\" href=\"http://instance1_IP/TomcatTest/servlet/TomcatTest\"><span class=\"icon\">\u200b</span>http://instance1_IP/TomcatTest/servlet/TomcatTest</a>. Be sure to open port 80 of instance 1 to your IP address. Check the Tomcat log of the two backend instances.\n</p>\n<pre class=\"wiki\">instance2-shell&gt; tail -f /var/log/tomcat8/*.log /var/log/tomcat8/*.txt /var/log/tomcat8/*.out\n</pre><p>\nOne of them should receive that request.  Keep refreshing the page to send multiple requests, and check if the two backends are receiving the requests evenly.\n</p>\n<p>\n<strong>Step 7 (instance 1)</strong>: Configure the proxy on instance 1 to handle sessions properly. Since the current setting will send requests randomly to the backend, it will not pass cookies properly, causing sessions to fail.  We want to make the session persist over several requests of the same client, i.e., to have a  <em>sticky session.</em> To do it, read the <a class=\"ext-link\" href=\"http://httpd.apache.org/docs/2.2/mod/mod_proxy_balancer.html\"><span class=\"icon\">\u200b</span>instructions</a>, especially those under \"Examples of a balancer configuration.\" Here's a sample setting for the <tt> /etc/apache2/sites-enabled/000-default.conf</tt> file for the \"Session.war\" application:\n</p>\n<pre class=\"wiki\">Header add Set-Cookie \"ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/\" env=BALANCER_ROUTE_CHANGED\n\n&lt;Proxy \"balancer://Session_balancer\"&gt;\n    BalancerMember \"http://172.2.2.2:8080/Session\" route=1\n    BalancerMember \"http://172.3.3.3:8080/Session\" route=2\nProxySet stickysession=ROUTEID\n&lt;/Proxy&gt; \n</pre><p>\nAlso do the following:\n</p>\n<ol><li>Add two new rules in the body of the VirtualHost tag.<br />\n<pre class=\"wiki\">ProxyPass /Session balancer://Session_balancer\nProxyPassReverse /Session balancer://Session_balancer\n</pre></li><li>Restart Apache:\n<pre class=\"wiki\">instance1-shell&gt; sudo service apache2 restart\n</pre></li></ol><p>\nTest if it works by pointing to the URL <a class=\"ext-link\" href=\"http://instance1_IP/Session/servlet/ShowSession?myname=Michael\"><span class=\"icon\">\u200b</span>http://instance1_IP/Session/servlet/ShowSession?myname=Michael</a> of instance 1. It should access one of the backend instances only.\n</p>\n<p>\nHere's a sample Apache configuration file <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/000-default.conf\" title=\"Attachment '000-default.conf' in cs122b-2018-winter-project5\">000-default.conf</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/000-default.conf\" title=\"Download\">\u200b</a>.\n</p>\n<p>\n<strong>Step 8 (main task)</strong>: Deploy your Fabflix system to the two backend instances. Do MySQL master/slave replication. Configure the original instance properly to enable load balancing, connection pooling, sticky sessions. Also make sure the write request must be sent to the master mysql instance, while read request should be sent to either master or slave mysql instance. Enabling the scaled version with HTTPS is <strong>optional</strong>. <strong>Note that you are required to add a section to the connection pooling report and explain how to use connection pooling in the case of having two backend servers. Put snapshots of your code and file and line numbers as seen on Github.</strong>\n</p>\n<p>\nThe following is the architecture diagram:\n</p>\n<blockquote>\n<p>\n<a style=\"padding:0; border:none\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/CS122B-Project5-Cluster-Architecture.png\"><img width=\"500px\" alt=\"Scalable architecture\" title=\"Scalable architecture\" src=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/CS122B-Project5-Cluster-Architecture.png\" /></a>\n</p>\n</blockquote>\n<p>\nNotice that in this architecture, each Tomcat can talk to both mysql instances. Sometimes we may want to setup a cluster of MySQL, and let each Tomcat talk to the cluster through another load balancer.  If interested, you can read this <a class=\"ext-link\" href=\"http://mysqlhighavailability.com/setting-up-mysql-router/\"><span class=\"icon\">\u200b</span>page</a> on how to set it up.\n</p>\n<p>\n<strong>Step 9 (Google Cloud):</strong> After finishing the main task, you then need to install and configure the load balancer on one Google Cloud instance. As before, this load balancer needs to redirect requests to one of the Tomcat servers. However, the load balancer needs to use the public IPs of the AWS instances, and make sure you have port 8080 open to the Google Cloud instance.\n</p>\n<p>\nYou can get $300 free credits for Google Cloud from <a class=\"ext-link\" href=\"https://cloud.google.com/free/\"><span class=\"icon\">\u200b</span>free-trial</a>. After that, start a computing engine (using Ubuntu 16.04) by following this <a class=\"ext-link\" href=\"https://console.cloud.google.com/getting-started?project=applied-plexus-163600\"><span class=\"icon\">\u200b</span>tutorial</a>, and repeat the exact same steps as you did for installing the load balancer on AWS.\n</p>\n<hr />\n<h2 id=\"Task3:MeasuringtheperformanceofFabflixsearchfeature\">Task 3: Measuring the performance of Fabflix search feature</h2>\n<p>\nIn this part, we will measure the performance of the keyword search feature that you have implemented in the past projects. The measurement results described in subtasks 3.1 and 3.2 must be reported for both the single-instance (i.e., the instance that you prepared in earlier projects and Task1) and the scaled version of Fabflix.<strong> Note: </strong>The URL to the single-instance version should be <a class=\"ext-link\" href=\"http:///INSTANCE1_PUBLIC_IP:8080/fabflix\"><span class=\"icon\">\u200b</span>http:///INSTANCE1_PUBLIC_IP:8080/fabflix</a>, while it should be <a class=\"ext-link\" href=\"http://INSTANCE1_PUBLIC_IP:80/fabflix\"><span class=\"icon\">\u200b</span>http://INSTANCE1_PUBLIC_IP:80/fabflix</a> for the scaled version that you prepared in Task 2.\n</p>\n<h3 id=\"Task3.1:Preparingthecodebasefortimemeasurement\">Task 3.1: Preparing the codebase for time measurement</h3>\n<p>\nHere, we are going to prepare for measuring the following two statistical variables: (1) the average time it takes for the <span class=\"underline\">search servlet</span> to run completely for a query (called TS), and (2) the average time spent on the parts that use JDBC, per query (called TJ).\n</p>\n<p>\nStep 1. Use the following sample to insert the necessary time statements for measuring TS and TJ. You are required to measure and <span class=\"underline\">log</span> the value of \"search servlet total execution time\" and \"JDBC execution time\" for every request served by the server (i.e., assuming these values are printed in one line per query, if a query workload of 1000 queries is fired to the system, we must have 1000 lines in the log file, each line containing one sample value for calculating TS and TJ).\n</p>\n<p>\nParticularly for TS samples, it is highly recommended to place these log statements in a filter that wraps the search servlet.\n</p>\n<pre class=\"wiki\">// Time an event in a program to nanosecond precision\nlong startTime = System.nanoTime();\n/////////////////////////////////\n/// ** part to be measured ** ///\n/////////////////////////////////\nlong endTime = System.nanoTime();\nlong elapsedTime = endTime - startTime; // elapsed time in nano seconds. Note: print the values in nano seconds \n</pre><p>\nStep 2. Write a script (in any language that you prefer) to process the resulting log file of a query workload and calculate TS and TJ (i.e., by parsing the log statements and taking the average of all the samples). This script will be needed in preparing the html report asked for in Step 3 below.\n</p>\n<p>\n<strong>Submission-related note:</strong> In Step 3 below, you will run queries. Upload the log file created to Github and mention its location in your report. The usage of this script, which is expected to be found at the root of your .war file, must be explained in your README file.  \n</p>\n<p>\n<span id=\"Jmeter\"></span>\n</p>\n<h3 id=\"Task3.2:PreparingthetestplaninApacheJMeter\">Task 3.2: Preparing the test plan in Apache JMeter</h3>\n<p>\nIn this part, you will use <a class=\"ext-link\" href=\"http://jmeter.apache.org/\"><span class=\"icon\">\u200b</span>Apache JMeter</a> to measure the performance of the search feature of the Fabflix website. In particular, you must measure the <strong>average query time</strong> of the search feature using a set of queries based on the movie tiles in this <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/query_load.txt\" title=\"Attachment 'query_load.txt' in cs122b-2018-winter-project5\">file</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/query_load.txt\" title=\"Download\">\u200b</a>. Assume the page size is 50, and we only want the first page of results.\n</p>\n<p>\nThe following figure illustrates the round-trip time of a query from a client to the server then back to client. The <em>query time</em>  of a query (i.e., \"Tq\") is  the total time starting from when the search request is sent from the client (Ts) until the time when the response has completely received by the client (Te). It includes two major parts: (1) <em>response time</em> (Tr) is the time it takes until the client hears the first bit of the response, and (2) \"payload time\" (Tp) is the time it takes for the response data to be downloaded by the client completely.\n</p>\n<p>\n<a style=\"padding:0; border:none\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/query_time.png\"><img src=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/query_time.png\" /></a>\n</p>\n<p>\nStep 1: Read this <a class=\"ext-link\" href=\"http://jmeter.apache.org/usermanual/get-started.html\"><span class=\"icon\">\u200b</span>reference</a> to get an overview of Jmeter. Read this <a class=\"ext-link\" href=\"http://jmeter.apache.org/usermanual/build-test-plan.html\"><span class=\"icon\">\u200b</span>page</a> to get familiar with JMeter basics.\n</p>\n<p>\nStep 2: Download and install JMeter from this <a class=\"ext-link\" href=\"http://jmeter.apache.org/download_jmeter.cgi\"><span class=\"icon\">\u200b</span>link</a>.\n</p>\n<p>\nStep 3: Use <a class=\"ext-link\" href=\"http://jmeter.apache.org/usermanual/build-web-test-plan.html\"><span class=\"icon\">\u200b</span>this link</a> to make a test plan for the search feature of your website. You will run the Jmeter test from your local development against the remote AWS instance.  The plan must iteratively generate a proper HTTP or HTTPS search request for every movie title in the provided <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/query_load.txt\" title=\"Attachment 'query_load.txt' in cs122b-2018-winter-project5\">query file</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/query_load.txt\" title=\"Download\">\u200b</a>. Here is a useful <a class=\"ext-link\" href=\"http://ivetetecedor.com/how-to-use-a-csv-file-with-jmeter/\"><span class=\"icon\">\u200b</span>page</a> about how to use a CSV file for Jmeter.\n</p>\n<h3 id=\"Task3.3:Collectingtheperformanceresults\">Task 3.3: Collecting the performance results</h3>\n<p>\nRun the tests for all the following settings to collect performance results. For each case, remember to make the necessary changes to the JMeter test plan and/or the codebase.  Use the results to fill out this <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/jmeter_report.html\" title=\"Attachment 'jmeter_report.html' in cs122b-2018-winter-project5\">HTML file</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/jmeter_report.html\" title=\"Download\">\u200b</a> as your measurement report. For each case, report the requested values in the corresponding columns, and write a short analysis for that case in the last column. This <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/graph_results_case1.png\" title=\"Attachment 'graph_results_case1.png' in cs122b-2018-winter-project5\">image</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/graph_results_case1.png\" title=\"Download\">\u200b</a> is an example of what you should report in the second column called \"Graph Results Screenshot\".\n</p>\n<p>\n<strong>Notes</strong>:\n</p>\n<ol><li>In all cases, if not mentioned otherwise, your Fabflix codebase is assumed to use both the Prepared Statements and Connection Pooling optimization techniques.\n</li><li>If more than one JMeter thread is to be used, each thread should start a new session in Tomcat (i.e., threads should not share a session-id).\n</li></ol><p>\nSingle-instance cases (i.e., that is accessible via <a class=\"ext-link\" href=\"http://YOUR_PUBLIC_IP:8080/project4\"><span class=\"icon\">\u200b</span>http://INSTANCE1_PUBLIC_IP:8080/fabflix</a>):\n</p>\n<ol><li>Use HTTP, without using prepared statements, 10 threads in JMeter.\n</li><li>Use HTTP, without using connection pooling, 10 threads in JMeter.\n</li><li>Use HTTP, 1 thread in JMeter.\n</li><li>Use HTTP, 10 threads in JMeter.\n</li><li>Use HTTPS, 10 threads in JMeter.\n</li></ol><p>\nScaled-version cases (i.e., that is accessible via <a class=\"ext-link\" href=\"http://YOUR_PUBLIC_IP:8080/project4\"><span class=\"icon\">\u200b</span>http://INSTANCE1_PUBLIC_IP:80/fabflix</a>):\n</p>\n<ol><li>Use HTTP, without using prepared statements, 10 threads in JMeter.\n</li><li>Use HTTP, without using connection pooling, 10 threads in JMeter.\n</li><li>Use HTTP, 1 thread in JMeter.\n</li><li>Use HTTP, 10 threads in JMeter.\n</li></ol><hr />\n<p>\n<span id=\"DeploymentOnAWS\"></span>\n</p>\n<h2 id=\"DeploymentOnAWS\">Deployment On AWS</h2>\n<p>\nUse Github for your project 5 code and reports and deploy (web code) on AWS.\n</p>\n<hr />\n<p>\n<span id=\"Grading\"></span>\n</p>\n<h2 id=\"SubmissionsDemonstrationandGradingCriteria\">Submissions, Demonstration and Grading Criteria</h2>\n<p>\nThere will be no demo for this project. We will be grading based on your submissions. Therefore, please be clear and precise in your reports. Summarized below are the submissions we need:\n</p>\n<ol><li><strong>(Task 1)</strong> Section in report describing how/where you use the JDBC connection pooling and prepared statements in your code. Use snapshots of your code and mention the file and line numbers as seen in Github.\n</li><li><strong>(Task 2)</strong> In report, write down the address of your AWS instance and Google Cloud instance. Open ports 80 and 8080 of your Google and AWS instances to 128.195.0.0/16. Explain how you used connection pooling with two backend SQL servers and how read/write requests were routed. Use snapshots of your code and mention the file and line numbers as seen in Github.\n</li><li><strong>(Task 3)</strong> Upload the log file created by running queries, the parsing script and the HTML file. Mention the location of these in your report.\n</li><li>Upload your WAR file and the README.\n</li></ol><p>\nFollow this<a class=\"ext-link\" href=\"https://docs.google.com/document/d/137v5gPqyN5raX5HXrZB24KeTNWtH9NJ-jMpdreBTwPk/edit?usp=sharing\"><span class=\"icon\">\u200b</span>https://docs.google.com/document/d/137v5gPqyN5raX5HXrZB24KeTNWtH9NJ-jMpdreBTwPk/edit?usp=sharing</a> format for your report.\n</p>\n</div>\n          \n          \n        \n        \n      </div>\n      \n    <div id=\"attachments\">\n        <h3 class=\"foldable\">Attachments <span class=\"trac-count\">(9)</span></h3>\n        <div>\n          <ul>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/CS122B-Project5-Cluster-Architecture.png\" title=\"View attachment\">CS122B-Project5-Cluster-Architecture.png</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/CS122B-Project5-Cluster-Architecture.png\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"42136 bytes\">41.1 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-06T16%3A22%3A19-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2018 4:22:19 PM\">20 months ago</a>.\n                <q>Scalable architecture</q>\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/Session.war\" title=\"View attachment\">Session.war</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/Session.war\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"100041 bytes\">97.7 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-06T16%3A36%3A20-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2018 4:36:20 PM\">20 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/000-default.conf\" title=\"View attachment\">000-default.conf</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/000-default.conf\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"2161 bytes\">2.1 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-06T16%3A37%3A00-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2018 4:37:00 PM\">20 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/query_load.txt\" title=\"View attachment\">query_load.txt</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/query_load.txt\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"40279 bytes\">39.3 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-06T16%3A38%3A59-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2018 4:38:59 PM\">20 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/jmeter_report.html\" title=\"View attachment\">jmeter_report.html</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/jmeter_report.html\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"3043 bytes\">3.0 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-06T16%3A42%3A07-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2018 4:42:07 PM\">20 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/graph_results_case1.png\" title=\"View attachment\">graph_results_case1.png</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/graph_results_case1.png\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"58334 bytes\">57.0 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-06T16%3A42%3A23-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2018 4:42:23 PM\">20 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/TomcatTest.war\" title=\"View attachment\">TomcatTest.war</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/TomcatTest.war\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"618901 bytes\">604.4 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-08T00%3A31%3A25-08%3A00&amp;precision=second\" title=\"See timeline at Mar 8, 2018 12:31:25 AM\">19 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/TomcatPooling.war\" title=\"View attachment\">TomcatPooling.war</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/TomcatPooling.war\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"1189127 bytes\">1.1 MB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-08T10%3A06%3A09-08%3A00&amp;precision=second\" title=\"See timeline at Mar 8, 2018 10:06:09 AM\">19 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project5/query_time.png\" title=\"View attachment\">query_time.png</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project5/query_time.png\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"12190 bytes\">11.9 KB</span>) -\n      added by <em>avinask</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-03-12T15%3A28%3A21-07%3A00&amp;precision=second\" title=\"See timeline at Mar 12, 2018 3:28:21 PM\">19 months ago</a>.\n              </li>\n          </ul>\n          <p>\n            Download all attachments as: <a rel=\"nofollow\" href=\"/wiki/public/zip-attachment/wiki/cs122b-2018-winter-project5/\">.zip</a>\n          </p>\n        </div>\n    </div>\n\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"last first\">\n          <a rel=\"nofollow\" href=\"/wiki/public/wiki/cs122b-2018-winter-project5?version=11&amp;format=txt\">Plain Text</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>", "encoding": "utf-8"}