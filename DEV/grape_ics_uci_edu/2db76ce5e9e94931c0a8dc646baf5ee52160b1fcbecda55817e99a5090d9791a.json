{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs221-2019-spring-project1?action=diff&version=16", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs221-2019-spring-project1 (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=history\" title=\"Page history\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=diff&amp;version=17\" title=\"Version 17\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=diff&amp;version=15\" title=\"Version 15\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=diff&amp;version=15\" title=\"Version 15\">Previous Change</a></span></li><li><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project1?action=diff&amp;version=17\" title=\"Version 17\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15\">Version 15</a> and\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16\">Version 16</a> of\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1\">cs221-2019-spring-project1</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"20b23e26858953353cc061d3\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"16\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"15\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            Apr 2, 2019 1:49:35 PM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-04-02T13%3A49%3A35-07%3A00&amp;precision=second\" title=\"See timeline at Apr 2, 2019 1:49:35 PM\">6 months</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          chenli\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16\">cs221-2019-spring-project1</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version 15\">\n                    <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L13\">\n                      v15</a>\n                  </th>\n                  <th title=\"Version 16\">\n                    <a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L13\">\n                      v16</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>13</th><th>13</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>14</th><th>14</th><td class=\"l\"><span>== Coding Tasks ==</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>15</th><th>\u00a0</th><td class=\"l\"><span>1. Implement a simple tokenizer based on punctuations and white space<del></del>. (3 points)</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>15</th><td class=\"r\"><span>1. Implement a simple tokenizer based on punctuations and white space<ins>s</ins>. (3 points)</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>16</th><th>16</th><td class=\"l\"><span>1. Implement a Dynamic-Programming-based Word-Break Tokenizer. (7 points)</span></td>\n                  </tr><tr>\n                          <th>17</th><th>17</th><td class=\"l\"><span>1. Incorporate a Porter stemmer. (2 points)</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L49\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L49\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>49</th><th>49</th><td class=\"l\"><span>= Coding Tasks =</span></td>\n                  </tr><tr>\n                          <th>50</th><th>50</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>== Task 1: Implement a simple <del>punctuations and white spaces based tokenizer</del> (3 points) ==</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>51</th><td class=\"r\"><span>== Task 1: Implement a simple <ins>tokenizer based on punctuations and white spaces</ins> (3 points) ==</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>52</th><th>52</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>53</th><th>53</th><td class=\"l\"><span>Implement this tokenizer in `analysis/PunctuationTokenizer.java`</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L56\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L56\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>56</th><th>56</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>57</th><th>57</th><td class=\"l\"><span>Requirements:</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- White spaces (space, tab, newline, etc..) and punctuations provided b<del>elow</del> should be used to tokenize the text.</span></td>\n                      </tr><tr>\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- White spaces and punctuations should be removed from the <del>token and result</del>s.</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>58</th><td class=\"r\"><span>&nbsp;- White spaces (space, tab, newline, etc..) and punctuations provided b<ins>y us</ins> should be used to tokenize the text.</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>&nbsp;- White spaces and punctuations should be removed from the <ins>result token</ins>s.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>60</th><th>60</th><td class=\"l\"><span>&nbsp;- All tokens should be converted to lower case.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>61</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- Stop words should be filtered out. Use the stop word list provided in `StopWords.java`<del></del></span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>61</th><td class=\"r\"><span>&nbsp;- Stop words should be filtered out. Use the stop word list provided in `StopWords.java`<ins>.</ins></span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>62</th><th>62</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>63</th><th>63</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>== Task 2: Implement a Dynamic-Programming based Word<del>&nbsp;</del>Break Tokenizer (7 points) ==</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>== Task 2: Implement a Dynamic-Programming based Word<ins>-</ins>Break Tokenizer (7 points) ==</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>65</th><th>65</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>Word break is a problem where given a dictionary and a string (text with all white spaces removed), determine how to break the string into <del></del>sequence of words.</span></td>\n                      </tr><tr>\n                        <th>67</th><th>\u00a0</th><td class=\"l\"><span>Implement this tokenizer in `analysis/PunctuationTokenizer.java`<del>&nbsp;As an example, input string `\"catanddog\"` should be broken to tokens `[\"cat\", \"and\", \"dog\"]`</del></span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span>Word break is a problem where given a dictionary and a string (text with all white spaces removed), determine how to break the string into <ins>a </ins>sequence of words.</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>Implement this tokenizer in `analysis/PunctuationTokenizer.java`<ins>. As an example, an input string `\"catdog\"` should be broken to tokens `[\"cat\", \"dog\"]`.</ins></span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>68</th><th>68</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>69</th><th>\u00a0</th><td class=\"l\"><span>Use frequency statistics to choose the optimal way when there are many alternatives to break a string. For example<del></del></span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>69</th><td class=\"r\"><span>Use frequency statistics to choose the optimal way when there are many alternatives to break a string. For example<ins>:</ins></span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>70</th><th>70</th><td class=\"l\"><span>{{{</span></td>\n                  </tr><tr>\n                          <th>71</th><th>71</th><td class=\"l\"><span>input string is \"ai\",</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L80\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L80\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>80</th><th>80</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>81</th><th>81</th><td class=\"l\"><span>Requirements:</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>82</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- Use Dynamic Programming for efficiency<del>. Running time cannot be too slow</del>.</span></td>\n                      </tr><tr>\n                        <th>83</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- Use the <del>the given dictionary corpus and frequency statistics to determine</del> optimal alternative.</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span>&nbsp;- Use Dynamic Programming for efficiency<ins>&nbsp;purposes</ins>.</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>&nbsp;- Use the <ins>given dictionary corpus and frequency statistics to determine an</ins> optimal alternative.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>84</th><th>84</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp;The probability is calculated as the product of each token's probability, assuming the tokens are independent.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>85</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- A match in <del></del>dictionary is case insensitive. Output tokens should all be in lower case.</span></td>\n                      </tr><tr>\n                        <th>86</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;- Stop words should be removed<del>&nbsp;after breaking</del>.</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp;- A match in <ins>the </ins>dictionary is case insensitive. Output tokens should all be in lower case.</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>&nbsp;- Stop words should be removed<ins></ins>.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>87</th><th>87</th><td class=\"l\"><span>&nbsp;- If there's no possible way to break the string, throw an exception.</span></td>\n                  </tr><tr>\n                          <th>88</th><th>88</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>89</th><th>89</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>90</th><th>\u00a0</th><td class=\"l\"><span>== Task 3: Incorporate a <del>p</del>orter stemmer (2 points) ==</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>== Task 3: Incorporate a <ins>P</ins>orter stemmer (2 points) ==</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>91</th><th>91</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>92</th><th>92</th><td class=\"l\"><span>Stemming is the process of reducing a word into its \"stem\" (\"root\") form.</span></td>\n                  </tr><tr>\n                          <th>93</th><th>93</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>94</th><th>94</th><td class=\"l\"><span>Porter stemming is a classic and popular algorithm that uses a set of rules and steps to process a token.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>95</th><th>\u00a0</th><td class=\"l\"><span>Implementing porter stemmer is not technically interesting - it just consists a bunch of if-else statements,</span></td>\n                      </tr><tr>\n                        <th>96</th><th>\u00a0</th><td class=\"l\"><span>therefore we ask you to simply incorporate an existing porter stemmer implementation into this project.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span>We ask you to incorporate the following existing Porter stemmer implementation into this project:</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>97</th><th>96</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>98</th><th>97</th><td class=\"l\"><span>https://github.com/apache/lucene-solr/blob/master/lucene/analysis/common/src/java/org/apache/lucene/analysis/en/PorterStemmer.java</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L101\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L100\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>101</th><th>100</th><td class=\"l\"><span>== Task 4:&nbsp; Implement a dynamic-programming based Chinese or Japanese tokenizer (Optional Extra Credit, 3 points) ==</span></td>\n                  </tr><tr>\n                          <th>102</th><th>101</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>103</th><th>\u00a0</th><td class=\"l\"><span>Tokenizing Chinese or Japanese text is challenging because there<del>'s no spaces between words. It is very similar to the word </del>break problem in task 2.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>Tokenizing Chinese or Japanese text is challenging because there<ins>&nbsp;are no explicit spaces between words. It is very similar to the word-</ins>break problem in task 2.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>104</th><th>103</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>105</th><th>\u00a0</th><td class=\"l\"><span>Use the same dictionary-frequency and dynamic programming based algorithm in task 2 to implement a Chinese or Japanese Tokenizer. For fairness, you must choose a language that is NOT your <del>mother</del> language.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>104</th><td class=\"r\"><span>Use the same dictionary-frequency and dynamic programming based algorithm in task 2 to implement a Chinese or Japanese Tokenizer. For fairness, you must choose a language that is NOT your <ins>native</ins> language.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>106</th><th>105</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>107</th><th>106</th><td class=\"l\"><span>You need to find a Chinese or Japanese dictionary corpus with frequency information on your own, and write at least 3 test cases to test the correctness of your tokenizer.</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L111\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L110\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>111</th><th>110</th><td class=\"l\"><span>== Task: Submitting Test Cases (3 points) ==</span></td>\n                  </tr><tr>\n                          <th>112</th><th>111</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>113</th><th>\u00a0</th><td class=\"l\"><span>For this project, we require each team to submit at least 2 test cases. We expect you to write high-quality test cases, and grade will be based on the correctness, quality, and documentation<del>&nbsp;of them</del>. </span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>For this project, we require each team to submit at least 2 test cases. We expect you to write high-quality test cases, and grade will be based on the correctness, quality, and documentation<ins></ins>. </span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>114</th><th>113</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>115</th><th>\u00a0</th><td class=\"l\"><span>Each team will be assigned to write test cases for 1 specific task (Punctuation-based Tokenizer, or Word Break Tokenizer, or Porter Stemmer). Check the Google Spreadsheet <del>to see</del> which task your team should write tests.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>114</th><td class=\"r\"><span>Each team will be assigned to write test cases for 1 specific task (Punctuation-based Tokenizer, or Word Break Tokenizer, or Porter Stemmer). Check the Google Spreadsheet <ins>(TO BE FILLED) to see on</ins> which task your team should write tests.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>116</th><th>115</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>117</th><th>116</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>118</th><th>117</th><td class=\"l\"><span>The test cases should follow these general guidelines:</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>119</th><th>\u00a0</th><td class=\"l\"><span>1. Create a new class under the corresponding package in `test/java/edu.uci.ics.cs221/...`<del>, t</del>he class name should follow the naming convention `Team#TaskNameTest`. </span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>118</th><td class=\"r\"><span>1. Create a new class under the corresponding package in `test/java/edu.uci.ics.cs221/...`<ins>. T</ins>he class name should follow the naming convention `Team#TaskNameTest`. </span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>120</th><th>119</th><td class=\"l\"><span>2. Write tests using the JUnit testing framework. Use `Assert` functions from the Junit framework.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>121</th><th>\u00a0</th><td class=\"l\"><span>3. Each test case should be independent of each other. JUnit runs test cases <del>out of</del> order.</span></td>\n                      </tr><tr>\n                        <th>122</th><th>\u00a0</th><td class=\"l\"><span>4. Each test case should <del>comments describing what the test case doe</del>s.</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>120</th><td class=\"r\"><span>3. Each test case should be independent of each other. JUnit runs test cases <ins>in an arbitrary</ins> order.</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>121</th><td class=\"r\"><span>4. Each test case should <ins>have informative comment</ins>s.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>123</th><th>122</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>124</th><th>123</th><td class=\"l\"><span>The test cases should be submitted via Github Pull Requests, to submit a test case:</span></td>\n                  </tr><tr>\n                          <th>125</th><th>124</th><td class=\"l\"><span>1. '''fork''' the [https://github.com/UCI-Chenli-teaching/spring19-cs221-project spring19-cs221-project] into your own Github account. Clone your fork into your local machine.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>126</th><th>\u00a0</th><td class=\"l\"><span>1. In your own fork repo, go to \"settings -&gt; Collaborators\", add the TA \"zuozhiw<del>@gmail.</del>com\" as a collaborator.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>125</th><td class=\"r\"><span>1. In your own fork repo, go to \"settings -&gt; Collaborators\", add the TA \"zuozhiw<ins>&nbsp;AT gmail DOT </ins>com\" as a collaborator.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>127</th><th>126</th><td class=\"l\"><span>1. Add the test cases, commit, and push to your own fork's master branch.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>128</th><th>\u00a0</th><td class=\"l\"><span>1. In your own fork repo, click \"Pull request\" and open a pull request to merge into the original repo `UCI-Chenli-teaching/spring19-cs221-project`<del></del></span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>127</th><td class=\"r\"><span>1. In your own fork repo, click \"Pull request\" and open a pull request to merge into the original repo `UCI-Chenli-teaching/spring19-cs221-project`<ins>.</ins></span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>129</th><th>128</th><td class=\"l\"><span>1. Follow the title and content of the [https://github.com/UCI-Chenli-teaching/spring19-cs221-project/pull/1 template pull request]</span></td>\n                  </tr><tr>\n                          <th>130</th><th>129</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=15#L132\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs221-2019-spring-project1?version=16#L131\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>132</th><th>131</th><td class=\"l\"><span>== Task: Peer Review Test Cases (2 points) ==</span></td>\n                  </tr><tr>\n                          <th>133</th><th>132</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>134</th><th>\u00a0</th><td class=\"l\"><span>For this project, we require each team to <del>peer review 2 other teams' test cases after the test cases are submitted. The reviewer needs to leave comments under the Github Pull Requests to discuss problems or suggestions with the author</del>, and approve the pull request.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>133</th><td class=\"r\"><span>For this project, we require each team to <ins>review 2 other teams' test cases after the test cases are submitted. The reviewers need to leave comments under the Github Pull Requests to discuss problems or suggestions with the authors</ins>, and approve the pull request.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>135</th><th>134</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>136</th><th>135</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}