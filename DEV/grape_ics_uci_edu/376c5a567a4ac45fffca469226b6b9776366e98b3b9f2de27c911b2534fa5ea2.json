{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222p-2018-fall-mac-setup-guide?format=txt", "content": "{{{#!div style=\"background-color:#f2f3f4\"\r\n\r\n== '''Mac Setup Guide''' ==\r\nThis page will guide you how to setup C++ development environment on Mac using Eclipse and how to set gdb for debugging purposes.\r\n\r\n'''Setup development environment using Eclipse'''\r\n\r\n1: Install [https://itunes.apple.com/us/app/xcode/id497799835?mt=12 Xcode] from Mac App Store. After the installation is finished, open it and it will start installing additional necessary things.\r\n\r\n2: Open terminal, type  ` xcode-select --install `  Follow the prompts to let it install necessary components (Xcode Command Line Tools)\r\n\r\n3: Download and install [https://www.eclipse.org/downloads/packages/release/2018-09/r/eclipse-ide-cc-developers Eclipse for C/C++] for Mac OS X. We recommend using the latest version, but you don't have to. Note: for mac users who have updated to Mac OS X High Sierra, please follow the exact link to download the latest version., since it fixes a bug that won't let you run C/C++ programs in Eclipse in High Sierra.\r\n\r\n4: Go to the [https://grape.ics.uci.edu/wiki/public/wiki/cs222p-2018-fall-project1-create-project deployment guide] to set up the codebase for project 1. Be sure to select '''MacOSX GCC''' instead of Cross GCC.\r\n\r\nYou can check [http://www.ics.uci.edu/~pattis/common/handouts/macmingweclipse/eclipse.html this page] if you need more detailed instructions.\r\n\r\n'''Set up GDB for debugging purposes'''\r\n\r\nThis process is pretty complicated, but GDB can help a lot when debugging.\r\n\r\nFollow this [https://grape.ics.uci.edu/wiki/public/wiki/cs222p-2018-fall-setup-gdb-on-macos Setup GDB on MacOS] to set up gdb.\r\n\r\n'''Set up Valgrind for debugging purposes'''\r\n\r\nValgrind is a very powerful tool to detect memory leaks in your program. As of 09/26/2018, the latest release of Valgrind (3.13.0) doesn't support MacOS 10.13 High Sierra yet, so we have to build from source on our own. Even if you use a older version of Mac, I recommend you to follow the same process.\r\n\r\nPrerequisite:\r\n\r\n 1. Xcode command line tools, you should already have it if you follow step 1 and 2 of Eclipse setup guide.\r\n 1. Install [https://brew.sh/ Homebrew] if you haven't done so. Homebrew is a powerful package management tool for Mac and everyone is highly recommended install it.\r\n\r\nInstallation:\r\n\r\n 1. Install git using homebrew:  '''` brew install git `'''\r\n 1. Install automake using homebrew: '''` brew install automake `'''\r\n 1. Clone Valgrind's git repository: '''` git clone git://sourceware.org/git/valgrind.git `'''\r\n 1. cd into the valgrind folder: '''` cd valgrind `'''\r\n 1. run '''` ./autogen.sh `'''\r\n 1. run '''` ./configure `'''\r\n 1. run '''` make `'''\r\n 1. run '''` make install `'''\r\n\r\n}}}", "encoding": "ascii"}