{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222p-2017-fall-command-line-interface?format=txt", "content": "{{{\r\n#!div style=\"background-color:#f2f3f4\"\r\n\r\n[[PageOutline]]\r\n\r\n= Command Line Interface Interpreter for Project4 =\r\n[[BR]]\r\n\r\n\r\n== Introduction ==\r\n\r\nCommand Line Interface (CLI) takes a SQL-like command and executes that command. \r\nCLI is laid on top of the Relation Manager (RM) and Query Engine (QE) layers in Project 4 so that each command is executed via the public methods of the RM and/or QE layers.\r\n\r\n== Supported Commands ==\r\nThe interpreter supports the following commands. \r\n\r\n{{{\r\ncreate catalog\r\ncreate table <tableName> (col1 = <type>, col2 = <type>, ...)\r\n    <type> = int | real | <varchar>\r\n    <varchar> = \"varchar(\" <length> \")\"\r\n\r\ncreate index <columnName> on <tableName>\r\n\r\ndrop catalog\r\ndrop table <tableName>\r\ndrop index <indexName> on <tableName>\r\ndrop attribute <attributeName> from <tableName>\r\n\r\ninsert into <tableName> tuple(col1 = <value1>, col2 = <value2>, ...)\r\n\r\nSELECT <query>\r\n<query> = \r\n    PROJECT <query> GET \"[\" <attrs> \"]\"\r\n    FILTER <query> WHERE <attr> <op> <value>\r\n    BNLJOIN <query>, <query> WHERE <attr> <op> <attr> PAGES(<numPages>)\r\n    INLJOIN <query>, <query> WHERE <attr> <op> <attr>)\r\n    GHJOIN <query>, <query> WHERE <attr> <op> <attr> PARTITIONS(<numPartitions>)\r\n    AGG <query> [ GROUPBY(<attr>) ] GET <agg-op>(<attr>)\r\n    IDXSCAN <query> <attr> <op> <value>\r\n    TBLSCAN <query>\r\n    <tableName>\r\n\r\n<agg-op> = MIN | MAX | SUM | AVG | COUNT\r\n<op> = < | > | = | != | >= | <= | NOOP\r\n<attrs> = <attr> { \",\" <attr> }\r\n<numPartitions> = is a number bigger than 0\r\n<numPages> = is a number bigger than 0\r\n\r\nprint <tableName>\r\nprint attributes <tableName>\r\nprint index <attributeName> on <tableName>\r\n\r\nload <tableName> <fileName>: loads the file which is in data/ folder.\r\nhelp <commandName>\r\nhelp\r\nquit | exit\r\n}}}\r\n'''Note:''' All commands are case-insensitive. However, all user defined strings such as table names, attribute names etc. are case-sensitive.\r\n\r\n== Command Examples ==\r\n\r\nWhen you first execute CLI, you need to create the system catalog using the following command. Once the catalog is created, you don't need to execute this command again.\r\n\r\n{{{\r\ncreate catalog\r\n}}}\r\n\r\n\r\nYou can create a table and insert a record using the following commands:\r\n\r\n{{{\r\ncreate table Employee EmpName = varchar(30), Age = int, Height = real, Salary = int\r\ninsert into Employee tuple(EmpName = sky, Age = 22, Height = 6.1, Salary = 13291)\r\n}}}\r\n\r\n\r\n\r\nAlso, CLI supports a load command that allows users to load records in a file to an existing table.\r\nThe following screenshot shows how to load records from a file, employee_5 to a table, tbl_employee, and print all records in the table.\r\nFurthermore, it also shows how to use SELECT command with FILTER iterator.\r\n\r\n\r\n{{{\r\n>>> create table tbl_employee EmpName = varchar(30), Age = int, Height = real, Salary = int\r\n>>> load tbl_employee employee_5\r\n>>> print tbl_employee\r\nEmpName           |  Age  |  Height    |  Salary  |  \r\n===================================================\r\nAnettea Belote    |  67   |  6.400000  |  75000   |  \r\nZina Legleiter    |  45   |  6.300000  |  150000  |  \r\nRena Broadus      |  68   |  5.900000  |  250000  |  \r\nLorriane Shimmin  |  49   |  6.600000  |  400000  |  \r\nElvira Binns      |  36   |  5.600000  |  200000  |  \r\n>>> SELECT FILTER tbl_employee WHERE Age = 45\r\ntbl_employee.EmpName  |  tbl_employee.Age  |  tbl_employee.Height  |  tbl_employee.Salary  |  \r\n============================================================================================\r\nZina Legleiter        |  45                |  6.300000             |  150000               |  \r\n}}}\r\n\r\n'''Note''' that there are a set of dataset files under codebase/data/ directory, which are used for example programs, \"cli_example_01.cc\" under codebase/cli directory (and can be used for your own examples.)\r\nThe example program contains 21 cases each of which executes a set of CLI commands.\r\nThose example cases provide more comprehensive usage of all CLI commands.\r\n\r\n == Getting and Using Command Line Interface ==\r\nThe [wiki:cs222-2016-fall-project4#no1 codebase] has the following source tree.\r\n\r\n{{{\r\ncodebase/\r\n\u251c\u2500\u2500 cli\r\n\u2502   \u251c\u2500\u2500 cli.cc\r\n\u2502   \u251c\u2500\u2500 cli.h\r\n\u2502   \u251c\u2500\u2500 cli_example_XX.cc\r\n\u2502   \u251c\u2500\u2500 makefile\r\n\u2502   \u2514\u2500\u2500 start.cc\r\n\u251c\u2500\u2500 data\r\n\u2502   \u251c\u2500\u2500 ages_90\r\n\u2502   \u251c\u2500\u2500 employee_5\r\n\u2502   \u251c\u2500\u2500 employee_50\r\n\u2502   \u2514\u2500\u2500 salary_5\r\n\u251c\u2500\u2500 ix\r\n\u2502   \u251c\u2500\u2500 ix.cc\r\n\u2502   \u251c\u2500\u2500 ix.h\r\n\u2502   \u251c\u2500\u2500 ixtestX.cc\r\n\u2502   \u251c\u2500\u2500 ixtest_extra_X.cc\r\n\u2502   \u251c\u2500\u2500 ixtest_util.h\r\n\u2502   \u2514\u2500\u2500 makefile\r\n\u251c\u2500\u2500 makefile.inc\r\n\u251c\u2500\u2500 qe\r\n\u2502   \u251c\u2500\u2500 makefile\r\n\u2502   \u251c\u2500\u2500 qe.cc\r\n\u2502   \u251c\u2500\u2500 qetestX.cc\r\n\u2502   \u251c\u2500\u2500 qetest_util.h\r\n\u2502   \u2514\u2500\u2500 qe.h\r\n\u251c\u2500\u2500 rbf\r\n\u2502   \u251c\u2500\u2500 makefile\r\n\u2502   \u251c\u2500\u2500 pfm.cc\r\n\u2502   \u251c\u2500\u2500 pfm.h\r\n\u2502   \u251c\u2500\u2500 rbfm.cc\r\n\u2502   \u251c\u2500\u2500 rbfm.h\r\n\u2502   \u2514\u2500\u2500 rbftestX.cc\r\n\u251c\u2500\u2500 readme.txt\r\n\u251c\u2500\u2500 rm\r\n\u2502   \u251c\u2500\u2500 makefile\r\n\u2502   \u251c\u2500\u2500 rm.cc\r\n\u2502   \u251c\u2500\u2500 rm.h\r\n\u2502   \u251c\u2500\u2500 rmtest_XX.cc\r\n\u2502   \u251c\u2500\u2500 rmtest_create_tables.cc\r\n\u2502   \u251c\u2500\u2500 rmtest_delete_tables.cc\r\n\u2502   \u251c\u2500\u2500 rmtest_extra_X.cc\r\n\u2502   \u2514\u2500\u2500 test_util.h\r\n\u2514\u2500\u2500 shared.h\r\n}}}\r\n'''Note''' that the folder, codebase/data/ has csv files that contain a set of records, which can be used for your own checking purpose. \r\n[[BR]]\r\nAlso, the data folder is a folder that CLI program searches for files specified in \"load\" commands. [[BR]]\r\n\r\nGoto cli folder and type the following commands\r\n\r\n{{{\r\nmake clean; make; ./start\r\n}}}\r\n\r\nif you see the following outputs (the folder hierarchy will be different), you are good to go to the next step.\r\n\r\n{{{\r\n************************\r\nSecSQL CLI started\r\nEnjoy!\r\n>>> \r\n}}}\r\n\r\nNow, put all files that you implemented(and will implement in Project4) to the corresponding folders in the above source tree. \r\nThen, if you type again the same command in the cli folder, you can start playing by typing '''\"help\"'''.\r\n\r\n== Acknowledgement ==\r\nThe CLI layer was originally written by the following three students from the last CS222 course project.   \r\n* Sky Faber\r\n* Cesar Ghali\r\n* Ekin Oguz\r\nWe really appreciate their efforts. We also acknowledge the efforts of Sattam Alsubaiee, Young-Seok Kim, Hotham Altwaijry, and Jianfeng Jia who updated the the CLI layer in the previous quarters. \r\n\r\nLastly, to reflect the changed API of this quarter project, the CLI layer has been modified by Taewoo Kim.\r\n\r\n}}}", "encoding": "utf-8"}