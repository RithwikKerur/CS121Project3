{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2018-winter-project2?version=20", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs122b-2018-winter-project2 \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"alternate\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2?version=20&amp;format=txt\" type=\"text/x-trac-wiki\" title=\"Plain Text\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2\" title=\"View latest version\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2?version=21\" title=\"Version 21\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2?version=19\" title=\"Version 19\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/folding.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n    <script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\"#content\").find(\"h1,h2,h3,h4,h5,h6\").addAnchor(_(\"Link to this section\"));\n        $(\"#content\").find(\".wikianchor\").each(function() {\n          $(this).addAnchor(babel.format(_(\"Link to #%(id)s\"), {id: $(this).attr('id')}));\n        });\n        $(\".foldable\").enableFolding(true, true);\n      });\n    </script>\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"pagepath\" class=\"noprint\">\n  <a class=\"pathentry first\" title=\"View WikiStart\" href=\"/wiki/public/wiki\">wiki:</a><a class=\"pathentry\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2\" title=\"View cs122b-2018-winter-project2\">cs122b-2018-winter-project2</a>\n</div>\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2?version=19\" title=\"Version 19\">Previous Version</a></span></li><li><a href=\"/wiki/public/wiki/cs122b-2018-winter-project2\" title=\"View latest version\">View Latest Version</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2?version=21\" title=\"Version 21\">Next Version</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n        <br />\n        <table id=\"info\" summary=\"Revision info\">\n          <tr><th scope=\"row\">Version 20 (modified by qiushi, <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-28T23%3A19%3A41-08%3A00&amp;precision=second\" title=\"See timeline at Jan 28, 2018 11:19:41 PM\">21 months ago</a>)\n             (<a href=\"/wiki/public/wiki/cs122b-2018-winter-project2?action=diff&amp;version=20\">diff</a>)</th></tr>\n          <tr><td class=\"message\">\n            <p>\n--\n</p>\n\n          </td></tr>\n        </table>\n      <div class=\"wikipage searchable\">\n        \n          <div id=\"wikipage\" class=\"trac-content\"><h1 id=\"Project2:StartingFabflixBusiness\">Project 2: Starting Fabflix Business</h1>\n<p>\nDue: <em>Week 5 Friday, Feb. 9</em> 11:45 pm. Due on Github.\n</p>\n<p>\n<strong>Project Description</strong>\n</p>\n<ul><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#Overview\">Project 2 Overview</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#StepByStep\">Step by Step</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#BackendAPI\">Frontend-Backend Separation</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#DeploymentOnAWS\">Deployment on AWS</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#Grading\">Demonstration and Grading Criteria</a>\n</li></ul><p>\n<strong>Resources</strong>\n</p>\n<ul><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#TomcatTestExample\">TomcatTest example</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#FormExample\">Form example</a>, <a class=\"ext-link\" href=\"http://users.polytech.unice.fr/~buffa/cours/internet/POLYS/servlets/Servlet-Tutorial-Form-Data.html\"><span class=\"icon\">\u200b</span>Information on managing HTML form data</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#ServletSession\">Servlet session examples</a>\n</li><li><a class=\"wiki\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2#WAR\">Creating WAR Archives</a>\n</li></ul><hr />\n<p>\n<span id=\"Overview\"></span>\n</p>\n<h2 id=\"Project2Overview\">Project 2 Overview</h2>\n<p>\nIn this project, you will start the Fabflix business! In  particular, you will provide Web-based interfaces to allow customers  to browse/search for movie information, add interesting movies to their shopping cart, and check out. The following figure shows the  flow of the interfaces you need to implement.\n</p>\n<p>\n<a style=\"padding:0; border:none\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/design-diagram.jpg\"><img src=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/design-diagram.jpg\" /></a>\n</p>\n<p>\nThe following are details about the interfaces.\n</p>\n<ul><li>The \"Login\" page asks a customer to provide an email and a  password in order to log into the system. <strong>Use HTTP POST instead of HTTP  GET</strong><br /> so that the username and password are not displayed on the address bar.  Note that the email and password are attributes of the customer table.  You should use the customer table for authentication, <strong>NOT</strong> the  database login/password (such as \"testuser\" and \"testpass\").\n</li><li>On the \"Main\" page, the customer can choose either to \"Search\" for movies or \"Browse\" for movies.\n</li><li>On the \"Searching\" page, the customer can search for movies by  any of the following attributes or their combination (logical \"AND\"  operation):\n<ul><li>title;\n</li><li>year;\n</li><li>director;\n</li><li>star's first name and/or last name. This means you need to do both: a) first name or last name if only one of the two names  is provided; b) first name and last name, if both names are provided.\n</li></ul></li></ul><blockquote>\n<blockquote>\n<p>\nCheck <a class=\"ext-link\" href=\"http://www.imdb.com/search/title\"><span class=\"icon\">\u200b</span>http://www.imdb.com/search/title</a>  to see an example of the interface. Of course your interface can have a  different style.\n</p>\n</blockquote>\n</blockquote>\n<ul><li>The \"Movie list\" page shows the results of the search, and the results are formatted as a table with at least the following columns:\n<ul><li>id;\n</li><li>title (hyperlinked);\n</li><li>year;\n</li><li>director;\n</li><li>list of genres;\n</li><li>list of stars (each hyperlinked);\n</li></ul></li></ul><blockquote>\n<blockquote>\n<p>\nThe following requirements should be met.\n</p>\n</blockquote>\n</blockquote>\n<ul><li><em>Substring matching</em>: The user does not have to provide an exact value for an attribute, and the system should support \"substring matching\". For example, a query asking for \"term\" for the \"title\" attribute should return movies such as \"Terminal\" and \"Terminator.\" You  can use the \"LIKE\" and \"ILIKE\" SQL operators for pattern matching in any way you wish.  For example:\n</li></ul><blockquote>\n<blockquote>\n<p>\n<strong>                    SELECT \"column_name\"</strong>                    <br />                    <strong>                    FROM \"table_name\"</strong>                    <br />                    <strong>                    WHERE \"column_name\" LIKE pattern</strong>                    <br />\n</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>\n<strong>                   pattern</strong>                    often consists of wildcards.<br />              <strong>              Note: </strong>              You are required to write an explanation of how/where you use the LIKE predicate in your codebase. This should be accessible via a link in the format of <a class=\"ext-link\" href=\"http://YOUT_PUBLIC_ID:8080/fabflix/reports/wildcards\"><span class=\"icon\">\u200b</span>http://YOUT_PUBLIC_ID:8080/fabflix/reports/like-predicate</a>              .\n</p>\n</blockquote>\n</blockquote>\n<ul><li>Here are some examples:\n<ul><li>'A_Z':  All string that starts with 'A', another character, and end with 'Z'.  For example, 'ABZ' and 'A2Z' would both satisfy the condition, while  'AKKZ' would not (because there are two characters between A and Z  instead of one).\n</li><li>'ABC%': All strings that start with 'ABC'. For example,  'ABCD' and 'ABCABC' would both satisfy the condition.\n</li><li>'%XYZ': All strings that end with 'XYZ'. For example, 'WXYZ'  and 'ZZXYZ' would both satisfy the condition.\n</li><li>'%AN%':  All strings that contain the pattern 'AN' anywhere. For example, 'LOS ANGELES' and 'SAN FRANCISCO' would both satisfy the condition.\n</li></ul></li></ul><ul><li><em>Sorting</em>: A user should be able to click on the header of title or year, so that the results will be sorted (ascending or descending) by the corresponding attribute.\n</li></ul><ul><li><em>Previous/Next</em>: Since there could be many movies on the list, each page can only display a certain number (<em>N</em>) of movies, and the interface has \"Prev\"/\"Next\" buttons to allow the user to go through all the movies.   Your interface should allow the customer to change the number of listings <em>N</em> per page. You can implement a drop-down menu to choose \"N\" from a list of predefined values such as 10, 25, 50, 100, etc.\n</li></ul><ul><li>If the user clicks on a movie, the corresponding \"Single Movie\" page displays all the information about the movie, including its id, title, year, director, a list of genres (hyperlinked), poster, a list of stars (hyperlinked), and a link to its preview trailer.\n</li><li>If the user clicks on a star, the corresponding \"Single Star\" page displays all the information about this star, including the id, name, date of birth, picture of the star, and a list of (hyperlinked) movies in which the star acted. The user can jump between a page for a movie and a page for a star following hyperlinks.\n</li><li>Using the \"Browsing\" page, the user can browse movies by either their genres and or title. The \"Browsing by movie genre\" page has all the (hyperlinked) genres. The user can click on a genre to see all the movies of this genre. The \"Browsing by movie title\" page categorizes the movies based on their titles. The page organizes all the titles based on their first character in the title in an alphabetical order.  (Notice that the first character could be a digit such as \"2\" in \"2012\".)  When the user clicks on a letter, he can see the list of all the movies with this first letter in their title.\n</li><li><em>Shopping Cart</em>: For all the pages  that display movie information, each movie should have an associated \"Add to Shopping Cart\" interface. The interface shows the currently number of copies for this item (during this login period), and allow the user to add more copies (or delete all copies) of this item by modifying the quantity. If the user clicks the button, the corresponding number of copies of movies should be set in his shopping cart (or delete the item if the quantity  becomes 0).  The interface should allow the user to see all the items (with their quantities) in his current shopping cart (during this login).\n</li></ul><blockquote>\n<blockquote>\n<p>\nAll pages after login should have a \"Checkout\" button. If the user clicks this button, there is a \"Shopping cart\" page that displays the movies in the shopping cart.  If the user chooses to proceed to check out, the next page \"Ask for Customer Information\" should ask the user to provide a credit number, expiration date, and first name and last name of the credit card holder.\n</p>\n</blockquote>\n</blockquote>\n<ul><li><strong> </strong><em>Checkout</em><strong>:</strong>  The transaction succeeds only if the user can provide the first name, a last name,a credit card with an expiration date, which match a record <strong>in the creditcards table (not those  in the customers table)</strong>.  If succeeded, the transaction should be recorded in the system (in the \"sales\" table) and a confirmation page should be displayed.   <br />\n</li></ul><ul><li><strong>Performance requirements</strong>: You can decide whether you want to do caching on the Web server for earlier query results.\n</li></ul><p>\nWe are not specifying all the details of the interfaces. You are  encouraged to use your imagination to enhance the functionalities.  We highly recommend you implement the above using <strong>JSP and/or Java servlets</strong> at the server side. You can use any type of client-side technologies  to enhance the functionality of your website (e.g., Javascript, style sheets, etc). Regardless of the client-side technology, you will most likely make extensive use of HTML.\n</p>\n<hr />\n<p>\n<span id=\"StepByStep\"></span>\n</p>\n<h2 id=\"StepbyStep\">Step by Step</h2>\n<p>\nHere are the recommended steps you can follow to accomplish for this project:\n</p>\n<ol><li>Setup the Tomcat Programming Environment;\n</li><li>Using the Java Servlet examples above, make a sample Java servlet program work in your environment. The  program should be able to talk to your database server using JDBC;\n</li><li>Implement the \"Login\" Page;\n</li><li>Implement the \"Search\" Page;\n</li><li>Implement the \"Movie list\" page, including the \"Sorting\" and \"Prev/Next\" features;\n</li><li>Implement the \"Single Movie\" page;\n</li><li>Implement the \"Single Star\" page;\n</li><li>Implement the \"Browsing by movie genre\" page;\n</li><li>Implement the \"Browsing by movie title\" page;\n</li><li>Add a \"Add to Shopping Cart\" button to each movie on all pages;\n</li><li>Add a \"Checkout\" button to all pages;\n</li><li>Implement the page to do checkout.<br />\n</li></ol><hr />\n<p>\n<span id=\"BackendAPI\"></span>\n</p>\n<h2 id=\"Frontend-BackendSeparation\">Frontend-Backend Separation</h2>\n<p>\nAn \"old\" way to develop Web sites is to use Java Servlet or JSP to generate HTML pages.  This approach is becoming out of date and no longer considered a good practice. In project 2, we suggest you separate the frontend and backend. The frontend fetches the data by sending HTTP requests to the backend and then displays the returned data. The Java Servlet backend only provides API in a JSON format to the frontend. The frontend needs to be written in HTML, CSS, and JS files. This approach is not required.\n</p>\n<p>\nHere's an example <a class=\"ext-link\" href=\"https://github.com/UCI-Chenli-teaching/project2-api-example\"><span class=\"icon\">\u200b</span>project2-api-example</a> that uses this approach to show a list of stars, similar to the Tomcat Test example we provided in project 1.\n</p>\n<hr />\n<p>\n<span id=\"Maven\"></span>\n</p>\n<h2 id=\"Maven\">Maven</h2>\n<p>\nMaven is a tool to manage project dependencies and automate the build process. \n</p>\n<p>\nMaven is built in with Eclipse. But you also need to install maven on both on your development machine and AWS.\n</p>\n<p>\nTo install Maven:\n</p>\n<ul><li>Windows: follow <a class=\"ext-link\" href=\"https://www.google.com/search?q=install+maven+on+windows&amp;oq=install+maven+on+windows&amp;aqs=chrome..69i57j0l5.3082j0j4&amp;sourceid=chrome&amp;ie=UTF-8\"><span class=\"icon\">\u200b</span>this tutorial</a>\n</li><li>Mac: Run \"brew install maven\"\n</li><li>Ubuntu: Run \"apt-get install maven\"\n</li></ul><ol><li>You should have already created a \"Dynamic Web Project\" under Eclipse;\n</li><li>Right click the project -&gt; \"Configure\" -&gt; \"Convert to Maven Project\";\n</li><li>\"pom.xml\" is the configuration file used by maven to build your project. Right click the file \"pom.xml\" and open it with a text editor. Make the following changes:\n</li></ol><p>\nBefore \"&lt;build&gt;\", add the following code block:\n</p>\n<pre class=\"wiki\">  &lt;dependencies&gt;\n    &lt;dependency&gt;\n    \t  &lt;groupId&gt;mysql&lt;/groupId&gt;\n      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n      &lt;version&gt;6.0.6&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n      &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n      &lt;version&gt;4.0.0&lt;/version&gt;\n      &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n</pre><p>\nInside \"&lt;build&gt;&lt;/build&gt;\", add the following line: \n</p>\n<pre class=\"wiki\">&lt;finalName&gt;your-project-name&lt;/finalName&gt;\n</pre><p>\nNote that \"your-project-name\" must be the same with the name of the project in Eclipse.\n</p>\n<ol start=\"4\"><li>After modifying the pom.xml, you can use maven to easily build the project. In terminal, go to your project folder and type \"mvn clean\" and then \"mvn package\", you \"war\" file will appear in the \"target\" folder.\n</li></ol><hr />\n<p>\n<span id=\"FormExample\"></span>\n</p>\n<h2 id=\"Formexample\">Form example</h2>\n<p>\nDownload and deploy this <a class=\"missing attachment\">TomcatForm.war</a>                    file to get familiar with HTML forms.  Click the link <a class=\"ext-link\" href=\"http://localhost:8080/TomcatForm\"><span class=\"icon\">\u200b</span>http://localhost:8080/TomcatForm</a>                    and click the \"Submit Order\" button.  It will take the value in the \"Last Name\" box to query a backend credit card table to retrieve records with that last name.\n</p>\n<hr />\n<p>\n<span id=\"ServletSession\"></span>\n</p>\n<h2 id=\"Servletsessionexamples\">Servlet session examples</h2>\n<p>\nInstall the <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/Session.war\" title=\"Attachment 'Session.war' in cs122b-2018-winter-project2\">Session.war</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/Session.war\" title=\"Download\">\u200b</a> and test the following requests:\n</p>\n<ul><li><a class=\"ext-link\" href=\"http://localhost:8080/Session/servlet/ShowSession?myname=Michael\"><span class=\"icon\">\u200b</span>http://localhost:8080/Session/servlet/ShowSession?myname=Michael</a> <br />\n</li><li><a class=\"ext-link\" href=\"http://localhost:8080/Session/servlet/ShowItems?newItem=DVD\"><span class=\"icon\">\u200b</span>http://localhost:8080/Session/servlet/ShowItems?newItem=DVD</a> <br />\n</li></ul><p>\nHere are the two java programs: <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/ShowSession.java\" title=\"Attachment 'ShowSession.java' in cs122b-2018-winter-project2\">ShowSession.java</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/ShowSession.java\" title=\"Download\">\u200b</a> and <a class=\"attachment\" href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/ShowItems.java\" title=\"Attachment 'ShowItems.java' in cs122b-2018-winter-project2\">ShowItems.java</a><a class=\"trac-rawlink\" href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/ShowItems.java\" title=\"Download\">\u200b</a>.\n</p>\n<hr />\n<p>\n<span id=\"DeploymentOnAWS\"></span>\n</p>\n<h2 id=\"DeploymentOnAWSandSubmissions\">Deployment On AWS and Submissions</h2>\n<p>\nUse Github for your project 2 code and deploy on AWS, similar to what you have done in project 1.\n</p>\n<hr />\n<p>\n<span id=\"Grading\"></span>\n</p>\n<h2 id=\"DemonstrationandGradingCriteria\">Demonstration and Grading Criteria</h2>\n<p>\n<strong>You are required to demonstrate  this project</strong>. Create a running system from your ZIP file\u2013quickly. Show the correctness, completeness, functionality and performance of your database during your demonstration by using the employee interface developed here. Your task is to convince us <strong>(in 15 minutes)</strong> that your work is correctly and completely carried out and the course project is ready to move to phase 3. During the demo, we will grade your project based on the following criteria:\n</p>\n<ul><li><strong>Functionality: </strong> How the system is working, whether it fulfills all the project requirements.\n</li><li><strong>Design and Performance: </strong> You should be considerate in designing the server to make it efficient.  For instance, you are welcome to implement the cache functionality to reduce the access to the database server (optional). Moreover, you should not send a query to the server to retrieve results not relevant to the current query or future queries. Your Web server is allowed to use a \"LIMIT OFFSET\" clause to talk to the database server to retrieve related records for each query.\n</li><li><strong>Error handling: </strong> When an exception occurs, the system shouldn't show it to the user. It should give \"appropriate\" error messages to the user in every unexpectable condition and provide information  about what she needs to do next. The system should never terminate.  When a system failure such as loss of connectivity occurs, it should  recover  itself. In that case, it should reconnect and the user shouldn't loose his/her information such as the items in his/her shopping cart.\n</li><li><strong>User interface: </strong> Whether it is user friendly enough and it provides a good interface which does not confuse the users. The UI counts for 10% of the total project grade.\n</li></ul><p>\nYou could refer to this <a class=\"ext-link\" href=\"https://docs.google.com/spreadsheets/d/1oQLvvxpBaohmViu7h06F4KeEgL0vA3XnqnbHRwB_w1s/edit#gid=1194826889\"><span class=\"icon\">\u200b</span>checklist</a> for detailed criteria.\n</p>\n<hr />\n<h2 id=\"Ifyouchoseadifferentdomain\">If you chose a different domain</h2>\n<p>\nYou may design your own flow of interfaces that is suitable for your application. However, your application must cover the functionalities mentioned above, including login, conditional search, browsing, selection, sorting, navigation between pages, and error handling. If your domain doesn't require a shopping cart and checkout, come up with two features that are comparable.  You are required to draw your application workflow (similar to the Fabflix diagram above) and present it during the demo session. It is your responsibility to make sure that your design and implementation meet all the requirements. If you are not sure about it, make sure to post it on Piazza or come to office hours to discuss.  \n</p>\n</div>\n          \n          \n        \n        \n      </div>\n      \n    <div id=\"attachments\">\n        <h3 class=\"foldable\">Attachments <span class=\"trac-count\">(6)</span></h3>\n        <div>\n          <ul>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/design-diagram.jpg\" title=\"View attachment\">design-diagram.jpg</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/design-diagram.jpg\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"51484 bytes\">50.3 KB</span>) -\n      added by <em>qiushi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-28T23%3A20%3A02-08%3A00&amp;precision=second\" title=\"See timeline at Jan 28, 2018 11:20:02 PM\">21 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/Session.war\" title=\"View attachment\">Session.war</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/Session.war\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"97434 bytes\">95.2 KB</span>) -\n      added by <em>qiushi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-28T23%3A21%3A25-08%3A00&amp;precision=second\" title=\"See timeline at Jan 28, 2018 11:21:25 PM\">21 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/ShowSession.java\" title=\"View attachment\">ShowSession.java</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/ShowSession.java\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"2462 bytes\">2.4 KB</span>) -\n      added by <em>qiushi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-28T23%3A22%3A36-08%3A00&amp;precision=second\" title=\"See timeline at Jan 28, 2018 11:22:36 PM\">21 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/ShowItems.java\" title=\"View attachment\">ShowItems.java</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/ShowItems.java\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"1847 bytes\">1.8 KB</span>) -\n      added by <em>qiushi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-28T23%3A22%3A44-08%3A00&amp;precision=second\" title=\"See timeline at Jan 28, 2018 11:22:44 PM\">21 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/jspTest.war\" title=\"View attachment\">jspTest.war</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/jspTest.war\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"523904 bytes\">511.6 KB</span>) -\n      added by <em>qiushi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-28T23%3A23%3A25-08%3A00&amp;precision=second\" title=\"See timeline at Jan 28, 2018 11:23:25 PM\">21 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs122b-2018-winter-project2/TomcatForm.war\" title=\"View attachment\">TomcatForm.war</a><a href=\"/wiki/public/raw-attachment/wiki/cs122b-2018-winter-project2/TomcatForm.war\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"619398 bytes\">604.9 KB</span>) -\n      added by <em>qiushi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2018-01-29T10%3A52%3A38-08%3A00&amp;precision=second\" title=\"See timeline at Jan 29, 2018 10:52:38 AM\">21 months ago</a>.\n              </li>\n          </ul>\n          <p>\n            Download all attachments as: <a rel=\"nofollow\" href=\"/wiki/public/zip-attachment/wiki/cs122b-2018-winter-project2/\">.zip</a>\n          </p>\n        </div>\n    </div>\n\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"last first\">\n          <a rel=\"nofollow\" href=\"/wiki/public/wiki/cs122b-2018-winter-project2?version=20&amp;format=txt\">Plain Text</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>", "encoding": "utf-8"}