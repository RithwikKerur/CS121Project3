{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222-2019-fall-project1-create-project?version=3&format=txt", "content": "\r\n=== Deploy the codebase ===\r\n\r\n * '''If you are developing in CLion'''[[BR]]\r\n\r\n 1. Select \"Check out from Version Control\", and then select \"git\"\r\n[[Image(wiki:cs222-2019-fall-project1-create-project:checkout.png, 600px)]]\r\n 2. Copy paste your Github repo address\r\n[[Image(wiki:cs222-2019-fall-project1-create-project:clone-repo.png, 600px)]]\r\n\r\n 3. Clone the repo and open it with CLion, your workspace should be configured automatically. Your directory should look like this:\r\n[[Image(wiki:cs222-2019-fall-project1-create-project:project1-directory.png, 600px)]]\r\n\r\n 4. On the top right, you may select to run executables. They are configured with the CMakeLists.txt. There are total 13 tests, 2 libraries (PFM, RBFM), and 1 script (clean-all). Select one test and run it.\r\n[[Image(wiki:cs222-2019-fall-project1-create-project:executables.png, 600px)]]\r\n \r\n  After you confirm that all test cases work properly, you can use the command-line tool to compile and test your code. In the end, the assistants will use the automated test script to test your code.\r\n  \r\n * '''If you are not using CLion'''\u00a0[[BR]]\r\n\r\n  You can still use `make` to do it . just navigate to `rbf` folder and do `make clean` and `make`, will build your executables. Detailed instructions are followed:\r\n\r\n\r\n  1. Read the readme.txt [[BR]]\r\n\r\n  2. Go to the codebase, and modify the CODEROOT in makefile.inc properly (you may skip it initially, but only modify it when the rest steps do not work).\u00a0[[BR]]\r\n\r\n  3. Go to folder \"rbf\", and type in:\r\n\r\n  4. make clean[[BR]]\r\n\r\n  5. make[[BR]]\r\n\r\n  6. ./rbftest1[[BR]]\r\n\r\n  You will be able to see the output.\r\n", "encoding": "utf-8"}