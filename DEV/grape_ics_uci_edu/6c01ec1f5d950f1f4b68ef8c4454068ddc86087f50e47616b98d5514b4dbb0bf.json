{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-spring-project4?action=diff&version=1", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs122b-2017-spring-project4 (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs122b-2017-spring-project4?action=history\" title=\"Page history\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs122b-2017-spring-project4?action=diff&amp;version=2\" title=\"Version 2\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span class=\"missing\">&larr; Previous Change</span></li><li><a href=\"/wiki/public/wiki/cs122b-2017-spring-project4?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs122b-2017-spring-project4?action=diff&amp;version=2\" title=\"Version 2\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project4?version=0\">Initial Version</a> and\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project4?version=1\">Version 1</a> of\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project4\">cs122b-2017-spring-project4</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs122b-2017-spring-project4?version=1\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"29eb7fc62bedccf90b2efb99\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"1\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"0\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            May 12, 2017 5:10:08 PM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2017-05-12T17%3A10%3A08-07%3A00&amp;precision=second\" title=\"See timeline at May 12, 2017 5:10:08 PM\">2 years</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          hao.chen\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project4?version=1\">cs122b-2017-spring-project4</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version currently edited\">\n                    <a href=\"#L1\">\n                      v1</a>\n                  </th>\n                  <th title=\"Version 1\">\n                    <a href=\"/wiki/public/wiki/cs122b-2017-spring-project4?version=1#L1\">\n                      v1</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>1</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>2</th><td class=\"r\"><ins>[[PageOutline]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>3</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>4</th><td class=\"r\"><ins>= CS122B Project 4 =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>5</th><td class=\"r\"><ins>'''Due: May 29th, 2017, Monday, 11:45 pm Submit on EEE.'''[[BR]] Notice that we use 1 day after the official deadline as the submission cut-off time on EEE to allow you to use the 24-hour grace period if you chose so. After that, EEE will no longer accept submissions.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>6</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>7</th><td class=\"r\"><ins>= Tasks =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>8</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>9</th><td class=\"r\"><ins>&nbsp;1. [#AJAX Improving the GUI by using AJAX]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>10</th><td class=\"r\"><ins>&nbsp;2. [#Android&nbsp; Developing an Android Application for Fabflix]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>11</th><td class=\"r\"><ins>&nbsp;3. [#UDF Fuzzy Searching Using User Defined Functions]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>12</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>13</th><td class=\"r\"><ins>----</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>14</th><td class=\"r\"><ins>[[Span(id=AJAX)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>15</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>16</th><td class=\"r\"><ins>== Task 1: Improving the GUI by using AJAX ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>17</th><td class=\"r\"><ins>Consider our Project 2, in which we implemented two functionalities: search and movie list add to the shopping cart. A user had to click on a search button after typing some keywords in order to see the search results. Also, on each movie list page, a user had to click on a movie in order to see its details; also, adding to the shopping cart required us to change/refresh the page to see if the cart had been updated.&nbsp; We will improve these features with AJAX.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>18</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>19</th><td class=\"r\"><ins>&nbsp;* '''Autocompletion Search:''' where you get search results while you type. Implement a search interface in your project with a single input box. When a user types in keywords character by character, your browser should send a query to the backend, which tokenizes the string into keywords. The last keyword should be treated as a prefix condition. Use MySQL full-text indexes to find movies with a '''title''' matching ALL these keywords (i.e., using the \"AND semantics\"). For example, the following is an (old) snapshot of the Netflix interface that supports autocompletion on '''movie titles'''. The user has typed in the keywords \"'''`good u`'''\", and the system found movies with titles that have the keyword \"'''`good`'''\" and a keyword with \"'''`u`'''\" as a prefix, such as \"'''`The Good, The Bad and the Ugly`'''\". We want such a feature on our web site!</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>20</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>21</th><td class=\"r\"><ins>&nbsp; [[Image(wiki:cs122b-2017-winter-project4:netflix.jpg)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>22</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>23</th><td class=\"r\"><ins>&nbsp;* '''Auto popup window for each movie:''' On each page with a list of movies returned from a search query in project 2, implement the following feature on each returned movie of a search query. For each movie on the list, when the user hovers the mouse over the title of the movie, there will be a small window that shows the movie details, such as its banner, stars, release year and add to shopping cart button. To implement this feature, you need to implement a separate servlet that accepts a movie ID as the input, and replies with the required details in an HTML format. At the client side, you should place this HTML in the appropriate DIV tags and display it to the user. A similar example is GMAIL: when you hover your mouse over one user on your contact list, GMAIL shows you details of this user, such as his/her picture, email address, name, etc. We want such a feature on our web site!</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>24</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>25</th><td class=\"r\"><ins>&nbsp; [[Image(wiki:cs122b-2017-winter-project4:gmail.png)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>26</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>27</th><td class=\"r\"><ins>[[Span(id=AjaxExample)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>28</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>29</th><td class=\"r\"><ins>As a simple Ajax example, we have provided a Java-Servlet-based server program in this [attachment:AjaxTest.war&nbsp; Ajax Example]. Deploy the war file to your Tomcat server. Point your browser to the link http://localhost:8080/AjaxTest/order.html. The example uses the \"onChange\" javascript event to trigger an Ajax communication. Type in anything in the \"Item Name\" input box, and move the cursor to \"Time\" input box, which should show the current time. Here is a [http://www.w3schools.com/TAGS/ref_eventattributes.asp complete list of Javascript events] supported by most browsers. Take a look at [http://www.w3schools.com/js/js_htmldom_events.asp this page] to learn more about how to use such events. (This example is based on the following [http://www.tizag.com/ajaxTutorial/index.php link].)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>30</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>31</th><td class=\"r\"><ins>----</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>32</th><td class=\"r\"><ins>[[Span(id=Android)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>33</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>34</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>35</th><td class=\"r\"><ins>== Task 2:&nbsp; Developing an Android App for Fabflix ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>36</th><td class=\"r\"><ins>In this task you will implement an Android app as a new frontend for Fabflix.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins>'''Steps:'''</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins>The following guidelines are based on this [http://developer.android.com/training/basics/firstapp/index.html Android programming tutorial].</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins>'''Step 1''': [http://developer.android.com/sdk/index.html Download] Android Studio IDE.&nbsp; Depending on the network speed, this step may take a while (e.g., 10-20 minutes).</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins>'''Step 2''': Download the provided [attachment:wiki:cs122b-2017-winter-project4:FabflixMobile.zip sample Android app] and unzip it to get the folder of \"!FabflixMobile\".</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>46</th><td class=\"r\"><ins>'''Step 3''': Install the downloaded Android Studio IDE.&nbsp; Once you see a page of \"Welcome to Android Studio,\" use the option \"Open an existing Android Studio project\" and specify the unzipped \"!FabflixMobile\" app.&nbsp; Ignore the \"Android SDK Sync\" warning message.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>47</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>48</th><td class=\"r\"><ins>'''Step 4''': When opening the app, if you see an \"Install missing platform(s) and sync project,\" click the link to do the installation.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins>'''Step 5''': Follow the instructions on the page [http://developer.android.com/training/basics/firstapp/running-app.html running an app] to install an emulator.&nbsp; In particular, in the IDE, click \"Tools &gt; Android &gt; AVD Manager\", select a model (e.g., \"Nexus 5\"), then install the corresponding emulator.&nbsp; Again, this step could be slow depending on your network speed.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>'''Step 6''': Run the !FabflixMobile app on the installed emulator. Select the project folder, and click \"Run\" in the menu. Choose the previous installed emulator as the target platform. If you see \"Unsupported method: !AndroidProject.getPluginGeneration(), you can check [http://stackoverflow.com/questions/39591531/unsupported-method-androidproject-getplugingeneration-while-running-project Unsupported method: AndroidProject.getPluginGeneration() while running project]\". The app has three activities called Red, Blue, and Green, as well as buttons for navigating between the activities, and text boxes for sending messages to other pages. The red page contains a button that sends an HTTP request, receives the response, and shows the response on the screen. </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>[[Image(wiki:cs122b-2017-winter-project4:fablixmobile.jpeg)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins>'''Step 7 (optional)''': If you have an Android phone, you can run the app directly on your phone, which is faster. You can check [http://developer.android.com/training/basics/firstapp/running-app.html running an app] on how to run applications on real phones.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>'''Step 8''': To make yourself more familiar with Android development, you can check the following tutorials.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>&nbsp;* [http://developer.android.com/training/basics/firstapp/building-ui.html Android UI]: the basics of building a user interface.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>60</th><td class=\"r\"><ins>&nbsp;* [http://developer.android.com/training/basics/firstapp/starting-activity.html activities]: how to navigate between two pages (i.e., activities).</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>62</th><td class=\"r\"><ins>'''Step 9 (main task)''': Develop a Fabflix Android app, which supports a subset of the features of the main Fabflix website. You are not allowed to use the Android !WebView. The following capabilities are required:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>63</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>64</th><td class=\"r\"><ins>&nbsp;* Login page, which should behave like the website login page, ''without'' the reCAPTCHA feature.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>65</th><td class=\"r\"><ins>&nbsp;* A search box that supports full-text search on the movie \"title\" attribute. The search results page can be as simple as a list of movie titles.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>66</th><td class=\"r\"><ins>&nbsp;* Your app should continue to work correctly (e.g., by keeping the content in those input boxes) after the following events:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>67</th><td class=\"r\"><ins>&nbsp; &nbsp;* Pressing the home and the back buttons, and</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>68</th><td class=\"r\"><ins>&nbsp; &nbsp;* Turning the screen on and off.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>69</th><td class=\"r\"><ins>* Pagination on the search result list. \"Previous\" and \"Next\" buttons are required, and the page size can be constant.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>70</th><td class=\"r\"><ins>----</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>71</th><td class=\"r\"><ins>[[Span(id=UDF)]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>72</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>73</th><td class=\"r\"><ins>== Task 3 (Optional): Fuzzy Searching Using User Defined Functions ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>74</th><td class=\"r\"><ins>Currently, when a !FabFlix&nbsp; customer is searching for a movie by its title, director or (one of)&nbsp; its stars (that is, searching via a \"key\" value), the user must spell&nbsp; that key correctly; otherwise, the desired movie will not be retrieved.&nbsp; For example, some stars' names, such as \"Schwarzenegger,\" are&nbsp; sufficiently difficult to spell that customers are likely to spell them&nbsp; incorrectly--and so perhaps believe we do not stock the Terminator&nbsp; movies when, in fact, we do!</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>75</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>76</th><td class=\"r\"><ins>To make it more likely that customers&nbsp; find the movies they desire--and thus increase our likelihood of making&nbsp; sales--the exact string matching in !FabFlix for key searches is to be replaced with a fuzzy matching, one that returns a movie whose value is close to the key's value.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>77</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>78</th><td class=\"r\"><ins>The designers have decided that using the SQL LIKE command combined with an&nbsp; Levenshtein (Edit Distance) Algorithm (LEDA) is the approach to take.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>79</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>80</th><td class=\"r\"><ins>The&nbsp; LEDA algorithm, to be implemented as a dynamic function in C or C++, is&nbsp; to be accessed using the interface SIMILARTO. SIMILARTO takes three&nbsp; parameters: the first is the key as a string, the second the string&nbsp; against which the key is being compared, the third the maximum distance&nbsp; he two strings can differ and still be considered similar to each other.&nbsp; Take the union of the results from LIKE and SIMILARTO.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>81</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>82</th><td class=\"r\"><ins>lastName LIKE '%Schwarseneger%' OR SIMILARTO(lastName, 'Schwarseneger', 2)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>83</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>84</th><td class=\"r\"><ins>Add&nbsp; the fuzzy search feature in the web application of project 2. The user&nbsp; should be able to search with either the LIKE operator or the SIMILARTO&nbsp; operator with a given edit distance.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>85</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>86</th><td class=\"r\"><ins>'''We will give you 5 points&nbsp; as extra credits for successfully implementing this feature on your AWS instance (running Ubuntu) following this [http://flamingo.ics.uci.edu/toolkit/ example].'''</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>87</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>88</th><td class=\"r\"><ins>----</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>89</th><td class=\"r\"><ins>=&nbsp; =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>90</th><td class=\"r\"><ins>= Preparing the Package for Submission =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>91</th><td class=\"r\"><ins>&nbsp;1. You are required to demonstrate this project.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>92</th><td class=\"r\"><ins>&nbsp;1. You should take the following steps to prepare your package for submission. When prepared, submit the package to EEE (i.e., one submission per team).</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>93</th><td class=\"r\"><ins>&nbsp; &nbsp;1. Create a directory, called `\"project4_[GROUP ID]\"` on your local machine. You are required to include three files in this directory: `\"fabflix.apk\"`, `\"fabflix_app_project.zip\"`, and `\"fabflix_webapp.war\"`. Follow the next three steps to create these files.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>94</th><td class=\"r\"><ins>&nbsp; &nbsp;1. Use Android Studio to build an `APK` package, named `\"fabflix.apk\"`,&nbsp; of your Fabflix Android app. Make sure to include both the source files&nbsp; and the binary files. For grading, your .apk file will be loaded into&nbsp; an emulator, and the app features will be tested. Compress the Android Studio project directory into a file called `\"fabflix_app_project.zip\"`.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>95</th><td class=\"r\"><ins>&nbsp; &nbsp;1. Create a .war file of the `fabflix`&nbsp; Tomcat webapp . This .war file must be called `\"fabflix_webapp.war\"`.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>96</th><td class=\"r\"><ins>&nbsp; &nbsp;1. Compress the `\"project4_[GROUP ID]\"` directory to a file called `\"project4_[GROUP ID].zip\"` and upload it to EEE.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>97</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>98</th><td class=\"r\"><ins>If your project does not compile/run, it will get a very low score.</ins></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}