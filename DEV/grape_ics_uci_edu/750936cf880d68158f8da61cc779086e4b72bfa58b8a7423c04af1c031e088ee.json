{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222-2019-fall-git?version=6&format=txt", "content": "\r\n== Setting up Git:\r\n\r\n 1. Each student creates a Github account, and shares his/her github username with the CS222 staff on this [https://docs.google.com/spreadsheets/d/1HAtNwwWw3GAqhmvuTKV05uCf3qFpb2KW2WrwQGxiXlc/edit#gid=0 GitHub Username Sheet].\r\n 2. Form a team on this [https://docs.google.com/spreadsheets/d/1HAtNwwWw3GAqhmvuTKV05uCf3qFpb2KW2WrwQGxiXlc/edit#gid=761552949 Team Signup Sheet], you need to form a team even if you are solo \r\n 2. Accepts the Assignment from GitHub Classroom [https://classroom.github.com/g/. CS222/122C Project]\r\n 3. Type in the Team ID with this exactly format `team-#` where # is your team number on the Team Signup Sheet\r\n[[Image(wiki:cs222-2019-fall-git:accept-assignment.png, 600px)]]\r\n 4. The second team member (if exists), please select the correct team to join when you accepting the assignment. Note that you cannot change the team after the selection, so please double check.\r\n[[Image(wiki:cs222-2019-fall-git:accept-assignment-second-member.png, 600px)]]\r\n\r\n== Initializing Git repo with our codebase:\r\n\r\n1. Install git following this guidance [https://git-scm.com/book/en/v2/Getting-Started-Installing-Git here].\r\n2. then clone the codebase repo:\r\n{{{\r\nshell> mkdir mycs222-projects\r\nshell> cd mycs222-projects\r\nshell> git clone https://github.com/UCI-Chenli-teaching/cs222-fall19-team-99.git    - Clone the repository that GitHub Classroom just created for you, with the team # changed to yours\r\n\r\n}}}\r\n\r\nNow you will see something like this:\r\n\r\n{{{\r\ngit clone https://github.com/UCI-Chenli-teaching/cs222-fall19-team-99.git\r\nCloning into 'cs222-fall19-team-99'...\r\nremote: Enumerating objects: 29, done.\r\nremote: Counting objects: 100% (29/29), done.\r\nremote: Compressing objects: 100% (29/29), done.\r\nremote: Total 29 (delta 10), reused 0 (delta 0), pack-reused 0\r\nUnpacking objects: 100% (29/29), done.\r\n}}}\r\n\r\nNow it means your remote \"cs222-fall19-team-99\" repository has all the code in our codebase, and it's ready for you and your partner to work on the project based on that now!\r\n\r\n== Using Git to collaborate on this project:\r\n\r\nSuppose the CS222 team 99 contains 2 members (Bob and Alice). We will see how they use Git to collaborate in the CS222 class.\r\n\r\n 1. Bob wants to start on project 1. He creates a new branch from the master branch for this task.\r\n\r\n{{{\r\nshell> git branch            - This command is used to check which branch you are on and what branches are there in your repository. master should be highlighted as you are on master branch. \r\nshell> git checkout -b bob-feature1            - This command creates a new branch and copies all the code from the previous (i.e. master in our case) branch into the new branch. \r\nshell> mkdir project1 \r\nshell> cd project1 \r\nshell> echo \"#include <iostream> using namespace std; int main() { cout << \"Hello, World!\"; return 0; }\" > hello.cpp \r\nshell> git add hello.cpp \r\nshell> git commit -m \"added hello world\"            - commits changes locally to the bob-feature1 branch \r\nshell> git push --set-upstream origin bob-feature1            - creates a remote tracking branch for the local bob-feature1 branch\r\n}}}\r\n\r\n 2. Alice wants to contribute too. First Bob needs to invite Alice as a contributor to this repository on the Github web site (by following steps given [https://help.github.com/articles/inviting-collaborators-to-a-personal-repository/ here]).  Then she can see the repository. She does the following:\r\n\r\n{{{\r\nshell> mkdir gitclones \r\nshell> cd gitclones \r\nshell> git clone https://<Alice's username>@github.com/UCI-Chenli-teaching/cs222-fall19-team-99.git             - brings the repository onto her local machine \r\nshell> cd cs222-fall19-team-99 \r\nshell> git checkout bob-feature1             - She is initially on master branch. This statement changes her branch bob-feature1 branch. She can now see project 1 code and does the required changes. \r\nshell> cd project1\r\nMODIFY THE FILE hello.cpp\r\nshell> git add hello.cpp \r\nshell> git status\r\nshell> git config  user.email \"alince@alice.com\"\r\nshell> git config  user.name \"Alice Smith\"\r\nshell> git commit -m \"minor changes\" \r\nshell> git push             - pushes the commit to bob-feature1 remote branch\r\n}}}\r\n 3. Bob wants to continue coding. Before proceeding to modify any files, he needs to do 'git pull' so that the local branch pulls the latest code from the remote branch.  In particular, Bob does:\r\n\r\n{{{\r\nshell> git branch         - to see which branch he is on. He sees he is on bob-feature1 branch. \r\nshell> git pull             - pulls the latest code. Bob now sees the changes that Alice pushed.\r\n}}}\r\n\r\n4. Bob and Alice can also use github to create a pull request from the `bob-feature1` branch to the `master` branch to do code reviews. Check this [https://www.youtube.com/watch?v=oFYyTZwMyAg video] to learn this process.\r\n\r\nRefer to following tutorials for more information:\r\n * https://try.github.io\r\n * https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners", "encoding": "ascii"}