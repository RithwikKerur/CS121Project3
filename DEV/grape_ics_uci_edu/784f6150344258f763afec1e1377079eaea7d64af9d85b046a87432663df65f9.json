{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222-2019-fall-project1?action=diff&version=3", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs222-2019-fall-project1 (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs222-2019-fall-project1?action=history\" title=\"Page history\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs222-2019-fall-project1?action=diff&amp;version=4\" title=\"Version 4\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs222-2019-fall-project1?action=diff&amp;version=2\" title=\"Version 2\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs222-2019-fall-project1?action=diff&amp;version=2\" title=\"Version 2\">Previous Change</a></span></li><li><a href=\"/wiki/public/wiki/cs222-2019-fall-project1?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs222-2019-fall-project1?action=diff&amp;version=4\" title=\"Version 4\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=2\">Version 2</a> and\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=3\">Version 3</a> of\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project1\">cs222-2019-fall-project1</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs222-2019-fall-project1?version=3\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"b9e3fbbdd5292a20318f2ad7\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"3\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"2\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            Sep 25, 2019 5:29:30 PM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-09-25T17%3A29%3A30-07%3A00&amp;precision=second\" title=\"See timeline at Sep 25, 2019 5:29:30 PM\">3 weeks</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          yicongh1\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=3\">cs222-2019-fall-project1</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version 2\">\n                    <a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=2#L50\">\n                      v2</a>\n                  </th>\n                  <th title=\"Version 3\">\n                    <a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=3#L50\">\n                      v3</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>50</th><th>50</th><td class=\"l\"><span>&nbsp;* Check out the codebase from https://github.com/UCI-Chenli-teaching/cs222-fall19</span></td>\n                  </tr><tr>\n                          <th>51</th><th>51</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* Follow the '''[https://grape.ics.uci.edu/wiki/public/wiki/cs222-2019-fall-project1-create-project Guide to Deploy the codebase]''' to deploy project1 in <del>Eclipse</del> and run the test cases.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>52</th><td class=\"r\"><span>&nbsp;* Follow the '''[https://grape.ics.uci.edu/wiki/public/wiki/cs222-2019-fall-project1-create-project Guide to Deploy the codebase]''' to deploy project1 in <ins>CLion</ins> and run the test cases.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>53</th><th>53</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>54</th><th>54</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=2#L93\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=3#L93\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>93</th><th>93</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>94</th><th>94</th><td class=\"l\"><span>== Q &amp; A ==</span></td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>95</th><th>\u00a0</th><td class=\"l\"><del>&nbsp;* '''Q1''': What is the purpose of the make file if the project runs in eclipse?\u00a0[[BR]]'''A''': Eclipse is able to generate a makefile for your project automatically. If you don't specify any makefile to Eclipse, by default it will generate a makefile and use it to build the project. You can find that makefile under \"Debug/\" folder. We have provided a makefile for students who don't use Eclipse to build their projects. Eclipse users, however, can also configure things to let Eclipse build projects by following the makefile in our codebase. Please read this post for detailed instructions:\u00a0http://help.eclipse.org/indigo/index.jsp?topic=/org.eclipse.cdt.doc.user/concepts/cdt_c_makefile.htm. Note that it's OK if you don't build your project in Eclipse by using the makefile provided in our codebase, but you have to make sure that we can build your submitted project in command line by using 'make'. If you don't add any new source files to the project, you shouldn't need many modifications to our makefile.\u00a0[http://www.gnu.org/software/make/manual/make.html Here]\u00a0is a tutorial for the 'make' tool. You can refer to it if you do decide to change the makefile.</del></td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>96</th><th>95</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>97</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>2</del>''': Consider a case where Page 3 of the file is full but Page 2 is partially filled and the user wants to append data? Now, if the size of the data that he or she wants to write is more than the available space on Page 2, what is the expected action to be taken? Do we just fit in whatever data we can and truncate the rest, OR completely disallow the user from making such a write?\u00a0[[BR]]'''A''':\u00a0!AppendPage() always happens to the end of the file, so this scenario can't arise. The number of file bytes affected by each page operation is always PAGE_SIZE. The paged file system layer always deals in pages -- nothing more and nothing less.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>&nbsp;* '''Q<ins>1</ins>''': Consider a case where Page 3 of the file is full but Page 2 is partially filled and the user wants to append data? Now, if the size of the data that he or she wants to write is more than the available space on Page 2, what is the expected action to be taken? Do we just fit in whatever data we can and truncate the rest, OR completely disallow the user from making such a write?\u00a0[[BR]]'''A''':\u00a0!AppendPage() always happens to the end of the file, so this scenario can't arise. The number of file bytes affected by each page operation is always PAGE_SIZE. The paged file system layer always deals in pages -- nothing more and nothing less.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>98</th><th>97</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>99</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>3</del>''': Is it fine if I do the file handling in C++ using the binary mode of read/write?\u00a0[[BR]]'''A''': You should indeed use the binary mode!</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span>&nbsp;* '''Q<ins>2</ins>''': Is it fine if I do the file handling in C++ using the binary mode of read/write?\u00a0[[BR]]'''A''': You should indeed use the binary mode!</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>100</th><th>99</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>101</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>4</del>''': Why is the access specifier of the constructor and destructor of the class\u00a0!PagedFileManager\u00a0set to be \"protected\"?\u00a0[[BR]]'''A''': The\u00a0!PagedFileManager\u00a0is a singleton class, which means only ONE instance of\u00a0!PagedFileManager\u00a0is allowed. You cannot instantiate the class by calling its constructor. Instead you should get an instance of the class by calling the Instance() function of\u00a0!PagedFileManager. The Instance() function has been implemented for you in pfm.cc. The same applies to the\u00a0!RecordBasedFileManager.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>&nbsp;* '''Q<ins>3</ins>''': Why is the access specifier of the constructor and destructor of the class\u00a0!PagedFileManager\u00a0set to be \"protected\"?\u00a0[[BR]]'''A''': The\u00a0!PagedFileManager\u00a0is a singleton class, which means only ONE instance of\u00a0!PagedFileManager\u00a0is allowed. You cannot instantiate the class by calling its constructor. Instead you should get an instance of the class by calling the Instance() function of\u00a0!PagedFileManager. The Instance() function has been implemented for you in pfm.cc. The same applies to the\u00a0!RecordBasedFileManager.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>102</th><th>101</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>103</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>5</del>''': As for pages, if I understand correctly, the !Read/Write/AppendPage\u00a0functions are operating on these files, and if you want to write the 3rd page (page number: 2) of a file, you'd seek 8K bytes into the file and start writing the data. Is this correct, or am I misunderstanding the concept of pages?[[BR]]'''A''':</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>&nbsp;* '''Q<ins>4</ins>''': As for pages, if I understand correctly, the !Read/Write/AppendPage\u00a0functions are operating on these files, and if you want to write the 3rd page (page number: 2) of a file, you'd seek 8K bytes into the file and start writing the data. Is this correct, or am I misunderstanding the concept of pages?[[BR]]'''A''':</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>104</th><th>103</th><td class=\"l\"><span>&nbsp; &nbsp;* Read reads a page that has to already exist[[BR]]</span></td>\n                  </tr><tr>\n                          <th>105</th><th>104</th><td class=\"l\"><span>&nbsp; &nbsp;* Append adds a new page at the end of the file[[BR]]</span></td>\n                  </tr><tr>\n                          <th>106</th><th>105</th><td class=\"l\"><span>&nbsp; &nbsp;* Write overwrites a page that has to already exist[[BR]]To write to the 3rd page of a file, the file should already have at least 2 pages (page numbers: 0,1) that contain valid data. Then you can either append data to 3rd page if it doesn't exist, or overwrite the 3rd page if it already exists. Please do not leave \"holes\" in files by writing past EOF. We won't allow the case of appending garbage pages to happen.</span></td>\n                  </tr><tr>\n                          <th>107</th><th>106</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>108</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>6</del>''': Since I need to change the path of codebase in makefile.inc to test the project, do I need to change it back when I submit the zip file?\u00a0[[BR]]'''A''': No, you don't need to change back, but you need to instead make sure the path is\u00a0'''relative'''\u00a0so that the test.sh script will also work on another machine.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>107</th><td class=\"r\"><span>&nbsp;* '''Q<ins>5</ins>''': Since I need to change the path of codebase in makefile.inc to test the project, do I need to change it back when I submit the zip file?\u00a0[[BR]]'''A''': No, you don't need to change back, but you need to instead make sure the path is\u00a0'''relative'''\u00a0so that the test.sh script will also work on another machine.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>109</th><th>108</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>110</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>7</del>''': When inserting a tuple, do we only have to consider insertion of the new tuple at the end of the last page? Or do we have to be able to support insertion in whatever free space may exist among all the current pages?[[BR]]'''A''': You should first try to insert the record on the last (currently existing) page. If that fails, you should then try to find the first page with sufficient space available (e.g., looking from the beginning of the file). If none exists, then (and only then) should you append a new page to hold the new tuple.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>109</th><td class=\"r\"><span>&nbsp;* '''Q<ins>6</ins>''': When inserting a tuple, do we only have to consider insertion of the new tuple at the end of the last page? Or do we have to be able to support insertion in whatever free space may exist among all the current pages?[[BR]]'''A''': You should first try to insert the record on the last (currently existing) page. If that fails, you should then try to find the first page with sufficient space available (e.g., looking from the beginning of the file). If none exists, then (and only then) should you append a new page to hold the new tuple.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>111</th><th>110</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>112</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>8</del>''': What's the data format for data being passed to insertRecord?\u00a0[[BR]]'''A''': The API format for insertRecord is as follows: Suppose you have five fields and their types are varchar(20), integer, varchar(20), real, and string. If a record is (\"Tom\", 25, \"UCIrvine\", 3.1415, 100), then the format of the record should be: [1 byte for the null-indicators for the fields: bit 00000000] [4 bytes for the length 3] [3 bytes for the string \"Tom\"] [4 bytes for the integer value 25] [4 bytes for the length 8] [8 bytes for the string \"UCIrvine\"] [4 bytes for the float value 3.1415] [4 bytes for the integer value 100]. Note that integer and real type fields do not have an associated length value in front of them; this is because each of these types always occupies 4 bytes.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>111</th><td class=\"r\"><span>&nbsp;* '''Q<ins>7</ins>''': What's the data format for data being passed to insertRecord?\u00a0[[BR]]'''A''': The API format for insertRecord is as follows: Suppose you have five fields and their types are varchar(20), integer, varchar(20), real, and string. If a record is (\"Tom\", 25, \"UCIrvine\", 3.1415, 100), then the format of the record should be: [1 byte for the null-indicators for the fields: bit 00000000] [4 bytes for the length 3] [3 bytes for the string \"Tom\"] [4 bytes for the integer value 25] [4 bytes for the length 8] [8 bytes for the string \"UCIrvine\"] [4 bytes for the float value 3.1415] [4 bytes for the integer value 100]. Note that integer and real type fields do not have an associated length value in front of them; this is because each of these types always occupies 4 bytes.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>113</th><th>112</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>114</th><th>113</th><td class=\"l\"><span>&nbsp; The first part of the input contains\u00a0''n''\u00a0bytes for passing the null information about each of the incoming record's fields. The value\u00a0''n''\u00a0can be calculated by using this formula: ceil(number of fields in a record / 8). For example, in this case, since there are 5 fields, the size of \"n\" can be calculated by ceil(5/8) = 1. If there are 20 fields, the size will be ceil(20/8) = 3. The left-most bit in the first byte corresponds to the first field. The right-most bit in the first byte corresponds to the eighth field. If there are more than eight fields, the left-most bit in the second byte corresponds to the ninth field and so on.</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=2#L118\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project1?version=3#L117\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>118</th><th>117</th><td class=\"l\"><span>&nbsp; NOTE: This API data format is just intended for passing data into the insertRecord(). This does not mean that the internal representation of your record should be the same as this format -- in fact, it almost certainly will not be! (On-page record formatting options will be covered in lecture, and your project should make good choices for what it does based on what you learn in class.)</span></td>\n                  </tr><tr>\n                          <th>119</th><th>118</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>120</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* '''Q<del>9</del>''': Can we assume that a record can fit on a page (i.e., the size of a record &lt; the predefined page size)?\u00a0[[BR]]'''A''': Yes. You can assume that a record can fit on a page.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>119</th><td class=\"r\"><span>&nbsp;* '''Q<ins>8</ins>''': Can we assume that a record can fit on a page (i.e., the size of a record &lt; the predefined page size)?\u00a0[[BR]]'''A''': Yes. You can assume that a record can fit on a page.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>121</th><th>120</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>122</th><th>121</th><td class=\"l\"><span>== Platform Q &amp; A ==</span></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}