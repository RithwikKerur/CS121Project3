{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222-2017-fall?version=64&format=txt", "content": "{{{\r\n#!div style=\"background-color:rgb(237,222,222)\"\r\n\r\n\r\n[[PageOutline]]\r\n{{{\r\n#!div style=\"background-color:rgb(237,237,222)\"\r\n= CS222/CS122C Fall 2017: Principles of Data Management =\r\n}}}\r\n== Course Personnel ==\r\n''Instructor:'' [[BR]] Chen Li[[BR]] E-Mail: chenli AT ics DOT uci DOT edu [[BR]] Office: DBH 2092 [[BR]] Office hours: Mondays 2:15 pm - 3:15 pm and Thursdays 9:45 am - 10:45 am [[BR]]\r\n\r\n''Assistant:'' [[BR]]Jamshid Esmaelnezhad [[BR]] E-mail: jesmaeln AT uci DOT edu [[BR]] Office hours: Tuesdays 2-3p, Wednesdays 1-2p, CS building (building number 302) room !#424F (or if I wasn't there, room !#424A).\r\n\r\nOnline Discussion: https://piazza.com/uci/fall2017/cs222cs122c\r\n\r\n * Please use Piazza properly.  It's a place for students to exchange ideas.  Don't post \"easy\" or \"random\" questions without much thinking.\r\n * To encourage students to actively participate in Piazza discussions and provide high-quality answers, we will select two students with the best Piazza performance. Each student will get 2% extra credits in the overall scores.\r\n\r\n== Announcements ==\r\n * The deadline to drop the course is Oct 5, Thursday, before the lecture.  After that, \"you are in\"!\r\n * For students who are still on the waiting list, please continue attending the lectures.\r\n * For all students, please notice that the first project is already online, and you are encouraged to start working on it soon.\r\n\r\n=== Syllabus (Subject to Change) ===\r\n|| '''Date''' || '''Topic''' || '''Readings''' || '''Notes''' ||\r\n|| 09/28/17, Th || DBMS Architecture || Ch. 1; Chamberlin et al 1981 || [attachment:cs222-lecture01.ppt PPT],  [attachment:setup-mysql.txt Setup MySQL] ||\r\n|| 10/03/17, Tu || Project 1, Disks and Files || Ch. 9.1-9.4; Stonebraker 1981 || [attachment:cs222-lecture02.ppt PPT] ||\r\n\r\n== Projects ==\r\nThe project is structured as a four-part, team-based (teams of one or two students), software development exercise:\r\n\r\n|| '''Project''' || '''Due Date''' || '''Topic''' || '''Teams''' || '''Proportions (50%)''' ||\r\n|| [https://grape.ics.uci.edu/wiki/public/wiki/cs222-2017-fall-project1 Project 1] || Mon, week 2, Oct. 9 || Record-Based File Manager (RBF) || Solo Project || 9% ||\r\n|| Project 2 || Mon, week 5, Oct. 30 || Relation Manager (RM) || Solo or Pair Project || 14% ||\r\n|| Project 3 || Mon, week 8, Nov. 20 || Index Manager (IX) || Solo or Pair Project || 14% ||\r\n|| Project 4 || Wed, week 10, Dec. 8 || Query Engine (QE) || Solo or Pair Project || 13% ||\r\n\r\n[https://docs.google.com/spreadsheets/d/1VD13rJ27lkpvjrBDBCTM2FUMaUWioEzvbEfTqSVz_KM/edit#gid=0 Project team sign-up sheet]\r\n\r\n== Schedule & Location ==\r\n'''Lecture''' [[BR]] Days: Tuesdays and Thursdays [[BR]] Time: 11:00-12:20p [[BR]] Location: [http://www.classrooms.uci.edu/GAC/MSTB118.html MSTB 118]\r\n\r\n----\r\n== Course Information ==\r\n=== Course Description ===\r\nThis course provides an implementor's view of database management systems. It covers fundamental principles and implementation techniques, issues, and trade-offs related to database management systems. Topics covered include storage management, buffer management, record-oriented file systems, access methods, query processing, and query optimization. This course is a must for those students wishing to explore database management as an area of research and/or who plan on taking CS223 or CS224. A significant portion of database systems research as well as industrial database and information system development deals with adapting the basic database techniques covered in this course to new advances in hardware and software technologies or to the requirements of different applications and data types. [[BR]] [[BR]]\r\n\r\n''Prerequisites:'' CS 122A \"Introduction to Data Management\" and (ICS53 - \"Principles in System Design\" or CS143A - \"Principles of Operating Systems\").  Please don't attempt this class without the required background!  Doing so has not proven to be a great idea for students historically. :-)\r\n\r\n=== Grading Breakdown ===\r\nMidterm Exam: 25% [[BR]]  Final Exam: 25% [[BR]]  Programming Projects: 50%\r\n\r\nThis mixture of grading criteria for CS222 is intended to give equal \"excelling opportunities\" to both thinkers and do-ers. It's also intended to avoid overly weighting either team-based performance or individual performance. '''This is a hands-on project class, so expect to put a significant effort into your projects.''' The exams will be comprehensive with respect to the course material and will also ping you individually with respect to project knowledge, so be sure that you and your project partner make design decisions together. The two exams will be closed-book, but you may bring an 8.5\"x11\" two-sided cheat sheet to each exam if you like.\r\n\r\nFor all the graded projects and exams, if you disagree with the grading, you can discuss with us within two weeks after they are returned. After that, all the grades will be finalized.\r\n\r\n=== Textbooks ===\r\nRequired: ''Database Management Systems'', 3rd edition, by R. Ramakrishnan and J. Gehrke, !McGraw Hill, 2003. [[BR]] Recommended: ''Readings in Database Systems'', 4th edition, by J. Hellerstein and M. Stonebraker, MIT Press, 2005. [[BR]]\r\n\r\n=== Other Readings ===\r\nThe following papers are mostly drawn from the Hellerstein and Stonebraker book or can be found via UCI's ACM Digital Library subscription (http://dl.acm.org).  You will be responsible both for the material covered in the lectures and the material covered in the readings listed in the Syllabus below. [[BR]]\r\n\r\n * Abadi, D., Madden, S., and Hachem, N. 2008. Column-stores vs. Row-stores: How Different are They Really?. ''Proc. ACM SIGMOD Intl. Conf. on Management of Data'' (Vancouver, Canada, June 2008).\r\n * Alsubaiee, S., et a., 2014. AsterixDB: a scalable, open source BDMS. Proc. VLDB Endow. 7, 14 (Oct. 2014), 1905-1916.\r\n * Chamberlin, D., et al, 1981. A history and evaluation of System R. ''Commun. ACM'' 24, 10 (Oct. 1981), 632-646.\r\n * Dean, J., and Ghemawat, S., 2004. !MapReduce: Simplified data processing on large clusters. ''Proc. 6th USENIX Symp. on Op. Sys. Design and Impl. (OSDI'04)'' (San Francisco, CA, December 2004).\r\n * !DeWitt, D. and Gray, J. 1992. Parallel database systems: The future of high performance database systems. ''Commun. ACM'' 35, 6 (June 1992), 85-98.\r\n * Fagin, R., et al, 1979. Extendible Hashing\u2014A fast access method for dynamic files. ''ACM Trans. Database Syst.'' 4, 3 (Sept. 1979), 315-344.\r\n * Graefe, G., 2011. Modern B-Tree Techniques. ''Foundations and Trends in Databases'' 3, 4 (Sept. 2011) 203-402. (Available from the UCI intranet at: http://dx.doi.org/10.1561/1900000028)\r\n * Guttman, A. 1984. R-trees: A dynamic index structure for spatial searching. ''Proc. ACM SIGMOD Intl. Conf. on Management of Data'' (Boston, Massachusetts, June 1984).\r\n * Litwin, W., 1980. Linear hashing: A new tool for file and table addressing. ''Proc. 6th Int'l. Conf. on Very Large Data Bases'', Montreal, Oct. 1980.\r\n * Nievergelt, J., Hinterberger, H., and Sevcik, K. C. 1984. The Grid File: An adaptable, symmetric multikey file structure. ''ACM Trans. Database Syst.'' 9, 1 (March 1984), 38-71. ''(optional)''\r\n * Selinger, P. G. et al, 1979. Access path selection in a relational database management system. ''Proc. ACM SIGMOD Int'l. Conf. on Management of Data'' (Boston, Massachusetts, May-June 1979).\r\n * Shapiro, L. D. 1986. Join processing in database systems with large main memories. ''ACM Trans. Database Syst.'' 11, 3 (Aug. 1986), 239-264.\r\n * Stonebraker, M. 1981. Operating system support for database management. ''Commun. ACM'' 24, 7 (July 1981), 412-418.\r\n\r\n=== Class Discussion Forum ===\r\nWe will be using Piazza for online class discussions. This system is highly catered to getting you help fast and efficiently from classmates, the Reader(s), and the instructor. Rather than emailing questions to any of us on the teaching staff, we'll ask you to post your questions on Piazza. If you have any problems or feedback for the developers, email team@piazza.com.  Please make Piazza participation (at least monitoring the activity there) a part of your regular CS122C/222 routine!\r\n\r\nYou can find our class page at: https://piazza.com/uci/fall2017/cs222cs122c\r\n\r\n=== Programming Project ===\r\nThis class is intended to teach the principles involved in DBMS implementation, so it will include a significant programming component.  The project will be aimed at giving you a sense of what goes on inside a DBMS, and what the issues and challenges are in building a system \"now\" that will be managing data of various user-defined shapes and sizes \"later\".  You will try your hand at record-based file storage, indexing, and relational runtime system programming (a.k.a. query operators).  The language for the project will be C++ - hopefully you either have C++ experience or you have Java experience and can learn C++ quickly.  Our assistant(s) will run the project, and they can provide you with additional suggestions for material to help you \"spin up\" on C++ programming, debugging, and tools in case you need to do a bit of remedial work on the side in order to tackle the project successfully.  The course has the same requirements for both graduate students and undergraduate students.\r\n\r\n=== Comprehensive Exam Option ===\r\nComputer Science graduate students wishing to satisfy the MS Comprehensive Exam requirement in Database Systems via CS222 should notify the instructor and the Student Advising Office (SAO) of this intention via e-mail before the day of the final exam. For such students, a weighted mix of your midterm and final exam performance will be used to determine your MS Comprehensive Exam grade (P or F) at the end of the course, and this grade will be reported to SAO. Students who do not pass successfully can try the exam again the next time CS 222 is offered by taking the midterm and final exams in that offering of the course; hopefully this will not be necessary for anyone. (Students who do this are advised to informally audit the next offering of the class; this is because the course emphasis and expected knowledge can vary a bit by term and by instructor, and also because you'll probably need the review to pass.)\r\n\r\n----\r\n=== Notice about Projects ===\r\n * '''Making teams:''' Project grades will be team based. Students should work on project 1 individually, but they can form teams of up to two students starting from project 2. Please let us know about your group by adding your team members' names [https://docs.google.com/spreadsheets/d/1VD13rJ27lkpvjrBDBCTM2FUMaUWioEzvbEfTqSVz_KM/edit#gid=0 here] in front of your group id (please do so even if you are alone in your group). A student can always leave his/her team during the quarter with a notice at least two weeks prior to the next project's deadline. Also, please note that it is not permitted to join a new team after splitting.\r\n * The projects are doable by individuals, which can be more challenging but rewarding.\r\n * Students are allowed to add attributes, methods, and classes, as long as the public signatures provided in the codebase are kept and implemented. We will be testing your code by calling the methods that are declared in the signatures.\r\n * Students also have the freedom to use other open-source libraries or packages (e.g., Gtest and Boost) to implement and test their code. Just please make sure that you: (1) get the okay from us before using any additional packages; (2) list such packages clearly in your project document; and (3) write your makefile correctly so that your project can still be built by calling the 'make' command.\r\n\r\n=== Project Late Policy ===\r\n * The official due date for each assignment is listed here on the wiki, and it is expected that students will turn most work in on or before that date.\r\n * We will offer a 48-hour \"grace period\" for each assignment, and will therefore accept solution submissions that are turned in within 48 hours of the due date (i.e., less than two days late).  No need to ask - this time is yours in the event that you need it for some unforeseen reason.  If you use it, your score will be deducted by 10% (out of 100%).  You are recommended NOT to use the grace period, as you will lose not only 10%, but also valuable time from the next assignment's working period for every hour that you run late.\r\n * Late assignments after the grace period will NOT be accepted, so do always aim to be on time! (Please don't even ask, as this is what the two-day grace period is intended for. :-))\r\n\r\n=== Cheating Policy ===\r\nCheating is an area where the instructor for this course has absolutely no patience or sympathy whatsoever. You are all here to learn, and cheating defeats that purpose and is unfair to your fellow students. Students will be expected to adhere to the UCI and ICS Academic Honesty policies (and should see http://www.editor.uci.edu/catalogue/appx/appx.2.htm#academic and http://www.ics.uci.edu/ugrad/policies/index.php#academic_honesty to read their details). We run a software package to search for cheating cases in projects.  Any student found to be cheating or aiding others in cheating will be academically prosecuted to the maximum extent possible \u2014 so you may fail the course with no option for a second chance. This policy will be strictly adhered to; no exceptions will be possible regardless of the impact it may have on your studies, your work plans, your visa status, or anything else. Don\u2019t cheat and you won\u2019t have issues. Just say ''no'' to cheating!\r\n\r\n=== C/C++ Resources ===\r\n * A helpful reference for C/C++ libraries: http://www.cplusplus.com/reference/\r\n * A tutorial on programming in C/C++ and guide on related resources: http://www.cprogramming.com/tutorial.html#c++tutorial\r\n * A tutorial on learning C++ for Java programmers: http://pages.cs.wisc.edu/~hasti/cs368/CppTutorial/index.html\r\n\r\n=== Midterm Exam ===\r\nTime TBD, In-class. Closed books.  You can bring an A4-sized \"cheat sheet.\"\r\n\r\n=== Final Exam ===\r\nTuesday, December 12, 2017, 10:30 a.m. - 12:30 p.m [[BR]] Closed books, Closed notes. You can bring an A4-sized \"cheat sheet.\"  The exam will cover all materials taught in this quarter, with a more emphasis on those after the midterm.\r\n\r\n}}}", "encoding": "utf-8"}