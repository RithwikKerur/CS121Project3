{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs221-2019-spring-project3?action=diff&version=1", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs221-2019-spring-project3 (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?action=history\" title=\"Page history\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?action=diff&amp;version=2\" title=\"Version 2\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span class=\"missing\">&larr; Previous Change</span></li><li><a href=\"/wiki/public/wiki/cs221-2019-spring-project3?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?action=diff&amp;version=2\" title=\"Version 2\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=0\">Initial Version</a> and\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=1\">Version 1</a> of\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project3\">cs221-2019-spring-project3</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs221-2019-spring-project3?version=1\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"8cdedf58936a5a132175cd10\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"1\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"0\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            May 2, 2019 10:13:26 AM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-05-02T10%3A13%3A26-07%3A00&amp;precision=second\" title=\"See timeline at May 2, 2019 10:13:26 AM\">5 months</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          zuozhi\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=1\">cs221-2019-spring-project3</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version currently edited\">\n                    <a href=\"#L1\">\n                      v1</a>\n                  </th>\n                  <th title=\"Version 1\">\n                    <a href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=1#L1\">\n                      v1</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>1</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>2</th><td class=\"r\"><ins>= CS221: Project 2 - II: Positional index, phrase search, compression =</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>3</th><td class=\"r\"><ins>'''Test Cases Due:&nbsp; &nbsp; &nbsp;Week 6 Fri. (May 10), Due on Github as Pull Requests'''[[BR]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>4</th><td class=\"r\"><ins>'''Review Due:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Week 7 Mon. (May 13),&nbsp; Due on Github as Pull Requests Comments'''[[BR]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>5</th><td class=\"r\"><ins>'''Final Code Due:&nbsp; &nbsp; &nbsp;Week 8, Wed. (May 22),&nbsp; Due on Github.'''[[BR]]</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>6</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>7</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>8</th><td class=\"r\"><ins>== Coding Tasks ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>9</th><td class=\"r\"><ins>1. Implement LSM-like Positional Index (insertion and merge).</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>10</th><td class=\"r\"><ins>1. Implement Phrase Search.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>11</th><td class=\"r\"><ins>1. Implement Compression.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>12</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>13</th><td class=\"r\"><ins>== Testing Tasks ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>14</th><td class=\"r\"><ins>1. Write at least 2 test cases for a task (2 points)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>15</th><td class=\"r\"><ins>1. Review the test cases of two teams (2 points)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>16</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>17</th><td class=\"r\"><ins>Total: 19 points </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>18</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>19</th><td class=\"r\"><ins>== Overview ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>20</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>21</th><td class=\"r\"><ins>In this project, you'll be implementing a disk-based positional index and the phrase search operations. Compared to the inverted index in project 2, positional index stores the positions of all occurrences of the keywords in a document. Moreover, positional index also stores the frequency information of the keywords. </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>22</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>23</th><td class=\"r\"><ins>The \"position\" of a word in the positional index have many different kinds. It could be either character position or token position. Token position might include or exclude stop words. Different kinds of \"position\" also have different meanings on phrase search. For example, \"University of California, Irvine\", if we search the phrase \"University California\", choice on stop words affects the search result.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>24</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>25</th><td class=\"r\"><ins>In this project, we stores the '''token''' position. We use the tokens generated from the analyzer - if the analyzer removes the stop words, then the stop words are also excluded from the positional index. For example, the positions of \"cat and dog\" is \"{cat: 1}, {dog: 2}\".</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>26</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>27</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>28</th><td class=\"r\"><ins>== Task 1: Implement LSM-like positional index. ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>29</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>30</th><td class=\"r\"><ins>The on disk index structure of the positional index is similar to the LSM structure in project 2. You need to implement the `addDocument`, `flush`, and `merge` operations similar to project 2.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>31</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>32</th><td class=\"r\"><ins>{{{</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>33</th><td class=\"r\"><ins>public void addDocument(Document document)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>34</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>35</th><td class=\"r\"><ins>public void flush()</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>36</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins>public Iterator&lt;Document&gt; documentIterator()</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>public int getNumSegments()</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins>public PositionalIndexSegmentForTest getIndexSegment(int segmentNum)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins>}}}</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins>== Task 2: Implement phrase search. ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>46</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>47</th><td class=\"r\"><ins>In this task, you'll implement searching using the inverted index.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>48</th><td class=\"r\"><ins>You could assume all documents are flushed to disk segments when doing a search.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins>Here we make the same assumption as in the merge case regarding what can be stored in memory.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>For every query keyword, you need to first analyze it using the provided analyzer before using it to access the inverted index.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins>You can assume the analyzer will not convert one keyword to multiple keywords.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>If the keyword is empty, searching should not return any results.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins>The following are specific functions to implement:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>{{{</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>/**</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>60</th><td class=\"r\"><ins>&nbsp;* Performs a single-keyword search on the inverted index.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins>&nbsp;* You could assume the analyzer won't convert the keyword into multiple tokens.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>62</th><td class=\"r\"><ins>&nbsp;* If the keyword is empty, it should not return anything.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>63</th><td class=\"r\"><ins>&nbsp;*</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>64</th><td class=\"r\"><ins>&nbsp;* @param keyword keyword, cannot be null.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>65</th><td class=\"r\"><ins>&nbsp;* @return a iterator of documents matching the query</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>66</th><td class=\"r\"><ins>&nbsp;*/</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>67</th><td class=\"r\"><ins>public Iterator&lt;Document&gt; searchQuery(String keyword)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>68</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>69</th><td class=\"r\"><ins>/**</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>70</th><td class=\"r\"><ins>&nbsp;* Performs an AND boolean search on the inverted index.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>71</th><td class=\"r\"><ins>&nbsp;*</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>72</th><td class=\"r\"><ins>&nbsp;* @param keywords a list of keywords in the AND query</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>73</th><td class=\"r\"><ins>&nbsp;* @return a iterator of documents matching the query</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>74</th><td class=\"r\"><ins>&nbsp;*/</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>75</th><td class=\"r\"><ins>public Iterator&lt;Document&gt; searchAndQuery(List&lt;String&gt; keywords)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>76</th><td class=\"r\"><ins>}</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>77</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>78</th><td class=\"r\"><ins>/**</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>79</th><td class=\"r\"><ins>&nbsp;* Performs an OR boolean search on the inverted index.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>80</th><td class=\"r\"><ins>&nbsp;*</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>81</th><td class=\"r\"><ins>&nbsp;* @param keywords a list of keywords in the OR query</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>82</th><td class=\"r\"><ins>&nbsp;* @return a iterator of documents matching the query</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>83</th><td class=\"r\"><ins>&nbsp;*/</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>84</th><td class=\"r\"><ins>public Iterator&lt;Document&gt; searchOrQuery(List&lt;String&gt; keywords) </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>85</th><td class=\"r\"><ins>}}}</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>86</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>87</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>88</th><td class=\"r\"><ins>== Task 4 (Optional Extra Credit): Implement deletions. ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>89</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>90</th><td class=\"r\"><ins>In the LSM-like index structure, deletion could be implemented by maintaining a list of deleted document IDs per segment.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>91</th><td class=\"r\"><ins>Each deleted document is not physically deleted in the inverted index nor document store.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>92</th><td class=\"r\"><ins>When reading or searching, each docID is checked to see if it has been logically deleted. </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>93</th><td class=\"r\"><ins>If so, we will not return it to the user.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>94</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>95</th><td class=\"r\"><ins>Those deleted documents within a segment should be physically deleted when we merge it with another segment.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>96</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>97</th><td class=\"r\"><ins>The following is the specific function to implement:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>98</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>99</th><td class=\"r\"><ins>{{{</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>100</th><td class=\"r\"><ins>/**</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>101</th><td class=\"r\"><ins>&nbsp;* Deletes all documents in all disk segments of the inverted index that match the keyword.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>102</th><td class=\"r\"><ins>&nbsp;* @param keyword </ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>103</th><td class=\"r\"><ins>&nbsp;*/</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>104</th><td class=\"r\"><ins>public void deleteDocuments(String keyword)</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>105</th><td class=\"r\"><ins>}}}</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>106</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>107</th><td class=\"r\"><ins></ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>108</th><td class=\"r\"><ins>== Test cases ==</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>109</th><td class=\"r\"><ins>Please follow the similar general guideline and procedure as in project 1. Here is [https://docs.google.com/spreadsheets/d/1_iwJOT-bnYDk9tWNNy61GCyi1kRN7s3VHdn5h_2T1DA/edit#gid=996032174 test task assignment]. There are some guidelines and tips for project 2 test cases:</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>110</th><td class=\"r\"><ins>1. Put the index and document files under your own folder. Specifically, you should use folder `index/YourTestName/`, for example `index/Team0StressTest`.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>111</th><td class=\"r\"><ins>2. Clean up and delete all files after each test. You should use Junit `@After` to delete all written files.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>112</th><td class=\"r\"><ins>3. For testing tasks 1 and 2, you could change `default_flush_threshold` or `default_merge_threshold`, or directly call `flush()` and `mergeAllSegments()` to control when to flush or when to merge. If you changed the variables `default_flush_threshold` or `default_merge_threshold`, be sure to change them back to their original value after your tests.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>113</th><td class=\"r\"><ins>4. For stress test, you should collect or generate a large amount of text data to test the performance and stability. If you rely on external data sets, please don't commit the large data directly in git. Instead, use a source URL to download the data.</ins></td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>114</th><td class=\"r\"><ins>5. For all test tasks, you should also check the read/write counter values in the `PageFileChannel` class to make sure the IO number is within a reasonable range.</ins></td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>115</th><td class=\"r\"><ins></ins></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}