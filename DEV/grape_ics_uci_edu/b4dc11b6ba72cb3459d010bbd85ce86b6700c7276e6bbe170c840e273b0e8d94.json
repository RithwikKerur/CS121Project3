{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs221-2019-spring-project3?version=16", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs221-2019-spring-project3 \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"alternate\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=16&amp;format=txt\" type=\"text/x-trac-wiki\" title=\"Plain Text\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs221-2019-spring-project3\" title=\"View latest version\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=17\" title=\"Version 17\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=15\" title=\"Version 15\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/folding.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n    <script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\"#content\").find(\"h1,h2,h3,h4,h5,h6\").addAnchor(_(\"Link to this section\"));\n        $(\"#content\").find(\".wikianchor\").each(function() {\n          $(this).addAnchor(babel.format(_(\"Link to #%(id)s\"), {id: $(this).attr('id')}));\n        });\n        $(\".foldable\").enableFolding(true, true);\n      });\n    </script>\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"pagepath\" class=\"noprint\">\n  <a class=\"pathentry first\" title=\"View WikiStart\" href=\"/wiki/public/wiki\">wiki:</a><a class=\"pathentry\" href=\"/wiki/public/wiki/cs221-2019-spring-project3\" title=\"View cs221-2019-spring-project3\">cs221-2019-spring-project3</a>\n</div>\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=15\" title=\"Version 15\">Previous Version</a></span></li><li><a href=\"/wiki/public/wiki/cs221-2019-spring-project3\" title=\"View latest version\">View Latest Version</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=17\" title=\"Version 17\">Next Version</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n        <br />\n        <table id=\"info\" summary=\"Revision info\">\n          <tr><th scope=\"row\">Version 16 (modified by zuozhi, <a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-05-07T13%3A26%3A02-07%3A00&amp;precision=second\" title=\"See timeline at May 7, 2019 1:26:02 PM\">5 months ago</a>)\n             (<a href=\"/wiki/public/wiki/cs221-2019-spring-project3?action=diff&amp;version=16\">diff</a>)</th></tr>\n          <tr><td class=\"message\">\n            <p>\n--\n</p>\n\n          </td></tr>\n        </table>\n      <div class=\"wikipage searchable\">\n        \n          <div id=\"wikipage\" class=\"trac-content\"><h1 id=\"CS221:Project3-II:Positionalindexphrasesearchcompression\">CS221: Project 3 - II: Positional index, phrase search, compression</h1>\n<p>\n<strong>Test Cases Due:     Week 6 Fri. (May 10), Due on Github as Pull Requests</strong><br />\n<strong>Review Due:           Week 7 Mon. (May 13),  Due on Github as Pull Requests Comments</strong><br />\n<strong>Final Code Due:     Week 8, Wed. (May 22),  Due on Github.</strong><br />\n</p>\n<h2 id=\"CodingTasks\">Coding Tasks</h2>\n<ol><li>Implement LSM-like Positional Index (insertion and merge). (6 points)\n</li><li>Implement Phrase Search. (3 points)\n</li><li>Implement Compression. (6 points)\n</li></ol><h2 id=\"TestingTasks\">Testing Tasks</h2>\n<ol><li>Write at least 2 test cases for a task (2 points)\n</li><li>Review the test cases of two teams (2 points)\n</li></ol><p>\nTotal: 19 points \n</p>\n<h2 id=\"Overview\">Overview</h2>\n<p>\nIn this project, you'll be implementing a disk-based positional index and phrase search operations. Compared to the inverted index in Project 2, a positional index stores the positions of all the occurrences of a keyword in a document.  In addition, you'll compress both the inverted index and the positional index.\n</p>\n<p>\nThe positional index supports phrase search, which means searching a sequence of keywords in the exact order. For example, the query \"new york\" will only match documents with \"new\" immediately followed by \"york\". A document like \"new ... other tokens ... york\" won't match.\n</p>\n<p>\nThe \"position\" of a word in the positional index can have different meanings. It could be either a character position or a token position. Token positions can include or exclude stop words. Different kinds of \"position\" definitions also have different implications on phrase search. For example, for the document \"University of California, Irvine\", if we search the phrase \"University California\", the handling of the stop word \"of\" can affect the search result.\n</p>\n<p>\nIn this project, we store <strong>token</strong> positions in the positional index. In particular, we use tokens generated from the analyzer.  If the analyzer removes stop words, then stop words are also excluded from the positional index. For example, the token positions of \"cat and dog\" are \"{cat: 1}, {dog: 2}\".\n</p>\n<h2 id=\"Task1:ImplementanLSM-basedpositionalindex.\">Task 1: Implement an LSM-based positional index.</h2>\n<p>\nThe on-disk index structure of the positional index is similar to the LSM structure in Project 2. The behavior for <tt>addDocument()</tt>, <tt>flush()</tt>, and <tt>merge()</tt> operations should be the same as Project 2. You should continue using the <tt>InvertedIndexManager</tt> class from Project 2. \n</p>\n<p>\nThe index format of the positional index should be on top of the inverted index format in Project 2. Recall in Project 2, we have 3 files per segment: docStore, dictionary, and invertedLists. The dictionary stores the pointer from a token to the inverted list of the token. In this project, we need another \"positional\" file to store the list of positions of a token in a document. The invertedLists needs to store an additional pointer to its position list per documentID.\n</p>\n<p>\nYou need to implement the following functions newly added to <tt>InvertedIndexManager</tt>\n</p>\n<pre class=\"wiki\">\n/**\n * Creates a positional index with a given folder, analyzer, and compressor.\n * Compressor must be used to compress the inverted lists and position lists.\n *\n */\npublic static InvertedIndexManager createOrOpenPositional(String indexFolder, Analyzer analyzer, Compressor compressor);\n\n/**\n * Reads a disk segment of a positional index into memory based on segmentNum.\n * This function is mainly used for checking correctness in test cases.\n *\n * Throws UnsupportedOperationException if the inverted index is not a positional index.\n *\n * @param segmentNum n-th segment in the inverted index (start from 0).\n * @return in-memory data structure with all contents in the index segment, null if segmentNum don't exist.\n */\npublic PositionalIndexSegmentForTest getIndexSegmentPositional(int segmentNum);\n\n\n/**\n * An in-memory representation of a positional index segment, used *only* for testing purposes.\n * Only for this testing class, you could load everything into memory.\n */\npublic class PositionalIndexSegmentForTest {\n\n    private final Map&lt;String, List&lt;Integer&gt;&gt; invertedLists;\n    private final Map&lt;Integer, Document&gt; documents;\n    private final Table&lt;String, Integer, List&lt;Integer&gt;&gt; positions;\n\n}\n\n</pre><p>\nThe positional index should support ALL operations from the inverted index in Project 2 (<tt>searchQuery(), searchAndQuery(), searchOrQuery(), documentIterator(), getIndexSegment()</tt>). When doing these operations, you could ignore the positional part of the index. We would run all project 2 test cases with your positional index and they should still pass.\n</p>\n<p>\nWhen designing and implementing this task, you may find limitations of your Project 2 implementation. It is recommended to take this chance to fix those problems to make the development of Project 3 easier.\n</p>\n<h2 id=\"Task2:Implementphrasesearch.\">Task 2: Implement phrase search.</h2>\n<p>\nIn this task, you'll implement phrase search using the positional index. You should make same assumptions about IO and tokenization as in project 2.\n</p>\n<p>\nThe keywords in the list variable <tt>phrase</tt> represents a consecutive sequence of keywords.  A document is a result only if it matches the sequence in its exact order.\n</p>\n<p>\nImplement the following function:\n</p>\n<pre class=\"wiki\">/**\n * Performs a phrase search on a positional index.\n * Phrase search means the document must contain the consecutive sequence of keywords in the exact order.\n *\n * You could assume that the analyzer won't convert each keyword into multiple tokens.\n * Throws UnsupportedOperationException if the inverted index is not a positional index.\n *\n * @param phrase, a consecutive sequence of keywords\n * @return a iterator of documents matching the query\n */\npublic Iterator&lt;Document&gt; searchPhraseQuery(List&lt;String&gt; phrase);\n\n</pre><h2 id=\"Task3:Implementcompression.\">Task 3: Implement compression.</h2>\n<p>\nIn this task, you'll implement a compressor based on delta encoding and variable-length encoding. Implement the <tt>encode</tt> and <tt>decode</tt> functions for <tt>DeltaVarLenCompressor</tt>.\n</p>\n<p>\nDelta encoding means storing the difference (delta) between adjacent integers rather than the actual numbers. For example, given a list <tt>[3, 5, 8, 13, 20]</tt>, the delta encoding stores <tt>[3, 2, 3, 5, 7]</tt>. \n</p>\n<p>\nVariable-length encoding of an integer works similarly to UTF-8. We use a variable number of bytes instead of a constant number (4) of bytes to represent an integer. Specifically, in each byte, the first bit indicates if there are more bytes to read - <tt>1</tt> means reading the next byte and <tt>0</tt> means termination, and the rest 7 bits are used to encode the integer value. \n</p>\n<p>\nFor example, the integer value <tt>13</tt> is encoded as <tt>00001101</tt>. The first bit <tt>0</tt> means no more bytes to read, and the rest 7 bits <tt>0001101</tt> represent the number 13. The integer value <tt>128</tt> (<tt>2^7</tt>) is encoded as <tt>10000001 00000000</tt>. The first bit in the first byte indicates the inclusion of the next byte. The integer value <tt>16,384</tt> (<tt>2^14</tt>) is encoded as <tt>10000001 10000000 00000000</tt>.\n</p>\n<pre class=\"wiki\">/**\n * Encodes a list of integers to a byte array.\n */\nbyte[] encode(List&lt;Integer&gt; integers);\n\n/**\n * Decodes part of a byte array to a list of integers.\n *\n * @param bytes bytes to decode\n * @param startOffset starting position to decode\n * @param length number of bytes to decode from start position\n */\nList&lt;Integer&gt; decode(byte[] bytes, int startOffset, int length);\n</pre><p>\nThe compressor should be used to compress the inverted lists and the positional lists. The compressor interface has a reference implementation <tt>NaiveCompressor</tt>, which does normal integer encoding without any compression. In test cases, two positional indexes will be constructed with <tt>NaiveCompressor</tt> and <tt>DeltaVarLenCompressor</tt> and the read/write counters will be compared to determine the compression ratio.\n</p>\n<h2 id=\"Testcases\">Test cases</h2>\n<p>\nPlease follow the similar general guideline and procedure as in Project 1 and 2. Please put all test cases in the package <tt>edu.uci.ics.cs221.index.positional</tt>. Here are the <a class=\"ext-link\" href=\"https://docs.google.com/spreadsheets/d/1_iwJOT-bnYDk9tWNNy61GCyi1kRN7s3VHdn5h_2T1DA/edit#gid=303113227\"><span class=\"icon\">\u200b</span>test case assignments</a>.\n</p>\n</div>\n          \n          \n        \n        \n      </div>\n      \n    <div id=\"attachments\">\n        <h3 class=\"foldable\">Attachments <span class=\"trac-count\">(3)</span></h3>\n        <div>\n          <ul>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs221-2019-spring-project3/Team10PositionalStressTest.txt\" title=\"View attachment\">Team10PositionalStressTest.txt</a><a href=\"/wiki/public/raw-attachment/wiki/cs221-2019-spring-project3/Team10PositionalStressTest.txt\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"1034736 bytes\">1010.5 KB</span>) -\n      added by <em>zuozhi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-05-16T15%3A02%3A38-07%3A00&amp;precision=second\" title=\"See timeline at May 16, 2019 3:02:38 PM\">5 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs221-2019-spring-project3/Team9PositionalStressTest.txt\" title=\"View attachment\">Team9PositionalStressTest.txt</a><a href=\"/wiki/public/raw-attachment/wiki/cs221-2019-spring-project3/Team9PositionalStressTest.txt\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"7536 bytes\">7.4 KB</span>) -\n      added by <em>zuozhi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-05-16T17%3A48%3A08-07%3A00&amp;precision=second\" title=\"See timeline at May 16, 2019 5:48:08 PM\">5 months ago</a>.\n              </li>\n              <li>\n    <a href=\"/wiki/public/attachment/wiki/cs221-2019-spring-project3/Team8StressTest.txt\" title=\"View attachment\">Team8StressTest.txt</a><a href=\"/wiki/public/raw-attachment/wiki/cs221-2019-spring-project3/Team8StressTest.txt\" class=\"trac-rawlink\" title=\"Download\">\u200b</a>\n       (<span title=\"7949 bytes\">7.8 KB</span>) -\n      added by <em>zuozhi</em> <a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-06-10T13%3A18%3A40-07%3A00&amp;precision=second\" title=\"See timeline at Jun 10, 2019 1:18:40 PM\">4 months ago</a>.\n              </li>\n          </ul>\n          <p>\n            Download all attachments as: <a rel=\"nofollow\" href=\"/wiki/public/zip-attachment/wiki/cs221-2019-spring-project3/\">.zip</a>\n          </p>\n        </div>\n    </div>\n\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"last first\">\n          <a rel=\"nofollow\" href=\"/wiki/public/wiki/cs221-2019-spring-project3?version=16&amp;format=txt\">Plain Text</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>", "encoding": "utf-8"}