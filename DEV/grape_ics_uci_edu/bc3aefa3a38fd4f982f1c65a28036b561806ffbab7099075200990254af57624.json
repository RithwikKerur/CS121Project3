{"url": "https://grape.ics.uci.edu/wiki/asterix/attachment/wiki/stats170ab-2018/clustering_demo.ipynb", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      clustering_demo.ipynb on stats170ab-2018 \u2013 Attachment\n     \u2013 ASTERIX\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/asterix/search\" />\n        <link rel=\"help\" href=\"/wiki/asterix/wiki/TracGuide\" />\n        <link rel=\"alternate\" href=\"/wiki/asterix/raw-attachment/wiki/stats170ab-2018/clustering_demo.ipynb\" title=\"Original Format\" />\n        <link rel=\"up\" href=\"/wiki/asterix/wiki/stats170ab-2018\" title=\"stats170ab-2018\" />\n        <link rel=\"start\" href=\"/wiki/asterix/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/asterix/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/asterix/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/asterix/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/asterix/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/asterix/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/asterix\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/asterix/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/asterix/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/asterix/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/asterix/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/asterix/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/asterix/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/asterix/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n      <script type=\"text/javascript\" src=\"/wiki/asterix/chrome/common/js/folding.js\"></script>\n      <script type=\"text/javascript\">\n        jQuery(document).ready(function($) {\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n        });\n      </script>\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/asterix/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/asterix/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/asterix/login\">Login</a></li><li><a href=\"/wiki/asterix/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/asterix/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"last first\"><a href=\"/wiki/asterix/wiki/stats170ab-2018\">Back to stats170ab-2018</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"attachment\">\n        <h1><a href=\"/wiki/asterix/wiki/stats170ab-2018\">stats170ab-2018</a>: clustering_demo.ipynb</h1>\n        <table id=\"info\" summary=\"Description\">\n          <tr>\n            <th scope=\"col\">File clustering_demo.ipynb, <span title=\"9119 bytes\">8.9 KB</span> (added by smyth, <a class=\"timeline\" href=\"/wiki/asterix/timeline?from=2018-02-07T13%3A29%3A16-08%3A00&amp;precision=second\" title=\"See timeline at Feb 7, 2018 1:29:16 PM\">20 months ago</a>)</th>\n          </tr>\n          <tr>\n            <td class=\"message searchable\">\n              \n            </td>\n          </tr>\n        </table>\n        <div id=\"preview\" class=\"searchable\">\n          \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td>{</td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td>\u00a0\"cells\": [</td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td>\u00a0 {</td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td>\u00a0 \u00a0 \"# Clustering Algorithms\\n\",</td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td>\u00a0 \u00a0 \"Stats 170A, Winter 2018\\n\",</td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td>\u00a0 \u00a0 \"\\n\",</td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td>\u00a0 \u00a0 \"Illustration of clustering algorithms\"</td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td>\u00a0 },</td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td>\u00a0 {</td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td>\u00a0 \u00a0\"metadata\": {</td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td>\u00a0 \u00a0 \"collapsed\": true</td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td>\u00a0 \u00a0},</td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td>\u00a0 \u00a0 \"# First, we'll import pandas and numpy\\n\",</td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td>\u00a0 \u00a0 \"import pandas as pd\\n\",</td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td>\u00a0 \u00a0 \"import numpy as np\\n\",</td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td>\u00a0 \u00a0 \"\\n\",</td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td>\u00a0 \u00a0 \"# import relevant parts of sklearn\\n\",</td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td>\u00a0 \u00a0 \"from sklearn import cluster, datasets\\n\",</td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td>\u00a0 \u00a0 \"\\n\",</td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>\u00a0 \u00a0 \"# We'll also import seaborn, a Python graphing library\\n\",</td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>\u00a0 \u00a0 \"# (you may need to run &gt;conda install seaborn (if using Anaconda)) \\n\",</td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>\u00a0 \u00a0 \"import seaborn as sns\\n\",</td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 \"\\n\",</td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 \"# and matplotlib\\n\",</td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 \"import matplotlib.pyplot as plt\\n\",</td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 \"sns.set(style=\\\"white\\\", color_codes=True)\\n\",</td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 \"%matplotlib inline\\n\",</td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 \"\\n\",</td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 \"# and turn off annoying warnings...(if we were writing \\\"real code\\\" we shouldn't do this)\\n\",</td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 \"import warnings \\n\",</td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>\u00a0 \u00a0 \"warnings.simplefilter('ignore')\"</td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 },</td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 {</td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 \"## Load and Explore the Iris Data Set\"</td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 },</td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 {</td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \"iris = pd.read_csv('iris.csv')\\n\",</td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 \"iris.head() \"</td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 },</td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 {</td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 \"## Use Kmeans to Cluster the Iris Data\"</td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 },</td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 {</td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \"cols = iris.columns[0:4]\u00a0 \u00a0# pull out the real-valued columns for clustering, ignore species column\\n\",</td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \"X = iris[cols] \\n\",</td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \"kmeans = cluster.KMeans(n_clusters=3)\\n\",</td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \"clabels = kmeans.fit_predict(X) \\n\",</td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \"iris['kmeans_label'] = clabels \\n\",</td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \"iris\"</td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 },</td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 {</td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \"## Visually compare K-Means Clustering with True Species Labels\"</td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 },</td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 {</td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \"sns.set(rc={'axes.facecolor':'lightslategray'})\\n\",</td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \"sns.pairplot(x_vars=['sepal_length'], y_vars=['sepal_width'], data=iris, hue=\\\"kmeans_label\\\", size=4) \\n\",</td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \"sns.pairplot(x_vars=['sepal_length'], y_vars=['sepal_width'], data=iris, hue=\\\"species\\\", size=4)\"</td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 },</td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 {</td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \"## 3d Plot of Iris Data with KMeans Cluster Labels\"</td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 },</td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 {</td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \"from mpl_toolkits.mplot3d import Axes3D\\n\",</td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \"%matplotlib \\n\",</td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \"fig = plt.figure()\\n\",</td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \"ax = fig.add_subplot(111, projection='3d')\\n\",</td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \"ax.scatter(iris['sepal_length'], iris['sepal_width'], iris['petal_length'], c=iris.kmeans_label, s=60)\\n\",</td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \"ax.view_init(30, 185)\\n\",</td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \"ax.set_xlabel('Sepal Length')\\n\",</td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \"ax.set_ylabel('Sepal Width')\\n\",</td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \"ax.set_zlabel('Petal Length')\\n\",</td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \"plt.show()\"</td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 },</td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 {</td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \"## Plot the Kmeans Centroids as 4-Dimensional Vectors\"</td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 },</td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 {</td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \"%matplotlib inline\\n\",</td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \"centroids = kmeans.cluster_centers_ \\n\",</td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \"sns.set_style(\\\"whitegrid\\\")\\n\",</td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \"plt.plot(centroids.transpose())\\n\",</td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \"ax.set_xlabel('Indices of Variables')\\n\",</td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \"ax.set_ylabel('Values of Variables')\\n\",</td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \"plt.show()\\n\",</td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \"centroids\"</td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 },</td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 {</td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \"## Use Hierarchical (Agglomerative) Clustering to Cluster the Iris Data \\n\",</td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \"... and we will compare to the Kmeans clustering\"</td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 },</td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 {</td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \"hlabels = cluster.AgglomerativeClustering(n_clusters=3, linkage='ward').fit_predict(X) \\n\",</td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \"iris['hier_label'] = hlabels \\n\",</td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \"print(hlabels[::10])\\n\",</td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 \"print(clabels[::10])\\n\",</td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \"iris\"</td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 },</td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 {</td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \"## Analyzing Housing Data\\n\",</td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \"Now we look at a different data set, a housing data set used in a Kaggle prediction competition\"</td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 },</td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 {</td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \"houses = pd.read_csv('house_price_prediction/train.csv')\\n\",</td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \"houses.head()\"</td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 },</td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 {</td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \"analysis_vars = ['LotArea', 'LotFrontage', '1stFlrSF', 'GrLivArea', 'MoSold', 'YrSold',\u00a0 'YearBuilt',\u00a0 \u00a0'SalePrice'\u00a0 ]\\n\",</td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 \"houses_real = houses[analysis_vars].dropna()\\n\",</td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 \"houses_real.head()\"</td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 },</td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 {</td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 \"kmeans2 = cluster.KMeans(n_clusters=3)\\n\",</td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \"clabels2 = kmeans2.fit_predict(houses_real.dropna()) \\n\",</td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \"houses_real['kmeans_label'] = clabels2 \\n\",</td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 \"sns.set(rc={'axes.facecolor':'lightslategray'})\\n\",</td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 \"sns.pairplot(x_vars=['YearBuilt'], y_vars=['SalePrice'], data=houses_real, hue=\\\"kmeans_label\\\", size=6) \"</td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 },</td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 {</td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \"### Comment\\n\",</td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \"The plot abova actually gives us some useful information about what Kmeans is doing with this data. It is telling us that kmeans is splitting along the y-axis (Sale Price) and virtually ignoring the x-axis (YearBuilt). Why is this happening? And what might we do to the data to change this behavior?\"</td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td>\u00a0 },</td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 {</td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \"centroids = kmeans2.cluster_centers_ \\n\",</td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \"np.set_printoptions(suppress=True)\u00a0 # suppress scientific notation so that we can see the \\\"real\\\" values\\n\",</td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \"centroids\"</td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 },</td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 {</td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0\"cell_type\": \"markdown\",</td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \"### Lets normalize the columns to have mean 0 and standard deviation 1\"</td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 },</td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 {</td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td>\u00a0 \u00a0 \"tmp = houses_real.drop(['kmeans_label'],axis=1)\\n\",</td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 \"tmp.head() \\n\",</td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \"np.set_printoptions(suppress=True)\u00a0 # suppress scientific notation so that we can see the \\\"real\\\" values\\n\",</td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \"#Norm_houses_real = tmp.apply(lambda x: (x - np.mean(x)) / (np.max(x) - np.min(x)))\\n\",</td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \"Norm_houses_real = tmp.apply(lambda x: (x - np.mean(x)) / (np.std(x)) )\\n\",</td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \"Norm_houses_real.head()\"</td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 },</td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 {</td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \"Norm_houses_real.describe()\"</td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 },</td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 {</td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 \"clabels2 = kmeans2.fit_predict(Norm_houses_real.dropna()) \\n\",</td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \"Norm_houses_real['kmeans_label'] = clabels2 \\n\",</td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \"houses_real['kmeans_label'] = clabels2 \\n\",</td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \"sns.set(rc={'axes.facecolor':'lightslategray'})\\n\",</td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \"sns.pairplot(x_vars=['YearBuilt'], y_vars=['SalePrice'], data=Norm_houses_real, hue=\\\"kmeans_label\\\", size=6) \"</td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 },</td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 {</td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \"centroids = kmeans2.cluster_centers_ \\n\",</td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \"np.set_printoptions(suppress=True)\u00a0 # suppress scientific notation so that we can see the \\\"real\\\" values\\n\",</td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \"centroids\"</td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 },</td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td>\u00a0 {</td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \"sns.set_style(\\\"whitegrid\\\")\\n\",</td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \"plt.plot(centroids.transpose())\\n\",</td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \"ax.set_xlabel('Indices of Variables')\\n\",</td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \"ax.set_ylabel('Values of Variables')\\n\",</td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \"plt.show() \"</td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 },</td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 {</td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \"sns.set(rc={'axes.facecolor':'lightslategray'})\\n\",</td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td>\u00a0 \u00a0 \"sns.pairplot(x_vars=['GrLivArea'], y_vars=['SalePrice'], data=Norm_houses_real, hue=\\\"kmeans_label\\\", size=6) \"</td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 },</td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 {</td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0\"metadata\": {},</td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0\"source\": [</td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \"sns.set(rc={'axes.facecolor':'lightslategray'})\\n\",</td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \"sns.pairplot(x_vars=['YearBuilt'], y_vars=['GrLivArea'], data=houses_real, hue=\\\"kmeans_label\\\", size=6) \"</td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0]</td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 },</td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 {</td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0\"cell_type\": \"code\",</td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0\"execution_count\": null,</td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0\"metadata\": {</td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \"collapsed\": true</td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0},</td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0\"outputs\": [],</td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0\"source\": []</td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 }</td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td>\u00a0],</td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0\"metadata\": {</td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \"anaconda-cloud\": {},</td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \"kernelspec\": {</td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0\"display_name\": \"Python 3\",</td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0\"language\": \"python\",</td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0\"name\": \"python3\"</td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td>\u00a0 },</td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \"language_info\": {</td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0\"codemirror_mode\": {</td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td>\u00a0 \u00a0 \"name\": \"ipython\",</td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 \"version\": 3</td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td>\u00a0 \u00a0},</td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0\"file_extension\": \".py\",</td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td>\u00a0 \u00a0\"mimetype\": \"text/x-python\",</td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td>\u00a0 \u00a0\"name\": \"python\",</td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td>\u00a0 \u00a0\"nbconvert_exporter\": \"python\",</td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td>\u00a0 \u00a0\"pygments_lexer\": \"ipython3\",</td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td>\u00a0 \u00a0\"version\": \"3.6.3\"</td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td>\u00a0 }</td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td>\u00a0},</td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0\"nbformat\": 4,</td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0\"nbformat_minor\": 2</td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td>}</td></tr></tbody></table>\n\n        </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"last first\">\n          <a rel=\"nofollow\" href=\"/wiki/asterix/raw-attachment/wiki/stats170ab-2018/clustering_demo.ipynb\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/asterix/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/asterix/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>", "encoding": "utf-8"}