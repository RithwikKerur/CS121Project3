{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter?version=53&format=txt", "content": "[[PageOutline]]\r\n\r\n= CS122B Winter 2017: Projects in Databases and Web Applications =\r\nTime: T/Th 11:00 am \u00e2\u20ac\u201c 12:20 pm (Check [https://www.reg.uci.edu/calendars/quarterly/2016-2017/quarterly16-17.html UCI Calendar] for holiday information)[[BR]]   Location: [https://eee.uci.edu/toolbox/roomfinder/class.php?ccode=34150&quarter=W17 HSLH 100A].\r\n\r\n * '''Instructor''': [http://www.ics.uci.edu/~chenli Chen Li] chenli AT ics.uci.edu [[BR]]  Office hours: !Tuesdays/Thursdays, 9:50 am - 10:50 am, DBH 2092\r\n * '''Staff Member''': Nailah Alhassoun nailah AT uci.edu  [[BR]] Office hours: Friday, 8:00 am - 9:50 am, Location: ICS 424E\r\n * '''Staff Member''': Chen Luo, cluo8 AT uci.edu [[BR]]  Office hours: !Monday/Wednesday, 3:45 pm - 4:45 pm, Location: ICS CS424E\r\n\r\n== Online Discussion ==\r\n * '''Piazza ''': https://piazza.com/class/ixkpbqb3e266fc [[BR]]\r\n\r\n== Quizzes ==\r\n * Quiz 1: '''Tuesday, January 31st, 2017''', in class, closed-book, closed-notes.\r\n\r\n\r\n== Projects (Subject to change) ==\r\n[https://docs.google.com/spreadsheets/d/1F9KZHjk9RjoRd4yIIu9rdiHXHFBSNOVGGAkoqX0VcVo/edit?usp=sharing Group Signup Sheet]\r\n||Project||Topic||Days||Due Date||Proportions||\r\n||[https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project1 Project 1]||MySQL creation, JDBC, Tomcat, AWS||8 days ||1/18/2017, Wednesday, 11:45 pm||12%||\r\n||[https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project2 Project 2]||Developing Fablix Web site [https://youtu.be/kGkhg0T6Tec An earlier demo]||19 days||2/06/2017, Monday, 11:45 pm ||28%||\r\n||[https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project3 Project 3]||reCaptcha, HTTPS, Stored Procedure, XML Parsing||14 days ||2/20/2017, Monday, 11:45 pm||21%||\r\n||Project 4||Ajax, Search, UDF, and Android||16 days||3/8/2017, Wednesday, 11:45 pm||24%||\r\n||Project 5||Performance Tuning ||9 days||3/17/2017, Friday, 11:45 pm||15%||\r\n\r\n== Syllabus ==\r\n|| No. || '''Date''' || '''Notes''' ||\r\n|| 01 || 01/10/17, Tu || [attachment:notes01-intro.ppt Introduction], [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project1 Project 1], AWS ||\r\n|| 02 || 01/12/17, Th || [wiki:cs122b-2017-winter-tasks1 Tasks], [wiki:cs122b-2017-winter-project1#jdbc-samples Sample JDBC Programs], [attachment:notes02-odbc.ppt ODBC]  ||\r\n|| 03 || 01/17/17, Tu || [http://jeromejaglale.com/doc/ubuntu/mysql_enable_logging MySQL Logging], [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project2 Project 2], [https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-ubuntu-14-04-via-apt-get Install Tomcat], [wiki:cs122b-2017-winter-project2#TomcatTestExample TomcatTest Example], [http://serverfault.com/questions/127640/where-are-my-tomcat-logs Tomcat Logging] ||\r\n|| 04 || 01/19/17, Th || [wiki:cs122b-2017-winter-project2#FormExample Form Example], [wiki:cs122b-2017-winter-project2#ServletSession Servlet Session Example], [https://www.youtube.com/watch?v=VqW9fnkhqrs '\"Cookie Idea\" in Movie Memento']  ||\r\n|| 05 || 01/24/17, Tu || [http://www.w3schools.com/tags/ref_httpmethods.asp GET/POST methods], Shopping cart (client vs server),  [http://www.petefreitag.com/item/451.cfm Pagination], Caching, [wiki:cs122b-2017-winter-project2#StepByStep Project 2 Step-By-Step] ||\r\n|| 06 || 01/26/17, Th || \"Browsing\", \"Searching\", [http://www.javascript-coder.com/window-popup/javascript-window-open.phtml Open a Window Using Javascript], Javascript debugging,  [wiki:cs122b-2017-winter-project2#JSP JSP], [http://www.w3schools.com/asp/showasp.asp?filename=demo_text ASP] ||\r\n|| 07 || 01/31/17, Tu || [attachment:notes03-webapps.ppt Web Application Architectures], Quiz 1 ||\r\n|| 08 || 02/02/17, Th || Domain registration, reCaptcha, HTTPS ||\r\n\r\n\r\n== Course Information ==\r\n=== Overview ===\r\nThis course exposes students to advanced programming concepts and provides students with a greater focus on using DBMS techniques to build Web-based applications. It is intended for two purposes: (1) It introduces students to the modern data management techniques including database connectivity, Web application development, extending database functions, database administration, and XML. (2) It teaches students how to use these technologies to build real-world applications. The course builds on [http://www.ics.uci.edu/~cs122a CS122A], which introduces students to the classical relational databases and SQL programming. \r\n\r\n=== More Focus on Cloud Services ===\r\nWe will heavily use Amazon AWS services in the course.  You are expected to launch instances on AWS to deploy some of the projects you are developing.  AWS provides free-tier 64-bit Ubuntu instances!  In addition, you are welcome to participate in the [https://aws.amazon.com/education/awseducate/ AWS Educate] program, which can provide $100 AWS credits per student. (I believe UCI is a member institution.)  We will provide more instructions about how to use their services to deploy your projects.\r\n\r\n=== Prerequisites ===\r\nYou should have taken CS122A or an equivalent course. In addition, you should have a reasonable understanding of core computer science concepts, good familiarity with relational databases (equivalent of CS122A), good programming skills in Java, skills to learn other programming languages, and familiarity with basic undergraduate-level operating system concepts. Above all, you need to have a positive attitude towards learning, no inhibitions about working in groups and learning from each other.  '''If you are not sure whether you meet requirements, do talk to the instructor after the first lecture to make sure you are ready to take this course.'''\r\n\r\n=== Grading Breakdown ===\r\nProjects: 88% [[BR]] In-class Quizzes: 11% [[BR]] Participation in EEE Class Evaluation: 1% [[BR]]\r\n\r\nFor all the graded projects and exams, if you disagree with the grading, you can discuss with us within '''two weeks''' after they are returned. After that, all the grades will be finalized.\r\n\r\nFor each project demo, we assume each group can provide their own computing environment (either a laptop or a remote desktop) to show the demo.  If you cannot provide such an environment, please let us know before the demo, so that we can find a solution.\r\n\r\n=== Textbooks ===\r\nMany online tutorials.\r\n\r\n=== Working in Groups ===\r\nWorking together on projects is strongly encouraged. You can form groups of no more than ''3 (three)'' students and submit one homework solution per group making sure that the names of all the group members appear on the first page. Work in groups will be graded on a per group basis.\r\n\r\nStudents may leave their existing group in the quarter. But they cannot join any new group after the end of the '''second week'''. For each group splitting, the group members should tell the instructor at least '''two weeks''' before the corresponding project/homework deadline.\r\n\r\nAt the end of the quarter, I will announce the top 3 students based on their overall performance in the class (projects and quizzes).  I will host a lunch with these students :-)\r\n\r\n=== Project Late Policy ===\r\n[[Span(id=late-policy)]]\r\n\r\n * The official due date for each assignment is listed here on the wiki, and it is expected that students will turn the work in on or before that date.\r\n * We will offer a '''24-hour grace period''' for each assignment, and will therefore accept submissions turned in within 24 hours of the due date, with a 10-point penalty.  It's 10 points, not 10 percent.  For example, if your late project got 87 points, then your real score will be 87-10=77 points. Notice that EEE will only keep the latest submission. If so you submit or resubmit the project after the deadline, it will be considered as a late submission.\r\n * Late assignments will NOT be accepted beyond the grace period, so do always aim to be on time! Please don't even ask, as this is what the 1-day grace period is intended for.\r\n\r\n=== Policy on Academic Honesty ===\r\nAll students will be expected to adhere to the UCI and ICS Academic Honesty policies (see http://www.ics.uci.edu/ugrad/policies/index.php#academic_honesty to read their details). Any student found to be involved in cheating or aiding others in doing so will be academically prosecuted to the maximum extent possible: that means you will fail this course.  Just say ''no'' to cheating!\r\n\r\nIn case you reuse another party's source code for certain generic tasks (e.g., JDBC access) make sure you explicitly comment on its origin in your source code.\r\n\r\n----", "encoding": "Windows-1252"}