{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs222-2019-fall-project2-description?action=diff&version=2", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs222-2019-fall-project2-description (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?action=history\" title=\"Page history\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?action=diff&amp;version=1\" title=\"Version 1\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?action=diff&amp;version=1\" title=\"Version 1\">Previous Change</a></span></li><li><a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span class=\"missing\">Next Change &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=1\">Version 1</a> and\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=2\">Version 2</a> of\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description\">cs222-2019-fall-project2-description</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=2\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"9c6547ff3fc3506d8a68cfb5\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"2\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"1\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            Oct 7, 2019 10:10:22 PM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2019-10-07T22%3A10%3A22-07%3A00&amp;precision=second\" title=\"See timeline at Oct 7, 2019 10:10:22 PM\">5 days</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          yicongh1\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=2\">cs222-2019-fall-project2-description</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version 1\">\n                    <a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=1#L57\">\n                      v1</a>\n                  </th>\n                  <th title=\"Version 2\">\n                    <a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=2#L57\">\n                      v2</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>57</th><th>57</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>58</th><th>58</th><td class=\"l\"><span>{{{</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>class RelationManager</span></td>\n                      </tr><tr>\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span>{</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>class RelationManager {</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>61</th><th>60</th><td class=\"l\"><span>public:</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC createCatalog();</span></td>\n                      </tr><tr>\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC deleteCatalog();</span></td>\n                      </tr><tr>\n                        <th>65</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC createTable(const string &amp;tableName, const vector&lt;Attribute&gt; &amp;attrs);</span></td>\n                      </tr><tr>\n                        <th>67</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>68</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC deleteTable(const string &amp;tableName);</span></td>\n                      </tr><tr>\n                        <th>69</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>70</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC getAttributes(const string &amp;tableName, vector&lt;Attribute&gt; &amp;attrs);</span></td>\n                      </tr><tr>\n                        <th>71</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>72</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC insertTuple(const string &amp;tableName, const void *data, RID &amp;rid);</span></td>\n                      </tr><tr>\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>74</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC deleteTuple(const string &amp;tableName, const RID &amp;rid);</span></td>\n                      </tr><tr>\n                        <th>75</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>76</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC updateTuple(const string &amp;tableName, const void *data, const RID &amp;rid);</span></td>\n                      </tr><tr>\n                        <th>77</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>78</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC readTuple(const string &amp;tableName, const RID &amp;rid, void *data);</span></td>\n                      </tr><tr>\n                        <th>79</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>80</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; // mainly for debugging</span></td>\n                      </tr><tr>\n                        <th>81</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; // Print a tuple that is passed to this utility method.</span></td>\n                      </tr><tr>\n                        <th>82</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC printTuple(const vector&lt;Attribute&gt; &amp;attrs, const void *data);</span></td>\n                      </tr><tr>\n                        <th>83</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>84</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC readAttribute(const string &amp;tableName, const RID &amp;rid, const string &amp;attributeName, void *data);</span></td>\n                      </tr><tr>\n                        <th>85</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>86</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; // scan returns an iterator to allow the caller to go through the results one by one. </span></td>\n                      </tr><tr>\n                        <th>87</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC scan(const string &amp;tableName,</span></td>\n                      </tr><tr>\n                        <th>88</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; const string &amp;conditionAttribute,</span></td>\n                      </tr><tr>\n                        <th>89</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; const CompOp compOp,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // comparison type such as \"&lt;\" and \"=\"</span></td>\n                      </tr><tr>\n                        <th>90</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; const void *value,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // used in the comparison</span></td>\n                      </tr><tr>\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; const vector&lt;string&gt; &amp;attributeNames, // a list of projected attributes</span></td>\n                      </tr><tr>\n                        <th>92</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; RM_ScanIterator &amp;rm_ScanIterator);</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>61</th><td class=\"r\"><span>&nbsp; &nbsp; static RelationManager &amp;instance();</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>&nbsp; &nbsp; RC createCatalog();</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>&nbsp; &nbsp; RC deleteCatalog();</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>&nbsp; &nbsp; RC createTable(const std::string &amp;tableName, const std::vector&lt;Attribute&gt; &amp;attrs);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>68</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>69</th><td class=\"r\"><span>&nbsp; &nbsp; RC deleteTable(const std::string &amp;tableName);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>70</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>71</th><td class=\"r\"><span>&nbsp; &nbsp; RC getAttributes(const std::string &amp;tableName, std::vector&lt;Attribute&gt; &amp;attrs);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>&nbsp; &nbsp; RC insertTuple(const std::string &amp;tableName, const void *data, RID &amp;rid);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>74</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>75</th><td class=\"r\"><span>&nbsp; &nbsp; RC deleteTuple(const std::string &amp;tableName, const RID &amp;rid);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>77</th><td class=\"r\"><span>&nbsp; &nbsp; RC updateTuple(const std::string &amp;tableName, const void *data, const RID &amp;rid);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>78</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span>&nbsp; &nbsp; RC readTuple(const std::string &amp;tableName, const RID &amp;rid, void *data);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>&nbsp; &nbsp; // Print a tuple that is passed to this utility method.</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span>&nbsp; &nbsp; // The format is the same as printRecord().</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>&nbsp; &nbsp; RC printTuple(const std::vector&lt;Attribute&gt; &amp;attrs, const void *data);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp; &nbsp; RC readAttribute(const std::string &amp;tableName, const RID &amp;rid, const std::string &amp;attributeName, void *data);</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>87</th><td class=\"r\"><span>&nbsp; &nbsp; // Scan returns an iterator to allow the caller to go through the results one by one.</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>88</th><td class=\"r\"><span>&nbsp; &nbsp; // Do not store entire results in the scan iterator.</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>&nbsp; &nbsp; RC scan(const std::string &amp;tableName,</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const std::string &amp;conditionAttribute,</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const CompOp compOp,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // comparison type such as \"&lt;\" and \"=\"</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const void *value,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // used in the comparison</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const std::vector&lt;std::string&gt; &amp;attributeNames, // a list of projected attributes</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>94</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RM_ScanIterator &amp;rm_ScanIterator);</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>93</th><th>95</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>94</th><th>96</th><td class=\"l\"><span>protected:</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>95</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RelationManager();</span></td>\n                      </tr><tr>\n                        <th>96</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; ~RelationManager();</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>&nbsp; &nbsp; RelationManager();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Prevent construction</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span>&nbsp; &nbsp; ~RelationManager();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Prevent unwanted destruction</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>99</th><td class=\"r\"><span>&nbsp; &nbsp; RelationManager(const RelationManager &amp;);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Prevent construction by copying</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>&nbsp; &nbsp; RelationManager &amp;operator=(const RelationManager &amp;);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Prevent assignment</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>private:</span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>103</th><td class=\"r\"><span>&nbsp; &nbsp; static RelationManager *_relation_manager;</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>97</th><th>104</th><td class=\"l\"><span>};</span></td>\n                  </tr><tr>\n                          <th>98</th><th>105</th><td class=\"l\"><span>}}}</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=1#L141\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=2#L148\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>141</th><th>148</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>142</th><th>149</th><td class=\"l\"><span>// At this moment, do not execute scan and cache the results in the memory. Just initialize the scan operator</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>143</th><th>\u00a0</th><td class=\"l\"><span>rc = rm<del>-&gt;</del>scan(tableName, conditionAttribute, compOp, value, attributes, rmsi);&nbsp; &nbsp; &nbsp;</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>150</th><td class=\"r\"><span>rc = rm<ins>.</ins>scan(tableName, conditionAttribute, compOp, value, attributes, rmsi);&nbsp; &nbsp; &nbsp;</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>144</th><th>151</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>145</th><th>152</th><td class=\"l\"><span>while(rmsi.getNextTuple(rid, returnedData) != RM_EOF){</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=1#L154\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs222-2019-fall-project2-description?version=2#L161\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>154</th><th>161</th><td class=\"l\"><span>class RM_ScanIterator {</span></td>\n                  </tr><tr>\n                          <th>155</th><th>162</th><td class=\"l\"><span>public:</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>156</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RM_ScanIterator();</span></td>\n                      </tr><tr>\n                        <th>157</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; ~RM_ScanIterator();</span></td>\n                      </tr><tr>\n                        <th>158</th><th>\u00a0</th><td class=\"l\"><span></span></td>\n                      </tr><tr>\n                        <th>159</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; // \"data\" follows the same format as RelationManager::insertTuple()</span></td>\n                      </tr><tr>\n                        <th>160</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC getNextTuple(RID &amp;rid, void *data);</span></td>\n                      </tr><tr>\n                        <th>161</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; RC close();</span></td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>163</th><td class=\"r\"><span>&nbsp; &nbsp; RM_ScanIterator() = default;</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>164</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>165</th><td class=\"r\"><span>&nbsp; &nbsp; ~RM_ScanIterator() = default;</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>166</th><td class=\"r\"><span></span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>167</th><td class=\"r\"><span>&nbsp; &nbsp; // \"data\" follows the same format as RelationManager::insertTuple()</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>168</th><td class=\"r\"><span>&nbsp; &nbsp; RC getNextTuple(RID &amp;rid, void *data) { return RM_EOF; };</span></td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>169</th><td class=\"r\"><span></span></td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>170</th><td class=\"r\"><span>&nbsp; &nbsp; RC close() { return -1; };</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>162</th><th>171</th><td class=\"l\"><span>};</span></td>\n                  </tr><tr>\n                          <th>163</th><th>172</th><td class=\"l\"><span>}}}</span></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}