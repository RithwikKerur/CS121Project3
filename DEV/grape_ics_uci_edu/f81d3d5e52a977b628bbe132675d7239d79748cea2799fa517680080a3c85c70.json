{"url": "https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-spring-project3?action=diff&version=2", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n\n  <head>\n    <title>\n      cs122b-2017-spring-project3 (diff) \u2013 Public\n    </title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!--[if IE]><script type=\"text/javascript\">\n      if (/^#__msie303:/.test(window.location.hash))\n        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));\n    </script><![endif]-->\n        <link rel=\"search\" href=\"/wiki/public/search\" />\n        <link rel=\"help\" href=\"/wiki/public/wiki/TracGuide\" />\n        <link rel=\"up\" href=\"/wiki/public/wiki/cs122b-2017-spring-project3?action=history\" title=\"Page history\" />\n        <link rel=\"next\" href=\"/wiki/public/wiki/cs122b-2017-spring-project3?action=diff&amp;version=3\" title=\"Version 3\" />\n        <link rel=\"start\" href=\"/wiki/public/wiki\" />\n        <link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.css\" type=\"text/css\" />\n        <link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/common/css/trac.css\" /><link rel=\"tracwysiwyg.stylesheet\" href=\"/wiki/public/chrome/tracwysiwyg/editor.css\" />\n        <link rel=\"tracwysiwyg.base\" href=\"/wiki/public\" />\n        <link rel=\"prev\" href=\"/wiki/public/wiki/cs122b-2017-spring-project3?action=diff&amp;version=1\" title=\"Version 1\" />\n        <link rel=\"shortcut icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/wiki/public/chrome/site/favicon.ico\" type=\"image/x-icon\" />\n    <style id=\"trac-noscript\" type=\"text/css\">.trac-noscript { display: none !important }</style>\n    <script type=\"text/javascript\">\n      var _tracwysiwyg={};\n    </script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/jquery.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/babel.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/trac.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/search.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/common/js/diff.js\"></script>\n      <script type=\"text/javascript\" charset=\"utf-8\" src=\"/wiki/public/chrome/tracwysiwyg/wysiwyg.js\"></script>\n    <script type=\"text/javascript\">\n      jQuery(\"#trac-noscript\").remove();\n      jQuery(document).ready(function($) {\n        $(\".trac-autofocus\").focus();\n        $(\".trac-target-new\").attr(\"target\", \"_blank\");\n        setTimeout(function() { $(\".trac-scroll\").scrollToTop() }, 1);\n        $(\".trac-disable-on-submit\").disableOnSubmit();\n      });\n    </script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/wiki/public/chrome/common/css/diff.css\" />\n    <meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" />\n  </head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://www.ics.uci.edu/\"><img src=\"/wiki/public/chrome/site/ics.jpg\" alt=\"ICS Logo\" height=\"67\" width=\"128\" /></a>\n      </div>\n      <form id=\"search\" action=\"/wiki/public/search\" method=\"get\">\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/wiki/public/login\">Login</a></li><li><a href=\"/wiki/public/prefs\">Preferences</a></li><li class=\"last\"><a href=\"/wiki/public/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/wiki/public/wiki/cs122b-2017-spring-project3?action=diff&amp;version=1\" title=\"Version 1\">Previous Change</a></span></li><li><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?action=history\" title=\"Page history\">Wiki History</a></li><li class=\"last\"><span><a class=\"next\" href=\"/wiki/public/wiki/cs122b-2017-spring-project3?action=diff&amp;version=3\" title=\"Version 3\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <h1>\n        Changes between\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1\">Version 1</a> and\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2\">Version 2</a> of\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project3\">cs122b-2017-spring-project3</a>\n      </h1>\n      <form method=\"post\" id=\"prefs\" action=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2\"><div><input type=\"hidden\" name=\"__FORM_TOKEN\" value=\"ff556aba9ece32d7fbd97dfc\" /></div>\n        <div>\n          <input type=\"hidden\" name=\"action\" value=\"diff\" />\n          <input type=\"hidden\" name=\"version\" value=\"2\" />\n          <input type=\"hidden\" name=\"old_version\" value=\"1\" />\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n        <dt class=\"property time\">Timestamp:</dt>\n        <dd class=\"time\">\n            Apr 30, 2017 4:59:45 PM (<a class=\"timeline\" href=\"/wiki/public/timeline?from=2017-04-30T16%3A59%3A45-07%3A00&amp;precision=second\" title=\"See timeline at Apr 30, 2017 4:59:45 PM\">2 years</a> ago)\n        </dd>\n        <dt class=\"property author\">Author:</dt>\n        <dd class=\"author\">\n          gift_sinthong\n        </dd>\n        <dt class=\"property message\">Comment:</dt>\n        <dd class=\"message\">\n          \n          <p>\n--\n</p>\n\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n            <dt class=\"mod\"></dt><dd>Modified</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2\">cs122b-2017-spring-project3</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Version 1\">\n                    <a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L27\">\n                      v1</a>\n                  </th>\n                  <th title=\"Version 2\">\n                    <a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L27\">\n                      v2</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>27</th><th>27</th><td class=\"l\"><span>&nbsp;1. Follow the instructions on the page shown in step 2 to modify the file \"webapps/TomcatFormReCaptcha/index.html\". In particular, use your own \"site key\" to replace the \"data-sitekey\" value.</span></td>\n                  </tr><tr>\n                          <th>28</th><th>28</th><td class=\"l\"><span>&nbsp;1. Test the page http://YOUR_IP:8080/TomcatFormReCaptcha to see if reCAPTHA works for the front end (You should get an error saying \"Recaptcha WRONG!!!!\" if you followed the instructions properly)</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>29</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;1. Read and understand the file \"sources/TomcatFormReCaptcha.java\", especially the logic related to verifying \"g-recaptcha-response\".Alsomodify<del>&nbsp;</del>the file \"!MyConstants.java\" to use your own \"SITE_KEY\" and \"SECRET_KEY\" values.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>29</th><td class=\"r\"><span>&nbsp;1. Read and understand the file \"sources/TomcatFormReCaptcha.java\", especially the logic related to verifying \"g-recaptcha-response\".Alsomodify<ins></ins>the file \"!MyConstants.java\" to use your own \"SITE_KEY\" and \"SECRET_KEY\" values.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>30</th><th>30</th><td class=\"l\"><span>&nbsp;1. Recompile the Java files and reload the app using the Tomcat console. Test if the backend of reCAPTHA is working properly.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>31</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;1. Apply the same logic to your project 2 by making the necessary<del>&nbsp;changesonthe </del>login frontend and backend logic.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>31</th><td class=\"r\"><span>&nbsp;1. Apply the same logic to your project 2 by making the necessary<ins>changesonthe</ins>login frontend and backend logic.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>32</th><th>32</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>33</th><th>33</th><td class=\"l\"><span>[[Span(id=HTTPS)]]</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L36\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L36\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>36</th><th>36</th><td class=\"l\"><span>See this [http://tecadmin.net/configure-ssl-certificate-in-tomcat/ reference] on how to configure Tomcat to enable HTTPS connections.</span></td>\n                  </tr><tr>\n                          <th>37</th><th>37</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>38</th><th>\u00a0</th><td class=\"l\"><span>Step 1: On your AWS instance, use the following command to create<del>&nbsp;akeystoreto be used by Tomcat. Remember what password you use for </del>thekeystore. Our example uses \"changeit\".</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>38</th><td class=\"r\"><span>Step 1: On your AWS instance, use the following command to create<ins>akeystoretobe used by Tomcat. Remember what password you use for</ins>thekeystore. Our example uses \"changeit\".</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>39</th><th>39</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>40</th><th>40</th><td class=\"l\"><span>{{{</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L60\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L60\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>60</th><th>60</th><td class=\"l\"><span>sudo service tomcat restart</span></td>\n                  </tr><tr>\n                          <th>61</th><th>61</th><td class=\"l\"><span>}}}</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>At this point, https://[YOUR_IP]:8443/manager/html should also an entry point to Tomcat. Note that it uses the secure kind<del>&nbsp;</del>ofhttp(https) and a different port, which is 8443 by default. Make sure to open the port 8443 on your AWS instance.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span>At this point, https://[YOUR_IP]:8443/manager/html should also an entry point to Tomcat. Note that it uses the secure kind<ins></ins>ofhttp(https) and a different port, which is 8443 by default. Make sure to open the port 8443 on your AWS instance.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>63</th><th>63</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>64</th><th>64</th><td class=\"l\"><span>Step 4: Limit a Tomcat application to HTTPS only.Currently[http://YOUR_IP:8080/manager/html http://YOUR_IP:8080/manager/html] entry (which uses HTTP) is still open. In order to disable HTTP and enable HTTPS only, change your !TomcatFormReCaptcha application's web.xml by adding the following code before the \"&lt;/web-app&gt;\" tag:</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L89\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L89\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>89</th><th>89</th><td class=\"l\"><span>fullname varchar(100)</span></td>\n                  </tr><tr>\n                          <th>90</th><th>90</th><td class=\"l\"><span>}}}</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>Step 2: Insert an employee with **classta@''email.edu''**, **classta**, and **TA CS122B** as its email, password,<del>&nbsp;</del>andfullnamerespectively.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span>Step 2: Insert an employee with **classta@''email.edu''**, **classta**, and **TA CS122B** as its email, password,<ins></ins>andfullnamerespectively.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>92</th><th>92</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>93</th><th>\u00a0</th><td class=\"l\"><span>Step 3: Setup an entry point https://YOUR_IP:8443/fabflix/_dashboard that uses HTTPS. It allows employees<del>&nbsp;tologinwith </del>a valid email and password to access a dashboard.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>Step 3: Setup an entry point https://YOUR_IP:8443/fabflix/_dashboard that uses HTTPS. It allows employees<ins>tologinwith</ins>a valid email and password to access a dashboard.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>94</th><th>94</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>95</th><th>95</th><td class=\"l\"><span>Step 4: Allow a logged-in employee to do the following operations using this dashboard. (You can reuse part of your code in Project 1.)</span></td>\n                  </tr><tr>\n                          <th>96</th><th>96</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>97</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* Inserting a new star into the database. If the star has a single name, add it as his last_name and assign an empty<del>&nbsp;</del>string(\"\") to first_name.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>&nbsp;* Inserting a new star into the database. If the star has a single name, add it as his last_name and assign an empty<ins></ins>string(\"\") to first_name.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>98</th><th>98</th><td class=\"l\"><span>&nbsp;* Providing the metadata of the database; in particular, show the name of each table and, for each table, each attribute and its type.</span></td>\n                  </tr><tr>\n                          <th>99</th><th>99</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>100</th><th>\u00a0</th><td class=\"l\"><span>Step 5: Write a stored procedure called ''add_movie''.Its arguments include all the required fields of the movie, a ''<del>&nbsp;single''starand a '' single'' genre. (The reason we don't want to pass multiple stars and genres is that the current MySQL implementation doesn't allow stored procedures to take an array argument.) If a record corresponding to the star or genre exists, it is linked to the movie; if not, it is created and then linked to the movie. Insert a movie only if it does not exist. All necessary stars_in_movies and genres_in_movies records are also created. The procedure should output informative status messages to the user as it performs the task. If a movie'srecord setcannot </del>be correctly made, the procedure needs to output a corresponding message, and no changes to the database are made.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>Step 5: Write a stored procedure called ''add_movie''.Its arguments include all the required fields of the movie, a ''<ins>single''staranda '' single'' genre. (The reason we don't want to pass multiple stars and genres is that the current MySQL implementation doesn't allow stored procedures to take an array argument.) If a record corresponding to the star or genre exists, it is linked to the movie; if not, it is created and then linked to the movie. Insert a movie only if it does not exist. All necessary stars_in_movies and genres_in_movies records are also created. The procedure should output informative status messages to the user as it performs the task. If amovie'srecordsetcannot</ins>be correctly made, the procedure needs to output a corresponding message, and no changes to the database are made.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>101</th><th>101</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>102</th><th>102</th><td class=\"l\"><span>Step 6: In the dashboard implemented in Step 4, add one more feature that allows an employee to add information related to a movie, including a single star and a single genre. The UI should allow the employee to provide the information, and the backend should call the stored procedure '' add_movie'' created above.</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L110\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L110\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>110</th><th>110</th><td class=\"l\"><span>You can find the raw version of this new data source in [attachment:wiki:cs122b-2017-winter-project3:stanford-movies.tar.gz this package]. The main source of these files is [http://infolab.stanford.edu/pub/movies/dtd.html here]. Before starting to use these files, it is highly recommended to check the main source and read [http://infolab.stanford.edu/pub/movies/doc.html its documentation] to get a better understanding of this dataset.</span></td>\n                  </tr><tr>\n                          <th>111</th><th>111</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>112</th><th>\u00a0</th><td class=\"l\"><span>Particularly, you are required to parse the files `mains243.xml<del>` and </del>`casts124.xml` to add new `movies`, `stars`, and `genres` to the Fabflix database (i.e., on top of what you already have in the database). If needed, the `stars_in_movies` and `genres_in_movies` tables should also be updated accordingly. Also, for each XML file in this package, there is a DTD file to be used to understand/validate the structure of that XML file.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>Particularly, you are required to parse the files `mains243.xml<ins>, actor63.xml`and</ins>`casts124.xml` to add new `movies`, `stars`, and `genres` to the Fabflix database (i.e., on top of what you already have in the database). If needed, the `stars_in_movies` and `genres_in_movies` tables should also be updated accordingly. Also, for each XML file in this package, there is a DTD file to be used to understand/validate the structure of that XML file.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>113</th><th>113</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>114</th><th>114</th><td class=\"l\"><span>Please note that in this project it is expected that, if needed, you make reasonable decisions on how to use this new data source. The files are not clean and you may find inconsistencies in them. In such cases, do not be surprised. Make reasonable decisions. Such issues are very common in many real applications. You can use the following high-level description regarding the mapping of the XML tag attributes to the Fabflix database schema that was given in [https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project1 project 1].</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L122\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L122\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>122</th><th>122</th><td class=\"l\"><span>[[Image(wiki:cs122b-2017-winter-project3:casts_structure.png)]] '''Figure 2.'''</span></td>\n                  </tr><tr>\n                          <th>123</th><th>123</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>124</th><th>\u00a0</th><td class=\"l\"><span>Similar to the `&lt;movies&gt;` tag, the content of the `&lt;casts&gt;` tag, which is the root of the file `casts124.xml`, is also grouped by the movie directors. You can find the<del>&nbsp;informationofthestar-movieconnections in the instances of the `&lt;m&gt;` tag. In this tag, the film is identified using the `&lt;f&gt;` tag, which links to the `&lt;fid&gt; `tag of the `&lt;film&gt;` tag in the main file. Tag `&lt;m&gt;` also gives you the `stagename` of the actor of this relation in a tag called `&lt;a&gt;`. The `stagename` helps you connect this `stars_in_movies` record to the right star record. The stars to be added tothe`stars`tableare parsed out of the file `actors63.xml`. Except for the `photo_url` column ofthe`stars`tablethat should be left NULL, it is clear how to use theactorsfile </del>to populate this table.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>124</th><td class=\"r\"><span>Similar to the `&lt;movies&gt;` tag, the content of the `&lt;casts&gt;` tag, which is the root of the file `casts124.xml`, is also grouped by the movie directors. You can find the<ins>informationofthestar-movieconnectionsin the instances of the `&lt;m&gt;` tag. In this tag, the film is identified using the `&lt;f&gt;` tag, which links to the `&lt;fid&gt; `tag of the `&lt;film&gt;` tag in the main file. Tag `&lt;m&gt;` also gives you the `stagename` of the actor of this relation in a tag called `&lt;a&gt;`. The `stagename` helps you connect this `stars_in_movies` record to the right star record. The stars to be addedtothe`stars`tableareparsed out of the file `actors63.xml`. Except for the `photo_url`columnofthe`stars`tablethatshould be left NULL, it is clear how to usetheactorsfile</ins>to populate this table.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>125</th><th>125</th><td class=\"l\"><span></span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>126</th><th>\u00a0</th><td class=\"l\"><span>Although there are many libraries for parsing XML, there are two main approaches towards this problem: (1) SAX: event-based XML parsing and (2) DOM: using a tree-based object model for parsing XML. In SAX, the library '''moves''' through the XML tags and makes calls to ''event-handler functions'' that are implemented by the developer. In DOM, the developer is free to move on ''a tree of objects'' that is made available by the library, each object corresponding to an ''entity'' in the XML tree (e.g., a tag). You are free to choose between either of SAX or DOM approaches<del>&nbsp;toparsethe </del>document. For examples, look [http://totheriver.com/learn/xml/code/SAXParserExample.java here for SAX] and [http://totheriver.com/learn/xml/code/DomParserExample.java here for DOM]. You can find [http://totheriver.com/learn/xml/xmltutorial.html#7 here], the instructions and files needed to run these examples.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>Although there are many libraries for parsing XML, there are two main approaches towards this problem: (1) SAX: event-based XML parsing and (2) DOM: using a tree-based object model for parsing XML. In SAX, the library '''moves''' through the XML tags and makes calls to ''event-handler functions'' that are implemented by the developer. In DOM, the developer is free to move on ''a tree of objects'' that is made available by the library, each object corresponding to an ''entity'' in the XML tree (e.g., a tag). You are free to choose between either of SAX or DOM approaches<ins>toparsethe</ins>document. For examples, look [http://totheriver.com/learn/xml/code/SAXParserExample.java here for SAX] and [http://totheriver.com/learn/xml/code/DomParserExample.java here for DOM]. You can find [http://totheriver.com/learn/xml/xmltutorial.html#7 here], the instructions and files needed to run these examples.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>127</th><th>127</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>128</th><th>128</th><td class=\"l\"><span>=== Requirements: ===</span></td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=1#L131\">\u2026</a></th>\n                  <th><a href=\"/wiki/public/wiki/cs122b-2017-spring-project3?version=2#L131\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>131</th><th>131</th><td class=\"l\"><span></span></td>\n                  </tr><tr>\n                          <th>132</th><th>132</th><td class=\"l\"><span>=== Remarks: ===</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>133</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* Incaseof<del>&nbsp;</del>inconsistencies between the provided data with respect to the relational schema, make sure your program does not crash. The inconsistent data must be reported to the user (print the element name and node value) and your program should resume processing.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>133</th><td class=\"r\"><span>&nbsp;* Incaseof<ins></ins>inconsistencies between the provided data with respect to the relational schema, make sure your program does not crash. The inconsistent data must be reported to the user (print the element name and node value) and your program should resume processing.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>134</th><th>134</th><td class=\"l\"><span>&nbsp;* Use NULL for missing values when inserting records into the database.</span></td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>135</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* For inconsistent values with the schema (like non-integer values for volume or roman<del>&nbsp;</del>numbers)you can treat them as NULL.</span></td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>135</th><td class=\"r\"><span>&nbsp;* For inconsistent values with the schema (like non-integer values for volume or roman<ins></ins>numbers)you can treat them as NULL.</span></td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>136</th><th>136</th><td class=\"l\"><span>&nbsp;* For entries with multiple ISBN/publishers/etc, only use one of them.</span></td>\n                  </tr><tr>\n                          <th>137</th><th>137</th><td class=\"l\"><span>&nbsp;* Keep track of duplicate entries like multiple occurrences of an author and insert them only once.</span></td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n      </div>\n  </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/wiki/public/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/wiki/public/about\"><strong>Trac 1.0.13</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">Visit the Trac open source project at<br /><a href=\"http://trac.edgewall.org/\">http://trac.edgewall.org/</a></p>\n    </div>\n  </body>\n</html>\n", "encoding": "utf-8"}