{"url": "http://hobbes.ics.uci.edu/quickstart.shtml", "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\n<head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"hobbes.css\"></link>\n<title>Hobbes Genome Sequence Mapping, UC Irvine</title></head><body><div id=\"container\">\n<div id=\"header\"><div id=\"logosection\">\n<table><tr><td style=\"padding-left:15px;\">\n<h1><a href=\"http://hobbes.ics.uci.edu/\"><b>Hobbes</b></a></h1>\n<h2><a href=\"http://hobbes.ics.uci.edu\">Genome Sequence Mapping</a></h2>\n<h3><a href=\"http://isg.ics.uci.edu\">Information Systems Group</a> </h3> <h3> <a href=\"http://www.igb.uci.edu/\">Institute for Genomics and Bioinformatics</a></h3>\n<h4><a href=\"http://www.ics.uci.edu\">Bren School of ICS</a><a href=\"http://www.uci.edu\">UC Irvine</a></h4>\n</td></tr></table></div>\n<div id=\"picture\">\n<img  src=\"images/dna.jpg\" width=\"298\" height=\"117\"></img></div>\n</div>\n<div id=\"navigation\"><ul><li><a href=\"index.shtml\">About</a></li>\n<li class=\"\"><a href=\"download.shtml\">Downloads</a></li>\n<li class=\"\"><a href=\"quickstart.shtml\">Quick Start</a></li>\n<li class=\"\"><a href=\"examples.shtml\">Examples</a></li>\n<li class=\"\"><a href=\"manual.shtml\">Manual</a></li>\n<li class=\"\"><a href=\"people.shtml\">People</a></li>\n<li class=\"\"><a href=\"faq.shtml\">FAQ</a></li>\n<li class=\"\"><a href=\"contact.shtml\">Contact</a></li>\n</ul></div>\n\n\n<div id=\"maincontent\">\n<div id = \"quickstart\">\n<h2 id=\"about\">Quick Start</h2>\n<h3>Compiling Hobbes3</h3>\nDownload <a href=\"download.shtml\">Hobbes3 source</a> and compile it as follows.\n<pre>\n$ tar -zxvf hobbes-3.0.tar.gz\n$ cd hobbes3.0\n$ ./build.sh nocompress\n$ cd build\n$ ./hobbes --help\n</pre>\n</div>\n      \n<h3>Building an index</h3>\n\nGiven a genome sequence file \"genome.fasta\", you can build an index by issuing\nthe following command:\n<pre>\n\n$ ./hobbes-index --sref genome.fasta -i genome.hix -g 11 -p 4\n\n</pre>\nThe command makes an index file named \"genome.hix\" using gram length 11.\n<tt>hobbes-index</tt> uses <tt>--sref</tt> to specify an input genome sequence\nfile, <tt>-i</tt> to specify output index file, and <tt>-g</tt> to specify the\ngram length. <tt>-p</tt> enables multithreading and the command builds an index\nusing 4 threads.\n\n<small>\n<pre>\n* Hobbes2 builds an index very fast. For the whole human genome of HG18, for example,\n  the command above built an index in 9 minutes on a machine with 94 GB of RAM, and\n  dual quad-core Intel Xeons X5670 at 2.93 GHz, running a 64-bit Ubuntu OS.\n</pre>  \n</small>\n\n<h3>Aligning single-end reads</h3>\n\nGiven a read file \"read.fastq\" and a genome sequence file \"genome.fasta\" with\nits index file \"genome.hix\", the following command finds all mappings within\nedit distance 5.\n<pre>\n\n$ ./hobbes -q read.fastq --sref genome.fasta \\\n           -i genome.hix -a --indel -v 5 -p 16 --mapout output.sam\n\n</pre>\n<tt>hobbes</tt> uses <tt>-q</tt> to specify an input read file, <tt>--sref</tt>\nto specify a genome file, and <tt>-i</tt> to specify an index file for the\ngenome file. By using <tt>-a</tt>, you can make <tt>hobbes</tt> produce all\nmapping locations.<tt>--indel</tt> indicates gapped alignment with an edit\ndistance threshold of 5, which is specified by <tt>-v</tt>. <tt>-p</tt> enables\nmultithreading and the command aligns reads using 16 threads. <tt>hobbes</tt>\nproduces results in the SAM format. The command output results to a file named\n\"output.sam\", which is specified by <tt>--mapout</tt>. If <tt>--mapout</tt> is\nnot specified, <tt>hobbes</tt> outputs results to <tt>stdout</tt>. In this\ncase, you can redirect results to an output file as follows.\n<pre>\n  \n$ ./hobbes -q read.fastq --sref genome.fasta \\\n           -i genome.hix -a --indel -v 5 -p 16 > output.sam\n\n</pre>\nIf you want to align reads with a Hamming distance threshold instead of an edit\ndisance, you can replace <tt>--indel</tt> with <tt>--hamming</tt> as follows.\n<pre>\n\n$ ./hobbes -q read.fastq --sref genome.fasta \\\n           -i genome.hix -a --hamming -v 5 -p 16 --mapout output.sam\n\n</pre>\nIf you specify the number of reads, N, using <tt>-n</tt>, <tt>hobbes</tt> maps\nonly the first N reads from the input read file. By using <tt>-n</tt>, you can\nsee the progress with an estimated time to complete alignment. It can be useful\nfor testing your pipeline.\n<pre>\n\n$ ./hobbes -q read.fastq --sref genome.fasta \\\n           -i genome.hix -a --indel -v 5 -n 10000 -p 16 --mapout output.sam\n\n76% MAPPING READS: 7616/10000; 0'26\"/0'35\"\n\n</pre>\n\n<h3>Aligning paired-end reads</h3>\n\nTo align paired-end reads, you should use <tt>--pe</tt> and specify two input\nread files using <tt>--seqfq1</tt> and <tt>--seqfq2</tt>, respectively. You\nalso need to specify minimum insert size and maximum insert size\nusing <tt>--min</tt> and <tt>--max</tt>, respectively. Other options are\nexactly the same as those of single-end alignment. Given two read files\n\"read1.fastq\" and \"read2.fastq\", for example, the following command produces\npaired-end mappings.\n<pre>\n\n$ ./hobbes --pe --seqfq1 read1.fastq --seqfq2 read2.fastq --min 110 --max 290 \\\n           --sref genome.fasta -i genome.hix -a --indel -v 5  -n 10000 -p 16  \\\n           --mapout output.sam\n\n</pre>\n</div>\n      \n\n<div id=\"acknowledge\"><p align=\"center\" font-size=\"0.6em\"> \u00a9 2015 ISG | Website maintained by <!--<a href=\"http://www.ics.uci.edu/~ahmadia/\">-->Jongik Kim | Created by <a href=\"http://www.ics.uci.edu/~yunh/\">Yun Huang</a> | Original design <a href=\"http://andreasviklund.com/\"> Andreas Viklund </a></p></div><div id=\"footer\"><p>Last Updated on Jul 13, 2015</p></div></div></body></html>\n\n", "encoding": "ISO-8859-1"}