{"url": "http://mondego.ics.uci.edu/projects/SourcererCC/precision/TP-1.txt", "content": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/25479.java 191 202\n/home/jeff/BigCloneBench/sample/default/111615.java 181 189\n----------------------------------------\n        public String visitClassType(ClassType type, Void p) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"C{\");\n            if (type.outerType != null) {\n                sb.append(print(type.outerType));\n                sb.append(\".\");\n            }\n            sb.append(type.name);\n            if (type.typeArgs != null) sb.append(print(\"<\", type.typeArgs, \">\"));\n            sb.append(\"}\");\n            return sb.toString();\n        }\n\n----------------------------------------\n        public String visitClassSigType(ClassSigType type, Void p) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"CS{\");\n            if (type.typeParamTypes != null) sb.append(print(\"<\", type.typeParamTypes, \">\"));\n            sb.append(print(type.superclassType));\n            if (type.superinterfaceTypes != null) sb.append(print(\"i(\", type.superinterfaceTypes, \")\"));\n            sb.append(\"}\");\n            return sb.toString();\n        }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1725393.java 1122 1133\n/home/jeff/BigCloneBench/sample/selected/1778922.java 1122 1133\n----------------------------------------\n    protected boolean sameSenoneSequence(int[] ssid1, int[] ssid2) {\n        if (ssid1.length == ssid2.length) {\n            for (int i = 0; i < ssid1.length; i++) {\n                if (ssid1[i] != ssid2[i]) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n----------------------------------------\n    protected boolean sameSenoneSequence(int[] ssid1, int[] ssid2) {\n        if (ssid1.length == ssid2.length) {\n            for (int i = 0; i < ssid1.length; i++) {\n                if (ssid1[i] != ssid2[i]) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/1297.java 56 63\n/home/jeff/BigCloneBench/sample/default/54578.java 56 63\n----------------------------------------\n    private static void add(Configuration cfg, String s) {\n        int pos = s.indexOf('=');\n        if (pos == -1) {\n            cfg.put(s, \"\");\n        } else {\n            cfg.put(s.substring(0, pos), s.substring(pos + 1));\n        }\n    }\n\n----------------------------------------\n    private static void add(Configuration cfg, String s) {\n        int pos = s.indexOf('=');\n        if (pos == -1) {\n            cfg.put(s, \"\");\n        } else {\n            cfg.put(s.substring(0, pos), s.substring(pos + 1));\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2638229.java 91 96\n/home/jeff/BigCloneBench/sample/selected/2001558.java 27 32\n----------------------------------------\n    public static TsHandler getInstance() {\n        if (instance == null) {\n            instance = new TsHandler();\n        }\n        return instance;\n    }\n\n----------------------------------------\n    public static synchronized UserService getInstance() {\n        if (instance == null) {\n            instance = new UserService();\n        }\n        return instance;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/6320.java 297 306\n/home/jeff/BigCloneBench/sample/default/19573.java 297 306\n----------------------------------------\n    public void query() throws IOException, TransformerConfigurationException {\n        SAXTransformerFactory tf = (SAXTransformerFactory) TransformerFactory.newInstance();\n        Templates xslt = loadDcmDirXSL(tf);\n        DirReader reader = fact.newDirReader(dirFile);\n        try {\n            query(\"\", 1, 0, reader.getFirstRecordBy(null, keys, ignoreCase), tf, xslt);\n        } finally {\n            reader.close();\n        }\n    }\n\n----------------------------------------\n    public void query() throws IOException, TransformerConfigurationException {\n        SAXTransformerFactory tf = (SAXTransformerFactory) TransformerFactory.newInstance();\n        Templates xslt = loadDcmDirXSL(tf);\n        DirReader reader = fact.newDirReader(dirFile);\n        try {\n            query(\"\", 1, 0, reader.getFirstRecordBy(null, keys, ignoreCase), tf, xslt);\n        } finally {\n            reader.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/114239.java 1532 1546\n/home/jeff/BigCloneBench/sample/default/59932.java 1006 1019\n----------------------------------------\n    public void test124() throws Exception {\n        byte[] buffer;\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        CsvWriter writer = new CsvWriter(stream, ',', Charset.forName(\"ISO-8859-1\"));\n        writer.setRecordDelimiter(';');\n        writer.setUseTextQualifier(false);\n        writer.setEscapeMode(CsvWriter.ESCAPE_MODE_BACKSLASH);\n        writer.write(\"1;2\");\n        writer.endRecord();\n        writer.close();\n        buffer = stream.toByteArray();\n        stream.close();\n        String data = Charset.forName(\"ISO-8859-1\").decode(ByteBuffer.wrap(buffer)).toString();\n        Assert.assertEquals(\"1\\\\;2;\", data);\n    }\n\n----------------------------------------\n    public void test56() throws Exception {\n        byte[] buffer;\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        CsvWriter writer = new CsvWriter(stream, '\\t', Charset.forName(\"ISO-8859-1\"));\n        writer.write(\"1,2\");\n        writer.write(\"3\");\n        writer.write(\"blah \\\"some stuff in quotes\\\"\");\n        writer.endRecord();\n        writer.close();\n        buffer = stream.toByteArray();\n        stream.close();\n        String data = Charset.forName(\"ISO-8859-1\").decode(ByteBuffer.wrap(buffer)).toString();\n        Assert.assertEquals(\"1,2\\t3\\t\\\"blah \\\"\\\"some stuff in quotes\\\"\\\"\\\"\\r\\n\", data);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/67669.java 168 184\n/home/jeff/BigCloneBench/sample/default/106112.java 187 203\n----------------------------------------\n    public void test5() throws Exception {\n        String data = \"1\\n2\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.getRawRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"2\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"2\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        Assert.assertEquals(\"\", reader.getRawRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test6() throws Exception {\n        String data = \"1\\r\\n2\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.getRawRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"2\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"2\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        Assert.assertEquals(\"\", reader.getRawRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2202740.java 153 183\n/home/jeff/BigCloneBench/sample/selected/225359.java 151 181\n----------------------------------------\n    private boolean _jspx_meth_html_005flink_005f0(PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.LinkTag _jspx_th_html_005flink_005f0 = (org.apache.struts.taglib.html.LinkTag) _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.get(org.apache.struts.taglib.html.LinkTag.class);\n        _jspx_th_html_005flink_005f0.setPageContext(_jspx_page_context);\n        _jspx_th_html_005flink_005f0.setParent(null);\n        _jspx_th_html_005flink_005f0.setStyleId(\"incluir\");\n        _jspx_th_html_005flink_005f0.setHref(\"login.do\");\n        int _jspx_eval_html_005flink_005f0 = _jspx_th_html_005flink_005f0.doStartTag();\n        if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.pushBody();\n                _jspx_th_html_005flink_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);\n                _jspx_th_html_005flink_005f0.doInitBody();\n            }\n            do {\n                out.write(\"In\u00edcio\");\n                int evalDoAfterBody = _jspx_th_html_005flink_005f0.doAfterBody();\n                if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN) break;\n            } while (true);\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.popBody();\n            }\n        }\n        if (_jspx_th_html_005flink_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n        return false;\n    }\n\n----------------------------------------\n    private boolean _jspx_meth_html_005flink_005f0(PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.LinkTag _jspx_th_html_005flink_005f0 = (org.apache.struts.taglib.html.LinkTag) _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.get(org.apache.struts.taglib.html.LinkTag.class);\n        _jspx_th_html_005flink_005f0.setPageContext(_jspx_page_context);\n        _jspx_th_html_005flink_005f0.setParent(null);\n        _jspx_th_html_005flink_005f0.setStyleId(\"incluir\");\n        _jspx_th_html_005flink_005f0.setHref(\"login.do\");\n        int _jspx_eval_html_005flink_005f0 = _jspx_th_html_005flink_005f0.doStartTag();\n        if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.pushBody();\n                _jspx_th_html_005flink_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);\n                _jspx_th_html_005flink_005f0.doInitBody();\n            }\n            do {\n                out.write(\"In\u00edcio\");\n                int evalDoAfterBody = _jspx_th_html_005flink_005f0.doAfterBody();\n                if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN) break;\n            } while (true);\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.popBody();\n            }\n        }\n        if (_jspx_th_html_005flink_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/939512.java 85 90\n/home/jeff/BigCloneBench/sample/selected/1656760.java 328 333\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_MyChannel(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        EventChannel _ob_r = MyChannel();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        EventChannelHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_remove_all_filters(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        remove_all_filters();\n        out = handler.createReply();\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/70505.java 524 546\n/home/jeff/BigCloneBench/sample/default/103146.java 629 646\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/497716.java 267 277\n/home/jeff/BigCloneBench/sample/selected/522719.java 320 330\n----------------------------------------\n    public static int nullSafeHashCode(Object[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + nullSafeHashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n    public static int nullSafeHashCode(float[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + hashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1169293.java 339 364\n/home/jeff/BigCloneBench/sample/selected/69355.java 228 253\n----------------------------------------\n    public boolean Great(Float x) {\n        long e1 = m_E;\n        long e2 = x.m_E;\n        long v1 = m_Val;\n        long v2 = x.m_Val;\n        while (e1 != e2) {\n            if (e1 > e2) {\n                if (Math.abs(v1) < maxLimit) {\n                    v1 *= 10;\n                    e1--;\n                } else {\n                    v2 /= 10;\n                    e2++;\n                }\n            } else if (e1 < e2) {\n                if (Math.abs(v2) < maxLimit) {\n                    v2 *= 10;\n                    e2--;\n                } else {\n                    v1 /= 10;\n                    e1++;\n                }\n            }\n        }\n        return v1 > v2;\n    }\n\n----------------------------------------\n    public boolean Great(Float x) {\n        long e1 = m_E;\n        long e2 = x.m_E;\n        long v1 = m_Val;\n        long v2 = x.m_Val;\n        while (e1 != e2) {\n            if (e1 > e2) {\n                if (Math.abs(v1) < Long.MAX_VALUE / 100) {\n                    v1 *= 10;\n                    e1--;\n                } else {\n                    v2 /= 10;\n                    e2++;\n                }\n            } else if (e1 < e2) {\n                if (Math.abs(v2) < Long.MAX_VALUE / 100) {\n                    v2 *= 10;\n                    e2--;\n                } else {\n                    v1 /= 10;\n                    e1++;\n                }\n            }\n        }\n        return v1 > v2;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2576682.java 8 39\n/home/jeff/BigCloneBench/sample/selected/871670.java 12 42\n----------------------------------------\n    public boolean download(String address, String localFileName) {\n        OutputStream out = null;\n        URLConnection conn = null;\n        InputStream in = null;\n        try {\n            URL url = new URL(address);\n            out = new BufferedOutputStream(new FileOutputStream(localFileName));\n            conn = url.openConnection();\n            in = conn.getInputStream();\n            byte[] buffer = new byte[1024];\n            int numRead;\n            long numWritten = 0;\n            while ((numRead = in.read(buffer)) != -1) {\n                out.write(buffer, 0, numRead);\n                numWritten += numRead;\n            }\n            return true;\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        } finally {\n            try {\n                if (in != null) {\n                    in.close();\n                }\n                if (out != null) {\n                    out.close();\n                }\n            } catch (IOException ioe) {\n            }\n        }\n        return false;\n    }\n\n----------------------------------------\n    public static void download(String address, String localFileName) {\n        OutputStream out = null;\n        URLConnection conn = null;\n        InputStream in = null;\n        try {\n            URL url = new URL(address);\n            out = new BufferedOutputStream(new FileOutputStream(localFileName));\n            conn = url.openConnection();\n            in = conn.getInputStream();\n            byte[] buffer = new byte[1024];\n            int numRead;\n            long numWritten = 0;\n            while ((numRead = in.read(buffer)) != -1) {\n                out.write(buffer, 0, numRead);\n                numWritten += numRead;\n            }\n            System.out.println(localFileName + \"\\t\" + numWritten);\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        } finally {\n            try {\n                if (in != null) {\n                    in.close();\n                }\n                if (out != null) {\n                    out.close();\n                }\n            } catch (IOException ioe) {\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/124923.java 1041 1055\n/home/jeff/BigCloneBench/sample/default/102869.java 1138 1153\n----------------------------------------\n    public void test58() throws Exception {\n        byte[] buffer;\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        CsvWriter writer = new CsvWriter(stream, '\\t', Charset.forName(\"ISO-8859-1\"));\n        writer.write(\"data\\r\\nmore data\");\n        writer.write(\" 3\\t\", false);\n        writer.write(\" 3\\t\");\n        writer.write(\" 3\\t\", true);\n        writer.endRecord();\n        writer.close();\n        buffer = stream.toByteArray();\n        stream.close();\n        String data = Charset.forName(\"ISO-8859-1\").decode(ByteBuffer.wrap(buffer)).toString();\n        Assert.assertEquals(\"\\\"data\\r\\nmore data\\\"\\t3\\t3\\t\\\" 3\\t\\\"\\r\\n\", data);\n    }\n\n----------------------------------------\n    public void test74() throws Exception {\n        byte[] buffer;\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        CsvWriter writer = new CsvWriter(stream, ',', Charset.forName(\"ISO-8859-1\"));\n        writer.setEscapeMode(CsvWriter.ESCAPE_MODE_BACKSLASH);\n        writer.setUseTextQualifier(false);\n        writer.write(\"1,2\");\n        writer.write(\"3\");\n        writer.write(\"blah \\\"some stuff in quotes\\\"\");\n        writer.endRecord();\n        writer.close();\n        buffer = stream.toByteArray();\n        stream.close();\n        String data = Charset.forName(\"ISO-8859-1\").decode(ByteBuffer.wrap(buffer)).toString();\n        Assert.assertEquals(\"1\\\\,2,3,blah \\\"some stuff in quotes\\\"\\r\\n\", data);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/73115.java 121 131\n/home/jeff/BigCloneBench/sample/default/73188.java 121 131\n----------------------------------------\n    Converter(SkinProperty[] allProps, Hashtable romizedProps) {\n        this.allProps = new Hashtable();\n        for (int i = 0; i < allProps.length; ++i) {\n            SkinProperty p = allProps[i];\n            this.allProps.put(p.name, p);\n        }\n        this.allPropsArray = allProps;\n        this.romizedProps = romizedProps;\n        this.missingProps = new Vector();\n        this.unknownProps = new Vector();\n    }\n\n----------------------------------------\n    Converter(SkinProperty[] allProps, Hashtable romizedProps) {\n        this.allProps = new Hashtable();\n        for (int i = 0; i < allProps.length; ++i) {\n            SkinProperty p = allProps[i];\n            this.allProps.put(p.name, p);\n        }\n        this.allPropsArray = allProps;\n        this.romizedProps = romizedProps;\n        this.missingProps = new Vector();\n        this.unknownProps = new Vector();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/57136.java 215 226\n/home/jeff/BigCloneBench/sample/default/73101.java 200 214\n----------------------------------------\n    public void execute(String[] args, int offset) throws InterruptedException, IOException, GeneralSecurityException {\n        switch(mode) {\n            case ECHO:\n                echo();\n                break;\n            case SEND:\n                send(args, offset);\n                break;\n            default:\n                throw new RuntimeException(\"Illegal mode: \" + mode);\n        }\n    }\n\n----------------------------------------\n    public void execute(String[] args, int offset) throws InterruptedException, IOException, GeneralSecurityException {\n        switch(mode) {\n            case ECHO:\n                echo();\n                break;\n            case SEND:\n                send(args, offset);\n                break;\n            case POLL:\n                poll();\n                break;\n            default:\n                throw new RuntimeException(\"Illegal mode: \" + mode);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/6937.java 509 520\n/home/jeff/BigCloneBench/sample/default/132787.java 509 520\n----------------------------------------\n    private void doRemove(DirWriter w, int[] counter, boolean delFiles) throws IOException {\n        for (DirRecord rec = w.getFirstRecord(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (patientIDs.contains(rec.getDataset().getString(Tags.PatientID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                counter[1] += w.remove(rec);\n            } else if (doRemoveStudy(w, rec, counter, delFiles)) {\n                counter[1] += w.remove(rec);\n            }\n        }\n    }\n\n----------------------------------------\n    private void doRemove(DirWriter w, int[] counter, boolean delFiles) throws IOException {\n        for (DirRecord rec = w.getFirstRecord(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (patientIDs.contains(rec.getDataset().getString(Tags.PatientID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                counter[1] += w.remove(rec);\n            } else if (doRemoveStudy(w, rec, counter, delFiles)) {\n                counter[1] += w.remove(rec);\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/51387.java 43 52\n/home/jeff/BigCloneBench/sample/default/122700.java 43 52\n----------------------------------------\n    public void testCommas() {\n        String sequence = \"1,2,3,4,5\";\n        assertEquals(sequence, sequenceUsingDo(1, 5));\n        assertEquals(sequence, sequenceUsingFor(1, 5));\n        assertEquals(sequence, sequenceUsingWhile(1, 5));\n        sequence = \"8\";\n        assertEquals(sequence, sequenceUsingDo(8, 8));\n        assertEquals(sequence, sequenceUsingFor(8, 8));\n        assertEquals(sequence, sequenceUsingWhile(8, 8));\n    }\n\n----------------------------------------\n    public void testCommas() {\n        String sequence = \"1,2,3,4,5\";\n        assertEquals(sequence, sequenceUsingDo(1, 5));\n        assertEquals(sequence, sequenceUsingFor(1, 5));\n        assertEquals(sequence, sequenceUsingWhile(1, 5));\n        sequence = \"8\";\n        assertEquals(sequence, sequenceUsingDo(8, 8));\n        assertEquals(sequence, sequenceUsingFor(8, 8));\n        assertEquals(sequence, sequenceUsingWhile(8, 8));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/18466.java 401 406\n/home/jeff/BigCloneBench/sample/default/33571.java 379 384\n----------------------------------------\n    private void doOverwrite(Dataset ds) {\n        for (Iterator it = overwrite.iterator(); it.hasNext(); ) {\n            DcmElement el = (DcmElement) it.next();\n            ds.putXX(el.tag(), el.vr(), el.getByteBuffer());\n        }\n    }\n\n----------------------------------------\n    private void doOverwrite(Dataset ds) {\n        for (Iterator it = overwrite.iterator(); it.hasNext(); ) {\n            DcmElement el = (DcmElement) it.next();\n            ds.putXX(el.tag(), el.vr(), el.getByteBuffer());\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/10101.java 640 645\n/home/jeff/BigCloneBench/sample/default/41669.java 519 524\n----------------------------------------\n    public String _getFileNameRoot() {\n        if (0 < writer__iFileNameRoots.length) {\n            return writer__iFileNameRoots[writer__iCurrentFileIndex];\n        }\n        return \"\";\n    }\n\n----------------------------------------\n    public String _getFileNameRoot() {\n        if (0 < writer__iFileNameRoots.length) {\n            return writer__iFileNameRoots[writer__iCurrentFileIndex];\n        }\n        return \"\";\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2213635.java 61 66\n/home/jeff/BigCloneBench/sample/selected/1138251.java 45 50\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_MyAdmin(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        SupplierAdmin _ob_r = MyAdmin();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        SupplierAdminHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_supports_dynamic_properties(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        boolean _ob_r = supports_dynamic_properties();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        out.write_boolean(_ob_r);\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/124021.java 8 31\n/home/jeff/BigCloneBench/sample/default/50984.java 14 37\n----------------------------------------\n    public static void doVersionCheck(View view) {\n        view.showWaitCursor();\n        try {\n            URL url = new URL(jEdit.getProperty(\"version-check.url\"));\n            InputStream in = url.openStream();\n            BufferedReader bin = new BufferedReader(new InputStreamReader(in));\n            String line;\n            String version = null;\n            String build = null;\n            while ((line = bin.readLine()) != null) {\n                if (line.startsWith(\".version\")) version = line.substring(8).trim(); else if (line.startsWith(\".build\")) build = line.substring(6).trim();\n            }\n            bin.close();\n            if (version != null && build != null) {\n                if (jEdit.getBuild().compareTo(build) < 0) newVersionAvailable(view, version, url); else {\n                    GUIUtilities.message(view, \"version-check\" + \".up-to-date\", new String[0]);\n                }\n            }\n        } catch (IOException e) {\n            String[] args = { jEdit.getProperty(\"version-check.url\"), e.toString() };\n            GUIUtilities.error(view, \"read-error\", args);\n        }\n        view.hideWaitCursor();\n    }\n\n----------------------------------------\n    public static void doVersionCheck(View view) {\n        view.showWaitCursor();\n        try {\n            URL url = new URL(jEdit.getProperty(\"version-check.url\"));\n            InputStream in = url.openStream();\n            BufferedReader bin = new BufferedReader(new InputStreamReader(in));\n            String line;\n            String version = null;\n            String build = null;\n            while ((line = bin.readLine()) != null) {\n                if (line.startsWith(\".version\")) version = line.substring(8).trim(); else if (line.startsWith(\".build\")) build = line.substring(6).trim();\n            }\n            bin.close();\n            if (version != null && build != null) {\n                if (jEdit.getBuild().compareTo(build) < 0) newVersionAvailable(view, version, url); else {\n                    GUIUtilities.message(view, \"version-check\" + \".up-to-date\", new String[0]);\n                }\n            }\n        } catch (IOException e) {\n            String[] args = { jEdit.getProperty(\"version-check.url\"), e.toString() };\n            GUIUtilities.error(view, \"read-error\", args);\n        }\n        view.hideWaitCursor();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/238734.java 462 477\n/home/jeff/BigCloneBench/sample/selected/967656.java 308 324\n----------------------------------------\n    private boolean _jspx_meth_html_005fhidden_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.HiddenTag _jspx_th_html_005fhidden_005f3 = (org.apache.struts.taglib.html.HiddenTag) _005fjspx_005ftagPool_005fhtml_005fhidden_005fstyleId_005fproperty_005fnobody.get(org.apache.struts.taglib.html.HiddenTag.class);\n        _jspx_th_html_005fhidden_005f3.setPageContext(_jspx_page_context);\n        _jspx_th_html_005fhidden_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);\n        _jspx_th_html_005fhidden_005f3.setProperty(\"idProcedimento\");\n        _jspx_th_html_005fhidden_005f3.setStyleId(\"idProcedimento\");\n        int _jspx_eval_html_005fhidden_005f3 = _jspx_th_html_005fhidden_005f3.doStartTag();\n        if (_jspx_th_html_005fhidden_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005fhidden_005fstyleId_005fproperty_005fnobody.reuse(_jspx_th_html_005fhidden_005f3);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005fhidden_005fstyleId_005fproperty_005fnobody.reuse(_jspx_th_html_005fhidden_005f3);\n        return false;\n    }\n\n----------------------------------------\n    private boolean _jspx_meth_html_005ftext_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.TextTag _jspx_th_html_005ftext_005f2 = (org.apache.struts.taglib.html.TextTag) _005fjspx_005ftagPool_005fhtml_005ftext_005fstyleId_005fsize_005fproperty_005fnobody.get(org.apache.struts.taglib.html.TextTag.class);\n        _jspx_th_html_005ftext_005f2.setPageContext(_jspx_page_context);\n        _jspx_th_html_005ftext_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);\n        _jspx_th_html_005ftext_005f2.setProperty(\"paciente\");\n        _jspx_th_html_005ftext_005f2.setStyleId(\"paciente\");\n        _jspx_th_html_005ftext_005f2.setSize(\"50\");\n        int _jspx_eval_html_005ftext_005f2 = _jspx_th_html_005ftext_005f2.doStartTag();\n        if (_jspx_th_html_005ftext_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005ftext_005fstyleId_005fsize_005fproperty_005fnobody.reuse(_jspx_th_html_005ftext_005f2);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005ftext_005fstyleId_005fsize_005fproperty_005fnobody.reuse(_jspx_th_html_005ftext_005f2);\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/682167.java 160 192\n/home/jeff/BigCloneBench/sample/selected/682167.java 194 226\n----------------------------------------\n    public static String stripTags(String in, boolean stripBRTag) {\n        if (in == null) return null;\n        char ch;\n        int i = 0;\n        int last = 0;\n        char[] input = in.toCharArray();\n        int len = input.length;\n        StringBuilder out = new StringBuilder((int) (len * 1.3));\n        for (; i < len; i++) {\n            ch = input[i];\n            if (ch > '>') {\n            } else if (ch == '<') {\n                if (!stripBRTag && i + 3 < len && input[i + 1] == 'b' && input[i + 2] == 'r' && input[i + 3] == '>') {\n                    i += 3;\n                    continue;\n                }\n                if (i > last) {\n                    if (last > 0) out.append(\" \");\n                    out.append(input, last, i - last);\n                }\n                last = i + 1;\n            } else if (ch == '>') {\n                last = i + 1;\n            }\n        }\n        if (last == 0) {\n            return in;\n        }\n        if (i > last) {\n            out.append(input, last, i - last);\n        }\n        return out.toString();\n    }\n\n----------------------------------------\n    public static String escapeHTMLTags(String in) {\n        if (in == null) return null;\n        char ch;\n        int i = 0;\n        int last = 0;\n        char[] input = in.toCharArray();\n        int len = input.length;\n        StringBuilder out = new StringBuilder((int) (len * 1.3));\n        for (; i < len; i++) {\n            ch = input[i];\n            if (ch > '>') {\n            } else if (ch == '<') {\n                if (i > last) out.append(input, last, i - last);\n                last = i + 1;\n                out.append(LT_ENCODE);\n            } else if (ch == '>') {\n                if (i > last) out.append(input, last, i - last);\n                last = i + 1;\n                out.append(GT_ENCODE);\n            } else if (ch == '\"') {\n                if (i > last) out.append(input, last, i - last);\n                last = i + 1;\n                out.append(QUOTE_ENCODE);\n            }\n        }\n        if (last == 0) {\n            return in;\n        }\n        if (i > last) {\n            out.append(input, last, i - last);\n        }\n        return out.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/24546.java 667 685\n/home/jeff/BigCloneBench/sample/default/94821.java 662 680\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/31509.java 253 269\n/home/jeff/BigCloneBench/sample/default/111936.java 231 247\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2252238.java 13 21\n/home/jeff/BigCloneBench/sample/selected/2507460.java 331 342\n----------------------------------------\n    public static void pump(InputStream in, OutputStream out) throws IOException {\n        byte[] buffer = new byte[1];\n        int bytes_read = 0;\n        while (bytes_read != -1) {\n            bytes_read = in.read(buffer);\n            if (bytes_read == -1) break;\n            out.write(buffer, 0, bytes_read);\n        }\n    }\n\n----------------------------------------\n    public static void copy(InputStream in, OutputStream out) throws IOException {\n        synchronized (in) {\n            synchronized (out) {\n                byte[] buffer = new byte[256];\n                while (true) {\n                    int bytesRead = in.read(buffer);\n                    if (bytesRead == -1) break;\n                    out.write(buffer, 0, bytesRead);\n                }\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/293134.java 72 80\n/home/jeff/BigCloneBench/sample/selected/2727194.java 76 84\n----------------------------------------\n    public static String getExtension(File f) {\n        String ext = null;\n        String s = f.getName();\n        int i = s.lastIndexOf('.');\n        if (i > 0 && i < s.length() - 1) {\n            ext = s.substring(i + 1).toLowerCase();\n        }\n        return ext;\n    }\n\n----------------------------------------\n    public static String getExtension(File f) {\n        String ext = null;\n        String s = f.getName();\n        int i = s.lastIndexOf('.');\n        if (i > 0 && i < s.length() - 1) {\n            ext = s.substring(i + 1).toLowerCase();\n        }\n        return ext;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/97360.java 548 570\n/home/jeff/BigCloneBench/sample/default/35432.java 648 665\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/129715.java 548 570\n/home/jeff/BigCloneBench/sample/default/106446.java 522 544\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/12172.java 64 71\n/home/jeff/BigCloneBench/sample/default/91574.java 54 62\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/45886.java 73 82\n/home/jeff/BigCloneBench/sample/default/120094.java 64 71\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1059992.java 1101 1112\n/home/jeff/BigCloneBench/sample/selected/1521582.java 1122 1133\n----------------------------------------\n    protected boolean sameSenoneSequence(int[] ssid1, int[] ssid2) {\n        if (ssid1.length == ssid2.length) {\n            for (int i = 0; i < ssid1.length; i++) {\n                if (ssid1[i] != ssid2[i]) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n----------------------------------------\n    protected boolean sameSenoneSequence(int[] ssid1, int[] ssid2) {\n        if (ssid1.length == ssid2.length) {\n            for (int i = 0; i < ssid1.length; i++) {\n                if (ssid1[i] != ssid2[i]) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/34946.java 185 192\n/home/jeff/BigCloneBench/sample/selected/2634974.java 247 258\n----------------------------------------\n    public int indexOf(Object elem) {\n        if (elem == null) {\n            for (int i = 0; i < size; i++) if (elementData[i] == null) return i;\n        } else {\n            for (int i = 0; i < size; i++) if (elem.equals(elementData[i])) return i;\n        }\n        return -1;\n    }\n\n----------------------------------------\n    public int lastIndexOf(Object o) {\n        if (o == null) {\n            for (int i = size - 1; i >= 0; i--) {\n                if (array[i] == null) return (i);\n            }\n        } else {\n            for (int i = size - 1; i >= 0; i--) {\n                if (o.equals(array[i])) return (i);\n            }\n        }\n        return (-1);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/10254.java 64 71\n/home/jeff/BigCloneBench/sample/default/121888.java 64 71\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/113632.java 27 46\n/home/jeff/BigCloneBench/sample/default/44695.java 27 46\n----------------------------------------\n    private static void readAndRewrite(File inFile, File outFile) throws IOException {\n        ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));\n        DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);\n        Dataset ds = DcmObjectFactory.getInstance().newDataset();\n        dcmParser.setDcmHandler(ds.getDcmHandler());\n        dcmParser.parseDcmFile(null, Tags.PixelData);\n        PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        System.out.println(\"reading \" + inFile + \"...\");\n        pdReader.readPixelData(false);\n        ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));\n        DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;\n        ds.writeDataset(out, dcmEncParam);\n        ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());\n        System.out.println(\"writing \" + outFile + \"...\");\n        PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        pdWriter.writePixelData();\n        out.flush();\n        out.close();\n        System.out.println(\"done!\");\n    }\n\n----------------------------------------\n    private static void readAndRewrite(File inFile, File outFile) throws IOException {\n        ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));\n        DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);\n        Dataset ds = DcmObjectFactory.getInstance().newDataset();\n        dcmParser.setDcmHandler(ds.getDcmHandler());\n        dcmParser.parseDcmFile(null, Tags.PixelData);\n        PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        System.out.println(\"reading \" + inFile + \"...\");\n        pdReader.readPixelData(false);\n        ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));\n        DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;\n        ds.writeDataset(out, dcmEncParam);\n        ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());\n        System.out.println(\"writing \" + outFile + \"...\");\n        PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        pdWriter.writePixelData();\n        out.flush();\n        out.close();\n        System.out.println(\"done!\");\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/28532.java 369 379\n/home/jeff/BigCloneBench/sample/default/119807.java 546 557\n----------------------------------------\n    public void test18() throws Exception {\n        String data = \"1\\r\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test29() throws Exception {\n        String data = \"\\\"double\\\\\\\"\\\\\\\"double quotes\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"double\\\"\\\"double quotes\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"\\\"double\\\\\\\"\\\\\\\"double quotes\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/16641.java 308 322\n/home/jeff/BigCloneBench/sample/default/98990.java 308 322\n----------------------------------------\n    private int query(String prefix, int no, int level, DirRecord dr, SAXTransformerFactory tf, Templates xslt) throws IOException, TransformerConfigurationException {\n        int count = 1;\n        for (; dr != null; dr = dr.getNextSiblingBy(null, keys, ignoreCase)) {\n            if (level >= qrLevel) {\n                Dataset ds = dr.getDataset();\n                String prompt = POS_FORMAT.format(ds.getItemOffset()) + prefix + count + \" [\" + dr.getType() + \"] #\" + no;\n                ds.writeDataset(getTransformerHandler(tf, xslt, prompt), dict);\n                ++no;\n            } else {\n                no = query(prefix + count + '.', no, level + 1, dr.getFirstChildBy(null, keys, ignoreCase), tf, xslt);\n            }\n            ++count;\n        }\n        return no;\n    }\n\n----------------------------------------\n    private int query(String prefix, int no, int level, DirRecord dr, SAXTransformerFactory tf, Templates xslt) throws IOException, TransformerConfigurationException {\n        int count = 1;\n        for (; dr != null; dr = dr.getNextSiblingBy(null, keys, ignoreCase)) {\n            if (level >= qrLevel) {\n                Dataset ds = dr.getDataset();\n                String prompt = POS_FORMAT.format(ds.getItemOffset()) + prefix + count + \" [\" + dr.getType() + \"] #\" + no;\n                ds.writeDataset(getTransformerHandler(tf, xslt, prompt), dict);\n                ++no;\n            } else {\n                no = query(prefix + count + '.', no, level + 1, dr.getFirstChildBy(null, keys, ignoreCase), tf, xslt);\n            }\n            ++count;\n        }\n        return no;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/97360.java 650 667\n/home/jeff/BigCloneBench/sample/default/35432.java 648 665\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/243138.java 383 414\n/home/jeff/BigCloneBench/sample/selected/342350.java 314 335\n----------------------------------------\n    private void drawAnchorBox(Graphics2D g2) {\n        Rectangle r = getAnchorRect();\n        int x = r.x;\n        int y = r.y;\n        int width = r.x + r.width - 6;\n        int height = r.y + r.height - 6;\n        int centerx = (x + width) / 2;\n        int centery = (y + height) / 2;\n        Vector<Point> selPts = new Vector<Point>();\n        selPts.add(new Point(centerx, centery));\n        VGArrow vgArrow = (VGArrow) refBase;\n        int quart = vgArrow.getArrowHeadQuarter();\n        if (quart == 0 | quart == 4) {\n            selPts.add(new Point(x, y));\n            selPts.add(new Point(width, height));\n        } else if (quart == 2 | quart == 6) {\n            selPts.add(new Point(x, height));\n            selPts.add(new Point(width, y));\n        }\n        if (quart == 1 | quart == 5) {\n            selPts.add(new Point(x, height / 2));\n            selPts.add(new Point(width, height / 2));\n        }\n        if (quart == 3 | quart == 7) {\n            selPts.add(new Point(width / 2, 0));\n            selPts.add(new Point(width / 2, height));\n        }\n        g2.setColor(Color.green);\n        for (Point kPkt : selPts) {\n            g2.fillRect(kPkt.x, kPkt.y, 6, 6);\n        }\n    }\n\n----------------------------------------\n    private void drawAnchorBox(Graphics2D g2) {\n        Rectangle r = getAnchorRect();\n        int x = r.x;\n        int y = r.y;\n        int width = r.x + r.width - 6;\n        int height = r.y + r.height - 6;\n        int centerx = (x + width) / 2;\n        int centery = (y + height) / 2;\n        Vector<Point> selPts = new Vector<Point>();\n        selPts.add(new Point(x, y));\n        selPts.add(new Point(x, height));\n        selPts.add(new Point(width, y));\n        selPts.add(new Point(width, height));\n        selPts.add(new Point(centerx, y));\n        selPts.add(new Point(centerx, height));\n        selPts.add(new Point(x, centery));\n        selPts.add(new Point(width, centery));\n        g2.setColor(Color.green);\n        for (Point kPkt : selPts) {\n            g2.fillRect(kPkt.x, kPkt.y, 6, 6);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/113166.java 126 138\n/home/jeff/BigCloneBench/sample/default/76337.java 126 138\n----------------------------------------\n    public void testCasting() {\n        List students = new ArrayList();\n        students.add(new Student(\"a\"));\n        students.add(new Student(\"b\"));\n        List names = new ArrayList();\n        Iterator it = students.iterator();\n        while (it.hasNext()) {\n            Student student = (Student) it.next();\n            names.add(student.getLastName());\n        }\n        assertEquals(\"a\", names.get(0));\n        assertEquals(\"b\", names.get(1));\n    }\n\n----------------------------------------\n    public void testCasting() {\n        List students = new ArrayList();\n        students.add(new Student(\"a\"));\n        students.add(new Student(\"b\"));\n        List names = new ArrayList();\n        Iterator it = students.iterator();\n        while (it.hasNext()) {\n            Student student = (Student) it.next();\n            names.add(student.getLastName());\n        }\n        assertEquals(\"a\", names.get(0));\n        assertEquals(\"b\", names.get(1));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/26122.java 620 625\n/home/jeff/BigCloneBench/sample/default/118575.java 579 584\n----------------------------------------\n    public void _setFileNameSuffix(String rSuffix) {\n        if (null == rSuffix) {\n            return;\n        }\n        writer__iFileNameSuffix = rSuffix;\n    }\n\n----------------------------------------\n    public void _setFileNameSuffix(String rSuffix) {\n        if (null == rSuffix) {\n            return;\n        }\n        writer__iFileNameSuffix = rSuffix;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/47314.java 148 158\n/home/jeff/BigCloneBench/sample/selected/1366120.java 119 129\n----------------------------------------\n    public int compare(int row1, int row2) {\n        compares++;\n        for (int level = 0; level < sortingColumns.size(); level++) {\n            int column = sortingColumns.elementAt(level);\n            int result = compareRowsByColumn(row1, row2, column);\n            if (result != 0) {\n                return ascending ? result : -result;\n            }\n        }\n        return 0;\n    }\n\n----------------------------------------\n    public int compare(int row1, int row2) {\n        compares++;\n        for (int level = 0; level < sortingColumns.size(); level++) {\n            Integer column = (Integer) sortingColumns.elementAt(level);\n            int result = compareRowsByColumn(row1, row2, column.intValue());\n            if (result != 0) {\n                return ascending ? result : -result;\n            }\n        }\n        return 0;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/76273.java 159 173\n/home/jeff/BigCloneBench/sample/default/11030.java 159 173\n----------------------------------------\n    public void testPartialDimensions() {\n        final int rows = 3;\n        int[][] matrix = new int[rows][];\n        matrix[0] = new int[] { 0 };\n        matrix[1] = new int[] { 1, 2 };\n        matrix[2] = new int[] { 3, 4, 5 };\n        assertEquals(1, matrix[1][0]);\n        assertEquals(5, matrix[2][2]);\n        int[][] matrix2 = { { 0 }, { 1, 2 }, { 3, 4, 5 } };\n        assertEquals(1, matrix2[1][0]);\n        assertEquals(5, matrix2[2][2]);\n        int[] z1 = { 3, 4, 5 };\n        int[] z2 = { 3, 4, 5 };\n        assertTrue(Arrays.equals(z1, z2));\n    }\n\n----------------------------------------\n    public void testPartialDimensions() {\n        final int rows = 3;\n        int[][] matrix = new int[rows][];\n        matrix[0] = new int[] { 0 };\n        matrix[1] = new int[] { 1, 2 };\n        matrix[2] = new int[] { 3, 4, 5 };\n        assertEquals(1, matrix[1][0]);\n        assertEquals(5, matrix[2][2]);\n        int[][] matrix2 = { { 0 }, { 1, 2 }, { 3, 4, 5 } };\n        assertEquals(1, matrix2[1][0]);\n        assertEquals(5, matrix2[2][2]);\n        int[] z1 = { 3, 4, 5 };\n        int[] z2 = { 3, 4, 5 };\n        assertTrue(Arrays.equals(z1, z2));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/497716.java 752 771\n/home/jeff/BigCloneBench/sample/selected/1782576.java 705 724\n----------------------------------------\n    public static String nullSafeToString(long[] array) {\n        if (array == null) {\n            return NULL_STRING;\n        }\n        int length = array.length;\n        if (length == 0) {\n            return EMPTY_ARRAY;\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < length; i++) {\n            if (i == 0) {\n                sb.append(ARRAY_START);\n            } else {\n                sb.append(ARRAY_ELEMENT_SEPARATOR);\n            }\n            sb.append(array[i]);\n        }\n        sb.append(ARRAY_END);\n        return sb.toString();\n    }\n\n----------------------------------------\n    public static String nullSafeToString(int[] array) {\n        if (array == null) {\n            return NULL_STRING;\n        }\n        int length = array.length;\n        if (length == 0) {\n            return EMPTY_ARRAY;\n        }\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < length; i++) {\n            if (i == 0) {\n                buffer.append(ARRAY_START);\n            } else {\n                buffer.append(ARRAY_ELEMENT_SEPARATOR);\n            }\n            buffer.append(array[i]);\n        }\n        buffer.append(ARRAY_END);\n        return buffer.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/8509.java 231 247\n/home/jeff/BigCloneBench/sample/default/128156.java 231 247\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/114239.java 334 353\n/home/jeff/BigCloneBench/sample/default/73729.java 1684 1702\n----------------------------------------\n    public void test16() throws Exception {\n        String data = \"\\r\\r\\n1\\r\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setDelimiter('\\r');\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"\", reader.get(0));\n        Assert.assertEquals(\"\", reader.get(1));\n        Assert.assertEquals(\"\", reader.get(2));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(3, reader.getColumnCount());\n        Assert.assertEquals(\"\\r\\r\", reader.getRawRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(\"\", reader.get(1));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertEquals(2, reader.getColumnCount());\n        Assert.assertEquals(\"1\\r\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test138() throws Exception {\n        CsvReader reader = CsvReader.parse(\"1;; ;1\");\n        reader.setRecordDelimiter(';');\n        Assert.assertTrue(reader.getSkipEmptyRecords());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(2L, reader.getCurrentRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/453804.java 146 151\n/home/jeff/BigCloneBench/sample/selected/615198.java 132 137\n----------------------------------------\n    protected IDocumentProvider getDocumentProvider(IEditorInput input) {\n        if (input instanceof IFileEditorInput || input instanceof URIEditorInput) {\n            return edu.toronto.cs.openome_model.diagram.part.Openome_modelDiagramEditorPlugin.getInstance().getDocumentProvider();\n        }\n        return super.getDocumentProvider(input);\n    }\n\n----------------------------------------\n    protected IDocumentProvider getDocumentProvider(IEditorInput input) {\n        if (input instanceof IFileEditorInput || input instanceof URIEditorInput) {\n            return FilesystemDiagramEditorPlugin.getInstance().getDocumentProvider();\n        }\n        return super.getDocumentProvider(input);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1030949.java 677 687\n/home/jeff/BigCloneBench/sample/selected/900584.java 673 682\n----------------------------------------\n    public Matrix arrayTimes(Matrix B) {\n        checkMatrixDimensions(B);\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = A[i][j] * B.A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n    public Matrix times(double s) {\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = s * A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2242014.java 269 292\n/home/jeff/BigCloneBench/sample/selected/2095100.java 334 357\n----------------------------------------\n        private String decodePercent(String str) throws InterruptedException {\n            try {\n                StringBuffer sb = new StringBuffer();\n                for (int i = 0; i < str.length(); i++) {\n                    char c = str.charAt(i);\n                    switch(c) {\n                        case '+':\n                            sb.append(' ');\n                            break;\n                        case '%':\n                            sb.append((char) Integer.parseInt(str.substring(i + 1, i + 3), 16));\n                            i += 2;\n                            break;\n                        default:\n                            sb.append(c);\n                            break;\n                    }\n                }\n                return new String(sb.toString().getBytes());\n            } catch (Exception e) {\n                sendError(HTTP_BADREQUEST, \"BAD REQUEST: Bad percent-encoding.\");\n                return null;\n            }\n        }\n\n----------------------------------------\n        private String decodePercent(String str) throws InterruptedException {\n            try {\n                StringBuffer sb = new StringBuffer();\n                for (int i = 0; i < str.length(); i++) {\n                    char c = str.charAt(i);\n                    switch(c) {\n                        case '+':\n                            sb.append(' ');\n                            break;\n                        case '%':\n                            sb.append((char) Integer.parseInt(str.substring(i + 1, i + 3), 16));\n                            i += 2;\n                            break;\n                        default:\n                            sb.append(c);\n                            break;\n                    }\n                }\n                return new String(sb.toString().getBytes());\n            } catch (Exception e) {\n                sendError(HTTP_BADREQUEST, \"BAD REQUEST: Bad percent-encoding.\");\n                return null;\n            }\n        }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2666453.java 788 820\n/home/jeff/BigCloneBench/sample/selected/2666453.java 1017 1050\n----------------------------------------\n    public void cosRegisterPeer(java.lang.String peerName, tcg.syscontrol.cos.ICosProcessManager p_peerManager) throws tcg.syscontrol.cos.CosFailedToRegisterException {\n        while (true) {\n            if (!this._is_local()) {\n                org.omg.CORBA.portable.InputStream _is = null;\n                try {\n                    org.omg.CORBA.portable.OutputStream _os = _request(\"cosRegisterPeer\", true);\n                    _os.write_string(peerName);\n                    tcg.syscontrol.cos.ICosProcessManagerHelper.write(_os, p_peerManager);\n                    _is = _invoke(_os);\n                    return;\n                } catch (org.omg.CORBA.portable.RemarshalException _rx) {\n                } catch (org.omg.CORBA.portable.ApplicationException _ax) {\n                    String _id = _ax.getId();\n                    if (_id.equals(\"IDL:tcg/syscontrol/cos/CosFailedToRegisterException:1.0\")) {\n                        throw tcg.syscontrol.cos.CosFailedToRegisterExceptionHelper.read(_ax.getInputStream());\n                    }\n                    throw new RuntimeException(\"Unexpected exception \" + _id);\n                } finally {\n                    this._releaseReply(_is);\n                }\n            } else {\n                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke(\"cosRegisterPeer\", _opsClass);\n                if (_so == null) throw new org.omg.CORBA.UNKNOWN(\"local invocations not supported!\");\n                ICosProcessManagerOperations _localServant = (ICosProcessManagerOperations) _so.servant;\n                try {\n                    _localServant.cosRegisterPeer(peerName, p_peerManager);\n                } finally {\n                    _servant_postinvoke(_so);\n                }\n                return;\n            }\n        }\n    }\n\n----------------------------------------\n    public tcg.syscontrol.cos.ICosManagedProcess cosGetActiveManagedProcess(short index) throws tcg.syscontrol.cos.CosIndexOutOfBoundException {\n        while (true) {\n            if (!this._is_local()) {\n                org.omg.CORBA.portable.InputStream _is = null;\n                try {\n                    org.omg.CORBA.portable.OutputStream _os = _request(\"cosGetActiveManagedProcess\", true);\n                    _os.write_ushort(index);\n                    _is = _invoke(_os);\n                    tcg.syscontrol.cos.ICosManagedProcess _result = tcg.syscontrol.cos.ICosManagedProcessHelper.read(_is);\n                    return _result;\n                } catch (org.omg.CORBA.portable.RemarshalException _rx) {\n                } catch (org.omg.CORBA.portable.ApplicationException _ax) {\n                    String _id = _ax.getId();\n                    if (_id.equals(\"IDL:tcg/syscontrol/cos/CosIndexOutOfBoundException:1.0\")) {\n                        throw tcg.syscontrol.cos.CosIndexOutOfBoundExceptionHelper.read(_ax.getInputStream());\n                    }\n                    throw new RuntimeException(\"Unexpected exception \" + _id);\n                } finally {\n                    this._releaseReply(_is);\n                }\n            } else {\n                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke(\"cosGetActiveManagedProcess\", _opsClass);\n                if (_so == null) throw new org.omg.CORBA.UNKNOWN(\"local invocations not supported!\");\n                ICosProcessManagerOperations _localServant = (ICosProcessManagerOperations) _so.servant;\n                tcg.syscontrol.cos.ICosManagedProcess _result;\n                try {\n                    _result = _localServant.cosGetActiveManagedProcess(index);\n                } finally {\n                    _servant_postinvoke(_so);\n                }\n                return _result;\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/120462.java 150 156\n/home/jeff/BigCloneBench/sample/default/118160.java 150 156\n----------------------------------------\n    private static int toTag(String tagStr) {\n        try {\n            return (int) Long.parseLong(tagStr, 16);\n        } catch (NumberFormatException e) {\n            return Tags.forName(tagStr);\n        }\n    }\n\n----------------------------------------\n    private static int toTag(String tagStr) {\n        try {\n            return (int) Long.parseLong(tagStr, 16);\n        } catch (NumberFormatException e) {\n            return Tags.forName(tagStr);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/50297.java 30 44\n/home/jeff/BigCloneBench/sample/default/83276.java 30 44\n----------------------------------------\n    public Configuration(URL url) {\n        InputStream in = null;\n        try {\n            load(in = url.openStream());\n        } catch (Exception e) {\n            throw new RuntimeException(\"Could not load configuration from \" + url, e);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n            }\n        }\n    }\n\n----------------------------------------\n    public Configuration(URL url) {\n        InputStream in = null;\n        try {\n            load(in = url.openStream());\n        } catch (Exception e) {\n            throw new RuntimeException(\"Could not load configuration from \" + url, e);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/45048.java 253 269\n/home/jeff/BigCloneBench/sample/default/57136.java 243 259\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/44659.java 54 62\n/home/jeff/BigCloneBench/sample/default/112296.java 54 62\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/41662.java 113 124\n/home/jeff/BigCloneBench/sample/default/56904.java 113 124\n----------------------------------------\n    private boolean found(List<List<String>> table, String target) {\n        boolean found = false;\n        search: for (List<String> row : table) {\n            for (String value : row) {\n                if (value.equals(target)) {\n                    found = true;\n                    break search;\n                }\n            }\n        }\n        return found;\n    }\n\n----------------------------------------\n    private boolean found(List<List<String>> table, String target) {\n        boolean found = false;\n        search: for (List<String> row : table) {\n            for (String value : row) {\n                if (value.equals(target)) {\n                    found = true;\n                    break search;\n                }\n            }\n        }\n        return found;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/79086.java 705 713\n/home/jeff/BigCloneBench/sample/default/81123.java 707 715\n----------------------------------------\n    private static void exit(String prompt, boolean error) {\n        if (prompt != null) {\n            System.err.println(prompt);\n        }\n        if (error) {\n            System.err.println(messages.getString(\"try\"));\n        }\n        System.exit(1);\n    }\n\n----------------------------------------\n    private static void exit(String prompt, boolean error) {\n        if (prompt != null) {\n            System.err.println(prompt);\n        }\n        if (error) {\n            System.err.println(messages.getString(\"try\"));\n        }\n        System.exit(1);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/82401.java 83 91\n/home/jeff/BigCloneBench/sample/default/8578.java 83 91\n----------------------------------------\n    public static boolean url(String url, String pkglisturl, DocErrorReporter reporter) {\n        String errMsg = composeExternPackageList(url, pkglisturl);\n        if (errMsg != null) {\n            reporter.printError(errMsg);\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n----------------------------------------\n    public static boolean url(String url, String pkglisturl, DocErrorReporter reporter) {\n        String errMsg = composeExternPackageList(url, pkglisturl);\n        if (errMsg != null) {\n            reporter.printError(errMsg);\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/44026.java 667 685\n/home/jeff/BigCloneBench/sample/default/134647.java 667 685\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/80510.java 264 274\n/home/jeff/BigCloneBench/sample/default/106112.java 264 274\n----------------------------------------\n    public void test11() throws Exception {\n        String data = \"\\\"July 4th, 2005\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"July 4th, 2005\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"\\\"July 4th, 2005\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test11() throws Exception {\n        String data = \"\\\"July 4th, 2005\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"July 4th, 2005\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"\\\"July 4th, 2005\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/79290.java 300 338\n/home/jeff/BigCloneBench/sample/default/112571.java 309 347\n----------------------------------------\n    private boolean sendFile(ActiveAssociation active, File file) throws InterruptedException, IOException {\n        InputStream in = null;\n        DcmParser parser = null;\n        Dataset ds = null;\n        try {\n            try {\n                in = new BufferedInputStream(new FileInputStream(file));\n                parser = pFact.newDcmParser(in);\n                FileFormat format = parser.detectFileFormat();\n                if (format != null) {\n                    ds = oFact.newDataset();\n                    parser.setDcmHandler(ds.getDcmHandler());\n                    parser.parseDcmFile(format, Tags.PixelData);\n                    if (parser.getReadTag() == Tags.PixelData) {\n                        if (parser.getStreamPosition() + parser.getReadLength() > file.length()) {\n                            throw new EOFException(\"Pixel Data Length: \" + parser.getReadLength() + \" exceeds file length: \" + file.length());\n                        }\n                    }\n                    log.info(MessageFormat.format(messages.getString(\"readDone\"), new Object[] { file }));\n                } else {\n                    log.error(MessageFormat.format(messages.getString(\"failformat\"), new Object[] { file }));\n                    return false;\n                }\n            } catch (IOException e) {\n                log.error(MessageFormat.format(messages.getString(\"failread\"), new Object[] { file, e }));\n                return false;\n            }\n            sendDataset(active, file, parser, ds);\n            return true;\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n                ;\n            }\n        }\n    }\n\n----------------------------------------\n    private boolean sendFile(ActiveAssociation active, File file, Dataset mergeDataset) throws InterruptedException, IOException {\n        InputStream in = null;\n        DcmParser parser = null;\n        Dataset ds = null;\n        try {\n            try {\n                in = new BufferedInputStream(new FileInputStream(file));\n                parser = pFact.newDcmParser(in);\n                try {\n                    FileFormat format = parser.detectFileFormat();\n                    ds = oFact.newDataset();\n                    parser.setDcmHandler(ds.getDcmHandler());\n                    parser.parseDcmFile(format, Tags.PixelData);\n                    if (parser.getReadTag() == Tags.PixelData) {\n                        if (parser.getStreamPosition() + parser.getReadLength() > file.length()) {\n                            throw new EOFException(\"Pixel Data Length: \" + parser.getReadLength() + \" exceeds file length: \" + file.length());\n                        }\n                    }\n                    log.info(MessageFormat.format(messages.getString(\"readDone\"), new Object[] { file }));\n                } catch (DcmParseException e) {\n                    log.error(MessageFormat.format(messages.getString(\"failformat\"), new Object[] { file }));\n                    return false;\n                }\n            } catch (IOException e) {\n                log.error(MessageFormat.format(messages.getString(\"failread\"), new Object[] { file, e }));\n                return false;\n            }\n            sendDataset(active, file, parser, merge(ds, mergeDataset));\n            return true;\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n                ;\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/76273.java 64 71\n/home/jeff/BigCloneBench/sample/default/115412.java 54 62\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/103762.java 546 568\n/home/jeff/BigCloneBench/sample/default/67675.java 548 570\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/330378.java 1030 1046\n/home/jeff/BigCloneBench/sample/selected/2198965.java 1131 1147\n----------------------------------------\n    public void test_18_119_writeObject() {\n        Object objToSave = null;\n        Object objLoaded;\n        try {\n            objToSave = Locale.CHINESE;\n            if (DEBUG) System.out.println(\"Obj = \" + objToSave);\n            objLoaded = dumpAndReload(objToSave);\n            assertTrue(MSG_TEST_FAILED + objToSave, Locale.CHINESE.equals(objLoaded));\n        } catch (IOException e) {\n            fail(\"IOException serializing \" + objToSave + \" : \" + e.getMessage());\n        } catch (ClassNotFoundException e) {\n            fail(\"ClassNotFoundException reading Object type : \" + e.getMessage());\n        } catch (Error err) {\n            System.out.println(\"Error when obj = \" + objToSave);\n            throw err;\n        }\n    }\n\n----------------------------------------\n    public void test_18_38_writeObject() {\n        Object objToSave = null;\n        try {\n            java.io.IOException ex = new java.io.NotActiveException(FOO);\n            objToSave = ex;\n            if (DEBUG) System.out.println(\"Obj = \" + objToSave);\n            dumpAndReload(objToSave);\n            assertTrue(MSG_TEST_FAILED + objToSave, true);\n        } catch (IOException e) {\n            fail(\"IOException serializing \" + objToSave + \" : \" + e.getMessage());\n        } catch (ClassNotFoundException e) {\n            fail(\"ClassNotFoundException reading Object type : \" + e.getMessage());\n        } catch (Error err) {\n            System.out.println(\"Error when obj = \" + objToSave);\n            throw err;\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/74326.java 73 85\n/home/jeff/BigCloneBench/sample/default/99553.java 73 85\n----------------------------------------\n    private static void encapsulate(Configuration cfg, File pdfFile, File dcmFile) throws IOException {\n        final DcmObjectFactory df = DcmObjectFactory.getInstance();\n        Dataset ds = df.newDataset();\n        for (Iterator it = cfg.entrySet().iterator(); it.hasNext(); ) {\n            Map.Entry e = (Map.Entry) it.next();\n            put(ds, toTags(StringUtils.split((String) e.getKey(), '/')), (String) e.getValue());\n        }\n        addUIDs(ds);\n        addContentDateTime(ds);\n        ds.setFileMetaInfo(df.newFileMetaInfo(ds, UIDs.ExplicitVRLittleEndian));\n        write(pdfFile, dcmFile, ds);\n        System.out.println(\"Encapsulate \" + pdfFile + \" into \" + dcmFile);\n    }\n\n----------------------------------------\n    private static void encapsulate(Configuration cfg, File pdfFile, File dcmFile) throws IOException {\n        final DcmObjectFactory df = DcmObjectFactory.getInstance();\n        Dataset ds = df.newDataset();\n        for (Iterator it = cfg.entrySet().iterator(); it.hasNext(); ) {\n            Map.Entry e = (Map.Entry) it.next();\n            put(ds, toTags(StringUtils.split((String) e.getKey(), '/')), (String) e.getValue());\n        }\n        addUIDs(ds);\n        addContentDateTime(ds);\n        ds.setFileMetaInfo(df.newFileMetaInfo(ds, UIDs.ExplicitVRLittleEndian));\n        write(pdfFile, dcmFile, ds);\n        System.out.println(\"Encapsulate \" + pdfFile + \" into \" + dcmFile);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/45206.java 54 62\n/home/jeff/BigCloneBench/sample/default/113986.java 54 62\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/139001.java 29 43\n/home/jeff/BigCloneBench/sample/selected/2515946.java 30 44\n----------------------------------------\n    static void setChannel(Channel ch, int val) {\n        try {\n            if (!ch.isConnected()) {\n                ch.requestConnection();\n            }\n            ch.putVal(val);\n            Thread.sleep(CaMonitorScalar.caputExtraTimeOut);\n        } catch (ConnectionException e) {\n            e.printStackTrace();\n        } catch (PutException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n----------------------------------------\n    static void setChannel(Channel ch, double val) {\n        try {\n            if (!ch.isConnected()) {\n                ch.requestConnection();\n            }\n            ch.putVal(val);\n            Thread.sleep(CaMonitorIntArray.caputExtraTimeOut);\n        } catch (ConnectionException e) {\n            e.printStackTrace();\n        } catch (PutException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/47340.java 19 34\n/home/jeff/BigCloneBench/sample/default/78023.java 19 34\n----------------------------------------\n    public void testPalindrome() {\n        assertFalse(isPalindrome(\"abcdef\"));\n        assertFalse(isPalindrome(\"abccda\"));\n        assertTrue(isPalindrome(\"abccba\"));\n        assertFalse(isPalindrome(\"abcxba\"));\n        assertTrue(isPalindrome(\"a\"));\n        assertTrue(isPalindrome(\"aa\"));\n        assertFalse(isPalindrome(\"ab\"));\n        assertTrue(isPalindrome(\"\"));\n        assertTrue(isPalindrome(\"aaa\"));\n        assertTrue(isPalindrome(\"aba\"));\n        assertTrue(isPalindrome(\"abbba\"));\n        assertTrue(isPalindrome(\"abba\"));\n        assertFalse(isPalindrome(\"abbaa\"));\n        assertFalse(isPalindrome(\"abcda\"));\n    }\n\n----------------------------------------\n    public void testPalindrome() {\n        assertFalse(isPalindrome(\"abcdef\"));\n        assertFalse(isPalindrome(\"abccda\"));\n        assertTrue(isPalindrome(\"abccba\"));\n        assertFalse(isPalindrome(\"abcxba\"));\n        assertTrue(isPalindrome(\"a\"));\n        assertTrue(isPalindrome(\"aa\"));\n        assertFalse(isPalindrome(\"ab\"));\n        assertTrue(isPalindrome(\"\"));\n        assertTrue(isPalindrome(\"aaa\"));\n        assertTrue(isPalindrome(\"aba\"));\n        assertTrue(isPalindrome(\"abbba\"));\n        assertTrue(isPalindrome(\"abba\"));\n        assertFalse(isPalindrome(\"abbaa\"));\n        assertFalse(isPalindrome(\"abcda\"));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/107391.java 125 141\n/home/jeff/BigCloneBench/sample/default/121997.java 125 141\n----------------------------------------\n                public void run() {\n                    int exitCode = -99;\n                    boolean exited = false;\n                    do {\n                        try {\n                            exitCode = tac.exitValue();\n                            exited = true;\n                        } catch (IllegalThreadStateException e) {\n                            System.out.println(\"still alive!\");\n                            try {\n                                Thread.sleep(1000);\n                            } catch (Exception ee) {\n                            }\n                        }\n                    } while (!exited);\n                    System.out.println(\"exitValue(): Process exited with code \" + exitCode);\n                }\n\n----------------------------------------\n                public void run() {\n                    int exitCode = -99;\n                    boolean exited = false;\n                    do {\n                        try {\n                            exitCode = tac.exitValue();\n                            exited = true;\n                        } catch (IllegalThreadStateException e) {\n                            System.out.println(\"still alive!\");\n                            try {\n                                Thread.sleep(1000);\n                            } catch (Exception ee) {\n                            }\n                        }\n                    } while (!exited);\n                    System.out.println(\"exitValue(): Process exited with code \" + exitCode);\n                }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/106446.java 546 568\n/home/jeff/BigCloneBench/sample/default/53104.java 570 590\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveInstances(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (sopInstUIDs.contains(rec.getRefSOPInstanceUID()) || matchFileIDs(rec.getRefFileIDs())) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/100859.java 19 34\n/home/jeff/BigCloneBench/sample/default/16496.java 19 34\n----------------------------------------\n    public void testPalindrome() {\n        assertFalse(isPalindrome(\"abcdef\"));\n        assertFalse(isPalindrome(\"abccda\"));\n        assertTrue(isPalindrome(\"abccba\"));\n        assertFalse(isPalindrome(\"abcxba\"));\n        assertTrue(isPalindrome(\"a\"));\n        assertTrue(isPalindrome(\"aa\"));\n        assertFalse(isPalindrome(\"ab\"));\n        assertTrue(isPalindrome(\"\"));\n        assertTrue(isPalindrome(\"aaa\"));\n        assertTrue(isPalindrome(\"aba\"));\n        assertTrue(isPalindrome(\"abbba\"));\n        assertTrue(isPalindrome(\"abba\"));\n        assertFalse(isPalindrome(\"abbaa\"));\n        assertFalse(isPalindrome(\"abcda\"));\n    }\n\n----------------------------------------\n    public void testPalindrome() {\n        assertFalse(isPalindrome(\"abcdef\"));\n        assertFalse(isPalindrome(\"abccda\"));\n        assertTrue(isPalindrome(\"abccba\"));\n        assertFalse(isPalindrome(\"abcxba\"));\n        assertTrue(isPalindrome(\"a\"));\n        assertTrue(isPalindrome(\"aa\"));\n        assertFalse(isPalindrome(\"ab\"));\n        assertTrue(isPalindrome(\"\"));\n        assertTrue(isPalindrome(\"aaa\"));\n        assertTrue(isPalindrome(\"aba\"));\n        assertTrue(isPalindrome(\"abbba\"));\n        assertTrue(isPalindrome(\"abba\"));\n        assertFalse(isPalindrome(\"abbaa\"));\n        assertFalse(isPalindrome(\"abcda\"));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/112239.java 414 423\n/home/jeff/BigCloneBench/sample/default/54915.java 506 515\n----------------------------------------\n    public void addTCP(final short port) {\n        Thread t;\n        t = new Thread(new Runnable() {\n\n            public void run() {\n                serveTCP(port);\n            }\n        });\n        t.start();\n    }\n\n----------------------------------------\n    public void addTCP(final InetAddress addr, final short port) {\n        Thread t;\n        t = new Thread(new Runnable() {\n\n            public void run() {\n                serveTCP(addr, port);\n            }\n        });\n        t.start();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/14709.java 517 539\n/home/jeff/BigCloneBench/sample/default/115118.java 546 568\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/15109.java 90 172\n/home/jeff/BigCloneBench/sample/default/33993.java 90 172\n----------------------------------------\n    public void convert(File src, File dest) throws IOException {\n        InputStream in = new BufferedInputStream(new FileInputStream(src));\n        DcmParser p = pfact.newDcmParser(in);\n        Dataset ds = fact.newDataset();\n        p.setDcmHandler(ds.getDcmHandler());\n        try {\n            FileFormat format = p.detectFileFormat();\n            if (format != FileFormat.ACRNEMA_STREAM) {\n                System.out.println(\"\\n\" + src + \": not an ACRNEMA stream!\");\n                return;\n            }\n            p.parseDcmFile(format, Tags.PixelData);\n            if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {\n                System.out.println(\"\\n\" + src + \": contains UIDs!\" + \" => probable already DICOM - do not convert\");\n                return;\n            }\n            boolean hasPixelData = p.getReadTag() == Tags.PixelData;\n            boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;\n            int pxlen = p.getReadLength();\n            if (hasPixelData) {\n                if (inflate) {\n                    ds.putUS(Tags.BitsAllocated, 16);\n                    pxlen = pxlen * 4 / 3;\n                }\n                if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {\n                    System.out.println(\"\\n\" + src + \": mismatch pixel data length!\" + \" => do not convert\");\n                    return;\n                }\n            }\n            ds.putUI(Tags.StudyInstanceUID, uid(studyUID));\n            ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));\n            ds.putUI(Tags.SOPInstanceUID, uid(instUID));\n            ds.putUI(Tags.SOPClassUID, classUID);\n            if (!ds.contains(Tags.NumberOfSamples)) {\n                ds.putUS(Tags.NumberOfSamples, 1);\n            }\n            if (!ds.contains(Tags.PhotometricInterpretation)) {\n                ds.putCS(Tags.PhotometricInterpretation, \"MONOCHROME2\");\n            }\n            if (fmi) {\n                ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));\n            }\n            OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));\n            try {\n            } finally {\n                ds.writeFile(out, encodeParam());\n                if (hasPixelData) {\n                    if (!skipGroupLen) {\n                        out.write(PXDATA_GROUPLEN);\n                        int grlen = pxlen + 8;\n                        out.write((byte) grlen);\n                        out.write((byte) (grlen >> 8));\n                        out.write((byte) (grlen >> 16));\n                        out.write((byte) (grlen >> 24));\n                    }\n                    out.write(PXDATA_TAG);\n                    out.write((byte) pxlen);\n                    out.write((byte) (pxlen >> 8));\n                    out.write((byte) (pxlen >> 16));\n                    out.write((byte) (pxlen >> 24));\n                }\n                if (inflate) {\n                    int b2, b3;\n                    for (; pxlen > 0; pxlen -= 3) {\n                        out.write(in.read());\n                        b2 = in.read();\n                        b3 = in.read();\n                        out.write(b2 & 0x0f);\n                        out.write(b2 >> 4 | ((b3 & 0x0f) << 4));\n                        out.write(b3 >> 4);\n                    }\n                } else {\n                    for (; pxlen > 0; --pxlen) {\n                        out.write(in.read());\n                    }\n                }\n                out.close();\n            }\n            System.out.print('.');\n        } finally {\n            in.close();\n        }\n    }\n\n----------------------------------------\n    public void convert(File src, File dest) throws IOException {\n        InputStream in = new BufferedInputStream(new FileInputStream(src));\n        DcmParser p = pfact.newDcmParser(in);\n        Dataset ds = fact.newDataset();\n        p.setDcmHandler(ds.getDcmHandler());\n        try {\n            FileFormat format = p.detectFileFormat();\n            if (format != FileFormat.ACRNEMA_STREAM) {\n                System.out.println(\"\\n\" + src + \": not an ACRNEMA stream!\");\n                return;\n            }\n            p.parseDcmFile(format, Tags.PixelData);\n            if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {\n                System.out.println(\"\\n\" + src + \": contains UIDs!\" + \" => probable already DICOM - do not convert\");\n                return;\n            }\n            boolean hasPixelData = p.getReadTag() == Tags.PixelData;\n            boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;\n            int pxlen = p.getReadLength();\n            if (hasPixelData) {\n                if (inflate) {\n                    ds.putUS(Tags.BitsAllocated, 16);\n                    pxlen = pxlen * 4 / 3;\n                }\n                if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {\n                    System.out.println(\"\\n\" + src + \": mismatch pixel data length!\" + \" => do not convert\");\n                    return;\n                }\n            }\n            ds.putUI(Tags.StudyInstanceUID, uid(studyUID));\n            ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));\n            ds.putUI(Tags.SOPInstanceUID, uid(instUID));\n            ds.putUI(Tags.SOPClassUID, classUID);\n            if (!ds.contains(Tags.NumberOfSamples)) {\n                ds.putUS(Tags.NumberOfSamples, 1);\n            }\n            if (!ds.contains(Tags.PhotometricInterpretation)) {\n                ds.putCS(Tags.PhotometricInterpretation, \"MONOCHROME2\");\n            }\n            if (fmi) {\n                ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));\n            }\n            OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));\n            try {\n            } finally {\n                ds.writeFile(out, encodeParam());\n                if (hasPixelData) {\n                    if (!skipGroupLen) {\n                        out.write(PXDATA_GROUPLEN);\n                        int grlen = pxlen + 8;\n                        out.write((byte) grlen);\n                        out.write((byte) (grlen >> 8));\n                        out.write((byte) (grlen >> 16));\n                        out.write((byte) (grlen >> 24));\n                    }\n                    out.write(PXDATA_TAG);\n                    out.write((byte) pxlen);\n                    out.write((byte) (pxlen >> 8));\n                    out.write((byte) (pxlen >> 16));\n                    out.write((byte) (pxlen >> 24));\n                }\n                if (inflate) {\n                    int b2, b3;\n                    for (; pxlen > 0; pxlen -= 3) {\n                        out.write(in.read());\n                        b2 = in.read();\n                        b3 = in.read();\n                        out.write(b2 & 0x0f);\n                        out.write(b2 >> 4 | ((b3 & 0x0f) << 4));\n                        out.write(b3 >> 4);\n                    }\n                } else {\n                    for (; pxlen > 0; --pxlen) {\n                        out.write(in.read());\n                    }\n                }\n                out.close();\n            }\n            System.out.print('.');\n        } finally {\n            in.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/401339.java 136 142\n/home/jeff/BigCloneBench/sample/selected/615198.java 132 137\n----------------------------------------\n    protected void setDocumentProvider(IEditorInput input) {\n        if (input instanceof IFileEditorInput || input instanceof URIEditorInput) {\n            setDocumentProvider(FilesystemDiagramEditorPlugin.getInstance().getDocumentProvider());\n        } else {\n            super.setDocumentProvider(input);\n        }\n    }\n\n----------------------------------------\n    protected IDocumentProvider getDocumentProvider(IEditorInput input) {\n        if (input instanceof IFileEditorInput || input instanceof URIEditorInput) {\n            return FilesystemDiagramEditorPlugin.getInstance().getDocumentProvider();\n        }\n        return super.getDocumentProvider(input);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/23336.java 194 203\n/home/jeff/BigCloneBench/sample/default/123780.java 194 203\n----------------------------------------\n    public void testRetroCollections() {\n        {\n            List names = new Vector();\n            Map dictionary = new Hashtable();\n        }\n        {\n            List<String> names = new Vector<String>();\n            Map<String, String> dictionary = new Hashtable<String, String>();\n        }\n    }\n\n----------------------------------------\n    public void testRetroCollections() {\n        {\n            List names = new Vector();\n            Map dictionary = new Hashtable();\n        }\n        {\n            List<String> names = new Vector<String>();\n            Map<String, String> dictionary = new Hashtable<String, String>();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/93534.java 210 223\n/home/jeff/BigCloneBench/sample/default/10394.java 216 229\n----------------------------------------\n    private ActiveAssociation openAssoc() throws IOException, GeneralSecurityException {\n        Association assoc = aFact.newRequestor(newSocket(url.getHost(), url.getPort()));\n        assoc.setAcTimeout(acTimeout);\n        assoc.setDimseTimeout(dimseTimeout);\n        assoc.setSoCloseDelay(soCloseDelay);\n        assoc.setPackPDVs(packPDVs);\n        PDU assocAC = assoc.connect(assocRQ);\n        if (!(assocAC instanceof AAssociateAC)) {\n            return null;\n        }\n        ActiveAssociation retval = aFact.newActiveAssociation(assoc, null);\n        retval.start();\n        return retval;\n    }\n\n----------------------------------------\n    private ActiveAssociation openAssoc() throws IOException, GeneralSecurityException {\n        Association assoc = aFact.newRequestor(newSocket(url.getHost(), url.getPort()));\n        assoc.setAcTimeout(acTimeout);\n        assoc.setDimseTimeout(dimseTimeout);\n        assoc.setSoCloseDelay(soCloseDelay);\n        assoc.setPackPDVs(packPDVs);\n        PDU assocAC = assoc.connect(assocRQ);\n        if (!(assocAC instanceof AAssociateAC)) {\n            return null;\n        }\n        ActiveAssociation retval = aFact.newActiveAssociation(assoc, null);\n        retval.start();\n        return retval;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2696114.java 459 471\n/home/jeff/BigCloneBench/sample/selected/825557.java 664 676\n----------------------------------------\n    public static int[] split(String s, String delimiter, int x) {\n        String[] array = split(s, delimiter);\n        int[] newArray = new int[array.length];\n        for (int i = 0; i < array.length; i++) {\n            int value = x;\n            try {\n                value = Integer.parseInt(array[i]);\n            } catch (Exception e) {\n            }\n            newArray[i] = value;\n        }\n        return newArray;\n    }\n\n----------------------------------------\n    public static long[] split(String s, String delimiter, long x) {\n        String[] array = split(s, delimiter);\n        long[] newArray = new long[array.length];\n        for (int i = 0; i < array.length; i++) {\n            long value = x;\n            try {\n                value = Long.parseLong(array[i]);\n            } catch (Exception e) {\n            }\n            newArray[i] = value;\n        }\n        return newArray;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/939512.java 127 132\n/home/jeff/BigCloneBench/sample/selected/459626.java 80 85\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_push_suppliers(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        int[] _ob_r = push_suppliers();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        ProxyIDSeqHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_default_consumer_admin(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        TypedConsumerAdmin _ob_r = default_consumer_admin();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        TypedConsumerAdminHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/62853.java 970 989\n/home/jeff/BigCloneBench/sample/default/11754.java 970 989\n----------------------------------------\n    public void test54() throws Exception {\n        byte[] buffer;\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        CsvWriter writer = new CsvWriter(stream, ',', Charset.forName(\"ISO-8859-1\"));\n        writer.write(\"1,2\");\n        writer.write(\"3\");\n        writer.write(\"blah \\\"some stuff in quotes\\\"\");\n        writer.endRecord();\n        Assert.assertFalse(writer.getForceQualifier());\n        writer.setForceQualifier(true);\n        Assert.assertTrue(writer.getForceQualifier());\n        writer.write(\"1,2\");\n        writer.write(\"3\");\n        writer.write(\"blah \\\"some stuff in quotes\\\"\");\n        writer.close();\n        buffer = stream.toByteArray();\n        stream.close();\n        String data = Charset.forName(\"ISO-8859-1\").decode(ByteBuffer.wrap(buffer)).toString();\n        Assert.assertEquals(\"\\\"1,2\\\",3,\\\"blah \\\"\\\"some stuff in quotes\\\"\\\"\\\"\\r\\n\\\"1,2\\\",\\\"3\\\",\\\"blah \\\"\\\"some stuff in quotes\\\"\\\"\\\"\", data);\n    }\n\n----------------------------------------\n    public void test54() throws Exception {\n        byte[] buffer;\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        CsvWriter writer = new CsvWriter(stream, ',', Charset.forName(\"ISO-8859-1\"));\n        writer.write(\"1,2\");\n        writer.write(\"3\");\n        writer.write(\"blah \\\"some stuff in quotes\\\"\");\n        writer.endRecord();\n        Assert.assertFalse(writer.getForceQualifier());\n        writer.setForceQualifier(true);\n        Assert.assertTrue(writer.getForceQualifier());\n        writer.write(\"1,2\");\n        writer.write(\"3\");\n        writer.write(\"blah \\\"some stuff in quotes\\\"\");\n        writer.close();\n        buffer = stream.toByteArray();\n        stream.close();\n        String data = Charset.forName(\"ISO-8859-1\").decode(ByteBuffer.wrap(buffer)).toString();\n        Assert.assertEquals(\"\\\"1,2\\\",3,\\\"blah \\\"\\\"some stuff in quotes\\\"\\\"\\\"\\r\\n\\\"1,2\\\",\\\"3\\\",\\\"blah \\\"\\\"some stuff in quotes\\\"\\\"\\\"\", data);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/93572.java 64 71\n/home/jeff/BigCloneBench/sample/default/66539.java 64 71\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1017245.java 479 487\n/home/jeff/BigCloneBench/sample/selected/211182.java 440 450\n----------------------------------------\n    public double normF() {\n        double f = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                f = Maths.hypot(f, A[i][j]);\n            }\n        }\n        return f;\n    }\n\n----------------------------------------\n    public double norm1() {\n        double f = 0;\n        for (int j = 0; j < n; j++) {\n            double s = 0;\n            for (int i = 0; i < m; i++) {\n                s += Math.abs(A[i][j]);\n            }\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/478993.java 259 273\n/home/jeff/BigCloneBench/sample/selected/1726071.java 257 271\n----------------------------------------\n    public static View findView(DiagramEditPart diagramEditPart, EObject targetElement, LazyElement2ViewMap lazyElement2ViewMap) {\n        boolean hasStructuralURI = false;\n        if (targetElement.eResource() instanceof XMLResource) {\n            hasStructuralURI = ((XMLResource) targetElement.eResource()).getID(targetElement) == null;\n        }\n        View view = null;\n        if (hasStructuralURI && !lazyElement2ViewMap.getElement2ViewMap().isEmpty()) {\n            view = (View) lazyElement2ViewMap.getElement2ViewMap().get(targetElement);\n        } else if (findElementsInDiagramByID(diagramEditPart, targetElement, lazyElement2ViewMap.editPartTmpHolder) > 0) {\n            EditPart editPart = (EditPart) lazyElement2ViewMap.editPartTmpHolder.get(0);\n            lazyElement2ViewMap.editPartTmpHolder.clear();\n            view = editPart.getModel() instanceof View ? (View) editPart.getModel() : null;\n        }\n        return (view == null) ? diagramEditPart.getDiagramView() : view;\n    }\n\n----------------------------------------\n    public static View findView(org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart diagramEditPart, EObject targetElement, LazyElement2ViewMap lazyElement2ViewMap) {\n        boolean hasStructuralURI = false;\n        if (targetElement.eResource() instanceof XMLResource) {\n            hasStructuralURI = ((XMLResource) targetElement.eResource()).getID(targetElement) == null;\n        }\n        View view = null;\n        if (hasStructuralURI && !lazyElement2ViewMap.getElement2ViewMap().isEmpty()) {\n            view = (View) lazyElement2ViewMap.getElement2ViewMap().get(targetElement);\n        } else if (findElementsInDiagramByID(diagramEditPart, targetElement, lazyElement2ViewMap.editPartTmpHolder) > 0) {\n            EditPart editPart = (EditPart) lazyElement2ViewMap.editPartTmpHolder.get(0);\n            lazyElement2ViewMap.editPartTmpHolder.clear();\n            view = editPart.getModel() instanceof View ? (View) editPart.getModel() : null;\n        }\n        return (view == null) ? diagramEditPart.getDiagramView() : view;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/21403.java 175 180\n/home/jeff/BigCloneBench/sample/default/130398.java 175 180\n----------------------------------------\n    public void testArrayEquality() {\n        int[] a = { 1, 2, 3 };\n        int[] b = { 1, 2, 3 };\n        assertFalse(a.equals(b));\n        assertFalse(a == b);\n    }\n\n----------------------------------------\n    public void testArrayEquality() {\n        int[] a = { 1, 2, 3 };\n        int[] b = { 1, 2, 3 };\n        assertFalse(a.equals(b));\n        assertFalse(a == b);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/22303.java 955 967\n/home/jeff/BigCloneBench/sample/default/73729.java 762 773\n----------------------------------------\n    public void test52() throws Exception {\n        String data = \"\\\\xfa\\\\u0afa\\\\xFA\\\\u0AFA\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setUseTextQualifier(false);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"\u00fa\u0afa\u00fa\u0afa\", reader.get(0));\n        Assert.assertEquals(\"\\\\xfa\\\\u0afa\\\\xFA\\\\u0AFA\", reader.getRawRecord());\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test41() throws Exception {\n        String data = \"double\\\\\\\\\\\\\\\\double backslash\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setUseTextQualifier(false);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"double\\\\\\\\double backslash\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/14709.java 517 539\n/home/jeff/BigCloneBench/sample/default/129715.java 650 667\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/849450.java 189 197\n/home/jeff/BigCloneBench/sample/selected/361180.java 604 613\n----------------------------------------\n    public double[][] getArrayCopy() {\n        double[][] C = new double[m][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = A[i][j];\n            }\n        }\n        return C;\n    }\n\n----------------------------------------\n    public Matrix uminus() {\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = -A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/682654.java 133 139\n/home/jeff/BigCloneBench/sample/selected/69006.java 142 147\n----------------------------------------\n    public void cancel() {\n        try {\n            transport.close();\n        } catch (Exception e) {\n            return;\n        }\n    }\n\n----------------------------------------\n    public void finalize() {\n        try {\n            close();\n        } catch (Exception e) {\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/98684.java 522 544\n/home/jeff/BigCloneBench/sample/default/63015.java 631 648\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/45886.java 73 82\n/home/jeff/BigCloneBench/sample/default/56146.java 54 62\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2290446.java 189 194\n/home/jeff/BigCloneBench/sample/selected/2356990.java 59 64\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_max_link_follow_policy(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        FollowOption _ob_r = max_link_follow_policy();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        FollowOptionHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_def_follow_policy(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        FollowOption _ob_r = def_follow_policy();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        FollowOptionHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/72479.java 179 257\n/home/jeff/BigCloneBench/sample/default/22797.java 179 257\n----------------------------------------\n    void calculateDiscoveryRates(int nBioReps, CombinationPair nullhyp) {\n        if (proteinList == null) return;\n        this.overallFilterPassCount = new double[this.GStatisticCutoffs.size()][this.PValueCutoffs.size()];\n        this.nullhypothesisFilterPassCount = new double[this.GStatisticCutoffs.size()][this.PValueCutoffs.size()];\n        this.nullhypothesisFilterPassProteins = new Vector<Vector<Vector<Protein>>>();\n        for (int gi = 0; gi < this.GStatisticCutoffs.size(); gi++) {\n            this.nullhypothesisFilterPassProteins.add(new Vector<Vector<Protein>>());\n            for (int pi = 0; pi < this.PValueCutoffs.size(); pi++) {\n                this.nullhypothesisFilterPassProteins.elementAt(gi).add(new Vector<Protein>());\n                this.overallFilterPassCount[gi][pi] = 0;\n                this.nullhypothesisFilterPassCount[gi][pi] = 0;\n            }\n        }\n        CombinationGenerator combos = new CombinationGenerator(nBioReps);\n        int[] groupsCount = new int[nBioReps];\n        BitSet[] selections = new BitSet[nBioReps];\n        double selectionRate = (double) this.nMaxPermutations / combos.getTotal().doubleValue();\n        if (selectionRate < 1.0) {\n            System.out.println(\"Randomly sampling \" + Math.round(combos.getTotal().doubleValue() * selectionRate) + \" (\" + (int) Math.ceil(selectionRate * 100.0) + \"%) of \" + combos.getTotal().intValue() + \" data permutations...\");\n        } else {\n            System.out.println(\"Processing \" + combos.getTotal().intValue() + \" data permutations...\");\n        }\n        for (int order = 0; order < nBioReps; order++) {\n            int orderSize = combos.getOrderSize(order);\n            selections[order] = new BitSet(orderSize);\n            if (selectionRate < 1.0) {\n                Random r = new Random(orderSize);\n                int nSelect = 1 + (int) ((double) orderSize * selectionRate);\n                nSelect = Math.min(nSelect, orderSize);\n                for (int i = nSelect; i > 0; ) {\n                    int slot = r.nextInt(orderSize);\n                    if (!selections[order].get(slot)) {\n                        selections[order].set(slot);\n                        i--;\n                    }\n                }\n            } else {\n                selections[order].set(0, orderSize);\n            }\n        }\n        double progress = 0;\n        int last_pct = 0;\n        while (combos.hasMore()) {\n            CombinationPair pair = combos.getNext();\n            int order = pair.getOrder();\n            int pctdone = (int) (100.0 * ++progress / combos.getTotal().doubleValue());\n            if (pctdone != last_pct) {\n                last_pct = pctdone;\n                System.out.print(((last_pct % 5) == 0) ? (last_pct + \"%\") : \".\");\n            }\n            if (selections[order].get(groupsCount[order]++)) {\n                this.nPermutationsTried++;\n                boolean bNullHyp = pair.equals(nullhyp);\n                for (Protein prot : this.proteinList) {\n                    ProteinPermutation perm = prot.doPermutation(pair);\n                    if (bNullHyp) {\n                        prot.nullHypothesis = perm;\n                    }\n                    for (int gi = 0; gi < GStatisticCutoffs.size(); gi++) {\n                        if (perm.getGStatistic() >= GStatisticCutoffs.get(gi)) {\n                            for (int pi = PValueCutoffs.size(); pi-- > 0; ) {\n                                if (perm.getPValue() <= PValueCutoffs.get(pi)) {\n                                    this.overallFilterPassCount[gi][pi]++;\n                                    if (bNullHyp) {\n                                        this.nullhypothesisFilterPassCount[gi][pi]++;\n                                        this.nullhypothesisFilterPassProteins.elementAt(gi).elementAt(pi).add(prot);\n                                    }\n                                } else {\n                                    break;\n                                }\n                            }\n                        } else {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n----------------------------------------\n    void calculateDiscoveryRates(int nBioReps, CombinationPair nullhyp) {\n        if (proteinList == null) return;\n        this.overallFilterPassCount = new double[this.GStatisticCutoffs.size()][this.PValueCutoffs.size()];\n        this.nullhypothesisFilterPassCount = new double[this.GStatisticCutoffs.size()][this.PValueCutoffs.size()];\n        this.nullhypothesisFilterPassProteins = new Vector<Vector<Vector<Protein>>>();\n        for (int gi = 0; gi < this.GStatisticCutoffs.size(); gi++) {\n            this.nullhypothesisFilterPassProteins.add(new Vector<Vector<Protein>>());\n            for (int pi = 0; pi < this.PValueCutoffs.size(); pi++) {\n                this.nullhypothesisFilterPassProteins.elementAt(gi).add(new Vector<Protein>());\n                this.overallFilterPassCount[gi][pi] = 0;\n                this.nullhypothesisFilterPassCount[gi][pi] = 0;\n            }\n        }\n        CombinationGenerator combos = new CombinationGenerator(nBioReps);\n        int[] groupsCount = new int[nBioReps];\n        BitSet[] selections = new BitSet[nBioReps];\n        double selectionRate = (double) this.nMaxPermutations / combos.getTotal().doubleValue();\n        if (selectionRate < 1.0) {\n            System.out.println(\"Randomly sampling \" + Math.round(combos.getTotal().doubleValue() * selectionRate) + \" (\" + (int) Math.ceil(selectionRate * 100.0) + \"%) of \" + combos.getTotal().intValue() + \" data permutations...\");\n        } else {\n            System.out.println(\"Processing \" + combos.getTotal().intValue() + \" data permutations...\");\n        }\n        for (int order = 0; order < nBioReps; order++) {\n            int orderSize = combos.getOrderSize(order);\n            selections[order] = new BitSet(orderSize);\n            if (selectionRate < 1.0) {\n                Random r = new Random(orderSize);\n                int nSelect = 1 + (int) ((double) orderSize * selectionRate);\n                nSelect = Math.min(nSelect, orderSize);\n                for (int i = nSelect; i > 0; ) {\n                    int slot = r.nextInt(orderSize);\n                    if (!selections[order].get(slot)) {\n                        selections[order].set(slot);\n                        i--;\n                    }\n                }\n            } else {\n                selections[order].set(0, orderSize);\n            }\n        }\n        double progress = 0;\n        int last_pct = 0;\n        while (combos.hasMore()) {\n            CombinationPair pair = combos.getNext();\n            int order = pair.getOrder();\n            int pctdone = (int) (100.0 * ++progress / combos.getTotal().doubleValue());\n            if (pctdone != last_pct) {\n                last_pct = pctdone;\n                System.out.print(((last_pct % 5) == 0) ? (last_pct + \"%\") : \".\");\n            }\n            if (selections[order].get(groupsCount[order]++)) {\n                this.nPermutationsTried++;\n                boolean bNullHyp = pair.equals(nullhyp);\n                for (Protein prot : this.proteinList) {\n                    ProteinPermutation perm = prot.doPermutation(pair);\n                    if (bNullHyp) {\n                        prot.nullHypothesis = perm;\n                    }\n                    for (int gi = 0; gi < GStatisticCutoffs.size(); gi++) {\n                        if (perm.getGStatistic() >= GStatisticCutoffs.get(gi)) {\n                            for (int pi = PValueCutoffs.size(); pi-- > 0; ) {\n                                if (perm.getPValue() <= PValueCutoffs.get(pi)) {\n                                    this.overallFilterPassCount[gi][pi]++;\n                                    if (bNullHyp) {\n                                        this.nullhypothesisFilterPassCount[gi][pi]++;\n                                        this.nullhypothesisFilterPassProteins.elementAt(gi).elementAt(pi).add(prot);\n                                    }\n                                } else {\n                                    break;\n                                }\n                            }\n                        } else {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/35053.java 629 646\n/home/jeff/BigCloneBench/sample/default/103146.java 667 685\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/98981.java 522 544\n/home/jeff/BigCloneBench/sample/default/98684.java 570 590\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveInstances(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (sopInstUIDs.contains(rec.getRefSOPInstanceUID()) || matchFileIDs(rec.getRefFileIDs())) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1913823.java 76 92\n/home/jeff/BigCloneBench/sample/selected/2503307.java 133 148\n----------------------------------------\n    protected byte[] padBuffer() {\n        int n = (int) (count % BLOCK_SIZE);\n        int padding = (n < 112) ? (112 - n) : (240 - n);\n        byte[] result = new byte[padding + 16];\n        result[0] = (byte) 0x80;\n        long bits = count << 3;\n        padding += 8;\n        result[padding++] = (byte) (bits >>> 56);\n        result[padding++] = (byte) (bits >>> 48);\n        result[padding++] = (byte) (bits >>> 40);\n        result[padding++] = (byte) (bits >>> 32);\n        result[padding++] = (byte) (bits >>> 24);\n        result[padding++] = (byte) (bits >>> 16);\n        result[padding++] = (byte) (bits >>> 8);\n        result[padding] = (byte) bits;\n        return result;\n    }\n\n----------------------------------------\n    protected byte[] padBuffer() {\n        int n = (int) (count % BLOCK_SIZE);\n        int padding = (n < 56) ? (56 - n) : (120 - n);\n        byte[] result = new byte[padding + 8];\n        result[0] = (byte) 0x80;\n        long bits = count << 3;\n        result[padding++] = (byte) bits;\n        result[padding++] = (byte) (bits >>> 8);\n        result[padding++] = (byte) (bits >>> 16);\n        result[padding++] = (byte) (bits >>> 24);\n        result[padding++] = (byte) (bits >>> 32);\n        result[padding++] = (byte) (bits >>> 40);\n        result[padding++] = (byte) (bits >>> 48);\n        result[padding] = (byte) (bits >>> 56);\n        return result;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2372569.java 604 623\n/home/jeff/BigCloneBench/sample/selected/2701118.java 665 684\n----------------------------------------\n    public static String nullSafeToString(char[] array) {\n        if (array == null) {\n            return NULL_STRING;\n        }\n        int length = array.length;\n        if (length == 0) {\n            return EMPTY_ARRAY;\n        }\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < length; i++) {\n            if (i == 0) {\n                buffer.append(ARRAY_START);\n            } else {\n                buffer.append(ARRAY_ELEMENT_SEPARATOR);\n            }\n            buffer.append(\"'\").append(array[i]).append(\"'\");\n        }\n        buffer.append(ARRAY_END);\n        return buffer.toString();\n    }\n\n----------------------------------------\n    public static String nullSafeToString(float[] array) {\n        if (array == null) {\n            return NULL_STRING;\n        }\n        int length = array.length;\n        if (length == 0) {\n            return EMPTY_ARRAY;\n        }\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < length; i++) {\n            if (i == 0) {\n                buffer.append(ARRAY_START);\n            } else {\n                buffer.append(ARRAY_ELEMENT_SEPARATOR);\n            }\n            buffer.append(array[i]);\n        }\n        buffer.append(ARRAY_END);\n        return buffer.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/44157.java 113 124\n/home/jeff/BigCloneBench/sample/default/86457.java 113 124\n----------------------------------------\n    private boolean found(List<List<String>> table, String target) {\n        boolean found = false;\n        search: for (List<String> row : table) {\n            for (String value : row) {\n                if (value.equals(target)) {\n                    found = true;\n                    break search;\n                }\n            }\n        }\n        return found;\n    }\n\n----------------------------------------\n    private boolean found(List<List<String>> table, String target) {\n        boolean found = false;\n        search: for (List<String> row : table) {\n            for (String value : row) {\n                if (value.equals(target)) {\n                    found = true;\n                    break search;\n                }\n            }\n        }\n        return found;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1700428.java 102 110\n/home/jeff/BigCloneBench/sample/selected/74985.java 238 246\n----------------------------------------\n    public static Properties getUrlAsProperties(String urlString) throws IOException {\n        Properties props = new Properties();\n        InputStream in = null;\n        String propfile = urlString;\n        in = getUrlAsStream(propfile);\n        props.load(in);\n        in.close();\n        return props;\n    }\n\n----------------------------------------\n    public static Properties getUrlAsProperties(String urlString) throws IOException {\n        Properties props = new Properties();\n        InputStream in = null;\n        String propfile = urlString;\n        in = getUrlAsStream(propfile);\n        props.load(in);\n        in.close();\n        return props;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1827694.java 50 58\n/home/jeff/BigCloneBench/sample/selected/1827694.java 74 82\n----------------------------------------\n    public static final String toString(short[] array) {\n        if (array == null) return \"null\";\n        StringBuffer sb = new StringBuffer(128).append('[');\n        for (int j = 0; j < array.length; ++j) {\n            sb.append(array[j]);\n            if (j != array.length - 1) sb.append(\", \");\n        }\n        return sb.append(']').toString();\n    }\n\n----------------------------------------\n    public static final String toString(char[] array) {\n        if (array == null) return \"null\";\n        StringBuffer sb = new StringBuffer(128).append('[');\n        for (int j = 0; j < array.length; ++j) {\n            sb.append(array[j]);\n            if (j != array.length - 1) sb.append(\", \");\n        }\n        return sb.append(']').toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/132039.java 573 587\n/home/jeff/BigCloneBench/sample/default/68839.java 573 587\n----------------------------------------\n    private void initTLS(Configuration cfg) {\n        try {\n            cipherSuites = url.getCipherSuites();\n            if (cipherSuites == null) {\n                return;\n            }\n            tls = SSLContextAdapter.getInstance();\n            char[] keypasswd = cfg.getProperty(\"tls-key-passwd\", \"passwd\").toCharArray();\n            tls.setKey(tls.loadKeyStore(DcmSnd.class.getResource(cfg.getProperty(\"tls-key\", \"identity.p12\")), keypasswd), keypasswd);\n            tls.setTrust(tls.loadKeyStore(DcmSnd.class.getResource(cfg.getProperty(\"tls-cacerts\", \"cacerts.jks\")), cfg.getProperty(\"tls-cacerts-passwd\", \"passwd\").toCharArray()));\n            tls.init();\n        } catch (Exception ex) {\n            throw new RuntimeException(\"Could not initalize TLS configuration: \", ex);\n        }\n    }\n\n----------------------------------------\n    private void initTLS(Configuration cfg) {\n        try {\n            cipherSuites = url.getCipherSuites();\n            if (cipherSuites == null) {\n                return;\n            }\n            tls = SSLContextAdapter.getInstance();\n            char[] keypasswd = cfg.getProperty(\"tls-key-passwd\", \"passwd\").toCharArray();\n            tls.setKey(tls.loadKeyStore(DcmSnd.class.getResource(cfg.getProperty(\"tls-key\", \"identity.p12\")), keypasswd), keypasswd);\n            tls.setTrust(tls.loadKeyStore(DcmSnd.class.getResource(cfg.getProperty(\"tls-cacerts\", \"cacerts.jks\")), cfg.getProperty(\"tls-cacerts-passwd\", \"passwd\").toCharArray()));\n            tls.init();\n        } catch (Exception ex) {\n            throw new RuntimeException(\"Could not initalize TLS configuration: \", ex);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/467737.java 139 148\n/home/jeff/BigCloneBench/sample/selected/467737.java 206 216\n----------------------------------------\n    public String getTextValue(String parentTag, String elementName) {\n        Document rootDom = this.getDom();\n        NodeList nl = rootDom.getElementsByTagName(parentTag);\n        Element ele = null;\n        if (nl != null && nl.getLength() > 0) {\n            ele = (Element) nl.item(0);\n            return getTextValue(ele, elementName);\n        }\n        return null;\n    }\n\n----------------------------------------\n    public ArrayList getElementsUnderSpecifiedElement(String elementName) {\n        ArrayList resultList = new ArrayList();\n        Document rootDom = this.getDom();\n        NodeList nl = rootDom.getElementsByTagName(elementName);\n        Element ele = null;\n        if (nl != null && nl.getLength() > 0) {\n            ele = (Element) nl.item(0);\n            return getElementsUnderSpecifiedElement(ele);\n        }\n        return resultList;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/70505.java 631 648\n/home/jeff/BigCloneBench/sample/default/90537.java 631 648\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/73729.java 133 146\n/home/jeff/BigCloneBench/sample/default/73729.java 356 366\n----------------------------------------\n    public void test3() throws Exception {\n        String data = \",\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"\", reader.get(0));\n        Assert.assertEquals(\"\", reader.get(1));\n        Assert.assertEquals(',', reader.getDelimiter());\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(2, reader.getColumnCount());\n        Assert.assertEquals(\",\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        Assert.assertEquals(\"\", reader.getRawRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test17() throws Exception {\n        String data = \"\\\"double\\\"\\\"\\\"\\\"double quotes\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"double\\\"\\\"double quotes\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"\\\"double\\\"\\\"\\\"\\\"double quotes\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/104630.java 43 52\n/home/jeff/BigCloneBench/sample/default/103574.java 43 52\n----------------------------------------\n    public void testCommas() {\n        String sequence = \"1,2,3,4,5\";\n        assertEquals(sequence, sequenceUsingDo(1, 5));\n        assertEquals(sequence, sequenceUsingFor(1, 5));\n        assertEquals(sequence, sequenceUsingWhile(1, 5));\n        sequence = \"8\";\n        assertEquals(sequence, sequenceUsingDo(8, 8));\n        assertEquals(sequence, sequenceUsingFor(8, 8));\n        assertEquals(sequence, sequenceUsingWhile(8, 8));\n    }\n\n----------------------------------------\n    public void testCommas() {\n        String sequence = \"1,2,3,4,5\";\n        assertEquals(sequence, sequenceUsingDo(1, 5));\n        assertEquals(sequence, sequenceUsingFor(1, 5));\n        assertEquals(sequence, sequenceUsingWhile(1, 5));\n        sequence = \"8\";\n        assertEquals(sequence, sequenceUsingDo(8, 8));\n        assertEquals(sequence, sequenceUsingFor(8, 8));\n        assertEquals(sequence, sequenceUsingWhile(8, 8));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1017245.java 357 367\n/home/jeff/BigCloneBench/sample/selected/1017245.java 375 385\n----------------------------------------\n    public void setMatrix(int i0, int i1, int j0, int j1, Matrix X) {\n        try {\n            for (int i = i0; i <= i1; i++) {\n                for (int j = j0; j <= j1; j++) {\n                    A[i][j] = X.get(i - i0, j - j0);\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new ArrayIndexOutOfBoundsException(\"Submatrix indices\");\n        }\n    }\n\n----------------------------------------\n    public void setMatrix(int[] r, int[] c, Matrix X) {\n        try {\n            for (int i = 0; i < r.length; i++) {\n                for (int j = 0; j < c.length; j++) {\n                    A[r[i]][c[j]] = X.get(i, j);\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new ArrayIndexOutOfBoundsException(\"Submatrix indices\");\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/40097.java 64 71\n/home/jeff/BigCloneBench/sample/default/57783.java 54 62\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/76192.java 687 703\n/home/jeff/BigCloneBench/sample/default/95647.java 687 703\n----------------------------------------\n    private static Properties loadConfig() {\n        InputStream in = DcmDir.class.getResourceAsStream(\"dcmdir.cfg\");\n        try {\n            Properties retval = new Properties();\n            retval.load(in);\n            return retval;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Could not read dcmdir.cfg\", e);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n            }\n        }\n    }\n\n----------------------------------------\n    private static Properties loadConfig() {\n        InputStream in = DcmDir.class.getResourceAsStream(\"dcmdir.cfg\");\n        try {\n            Properties retval = new Properties();\n            retval.load(in);\n            return retval;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Could not read dcmdir.cfg\", e);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/115118.java 260 270\n/home/jeff/BigCloneBench/sample/default/3389.java 260 270\n----------------------------------------\n    public void list() throws IOException, TransformerConfigurationException {\n        SAXTransformerFactory tf = (SAXTransformerFactory) TransformerFactory.newInstance();\n        Templates xslt = loadDcmDirXSL(tf);\n        DirReader reader = fact.newDirReader(dirFile);\n        reader.getFileSetInfo().writeFile2(getTransformerHandler(tf, xslt, FILE_SET_INFO), dict, null, 128, null);\n        try {\n            list(\"\", reader.getFirstRecord(onlyInUse), tf, xslt);\n        } finally {\n            reader.close();\n        }\n    }\n\n----------------------------------------\n    public void list() throws IOException, TransformerConfigurationException {\n        SAXTransformerFactory tf = (SAXTransformerFactory) TransformerFactory.newInstance();\n        Templates xslt = loadDcmDirXSL(tf);\n        DirReader reader = fact.newDirReader(dirFile);\n        reader.getFileSetInfo().writeFile2(getTransformerHandler(tf, xslt, FILE_SET_INFO), dict, null, 128, null);\n        try {\n            list(\"\", reader.getFirstRecord(onlyInUse), tf, xslt);\n        } finally {\n            reader.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/70505.java 631 648\n/home/jeff/BigCloneBench/sample/default/6937.java 648 665\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/10720.java 325 337\n/home/jeff/BigCloneBench/sample/default/6871.java 325 337\n----------------------------------------\n    int getTemplateCommand(String line) {\n        int startMatch = line.indexOf(templateMarker) + templateMarker.length() + 1;\n        if (DEBUG) System.out.println(\"getting template command :\" + line.substring(startMatch));\n        for (int i = 0; i < commands.length; ++i) {\n            String current = commands[i];\n            if (line.regionMatches(startMatch, current, 0, current.length())) {\n                params = line.substring(startMatch + current.length());\n                if (DEBUG) System.out.println(\"command is \" + commands[i] + \". params =\" + params);\n                return i;\n            }\n        }\n        return INVALID_COMMAND;\n    }\n\n----------------------------------------\n    int getTemplateCommand(String line) {\n        int startMatch = line.indexOf(templateMarker) + templateMarker.length() + 1;\n        if (DEBUG) System.out.println(\"getting template command :\" + line.substring(startMatch));\n        for (int i = 0; i < commands.length; ++i) {\n            String current = commands[i];\n            if (line.regionMatches(startMatch, current, 0, current.length())) {\n                params = line.substring(startMatch + current.length());\n                if (DEBUG) System.out.println(\"command is \" + commands[i] + \". params =\" + params);\n                return i;\n            }\n        }\n        return INVALID_COMMAND;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2465371.java 1418 1456\n/home/jeff/BigCloneBench/sample/selected/2465371.java 1504 1542\n----------------------------------------\n    private static void sort1(byte x[], int off, int len) {\n        if (len < 7) {\n            for (int i = off; i < len + off; i++) for (int j = i; j > off && x[j - 1] > x[j]; j--) swap(x, j, j - 1);\n            return;\n        }\n        int m = off + len / 2;\n        if (len > 7) {\n            int l = off;\n            int n = off + len - 1;\n            if (len > 40) {\n                int s = len / 8;\n                l = med3(x, l, l + s, l + 2 * s);\n                m = med3(x, m - s, m, m + s);\n                n = med3(x, n - 2 * s, n - s, n);\n            }\n            m = med3(x, l, m, n);\n        }\n        byte v = x[m];\n        int a = off, b = a, c = off + len - 1, d = c;\n        while (true) {\n            while (b <= c && x[b] <= v) {\n                if (x[b] == v) swap(x, a++, b);\n                b++;\n            }\n            while (c >= b && x[c] >= v) {\n                if (x[c] == v) swap(x, c, d--);\n                c--;\n            }\n            if (b > c) break;\n            swap(x, b++, c--);\n        }\n        int s, n = off + len;\n        s = Math.min(a - off, b - a);\n        vecswap(x, off, b - s, s);\n        s = Math.min(d - c, n - d - 1);\n        vecswap(x, b, n - s, s);\n        if ((s = b - a) > 1) sort1(x, off, s);\n        if ((s = d - c) > 1) sort1(x, n - s, s);\n    }\n\n----------------------------------------\n    private static void sort1(double x[], int off, int len) {\n        if (len < 7) {\n            for (int i = off; i < len + off; i++) for (int j = i; j > off && x[j - 1] > x[j]; j--) swap(x, j, j - 1);\n            return;\n        }\n        int m = off + len / 2;\n        if (len > 7) {\n            int l = off;\n            int n = off + len - 1;\n            if (len > 40) {\n                int s = len / 8;\n                l = med3(x, l, l + s, l + 2 * s);\n                m = med3(x, m - s, m, m + s);\n                n = med3(x, n - 2 * s, n - s, n);\n            }\n            m = med3(x, l, m, n);\n        }\n        double v = x[m];\n        int a = off, b = a, c = off + len - 1, d = c;\n        while (true) {\n            while (b <= c && x[b] <= v) {\n                if (x[b] == v) swap(x, a++, b);\n                b++;\n            }\n            while (c >= b && x[c] >= v) {\n                if (x[c] == v) swap(x, c, d--);\n                c--;\n            }\n            if (b > c) break;\n            swap(x, b++, c--);\n        }\n        int s, n = off + len;\n        s = Math.min(a - off, b - a);\n        vecswap(x, off, b - s, s);\n        s = Math.min(d - c, n - d - 1);\n        vecswap(x, b, n - s, s);\n        if ((s = b - a) > 1) sort1(x, off, s);\n        if ((s = d - c) > 1) sort1(x, n - s, s);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/676014.java 55 67\n/home/jeff/BigCloneBench/sample/selected/2242458.java 241 253\n----------------------------------------\n    public IStructuredSelection findSelection(IEditorInput anInput) {\n        IDiagramDocument document = SiseorDiagramEditorPlugin.getInstance().getDocumentProvider().getDiagramDocument(anInput);\n        if (document == null) {\n            return StructuredSelection.EMPTY;\n        }\n        Diagram diagram = document.getDiagram();\n        IFile file = WorkspaceSynchronizer.getFile(diagram.eResource());\n        if (file != null) {\n            SiseorNavigatorItem item = new SiseorNavigatorItem(diagram, file, false);\n            return new StructuredSelection(item);\n        }\n        return StructuredSelection.EMPTY;\n    }\n\n----------------------------------------\n    private ISelection getNavigatorSelection() {\n        IDiagramDocument document = getDiagramDocument();\n        if (document == null) {\n            return StructuredSelection.EMPTY;\n        }\n        Diagram diagram = document.getDiagram();\n        IFile file = WorkspaceSynchronizer.getFile(diagram.eResource());\n        if (file != null) {\n            PlwebNavigatorItem item = new PlwebNavigatorItem(diagram, file, false);\n            return new StructuredSelection(item);\n        }\n        return StructuredSelection.EMPTY;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/41265.java 243 252\n/home/jeff/BigCloneBench/sample/default/21681.java 243 252\n----------------------------------------\n    private TransformerHandler getTransformerHandler(SAXTransformerFactory tf, Templates tpl, String dsprompt) throws TransformerConfigurationException, IOException {\n        TransformerHandler th = tf.newTransformerHandler(tpl);\n        th.setResult(new StreamResult(System.out));\n        Transformer t = th.getTransformer();\n        t.setParameter(\"maxlen\", maxlen);\n        t.setParameter(\"vallen\", vallen);\n        t.setParameter(\"vallen\", vallen);\n        t.setParameter(\"dsprompt\", dsprompt);\n        return th;\n    }\n\n----------------------------------------\n    private TransformerHandler getTransformerHandler(SAXTransformerFactory tf, Templates tpl, String dsprompt) throws TransformerConfigurationException, IOException {\n        TransformerHandler th = tf.newTransformerHandler(tpl);\n        th.setResult(new StreamResult(System.out));\n        Transformer t = th.getTransformer();\n        t.setParameter(\"maxlen\", maxlen);\n        t.setParameter(\"vallen\", vallen);\n        t.setParameter(\"vallen\", vallen);\n        t.setParameter(\"dsprompt\", dsprompt);\n        return th;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2096828.java 349 359\n/home/jeff/BigCloneBench/sample/selected/2069719.java 366 376\n----------------------------------------\n    public static int nullSafeHashCode(byte[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + array[i];\n        }\n        return hash;\n    }\n\n----------------------------------------\n    public static int nullSafeHashCode(long[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + hashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/3389.java 621 629\n/home/jeff/BigCloneBench/sample/default/87896.java 619 627\n----------------------------------------\n    private int doPurge(DirWriter w) throws IOException {\n        int[] counter = { 0 };\n        for (DirRecord rec = w.getFirstRecord(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeStudy(w, rec, counter)) {\n                counter[0] += w.remove(rec);\n            }\n        }\n        return counter[0];\n    }\n\n----------------------------------------\n    private int doPurge(DirWriter w) throws IOException {\n        int[] counter = { 0 };\n        for (DirRecord rec = w.getFirstRecord(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeStudy(w, rec, counter)) {\n                counter[0] += w.remove(rec);\n            }\n        }\n        return counter[0];\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/345560.java 608 619\n/home/jeff/BigCloneBench/sample/selected/345560.java 627 638\n----------------------------------------\n    private void sampleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {\n        if (sampleJComboBox.getSelectedIndex() == 0) {\n            editSampleJButton.setEnabled(false);\n        } else if (sampleJComboBox.getSelectedIndex() == sampleJComboBox.getItemCount() - 1) {\n            editSampleJButton.setEnabled(false);\n            sampleJComboBox.setSelectedIndex(0);\n            new NewSampleDialog(this, true);\n        } else {\n            editSampleJButton.setEnabled(true);\n        }\n        validateInput();\n    }\n\n----------------------------------------\n    private void protocolJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {\n        if (protocolJComboBox.getSelectedIndex() == 0) {\n            editProtocolJButton.setEnabled(false);\n        } else if (protocolJComboBox.getSelectedIndex() == protocolJComboBox.getItemCount() - 1) {\n            editProtocolJButton.setEnabled(false);\n            protocolJComboBox.setSelectedIndex(0);\n            new NewProtocolDialog(this, true);\n        } else {\n            editProtocolJButton.setEnabled(true);\n        }\n        validateInput();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2181514.java 120 131\n/home/jeff/BigCloneBench/sample/selected/699527.java 23 34\n----------------------------------------\n    public static void copyFile(File in, File out, boolean append) throws IOException {\n        FileChannel inChannel = new FileInputStream(in).getChannel();\n        FileChannel outChannel = new FileOutputStream(out, append).getChannel();\n        try {\n            inChannel.transferTo(0, inChannel.size(), outChannel);\n        } catch (IOException e) {\n            throw e;\n        } finally {\n            if (inChannel != null) inChannel.close();\n            if (outChannel != null) outChannel.close();\n        }\n    }\n\n----------------------------------------\n    public static void copyFile(File in, File out) throws IOException {\n        FileChannel inChannel = new FileInputStream(in).getChannel();\n        FileChannel outChannel = new FileOutputStream(out).getChannel();\n        try {\n            inChannel.transferTo(0, inChannel.size(), outChannel);\n        } catch (IOException e) {\n            throw e;\n        } finally {\n            if (inChannel != null) inChannel.close();\n            if (outChannel != null) outChannel.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/85301.java 73 82\n/home/jeff/BigCloneBench/sample/default/72306.java 64 71\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/110979.java 50 61\n/home/jeff/BigCloneBench/sample/default/87351.java 50 61\n----------------------------------------\n    public List tokenize(String s, List result) {\n        StringTokenizer stk = new StringTokenizer(s, \", \");\n        while (stk.hasMoreTokens()) {\n            String tk = stk.nextToken();\n            if (tk.startsWith(\"$\")) {\n                tokenize(getProperty(tk.substring(1), \"\"), result);\n            } else {\n                result.add(tk);\n            }\n        }\n        return result;\n    }\n\n----------------------------------------\n    public List tokenize(String s, List result) {\n        StringTokenizer stk = new StringTokenizer(s, \", \");\n        while (stk.hasMoreTokens()) {\n            String tk = stk.nextToken();\n            if (tk.startsWith(\"$\")) {\n                tokenize(getProperty(tk.substring(1), \"\"), result);\n            } else {\n                result.add(tk);\n            }\n        }\n        return result;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1882693.java 962 973\n/home/jeff/BigCloneBench/sample/selected/2215261.java 963 974\n----------------------------------------\n        public InputStream(java.io.InputStream in, int options) {\n            super(in);\n            this.breakLines = (options & DONT_BREAK_LINES) != DONT_BREAK_LINES;\n            this.encode = (options & ENCODE) == ENCODE;\n            this.bufferLength = encode ? 4 : 3;\n            this.buffer = new byte[bufferLength];\n            this.position = -1;\n            this.lineLength = 0;\n            this.options = options;\n            this.alphabet = getAlphabet(options);\n            this.decodabet = getDecodabet(options);\n        }\n\n----------------------------------------\n        public InputStream(java.io.InputStream in, int options) {\n            super(in);\n            this.breakLines = (options & DONT_BREAK_LINES) != DONT_BREAK_LINES;\n            this.encode = (options & ENCODE) == ENCODE;\n            this.bufferLength = encode ? 4 : 3;\n            this.buffer = new byte[bufferLength];\n            this.position = -1;\n            this.lineLength = 0;\n            this.options = options;\n            this.alphabet = getAlphabet(options);\n            this.decodabet = getDecodabet(options);\n        }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2530759.java 352 367\n/home/jeff/BigCloneBench/sample/selected/472295.java 343 357\n----------------------------------------\n    public void newProperties(PropertySheet ps) throws PropertyException {\n        logger = ps.getLogger();\n        propsFile = ps.getString(PROP_PROPERTIES_FILE, PROP_PROPERTIES_FILE_DEFAULT);\n        logMath = (LogMath) ps.getComponent(PROP_LOG_MATH, LogMath.class);\n        unitManager = (UnitManager) ps.getComponent(PROP_UNIT_MANAGER, UnitManager.class);\n        binary = ps.getBoolean(PROP_IS_BINARY, getIsBinaryDefault());\n        sparseForm = ps.getBoolean(PROP_SPARSE_FORM, getSparseFormDefault());\n        vectorLength = ps.getInt(PROP_VECTOR_LENGTH, getVectorLengthDefault());\n        model = ps.getString(PROP_MODEL, getModelDefault());\n        dataDir = ps.getString(PROP_DATA_LOCATION, getDataLocationDefault()) + \"/\";\n        distFloor = ps.getFloat(PROP_MC_FLOOR, PROP_MC_FLOOR_DEFAULT);\n        mixtureWeightFloor = ps.getFloat(PROP_MW_FLOOR, PROP_MW_FLOOR_DEFAULT);\n        varianceFloor = ps.getFloat(PROP_VARIANCE_FLOOR, PROP_VARIANCE_FLOOR_DEFAULT);\n        useCDUnits = ps.getBoolean(PROP_USE_CD_UNITS, PROP_USE_CD_UNITS_DEFAULT);\n        fileNameClasseMllr = ps.getString(\"classeMllr\", \"\");\n    }\n\n----------------------------------------\n    public void newProperties(PropertySheet ps) throws PropertyException {\n        logger = ps.getLogger();\n        propsFile = ps.getString(PROP_PROPERTIES_FILE, PROP_PROPERTIES_FILE_DEFAULT);\n        logMath = (LogMath) ps.getComponent(PROP_LOG_MATH, LogMath.class);\n        unitManager = (UnitManager) ps.getComponent(PROP_UNIT_MANAGER, UnitManager.class);\n        binary = ps.getBoolean(PROP_IS_BINARY, getIsBinaryDefault());\n        sparseForm = ps.getBoolean(PROP_SPARSE_FORM, getSparseFormDefault());\n        vectorLength = ps.getInt(PROP_VECTOR_LENGTH, getVectorLengthDefault());\n        model = ps.getString(PROP_MODEL, getModelDefault());\n        dataDir = ps.getString(PROP_DATA_LOCATION, getDataLocationDefault()) + \"/\";\n        distFloor = ps.getFloat(PROP_MC_FLOOR, PROP_MC_FLOOR_DEFAULT);\n        mixtureWeightFloor = ps.getFloat(PROP_MW_FLOOR, PROP_MW_FLOOR_DEFAULT);\n        varianceFloor = ps.getFloat(PROP_VARIANCE_FLOOR, PROP_VARIANCE_FLOOR_DEFAULT);\n        useCDUnits = ps.getBoolean(PROP_USE_CD_UNITS, PROP_USE_CD_UNITS_DEFAULT);\n    }\n\n----------------------------------------\n", "encoding": "utf-8"}