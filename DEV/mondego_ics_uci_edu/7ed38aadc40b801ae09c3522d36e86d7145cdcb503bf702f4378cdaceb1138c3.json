{"url": "http://mondego.ics.uci.edu/projects/SourcererCC/precision/TP-2.txt", "content": "$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/46816.java 231 247\n/home/jeff/BigCloneBench/sample/default/43630.java 231 247\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/13378.java 506 524\n/home/jeff/BigCloneBench/sample/default/132272.java 506 524\n----------------------------------------\n    private final void initAssocParam(Configuration cfg, DcmURL url, boolean echo) {\n        acTimeout = Integer.parseInt(cfg.getProperty(\"ac-timeout\", \"5000\"));\n        dimseTimeout = Integer.parseInt(cfg.getProperty(\"dimse-timeout\", \"0\"));\n        soCloseDelay = Integer.parseInt(cfg.getProperty(\"so-close-delay\", \"500\"));\n        assocRQ.setCalledAET(url.getCalledAET());\n        assocRQ.setCallingAET(maskNull(url.getCallingAET()));\n        assocRQ.setMaxPDULength(Integer.parseInt(cfg.getProperty(\"max-pdu-len\", \"16352\")));\n        assocRQ.setAsyncOpsWindow(aFact.newAsyncOpsWindow(Integer.parseInt(cfg.getProperty(\"max-op-invoked\", \"0\")), 1));\n        if (echo) {\n            assocRQ.addPresContext(aFact.newPresContext(PCID_ECHO, UIDs.Verification, DEF_TS));\n            return;\n        }\n        for (Enumeration it = cfg.keys(); it.hasMoreElements(); ) {\n            String key = (String) it.nextElement();\n            if (key.startsWith(\"pc.\")) {\n                initPresContext(Integer.parseInt(key.substring(3)), cfg.tokenize(cfg.getProperty(key), new LinkedList()));\n            }\n        }\n    }\n\n----------------------------------------\n    private final void initAssocParam(Configuration cfg, DcmURL url, boolean echo) {\n        acTimeout = Integer.parseInt(cfg.getProperty(\"ac-timeout\", \"5000\"));\n        dimseTimeout = Integer.parseInt(cfg.getProperty(\"dimse-timeout\", \"0\"));\n        soCloseDelay = Integer.parseInt(cfg.getProperty(\"so-close-delay\", \"500\"));\n        assocRQ.setCalledAET(url.getCalledAET());\n        assocRQ.setCallingAET(maskNull(url.getCallingAET()));\n        assocRQ.setMaxPDULength(Integer.parseInt(cfg.getProperty(\"max-pdu-len\", \"16352\")));\n        assocRQ.setAsyncOpsWindow(aFact.newAsyncOpsWindow(Integer.parseInt(cfg.getProperty(\"max-op-invoked\", \"0\")), 1));\n        if (echo) {\n            assocRQ.addPresContext(aFact.newPresContext(PCID_ECHO, UIDs.Verification, DEF_TS));\n            return;\n        }\n        for (Enumeration it = cfg.keys(); it.hasMoreElements(); ) {\n            String key = (String) it.nextElement();\n            if (key.startsWith(\"pc.\")) {\n                initPresContext(Integer.parseInt(key.substring(3)), cfg.tokenize(cfg.getProperty(key), new LinkedList()));\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/939512.java 184 196\n/home/jeff/BigCloneBench/sample/selected/2721373.java 315 326\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_get_proxy_supplier(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            int _ob_a0 = ProxyIDHelper.read(in);\n            ProxySupplier _ob_r = get_proxy_supplier(_ob_a0);\n            out = handler.createReply();\n            ProxySupplierHelper.write(out, _ob_r);\n        } catch (ProxyNotFound _ob_ex) {\n            out = handler.createExceptionReply();\n            ProxyNotFoundHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_remove_filter(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            int _ob_a0 = org.omg.CosNotifyFilter.FilterIDHelper.read(in);\n            remove_filter(_ob_a0);\n            out = handler.createReply();\n        } catch (org.omg.CosNotifyFilter.FilterNotFound _ob_ex) {\n            out = handler.createExceptionReply();\n            org.omg.CosNotifyFilter.FilterNotFoundHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/4537.java 295 307\n/home/jeff/BigCloneBench/sample/default/5541.java 315 326\n----------------------------------------\n    private void send(ActiveAssociation active, File file, Dataset ds) throws InterruptedException, IOException {\n        if (!file.isDirectory()) {\n            for (int i = 0; i < repeatSingle; ++i) {\n                if (ds != null && random) ds.putUI(Tags.SOPInstanceUID, uidGen.createUID());\n                sendFile(active, file, ds);\n            }\n            return;\n        }\n        File[] list = file.listFiles();\n        for (int i = 0; i < list.length; ++i) {\n            send(active, list[i], ds);\n        }\n    }\n\n----------------------------------------\n    private void send(ActiveAssociation active, File file) throws InterruptedException, IOException {\n        if (!file.isDirectory()) {\n            for (int i = 0; i < repeatSingle; ++i) {\n                sendFile(active, file);\n            }\n            return;\n        }\n        File[] list = file.listFiles();\n        for (int i = 0; i < list.length; ++i) {\n            send(active, list[i]);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/849403.java 469 477\n/home/jeff/BigCloneBench/sample/selected/526365.java 602 610\n----------------------------------------\n    public double normF() {\n        double f = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                f = Maths.hypot(f, A[i][j]);\n            }\n        }\n        return f;\n    }\n\n----------------------------------------\n    public double normF() {\n        double f = 0;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                f = Maths.hypot(f, A[i][j]);\n            }\n        }\n        return f;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/62853.java 670 683\n/home/jeff/BigCloneBench/sample/default/11754.java 670 683\n----------------------------------------\n    public void test37() throws Exception {\n        String data = \"  \\\" Chicane\\\"  junk here  , Love on the Run, Knight Rider, \\\"This field contains a comma, but it doesn't matter as the field is quoted\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\" Chicane\", reader.get(0));\n        Assert.assertEquals(\"Love on the Run\", reader.get(1));\n        Assert.assertEquals(\"Knight Rider\", reader.get(2));\n        Assert.assertEquals(\"This field contains a comma, but it doesn't matter as the field is quoted\", reader.get(3));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(4, reader.getColumnCount());\n        Assert.assertEquals(\"  \\\" Chicane\\\"  junk here  , Love on the Run, Knight Rider, \\\"This field contains a comma, but it doesn't matter as the field is quoted\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test37() throws Exception {\n        String data = \"  \\\" Chicane\\\"  junk here  , Love on the Run, Knight Rider, \\\"This field contains a comma, but it doesn't matter as the field is quoted\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\" Chicane\", reader.get(0));\n        Assert.assertEquals(\"Love on the Run\", reader.get(1));\n        Assert.assertEquals(\"Knight Rider\", reader.get(2));\n        Assert.assertEquals(\"This field contains a comma, but it doesn't matter as the field is quoted\", reader.get(3));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(4, reader.getColumnCount());\n        Assert.assertEquals(\"  \\\" Chicane\\\"  junk here  , Love on the Run, Knight Rider, \\\"This field contains a comma, but it doesn't matter as the field is quoted\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/96339.java 414 433\n/home/jeff/BigCloneBench/sample/default/98990.java 414 433\n----------------------------------------\n    public void append(DirBuilder builder, File file, int[] counter) throws IOException {\n        if (file.isDirectory()) {\n            File[] files = file.listFiles();\n            for (int i = 0; i < files.length; ++i) {\n                append(builder, files[i], counter);\n            }\n        } else {\n            try {\n                counter[1] += builder.addFileRef(file);\n                ++counter[0];\n                System.out.print('.');\n            } catch (DcmParseException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            } catch (IllegalArgumentException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            }\n        }\n    }\n\n----------------------------------------\n    public void append(DirBuilder builder, File file, int[] counter) throws IOException {\n        if (file.isDirectory()) {\n            File[] files = file.listFiles();\n            for (int i = 0; i < files.length; ++i) {\n                append(builder, files[i], counter);\n            }\n        } else {\n            try {\n                counter[1] += builder.addFileRef(file);\n                ++counter[0];\n                System.out.print('.');\n            } catch (DcmParseException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            } catch (IllegalArgumentException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/65107.java 6 11\n/home/jeff/BigCloneBench/sample/default/101144.java 6 11\n----------------------------------------\n    public static boolean isPalindrome(String string) {\n        if (string.length() == 0) return true;\n        int limit = string.length() / 2;\n        for (int forward = 0, backward = string.length() - 1; forward < limit; forward++, backward--) if (string.charAt(forward) != string.charAt(backward)) return false;\n        return true;\n    }\n\n----------------------------------------\n    public static boolean isPalindrome(String string) {\n        if (string.length() == 0) return true;\n        int limit = string.length() / 2;\n        for (int forward = 0, backward = string.length() - 1; forward < limit; forward++, backward--) if (string.charAt(forward) != string.charAt(backward)) return false;\n        return true;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/22303.java 454 470\n/home/jeff/BigCloneBench/sample/default/93943.java 187 203\n----------------------------------------\n    public void test24() throws Exception {\n        String data = \"1\\r\\n\\r\\n1\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setUseTextQualifier(false);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.getRawRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test6() throws Exception {\n        String data = \"1\\r\\n2\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.getRawRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"2\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"2\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        Assert.assertEquals(\"\", reader.getRawRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/712178.java 105 128\n/home/jeff/BigCloneBench/sample/selected/672796.java 38 61\n----------------------------------------\n    public APIResponse update(Dependency dependency) throws Exception {\n        APIResponse response = new APIResponse();\n        connection = (HttpURLConnection) new URL(url + \"/api/dependency/update\").openConnection();\n        connection.setDoOutput(true);\n        connection.setRequestMethod(\"PUT\");\n        connection.setRequestProperty(\"Content-Type\", \"application/json; charset=utf-8\");\n        connection.setUseCaches(false);\n        connection.setConnectTimeout(TIMEOUT);\n        connection.connect();\n        marshaller.marshal(dependency, new MappedXMLStreamWriter(new MappedNamespaceConvention(new Configuration()), new OutputStreamWriter(connection.getOutputStream(), \"utf-8\")));\n        connection.getOutputStream().flush();\n        connection.getOutputStream().close();\n        if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {\n            JSONObject obj = new JSONObject(new String(new BufferedReader(new InputStreamReader(connection.getInputStream(), \"utf-8\")).readLine()));\n            response.setDone(true);\n            response.setMessage(unmarshaller.unmarshal(new MappedXMLStreamReader(obj, new MappedNamespaceConvention(new Configuration()))));\n            connection.getInputStream().close();\n        } else {\n            response.setDone(false);\n            response.setMessage(\"Update Dependency Error Code: Http (\" + connection.getResponseCode() + \")\");\n        }\n        connection.disconnect();\n        return response;\n    }\n\n----------------------------------------\n    public APIResponse create(Item item) throws Exception {\n        APIResponse response = new APIResponse();\n        connection = (HttpURLConnection) new URL(url + \"/api/item/create\").openConnection();\n        connection.setDoOutput(true);\n        connection.setRequestMethod(\"POST\");\n        connection.setRequestProperty(\"Content-Type\", \"application/json; charset=utf-8\");\n        connection.setUseCaches(false);\n        connection.setConnectTimeout(TIMEOUT);\n        connection.connect();\n        marshaller.marshal(item, new MappedXMLStreamWriter(new MappedNamespaceConvention(new Configuration()), new OutputStreamWriter(connection.getOutputStream(), \"utf-8\")));\n        connection.getOutputStream().flush();\n        connection.getOutputStream().close();\n        if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {\n            JSONObject obj = new JSONObject(new String(new BufferedReader(new InputStreamReader(connection.getInputStream(), \"utf-8\")).readLine()));\n            response.setDone(true);\n            response.setMessage(unmarshaller.unmarshal(new MappedXMLStreamReader(obj, new MappedNamespaceConvention(new Configuration()))));\n            connection.getInputStream().close();\n        } else {\n            response.setDone(false);\n            response.setMessage(\"Create Item Error Code: Http (\" + connection.getResponseCode() + \")\");\n        }\n        connection.disconnect();\n        return response;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/10993.java 54 62\n/home/jeff/BigCloneBench/sample/default/75612.java 54 62\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1616622.java 191 213\n/home/jeff/BigCloneBench/sample/selected/679109.java 159 181\n----------------------------------------\n    public void shuttlesort(int from[], int to[], int low, int high) {\n        if (high - low < 2) {\n            return;\n        }\n        int middle = (low + high) / 2;\n        shuttlesort(to, from, low, middle);\n        shuttlesort(to, from, middle, high);\n        int p = low;\n        int q = middle;\n        if (high - low >= 4 && compare(from[middle - 1], from[middle]) <= 0) {\n            for (int i = low; i < high; i++) {\n                to[i] = from[i];\n            }\n            return;\n        }\n        for (int i = low; i < high; i++) {\n            if (q >= high || (p < middle && compare(from[p], from[q]) <= 0)) {\n                to[i] = from[p++];\n            } else {\n                to[i] = from[q++];\n            }\n        }\n    }\n\n----------------------------------------\n    public void shuttlesort(int from[], int to[], int low, int high) {\n        if (high - low < 2) {\n            return;\n        }\n        int middle = (low + high) / 2;\n        shuttlesort(to, from, low, middle);\n        shuttlesort(to, from, middle, high);\n        int p = low;\n        int q = middle;\n        if (high - low >= 4 && compare(from[middle - 1], from[middle]) <= 0) {\n            for (int i = low; i < high; i++) {\n                to[i] = from[i];\n            }\n            return;\n        }\n        for (int i = low; i < high; i++) {\n            if (q >= high || (p < middle && compare(from[p], from[q]) <= 0)) {\n                to[i] = from[p++];\n            } else {\n                to[i] = from[q++];\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/700852.java 353 363\n/home/jeff/BigCloneBench/sample/selected/939613.java 324 334\n----------------------------------------\n    public static int nullSafeHashCode(long[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + hashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n    public static int nullSafeHashCode(char[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + array[i];\n        }\n        return hash;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/5803.java 118 124\n/home/jeff/BigCloneBench/sample/default/130280.java 118 124\n----------------------------------------\n    private static void addContentDateTime(Dataset ds) {\n        if (!ds.contains(Tags.ContentDate)) {\n            Date now = new Date();\n            ds.putDA(Tags.ContentDate, now);\n            ds.putTM(Tags.ContentTime, now);\n        } else if (!ds.contains(Tags.ContentTime)) ds.putTM(Tags.ContentTime);\n    }\n\n----------------------------------------\n    private static void addContentDateTime(Dataset ds) {\n        if (!ds.contains(Tags.ContentDate)) {\n            Date now = new Date();\n            ds.putDA(Tags.ContentDate, now);\n            ds.putTM(Tags.ContentTime, now);\n        } else if (!ds.contains(Tags.ContentTime)) ds.putTM(Tags.ContentTime);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/16429.java 474 489\n/home/jeff/BigCloneBench/sample/default/137593.java 470 485\n----------------------------------------\n    public static void main(String[] args) {\n        if (args.length > 1) {\n            System.out.println(\"usage: jnamed [conf]\");\n            System.exit(0);\n        }\n        jnamed s;\n        try {\n            String conf;\n            if (args.length == 1) conf = args[0]; else conf = \"jnamed.conf\";\n            s = new jnamed(conf);\n        } catch (IOException e) {\n            System.out.println(e);\n        } catch (ZoneTransferException e) {\n            System.out.println(e);\n        }\n    }\n\n----------------------------------------\n    public static void main(String[] args) {\n        if (args.length > 1) {\n            System.out.println(\"usage: jnamed [conf]\");\n            System.exit(0);\n        }\n        jnamed s;\n        try {\n            String conf;\n            if (args.length == 1) conf = args[0]; else conf = \"jnamed.conf\";\n            s = new jnamed(conf);\n        } catch (IOException e) {\n            System.out.println(e);\n        } catch (ZoneTransferException e) {\n            System.out.println(e);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1611111.java 104 117\n/home/jeff/BigCloneBench/sample/selected/1481762.java 96 109\n----------------------------------------\n    public void mergeManifest(Manifest rightManifest) throws IOException {\n        Map<String, Attributes> rightSections;\n        Attributes left;\n        manifest.getMainAttributes().putAll(rightManifest.getMainAttributes());\n        rightSections = rightManifest.getEntries();\n        for (String name : rightSections.keySet()) {\n            left = manifest.getAttributes(name);\n            if (left == null) {\n                left = new Attributes();\n                manifest.getEntries().put(name, left);\n            }\n            left.putAll(rightSections.get(name));\n        }\n    }\n\n----------------------------------------\n    public void mergeManifest(Manifest rightManifest) {\n        Map<String, Attributes> rightSections;\n        Attributes left;\n        manifest.getMainAttributes().putAll(rightManifest.getMainAttributes());\n        rightSections = rightManifest.getEntries();\n        for (String name : rightSections.keySet()) {\n            left = manifest.getAttributes(name);\n            if (left == null) {\n                left = new Attributes();\n                manifest.getEntries().put(name, left);\n            }\n            left.putAll(rightSections.get(name));\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/135495.java 414 433\n/home/jeff/BigCloneBench/sample/default/24546.java 414 433\n----------------------------------------\n    public void append(DirBuilder builder, File file, int[] counter) throws IOException {\n        if (file.isDirectory()) {\n            File[] files = file.listFiles();\n            for (int i = 0; i < files.length; ++i) {\n                append(builder, files[i], counter);\n            }\n        } else {\n            try {\n                counter[1] += builder.addFileRef(file);\n                ++counter[0];\n                System.out.print('.');\n            } catch (DcmParseException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            } catch (IllegalArgumentException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            }\n        }\n    }\n\n----------------------------------------\n    public void append(DirBuilder builder, File file, int[] counter) throws IOException {\n        if (file.isDirectory()) {\n            File[] files = file.listFiles();\n            for (int i = 0; i < files.length; ++i) {\n                append(builder, files[i], counter);\n            }\n        } else {\n            try {\n                counter[1] += builder.addFileRef(file);\n                ++counter[0];\n                System.out.print('.');\n            } catch (DcmParseException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            } catch (IllegalArgumentException e) {\n                System.out.println(MessageFormat.format(messages.getString(\"insertFailed\"), new Object[] { file }));\n                e.printStackTrace(System.out);\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/118736.java 306 344\n/home/jeff/BigCloneBench/sample/default/116202.java 306 344\n----------------------------------------\n    private boolean sendFile(ActiveAssociation active, File file) throws InterruptedException, IOException {\n        InputStream in = null;\n        DcmParser parser = null;\n        Dataset ds = null;\n        try {\n            try {\n                in = new BufferedInputStream(new FileInputStream(file));\n                parser = pFact.newDcmParser(in);\n                FileFormat format = parser.detectFileFormat();\n                if (format != null) {\n                    ds = oFact.newDataset();\n                    parser.setDcmHandler(ds.getDcmHandler());\n                    parser.parseDcmFile(format, Tags.PixelData);\n                    if (parser.getReadTag() == Tags.PixelData) {\n                        if (parser.getStreamPosition() + parser.getReadLength() > file.length()) {\n                            throw new EOFException(\"Pixel Data Length: \" + parser.getReadLength() + \" exceeds file length: \" + file.length());\n                        }\n                    }\n                    log.info(MessageFormat.format(messages.getString(\"readDone\"), new Object[] { file }));\n                } else {\n                    log.error(MessageFormat.format(messages.getString(\"failformat\"), new Object[] { file }));\n                    return false;\n                }\n            } catch (IOException e) {\n                log.error(MessageFormat.format(messages.getString(\"failread\"), new Object[] { file, e }));\n                return false;\n            }\n            sendDataset(active, file, parser, ds);\n            return true;\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n                ;\n            }\n        }\n    }\n\n----------------------------------------\n    private boolean sendFile(ActiveAssociation active, File file) throws InterruptedException, IOException {\n        InputStream in = null;\n        DcmParser parser = null;\n        Dataset ds = null;\n        try {\n            try {\n                in = new BufferedInputStream(new FileInputStream(file));\n                parser = pFact.newDcmParser(in);\n                FileFormat format = parser.detectFileFormat();\n                if (format != null) {\n                    ds = oFact.newDataset();\n                    parser.setDcmHandler(ds.getDcmHandler());\n                    parser.parseDcmFile(format, Tags.PixelData);\n                    if (parser.getReadTag() == Tags.PixelData) {\n                        if (parser.getStreamPosition() + parser.getReadLength() > file.length()) {\n                            throw new EOFException(\"Pixel Data Length: \" + parser.getReadLength() + \" exceeds file length: \" + file.length());\n                        }\n                    }\n                    log.info(MessageFormat.format(messages.getString(\"readDone\"), new Object[] { file }));\n                } else {\n                    log.error(MessageFormat.format(messages.getString(\"failformat\"), new Object[] { file }));\n                    return false;\n                }\n            } catch (IOException e) {\n                log.error(MessageFormat.format(messages.getString(\"failread\"), new Object[] { file, e }));\n                return false;\n            }\n            sendDataset(active, file, parser, ds);\n            return true;\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException ignore) {\n                }\n                ;\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1030949.java 485 495\n/home/jeff/BigCloneBench/sample/selected/900584.java 410 420\n----------------------------------------\n    public void setMatrix(int i0, int i1, int[] c, Matrix X) {\n        try {\n            for (int i = i0; i <= i1; i++) {\n                for (int j = 0; j < c.length; j++) {\n                    A[i][c[j]] = X.get(i - i0, j);\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new ArrayIndexOutOfBoundsException(\"Submatrix indices\");\n        }\n    }\n\n----------------------------------------\n    public void setMatrix(int[] r, int j0, int j1, Matrix X) {\n        try {\n            for (int i = 0; i < r.length; i++) {\n                for (int j = j0; j <= j1; j++) {\n                    A[r[i]][j] = X.get(i, j - j0);\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new ArrayIndexOutOfBoundsException(\"Submatrix indices\");\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/112296.java 73 82\n/home/jeff/BigCloneBench/sample/default/96513.java 54 62\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/96339.java 629 646\n/home/jeff/BigCloneBench/sample/default/58531.java 629 646\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/102869.java 640 653\n/home/jeff/BigCloneBench/sample/default/114239.java 744 759\n----------------------------------------\n    public void test35() throws Exception {\n        String data = \"Chicane, Love on the Run, Knight Rider, \\\"This field contains a comma, but it doesn't matter as the field is quoted\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"Chicane\", reader.get(0));\n        Assert.assertEquals(\"Love on the Run\", reader.get(1));\n        Assert.assertEquals(\"Knight Rider\", reader.get(2));\n        Assert.assertEquals(\"This field contains a comma, but it doesn't matter as the field is quoted\", reader.get(3));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(4, reader.getColumnCount());\n        Assert.assertEquals(\"Chicane, Love on the Run, Knight Rider, \\\"This field contains a comma, but it doesn't matter as the field is quoted\\\"\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test40() throws Exception {\n        String data = \"Chicane, Love on the Run, Knight Rider, This field contains a comma\\\\, but it doesn't matter as the delimiter is escaped\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setUseTextQualifier(false);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"Chicane\", reader.get(0));\n        Assert.assertEquals(\"Love on the Run\", reader.get(1));\n        Assert.assertEquals(\"Knight Rider\", reader.get(2));\n        Assert.assertEquals(\"This field contains a comma, but it doesn't matter as the delimiter is escaped\", reader.get(3));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(4, reader.getColumnCount());\n        Assert.assertEquals(\"Chicane, Love on the Run, Knight Rider, This field contains a comma\\\\, but it doesn't matter as the delimiter is escaped\", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/99468.java 149 157\n/home/jeff/BigCloneBench/sample/default/100919.java 149 157\n----------------------------------------\n    public void testTwoDimensionalArrays() {\n        final int rows = 3;\n        final int cols = 4;\n        int count = 0;\n        int[][] matrix = new int[rows][cols];\n        for (int x = 0; x < rows; x++) for (int y = 0; y < cols; y++) matrix[x][y] = count++;\n        assertEquals(11, matrix[2][3]);\n        assertEquals(6, matrix[1][2]);\n    }\n\n----------------------------------------\n    public void testTwoDimensionalArrays() {\n        final int rows = 3;\n        final int cols = 4;\n        int count = 0;\n        int[][] matrix = new int[rows][cols];\n        for (int x = 0; x < rows; x++) for (int y = 0; y < cols; y++) matrix[x][y] = count++;\n        assertEquals(11, matrix[2][3]);\n        assertEquals(6, matrix[1][2]);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2544306.java 109 114\n/home/jeff/BigCloneBench/sample/selected/2544306.java 116 121\n----------------------------------------\n    public void deleteDocument(final Credentials credentials, final String remoteFile) throws AccessDeniedException, UnsupportedRemoteStorageException, IOException {\n        loadConfig();\n        FTPClient ftp = getFTP(credentials, remoteFile);\n        ftp.deleteFile(extractFilename(remoteFile));\n        ftp.disconnect();\n    }\n\n----------------------------------------\n    public void deleteFolder(final Credentials credentials, final String remoteFolder) throws NumberFormatException, SocketException, AccessDeniedException, IOException {\n        loadConfig();\n        FTPClient ftp = getFTP(credentials, remoteFolder);\n        ftp.removeDirectory(extractFilename(remoteFolder));\n        ftp.disconnect();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/53104.java 522 544\n/home/jeff/BigCloneBench/sample/default/96339.java 570 590\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveInstances(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (sopInstUIDs.contains(rec.getRefSOPInstanceUID()) || matchFileIDs(rec.getRefFileIDs())) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1653112.java 543 551\n/home/jeff/BigCloneBench/sample/selected/1439149.java 540 548\n----------------------------------------\n    public void setFillColors(String[] fillColors) {\n        this.fillColors = new Color[fillColors.length];\n        for (int i = 0; i < fillColors.length; i++) {\n            try {\n                this.fillColors[i] = new Color(Integer.parseInt(fillColors[i], 16));\n            } catch (Exception ex) {\n            }\n        }\n    }\n\n----------------------------------------\n    public void setFillColors(String[] fillColors) {\n        this.fillColors = new Color[fillColors.length];\n        for (int i = 0; i < fillColors.length; i++) {\n            try {\n                this.fillColors[i] = new Color(Integer.parseInt(fillColors[i], 16));\n            } catch (Exception ex) {\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/137408.java 526 534\n/home/jeff/BigCloneBench/sample/default/88095.java 526 534\n----------------------------------------\n    private final void initPresContext(int pcid, List val) {\n        Iterator it = val.iterator();\n        String as = UIDs.forName((String) it.next());\n        String[] tsUIDs = new String[val.size() - 1];\n        for (int i = 0; i < tsUIDs.length; ++i) {\n            tsUIDs[i] = UIDs.forName((String) it.next());\n        }\n        assocRQ.addPresContext(aFact.newPresContext(pcid, as, tsUIDs));\n    }\n\n----------------------------------------\n    private final void initPresContext(int pcid, List val) {\n        Iterator it = val.iterator();\n        String as = UIDs.forName((String) it.next());\n        String[] tsUIDs = new String[val.size() - 1];\n        for (int i = 0; i < tsUIDs.length; ++i) {\n            tsUIDs[i] = UIDs.forName((String) it.next());\n        }\n        assocRQ.addPresContext(aFact.newPresContext(pcid, as, tsUIDs));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/124923.java 1629 1654\n/home/jeff/BigCloneBench/sample/default/67669.java 1629 1654\n----------------------------------------\n    public void test136() throws Exception {\n        CsvReader reader = CsvReader.parse(\"1\\n\\n1\\r\\r1\\r\\n\\r\\n1\\n\\r1\");\n        Assert.assertTrue(reader.getSkipEmptyRecords());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(2L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(3L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(4L, reader.getCurrentRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test136() throws Exception {\n        CsvReader reader = CsvReader.parse(\"1\\n\\n1\\r\\r1\\r\\n\\r\\n1\\n\\r1\");\n        Assert.assertTrue(reader.getSkipEmptyRecords());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(1L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(2L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(3L, reader.getCurrentRecord());\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertEquals(\"1\", reader.get(0));\n        Assert.assertEquals(4L, reader.getCurrentRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/80759.java 43 52\n/home/jeff/BigCloneBench/sample/default/42254.java 43 52\n----------------------------------------\n    public void testCommas() {\n        String sequence = \"1,2,3,4,5\";\n        assertEquals(sequence, sequenceUsingDo(1, 5));\n        assertEquals(sequence, sequenceUsingFor(1, 5));\n        assertEquals(sequence, sequenceUsingWhile(1, 5));\n        sequence = \"8\";\n        assertEquals(sequence, sequenceUsingDo(8, 8));\n        assertEquals(sequence, sequenceUsingFor(8, 8));\n        assertEquals(sequence, sequenceUsingWhile(8, 8));\n    }\n\n----------------------------------------\n    public void testCommas() {\n        String sequence = \"1,2,3,4,5\";\n        assertEquals(sequence, sequenceUsingDo(1, 5));\n        assertEquals(sequence, sequenceUsingFor(1, 5));\n        assertEquals(sequence, sequenceUsingWhile(1, 5));\n        sequence = \"8\";\n        assertEquals(sequence, sequenceUsingDo(8, 8));\n        assertEquals(sequence, sequenceUsingFor(8, 8));\n        assertEquals(sequence, sequenceUsingWhile(8, 8));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/89792.java 114 120\n/home/jeff/BigCloneBench/sample/default/75105.java 114 120\n----------------------------------------\n                    public void run() {\n                        try {\n                            Thread.sleep(2000);\n                        } catch (Exception e) {\n                        }\n                        waiter.interrupt();\n                    }\n\n----------------------------------------\n                    public void run() {\n                        try {\n                            Thread.sleep(2000);\n                        } catch (Exception e) {\n                        }\n                        waiter.interrupt();\n                    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/45886.java 149 157\n/home/jeff/BigCloneBench/sample/default/116591.java 149 157\n----------------------------------------\n    public void testTwoDimensionalArrays() {\n        final int rows = 3;\n        final int cols = 4;\n        int count = 0;\n        int[][] matrix = new int[rows][cols];\n        for (int x = 0; x < rows; x++) for (int y = 0; y < cols; y++) matrix[x][y] = count++;\n        assertEquals(11, matrix[2][3]);\n        assertEquals(6, matrix[1][2]);\n    }\n\n----------------------------------------\n    public void testTwoDimensionalArrays() {\n        final int rows = 3;\n        final int cols = 4;\n        int count = 0;\n        int[][] matrix = new int[rows][cols];\n        for (int x = 0; x < rows; x++) for (int y = 0; y < cols; y++) matrix[x][y] = count++;\n        assertEquals(11, matrix[2][3]);\n        assertEquals(6, matrix[1][2]);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/98684.java 546 568\n/home/jeff/BigCloneBench/sample/default/15343.java 648 665\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/96830.java 19 34\n/home/jeff/BigCloneBench/sample/default/84326.java 19 34\n----------------------------------------\n    public void testPalindrome() {\n        assertFalse(isPalindrome(\"abcdef\"));\n        assertFalse(isPalindrome(\"abccda\"));\n        assertTrue(isPalindrome(\"abccba\"));\n        assertFalse(isPalindrome(\"abcxba\"));\n        assertTrue(isPalindrome(\"a\"));\n        assertTrue(isPalindrome(\"aa\"));\n        assertFalse(isPalindrome(\"ab\"));\n        assertTrue(isPalindrome(\"\"));\n        assertTrue(isPalindrome(\"aaa\"));\n        assertTrue(isPalindrome(\"aba\"));\n        assertTrue(isPalindrome(\"abbba\"));\n        assertTrue(isPalindrome(\"abba\"));\n        assertFalse(isPalindrome(\"abbaa\"));\n        assertFalse(isPalindrome(\"abcda\"));\n    }\n\n----------------------------------------\n    public void testPalindrome() {\n        assertFalse(isPalindrome(\"abcdef\"));\n        assertFalse(isPalindrome(\"abccda\"));\n        assertTrue(isPalindrome(\"abccba\"));\n        assertFalse(isPalindrome(\"abcxba\"));\n        assertTrue(isPalindrome(\"a\"));\n        assertTrue(isPalindrome(\"aa\"));\n        assertFalse(isPalindrome(\"ab\"));\n        assertTrue(isPalindrome(\"\"));\n        assertTrue(isPalindrome(\"aaa\"));\n        assertTrue(isPalindrome(\"aba\"));\n        assertTrue(isPalindrome(\"abbba\"));\n        assertTrue(isPalindrome(\"abba\"));\n        assertFalse(isPalindrome(\"abbaa\"));\n        assertFalse(isPalindrome(\"abcda\"));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/31794.java 666 671\n/home/jeff/BigCloneBench/sample/default/16051.java 405 410\n----------------------------------------\n    public void _setFileNameSuffix(String rSuffix) {\n        if (null == rSuffix) {\n            return;\n        }\n        writer__iFileNameSuffix = rSuffix;\n    }\n\n----------------------------------------\n    public void _setFileNameSuffix(String rSuffix) {\n        if (null == rSuffix) {\n            return;\n        }\n        writer__iFileNameSuffix = rSuffix;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1422595.java 260 270\n/home/jeff/BigCloneBench/sample/selected/1422595.java 340 350\n----------------------------------------\n    public static int nullSafeHashCode(Object[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + nullSafeHashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n    public static int nullSafeHashCode(float[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + hashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1473439.java 369 379\n/home/jeff/BigCloneBench/sample/selected/2275689.java 369 379\n----------------------------------------\n    private void loadProperties() {\n        if (properties == null) {\n            properties = new Properties();\n            try {\n                URL url = getClass().getResource(propsFile);\n                properties.load(url.openStream());\n            } catch (IOException ioe) {\n                ioe.printStackTrace();\n            }\n        }\n    }\n\n----------------------------------------\n    private void loadProperties() {\n        if (properties == null) {\n            properties = new Properties();\n            try {\n                URL url = getClass().getResource(propsFile);\n                properties.load(url.openStream());\n            } catch (IOException ioe) {\n                ioe.printStackTrace();\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/80028.java 99 111\n/home/jeff/BigCloneBench/sample/default/91928.java 99 111\n----------------------------------------\n    public void testLabeledBreak() {\n        List<List<String>> table = new ArrayList<List<String>>();\n        List<String> row1 = new ArrayList<String>();\n        row1.add(\"5\");\n        row1.add(\"2\");\n        List<String> row2 = new ArrayList<String>();\n        row2.add(\"3\");\n        row2.add(\"4\");\n        table.add(row1);\n        table.add(row2);\n        assertTrue(found(table, \"3\"));\n        assertFalse(found(table, \"8\"));\n    }\n\n----------------------------------------\n    public void testLabeledBreak() {\n        List<List<String>> table = new ArrayList<List<String>>();\n        List<String> row1 = new ArrayList<String>();\n        row1.add(\"5\");\n        row1.add(\"2\");\n        List<String> row2 = new ArrayList<String>();\n        row2.add(\"3\");\n        row2.add(\"4\");\n        table.add(row1);\n        table.add(row2);\n        assertTrue(found(table, \"3\"));\n        assertFalse(found(table, \"8\"));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/8952.java 546 568\n/home/jeff/BigCloneBench/sample/default/118405.java 522 544\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveStudy(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (studyUIDs.contains(rec.getDataset().getString(Tags.StudyInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveSeries(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/18527.java 243 259\n/home/jeff/BigCloneBench/sample/default/114488.java 253 269\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n    public void echo() throws InterruptedException, IOException, GeneralSecurityException {\n        long t1 = System.currentTimeMillis();\n        int count = 0;\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                if (active.getAssociation().getAcceptedTransferSyntaxUID(PCID_ECHO) == null) {\n                    log.error(messages.getString(\"noPCEcho\"));\n                } else for (int j = 0; j < repeatSingle; ++j, ++count) {\n                    active.invoke(aFact.newDimse(PCID_ECHO, oFact.newCommand().initCEchoRQ(j)), null);\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"echoDone\"), new Object[] { new Integer(count), new Long(dt) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2598519.java 137 172\n/home/jeff/BigCloneBench/sample/selected/419659.java 171 247\n----------------------------------------\n    protected void loadInfo(AudioFileFormat aff) throws UnsupportedAudioFileException {\n        String type = aff.getType().toString();\n        if (!type.equalsIgnoreCase(\"mp3\")) throw new UnsupportedAudioFileException(\"Not MP3 audio format\");\n        if (aff instanceof TAudioFileFormat) {\n            Map props = ((TAudioFileFormat) aff).properties();\n            if (props.containsKey(\"mp3.channels\")) channels = ((Integer) props.get(\"mp3.channels\")).intValue();\n            if (props.containsKey(\"mp3.frequency.hz\")) rate = ((Integer) props.get(\"mp3.frequency.hz\")).intValue();\n            if (props.containsKey(\"mp3.bitrate.nominal.bps\")) nominalbitrate = ((Integer) props.get(\"mp3.bitrate.nominal.bps\")).intValue();\n            if (props.containsKey(\"mp3.version.layer\")) layer = \"Layer \" + props.get(\"mp3.version.layer\");\n            if (props.containsKey(\"mp3.version.mpeg\")) {\n                version = (String) props.get(\"mp3.version.mpeg\");\n                if (version.equals(\"1\")) version = \"MPEG1\"; else if (version.equals(\"2\")) version = \"MPEG2-LSF\"; else if (version.equals(\"2.5\")) version = \"MPEG2.5-LSF\";\n            }\n            if (props.containsKey(\"mp3.mode\")) {\n                int mode = ((Integer) props.get(\"mp3.mode\")).intValue();\n                if (mode == 0) channelsMode = \"Stereo\"; else if (mode == 1) channelsMode = \"Joint Stereo\"; else if (mode == 2) channelsMode = \"Dual Channel\"; else if (mode == 3) channelsMode = \"Single Channel\";\n            }\n            if (props.containsKey(\"mp3.crc\")) crc = ((Boolean) props.get(\"mp3.crc\")).booleanValue();\n            if (props.containsKey(\"mp3.vbr\")) vbr = ((Boolean) props.get(\"mp3.vbr\")).booleanValue();\n            if (props.containsKey(\"mp3.copyright\")) copyright = ((Boolean) props.get(\"mp3.copyright\")).booleanValue();\n            if (props.containsKey(\"mp3.original\")) original = ((Boolean) props.get(\"mp3.original\")).booleanValue();\n            emphasis = \"none\";\n            if (props.containsKey(\"title\")) title = (String) props.get(\"title\");\n            if (props.containsKey(\"author\")) artist = (String) props.get(\"author\");\n            if (props.containsKey(\"album\")) album = (String) props.get(\"album\");\n            if (props.containsKey(\"date\")) year = (String) props.get(\"date\");\n            if (props.containsKey(\"duration\")) total = (long) Math.round((((Long) props.get(\"duration\")).longValue()) / 1000000);\n            if (props.containsKey(\"mp3.id3tag.genre\")) genre = (String) props.get(\"mp3.id3tag.genre\");\n            if (props.containsKey(\"mp3.id3tag.track\")) {\n                try {\n                    track = Integer.parseInt((String) props.get(\"mp3.id3tag.track\"));\n                } catch (NumberFormatException e1) {\n                }\n            }\n        }\n    }\n\n----------------------------------------\n    protected void loadInfo(AudioFileFormat aff) throws UnsupportedAudioFileException {\n        type = aff.getType().toString();\n        if (!type.equalsIgnoreCase(\"mp3\")) {\n            throw new UnsupportedAudioFileException(\"Not MP3 audio format\");\n        }\n        if (aff instanceof TAudioFileFormat) {\n            Map props = ((TAudioFileFormat) aff).properties();\n            if (props.containsKey(\"mp3.channels\")) {\n                channels = ((Integer) props.get(\"mp3.channels\")).intValue();\n            }\n            if (props.containsKey(\"mp3.frequency.hz\")) {\n                samplerate = ((Integer) props.get(\"mp3.frequency.hz\")).intValue();\n            }\n            if (props.containsKey(\"mp3.bitrate.nominal.bps\")) {\n                bitrate = ((Integer) props.get(\"mp3.bitrate.nominal.bps\")).intValue() / 1000;\n            }\n            if (props.containsKey(\"mp3.version.layer\")) {\n                layer = \"Layer \" + props.get(\"mp3.version.layer\");\n            }\n            if (props.containsKey(\"mp3.version.mpeg\")) {\n                version = (String) props.get(\"mp3.version.mpeg\");\n                if (version.equals(\"1\")) {\n                    version = \"MPEG1\";\n                } else if (version.equals(\"2\")) {\n                    version = \"MPEG2-LSF\";\n                } else if (version.equals(\"2.5\")) {\n                    version = \"MPEG2.5-LSF\";\n                }\n            }\n            if (props.containsKey(\"mp3.mode\")) {\n                int mode = ((Integer) props.get(\"mp3.mode\")).intValue();\n                if (mode == 0) {\n                    channelsMode = \"Stereo\";\n                } else if (mode == 1) {\n                    channelsMode = \"Joint Stereo\";\n                } else if (mode == 2) {\n                    channelsMode = \"Dual Channel\";\n                } else if (mode == 3) {\n                    channelsMode = \"Single Channel\";\n                }\n            }\n            if (props.containsKey(\"mp3.crc\")) {\n                crc = ((Boolean) props.get(\"mp3.crc\")).booleanValue();\n            }\n            if (props.containsKey(\"mp3.vbr\")) {\n                vbr = ((Boolean) props.get(\"mp3.vbr\")).booleanValue();\n            }\n            if (props.containsKey(\"mp3.copyright\")) {\n                copyright = ((Boolean) props.get(\"mp3.copyright\")).booleanValue();\n            }\n            if (props.containsKey(\"mp3.original\")) {\n                original = ((Boolean) props.get(\"mp3.original\")).booleanValue();\n            }\n            emphasis = \"none\";\n            if (props.containsKey(\"title\")) {\n                title = (String) props.get(\"title\");\n            }\n            if (props.containsKey(\"author\")) {\n                artist = (String) props.get(\"author\");\n            }\n            if (props.containsKey(\"album\")) {\n                album = (String) props.get(\"album\");\n            }\n            if (props.containsKey(\"date\")) {\n                year = (String) props.get(\"date\");\n            }\n            if (props.containsKey(\"duration\")) {\n                totals = Math.round((((Long) props.get(\"duration\")).longValue()) / 1000000);\n            }\n            if (props.containsKey(\"mp3.id3tag.genre\")) {\n                genre = (String) props.get(\"mp3.id3tag.genre\");\n            }\n            if (props.containsKey(\"mp3.id3tag.track\")) {\n                track = (String) props.get(\"mp3.id3tag.track\");\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2376971.java 40 74\n/home/jeff/BigCloneBench/sample/selected/1395286.java 41 77\n----------------------------------------\n    private void getRandomGUID(boolean secure) {\n        MessageDigest md5 = null;\n        StringBuffer sbValueBeforeMD5 = new StringBuffer();\n        try {\n            md5 = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException e) {\n            System.out.println(\"Error: \" + e);\n        }\n        try {\n            long time = System.currentTimeMillis();\n            long rand = 0;\n            if (secure) {\n                rand = mySecureRand.nextLong();\n            } else {\n                rand = myRand.nextLong();\n            }\n            sbValueBeforeMD5.append(s_id);\n            sbValueBeforeMD5.append(\":\");\n            sbValueBeforeMD5.append(Long.toString(time));\n            sbValueBeforeMD5.append(\":\");\n            sbValueBeforeMD5.append(Long.toString(rand));\n            valueBeforeMD5 = sbValueBeforeMD5.toString();\n            md5.update(valueBeforeMD5.getBytes());\n            byte[] array = md5.digest();\n            StringBuffer sb = new StringBuffer();\n            for (int j = 0; j < array.length; ++j) {\n                int b = array[j] & 0xFF;\n                if (b < 0x10) sb.append('0');\n                sb.append(Integer.toHexString(b));\n            }\n            valueAfterMD5 = sb.toString();\n        } catch (Exception e) {\n            System.out.println(\"Error:\" + e);\n        }\n    }\n\n----------------------------------------\n    private void getRandomGUID(boolean secure) {\n        MessageDigest md5 = null;\n        StringBuffer sbValueBeforeMD5 = new StringBuffer();\n        try {\n            md5 = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException e) {\n            System.out.println(\"Error: \" + e);\n        }\n        try {\n            long time = System.currentTimeMillis();\n            long rand = 0;\n            if (secure) {\n                rand = mySecureRand.nextLong();\n            } else {\n                rand = myRand.nextLong();\n            }\n            sbValueBeforeMD5.append(s_id);\n            sbValueBeforeMD5.append(\":\");\n            sbValueBeforeMD5.append(Long.toString(time));\n            sbValueBeforeMD5.append(\":\");\n            sbValueBeforeMD5.append(Long.toString(rand));\n            valueBeforeMD5 = sbValueBeforeMD5.toString();\n            md5.update(valueBeforeMD5.getBytes());\n            byte[] array = md5.digest();\n            StringBuffer sb = new StringBuffer();\n            for (int j = 0; j < array.length; ++j) {\n                int b = array[j] & 0xFF;\n                if (b < 0x10) {\n                    sb.append('0');\n                }\n                sb.append(Integer.toHexString(b));\n            }\n            valueAfterMD5 = sb.toString();\n        } catch (Exception e) {\n            System.out.println(\"Error:\" + e);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/62111.java 648 665\n/home/jeff/BigCloneBench/sample/default/76192.java 667 685\n----------------------------------------\n    private boolean doPurgeSeries(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeInstances(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/102869.java 1210 1219\n/home/jeff/BigCloneBench/sample/default/5657.java 1210 1219\n----------------------------------------\n    public void test79() {\n        CsvReader reader;\n        reader = CsvReader.parse(\"\");\n        reader.close();\n        try {\n            reader.readRecord();\n        } catch (Exception ex) {\n            assertException(new IOException(\"This instance of the CsvReader class has already been closed.\"), ex);\n        }\n    }\n\n----------------------------------------\n    public void test79() {\n        CsvReader reader;\n        reader = CsvReader.parse(\"\");\n        reader.close();\n        try {\n            reader.readRecord();\n        } catch (Exception ex) {\n            assertException(new IOException(\"This instance of the CsvReader class has already been closed.\"), ex);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/120736.java 797 825\n/home/jeff/BigCloneBench/sample/default/40759.java 797 825\n----------------------------------------\n    void processSplitRegion(Vector region) throws IOException {\n        if (DEBUG) System.out.println(\"params=\\\"\" + params + \"\\\"\");\n        QuotedStringTokenizer pst = new QuotedStringTokenizer(params);\n        if (!pst.hasMoreTokens()) throw new IOException(\"Missing value in SPLIT\");\n        String value = pst.nextToken();\n        if (!pst.hasMoreTokens()) throw new IOException(\"Missing separators in SPLIT\");\n        String sep = pst.nextToken();\n        if (!pst.hasMoreTokens()) throw new IOException(\"Missing variables in SPLIT\");\n        int numVars = pst.countTokens();\n        String[] var_names = new String[numVars];\n        for (int i = 0; i < numVars; i++) var_names[i] = pst.nextToken();\n        StringTokenizer vst = new StringTokenizer(value, sep);\n        String[] values = new String[numVars];\n        for (int i = 0; i < numVars; i++) if (vst.hasMoreTokens()) values[i] = vst.nextToken(); else values[i] = \"\";\n        if (DEBUG) System.out.println(\"doing split with value \\\"\" + value + \"\\\" to vars :\" + params.substring(value.length() + 3));\n        for (int j = 1; j < region.size(); j++) {\n            try {\n                String currentLine = (String) region.elementAt(j);\n                String result = currentLine;\n                for (int curVar = 0; curVar < var_names.length; curVar++) result = substitute(result, var_names[curVar], values[curVar]);\n                out.print(result + \"\\n\");\n            } catch (ClassCastException e) {\n                Vector oldRegion = (Vector) region.elementAt(j);\n                Vector newRegion = oldRegion;\n                for (int curVar = 0; curVar < var_names.length; curVar++) newRegion = substituteInRegion(newRegion, var_names[curVar], values[curVar]);\n                processTemplateRegion(newRegion);\n            }\n        }\n    }\n\n----------------------------------------\n    void processSplitRegion(Vector region) throws IOException {\n        if (DEBUG) System.out.println(\"params=\\\"\" + params + \"\\\"\");\n        QuotedStringTokenizer pst = new QuotedStringTokenizer(params);\n        if (!pst.hasMoreTokens()) throw new IOException(\"Missing value in SPLIT\");\n        String value = pst.nextToken();\n        if (!pst.hasMoreTokens()) throw new IOException(\"Missing separators in SPLIT\");\n        String sep = pst.nextToken();\n        if (!pst.hasMoreTokens()) throw new IOException(\"Missing variables in SPLIT\");\n        int numVars = pst.countTokens();\n        String[] var_names = new String[numVars];\n        for (int i = 0; i < numVars; i++) var_names[i] = pst.nextToken();\n        StringTokenizer vst = new StringTokenizer(value, sep);\n        String[] values = new String[numVars];\n        for (int i = 0; i < numVars; i++) if (vst.hasMoreTokens()) values[i] = vst.nextToken(); else values[i] = \"\";\n        if (DEBUG) System.out.println(\"doing split with value \\\"\" + value + \"\\\" to vars :\" + params.substring(value.length() + 3));\n        for (int j = 1; j < region.size(); j++) {\n            try {\n                String currentLine = (String) region.elementAt(j);\n                String result = currentLine;\n                for (int curVar = 0; curVar < var_names.length; curVar++) result = substitute(result, var_names[curVar], values[curVar]);\n                out.print(result + \"\\n\");\n            } catch (ClassCastException e) {\n                Vector oldRegion = (Vector) region.elementAt(j);\n                Vector newRegion = oldRegion;\n                for (int curVar = 0; curVar < var_names.length; curVar++) newRegion = substituteInRegion(newRegion, var_names[curVar], values[curVar]);\n                processTemplateRegion(newRegion);\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1029839.java 127 140\n/home/jeff/BigCloneBench/sample/selected/358730.java 81 94\n----------------------------------------\n    private static void delete(EntityManagerFactory entityManagerFactory) {\n        EntityManager entityManager = entityManagerFactory.createEntityManager();\n        try {\n            entityManager.getTransaction().begin();\n            Query query = entityManager.createQuery(\"DELETE FROM Person p\");\n            query.executeUpdate();\n            entityManager.getTransaction().commit();\n        } finally {\n            if (entityManager.getTransaction().isActive()) {\n                entityManager.getTransaction().rollback();\n            }\n            entityManager.close();\n        }\n    }\n\n----------------------------------------\n    private static void delete(EntityManagerFactory entityManagerFactory) {\n        EntityManager entityManager = entityManagerFactory.createEntityManager();\n        try {\n            entityManager.getTransaction().begin();\n            Query query = entityManager.createQuery(\"DELETE FROM Person p\");\n            query.executeUpdate();\n            entityManager.getTransaction().commit();\n        } finally {\n            if (entityManager.getTransaction().isActive()) {\n                entityManager.getTransaction().rollback();\n            }\n            entityManager.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/13406.java 113 124\n/home/jeff/BigCloneBench/sample/default/84137.java 113 124\n----------------------------------------\n    private boolean found(List<List<String>> table, String target) {\n        boolean found = false;\n        search: for (List<String> row : table) {\n            for (String value : row) {\n                if (value.equals(target)) {\n                    found = true;\n                    break search;\n                }\n            }\n        }\n        return found;\n    }\n\n----------------------------------------\n    private boolean found(List<List<String>> table, String target) {\n        boolean found = false;\n        search: for (List<String> row : table) {\n            for (String value : row) {\n                if (value.equals(target)) {\n                    found = true;\n                    break search;\n                }\n            }\n        }\n        return found;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2084125.java 153 183\n/home/jeff/BigCloneBench/sample/selected/355856.java 167 197\n----------------------------------------\n    private boolean _jspx_meth_html_005flink_005f0(PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.LinkTag _jspx_th_html_005flink_005f0 = (org.apache.struts.taglib.html.LinkTag) _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.get(org.apache.struts.taglib.html.LinkTag.class);\n        _jspx_th_html_005flink_005f0.setPageContext(_jspx_page_context);\n        _jspx_th_html_005flink_005f0.setParent(null);\n        _jspx_th_html_005flink_005f0.setStyleId(\"incluir\");\n        _jspx_th_html_005flink_005f0.setHref(\"login.do\");\n        int _jspx_eval_html_005flink_005f0 = _jspx_th_html_005flink_005f0.doStartTag();\n        if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.pushBody();\n                _jspx_th_html_005flink_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);\n                _jspx_th_html_005flink_005f0.doInitBody();\n            }\n            do {\n                out.write(\"In\u00edcio\");\n                int evalDoAfterBody = _jspx_th_html_005flink_005f0.doAfterBody();\n                if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN) break;\n            } while (true);\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.popBody();\n            }\n        }\n        if (_jspx_th_html_005flink_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n        return false;\n    }\n\n----------------------------------------\n    private boolean _jspx_meth_html_005flink_005f0(PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.LinkTag _jspx_th_html_005flink_005f0 = (org.apache.struts.taglib.html.LinkTag) _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.get(org.apache.struts.taglib.html.LinkTag.class);\n        _jspx_th_html_005flink_005f0.setPageContext(_jspx_page_context);\n        _jspx_th_html_005flink_005f0.setParent(null);\n        _jspx_th_html_005flink_005f0.setStyleId(\"incluir\");\n        _jspx_th_html_005flink_005f0.setHref(\"login.do\");\n        int _jspx_eval_html_005flink_005f0 = _jspx_th_html_005flink_005f0.doStartTag();\n        if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.pushBody();\n                _jspx_th_html_005flink_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);\n                _jspx_th_html_005flink_005f0.doInitBody();\n            }\n            do {\n                out.write(\"In\u00edcio\");\n                int evalDoAfterBody = _jspx_th_html_005flink_005f0.doAfterBody();\n                if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN) break;\n            } while (true);\n            if (_jspx_eval_html_005flink_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {\n                out = _jspx_page_context.popBody();\n            }\n        }\n        if (_jspx_th_html_005flink_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005flink_005fstyleId_005fhref.reuse(_jspx_th_html_005flink_005f0);\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/780597.java 418 432\n/home/jeff/BigCloneBench/sample/selected/780597.java 1004 1020\n----------------------------------------\n    public List getAccountsForUser(long uid) throws Exception {\n        Session s = null;\n        try {\n            String query = \"select R from Account R where R.ownerId=? order by R.accountType, R.accountName\";\n            s = HibernateUtils.getSessionFactory().getCurrentSession();\n            s.beginTransaction();\n            Query q = s.createQuery(query);\n            q.setLong(0, uid);\n            return q.list();\n        } catch (Exception e) {\n            throw e;\n        } finally {\n            if (s != null) HibernateUtils.closeSession();\n        }\n    }\n\n----------------------------------------\n    public static String getAccountName(long aid) throws Exception {\n        Session s = null;\n        try {\n            s = HibernateUtils.getSessionFactory().getCurrentSession();\n            s.beginTransaction();\n            String query = \"select R.accountName from Account R where R.accountId=?\";\n            Query q = s.createQuery(query);\n            q.setLong(0, aid);\n            String aname = (String) q.uniqueResult();\n            s.getTransaction().commit();\n            return aname;\n        } catch (Exception e) {\n            throw e;\n        } finally {\n            if (s != null) HibernateUtils.closeSession();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/97193.java 219 227\n/home/jeff/BigCloneBench/sample/default/121978.java 219 227\n----------------------------------------\n    private void setupForDiff() throws IOException {\n        addedTable = new StringBuffer();\n        modifiedTable = new StringBuffer();\n        deletedTable = new StringBuffer();\n        redlinesTempFile = File.createTempFile(\"diff\", \".txt\");\n        redlinesTempFile.deleteOnExit();\n        redlinesOut = new PrintWriter(new FileWriter(redlinesTempFile));\n        base = deleted = modified = added = total = 0;\n    }\n\n----------------------------------------\n    private void setupForDiff() throws IOException {\n        addedTable = new StringBuffer();\n        modifiedTable = new StringBuffer();\n        deletedTable = new StringBuffer();\n        redlinesTempFile = File.createTempFile(\"diff\", \".txt\");\n        redlinesTempFile.deleteOnExit();\n        redlinesOut = new PrintWriter(new FileWriter(redlinesTempFile));\n        base = deleted = modified = added = total = 0;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2233792.java 208 219\n/home/jeff/BigCloneBench/sample/selected/1199345.java 156 168\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_set_qos(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            org.omg.CosNotification.Property[] _ob_a0 = org.omg.CosNotification.QoSPropertiesHelper.read(in);\n            set_qos(_ob_a0);\n            out = handler.createReply();\n        } catch (org.omg.CosNotification.UnsupportedQoS _ob_ex) {\n            out = handler.createExceptionReply();\n            org.omg.CosNotification.UnsupportedQoSHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_offer_change(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            org.omg.CosNotification.EventType[] _ob_a0 = org.omg.CosNotification.EventTypeSeqHelper.read(in);\n            org.omg.CosNotification.EventType[] _ob_a1 = org.omg.CosNotification.EventTypeSeqHelper.read(in);\n            offer_change(_ob_a0, _ob_a1);\n            out = handler.createReply();\n        } catch (org.omg.CosNotifyComm.InvalidEventType _ob_ex) {\n            out = handler.createExceptionReply();\n            org.omg.CosNotifyComm.InvalidEventTypeHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/119807.java 940 952\n/home/jeff/BigCloneBench/sample/default/93943.java 940 952\n----------------------------------------\n    public void test51() throws Exception {\n        String data = \"\\\"\\\\xfa\\\\u0afa\\\\xFA\\\\u0AFA\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setUseTextQualifier(true);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"\u00fa\u0afa\u00fa\u0afa\", reader.get(0));\n        Assert.assertEquals(\"\\\"\\\\xfa\\\\u0afa\\\\xFA\\\\u0AFA\\\"\", reader.getRawRecord());\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test51() throws Exception {\n        String data = \"\\\"\\\\xfa\\\\u0afa\\\\xFA\\\\u0AFA\\\"\";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setUseTextQualifier(true);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"\u00fa\u0afa\u00fa\u0afa\", reader.get(0));\n        Assert.assertEquals(\"\\\"\\\\xfa\\\\u0afa\\\\xFA\\\\u0AFA\\\"\", reader.getRawRecord());\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(1, reader.getColumnCount());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/398686.java 243 258\n/home/jeff/BigCloneBench/sample/selected/966121.java 496 510\n----------------------------------------\n    private boolean _jspx_meth_html_005fhidden_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.HiddenTag _jspx_th_html_005fhidden_005f0 = (org.apache.struts.taglib.html.HiddenTag) _005fjspx_005ftagPool_005fhtml_005fhidden_005fstyleId_005fproperty_005fnobody.get(org.apache.struts.taglib.html.HiddenTag.class);\n        _jspx_th_html_005fhidden_005f0.setPageContext(_jspx_page_context);\n        _jspx_th_html_005fhidden_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);\n        _jspx_th_html_005fhidden_005f0.setProperty(\"metodo\");\n        _jspx_th_html_005fhidden_005f0.setStyleId(\"metodo\");\n        int _jspx_eval_html_005fhidden_005f0 = _jspx_th_html_005fhidden_005f0.doStartTag();\n        if (_jspx_th_html_005fhidden_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005fhidden_005fstyleId_005fproperty_005fnobody.reuse(_jspx_th_html_005fhidden_005f0);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005fhidden_005fstyleId_005fproperty_005fnobody.reuse(_jspx_th_html_005fhidden_005f0);\n        return false;\n    }\n\n----------------------------------------\n    private boolean _jspx_meth_html_005fhidden_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_html_005fform_005f0, PageContext _jspx_page_context) throws Throwable {\n        PageContext pageContext = _jspx_page_context;\n        JspWriter out = _jspx_page_context.getOut();\n        org.apache.struts.taglib.html.HiddenTag _jspx_th_html_005fhidden_005f1 = (org.apache.struts.taglib.html.HiddenTag) _005fjspx_005ftagPool_005fhtml_005fhidden_0026_005fproperty_005fnobody.get(org.apache.struts.taglib.html.HiddenTag.class);\n        _jspx_th_html_005fhidden_005f1.setPageContext(_jspx_page_context);\n        _jspx_th_html_005fhidden_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_html_005fform_005f0);\n        _jspx_th_html_005fhidden_005f1.setProperty(\"editavel\");\n        int _jspx_eval_html_005fhidden_005f1 = _jspx_th_html_005fhidden_005f1.doStartTag();\n        if (_jspx_th_html_005fhidden_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {\n            _005fjspx_005ftagPool_005fhtml_005fhidden_0026_005fproperty_005fnobody.reuse(_jspx_th_html_005fhidden_005f1);\n            return true;\n        }\n        _005fjspx_005ftagPool_005fhtml_005fhidden_0026_005fproperty_005fnobody.reuse(_jspx_th_html_005fhidden_005f1);\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/526365.java 617 626\n/home/jeff/BigCloneBench/sample/selected/127068.java 1011 1020\n----------------------------------------\n    public Matrix uminus() {\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = -A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n    public Matrix ebeSqrt() {\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = Math.sqrt(A[i][j]);\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/68839.java 488 494\n/home/jeff/BigCloneBench/sample/default/33310.java 495 501\n----------------------------------------\n    private Socket newSocket(String host, int port) throws IOException, GeneralSecurityException {\n        if (cipherSuites != null) {\n            return tls.getSocketFactory(cipherSuites).createSocket(host, port);\n        } else {\n            return new Socket(host, port);\n        }\n    }\n\n----------------------------------------\n    private Socket newSocket(String host, int port) throws IOException, GeneralSecurityException {\n        if (cipherSuites != null) {\n            return tls.getSocketFactory(cipherSuites).createSocket(host, port);\n        } else {\n            return new Socket(host, port);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1982357.java 26 33\n/home/jeff/BigCloneBench/sample/selected/1982357.java 35 41\n----------------------------------------\n    public void xtestURL2() throws Exception {\n        URL url = new URL(IOTest.URL);\n        InputStream inputStream = url.openStream();\n        OutputStream outputStream = new FileOutputStream(\"C:/Temp/testURL2.mp4\");\n        IOUtils.copy(inputStream, outputStream);\n        inputStream.close();\n        outputStream.close();\n    }\n\n----------------------------------------\n    public void xtestFile1() throws Exception {\n        InputStream inputStream = new FileInputStream(IOTest.FILE);\n        OutputStream outputStream = new FileOutputStream(\"C:/Temp/testFile1.mp4\");\n        IOUtils.copy(inputStream, outputStream);\n        inputStream.close();\n        outputStream.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1359462.java 70 78\n/home/jeff/BigCloneBench/sample/selected/209583.java 81 89\n----------------------------------------\n    public ZMatrix(int[][] c) {\n        super(c.length, c[0].length);\n        for (int i = 1; i < rows; i++) {\n            if (c[i].length != columns) {\n                throw new IllegalArgumentException(\"Rows are not all of the same length.\");\n            }\n        }\n        this.coefficients = c;\n    }\n\n----------------------------------------\n    public QMatrix(Rational[][] c) {\n        super(c.length, c[0].length);\n        for (int i = 1; i < rows; i++) {\n            if (c[i].length != columns) {\n                throw new IllegalArgumentException(\"Rows are not all of the same length.\");\n            }\n        }\n        this.coefficients = c;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/132787.java 335 349\n/home/jeff/BigCloneBench/sample/default/42993.java 330 344\n----------------------------------------\n    public void create(String[] args, int off) throws IOException {\n        if (uid == null || uid.length() == 0) {\n            uid = UIDGenerator.getInstance().createUID();\n        }\n        File rootDir = dirFile.getParentFile();\n        if (rootDir != null && !rootDir.exists()) {\n            rootDir.mkdirs();\n        }\n        DirWriter writer = fact.newDirWriter(dirFile, uid, id, readMeFile, readMeCharset, encodeParam());\n        try {\n            build(writer, args, off);\n        } finally {\n            writer.close();\n        }\n    }\n\n----------------------------------------\n    public void create(String[] args, int off) throws IOException {\n        if (uid == null || uid.length() == 0) {\n            uid = UIDGenerator.getInstance().createUID();\n        }\n        File rootDir = dirFile.getParentFile();\n        if (rootDir != null && !rootDir.exists()) {\n            rootDir.mkdirs();\n        }\n        DirWriter writer = fact.newDirWriter(dirFile, uid, id, readMeFile, readMeCharset, encodeParam());\n        try {\n            build(writer, args, off);\n        } finally {\n            writer.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/613000.java 32 51\n/home/jeff/BigCloneBench/sample/selected/2230700.java 31 48\n----------------------------------------\n    private static void insert(EntityManagerFactory entityManagerFactory) {\n        EntityManager entityManager = entityManagerFactory.createEntityManager();\n        try {\n            entityManager.getTransaction().begin();\n            Person person = new Person();\n            person.setFirstName(\"Jesse\");\n            person.setLastName(\"James\");\n            Address address = new Address();\n            address.setStreet(\"Main Road 12\");\n            address.setCity(\"Oakwood\");\n            person.setAddress(address);\n            entityManager.persist(person);\n            entityManager.getTransaction().commit();\n        } finally {\n            if (entityManager.getTransaction().isActive()) {\n                entityManager.getTransaction().rollback();\n            }\n            entityManager.close();\n        }\n    }\n\n----------------------------------------\n    private static void insert(EntityManagerFactory entityManagerFactory) {\n        EntityManager entityManager = entityManagerFactory.createEntityManager();\n        try {\n            entityManager.getTransaction().begin();\n            Person person = new Person();\n            person.setFirstName(\"Jesse\");\n            person.setLastName(\"James\");\n            person.getAddresses().add(\"Main Road 12 - Oakwood\");\n            person.getAddresses().add(\"Sunshine Boulevard 211 - Austin\");\n            entityManager.persist(person);\n            entityManager.getTransaction().commit();\n        } finally {\n            if (entityManager.getTransaction().isActive()) {\n                entityManager.getTransaction().rollback();\n            }\n            entityManager.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/28942.java 618 646\n/home/jeff/BigCloneBench/sample/default/90813.java 618 646\n----------------------------------------\n    private breakpoint setBreakpointAtStringClass(JDP_Field stringField) {\n        JDP_Class stringClass = new JDP_Class();\n        stringClass.name = stringField.type;\n        stringClass.address = stringField.address;\n        try {\n            user.bmap.classToJDPClass(stringClass.name, stringClass.address, false, stringClass);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        JDP_Field valueField = (JDP_Field) stringClass.fields.elementAt(0);\n        String charArrayString = valueField.value;\n        charArrayString = charArrayString.substring(1, charArrayString.indexOf('}'));\n        StringTokenizer st = new StringTokenizer(charArrayString, \", \", false);\n        StringBuffer ret = new StringBuffer();\n        while (st.hasMoreTokens()) {\n            ret.append(st.nextToken());\n        }\n        String className = ret.toString();\n        breakpoint bp = null;\n        try {\n            bp = user.bmap.findBreakpoint(className + \".main\", null, user.reg.hardwareIP());\n        } catch (BmapMultipleException e1) {\n            jdp_console.writeOutput(e1.getMessage());\n        } catch (BmapNotFoundException e2) {\n            jdp_console.writeOutput(e2.getMessage());\n        }\n        user.bpset.setBreakpoint(bp);\n        return bp;\n    }\n\n----------------------------------------\n    private breakpoint setBreakpointAtStringClass(JDP_Field stringField) {\n        JDP_Class stringClass = new JDP_Class();\n        stringClass.name = stringField.type;\n        stringClass.address = stringField.address;\n        try {\n            user.bmap.classToJDPClass(stringClass.name, stringClass.address, false, stringClass);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        JDP_Field valueField = (JDP_Field) stringClass.fields.elementAt(0);\n        String charArrayString = valueField.value;\n        charArrayString = charArrayString.substring(1, charArrayString.indexOf('}'));\n        StringTokenizer st = new StringTokenizer(charArrayString, \", \", false);\n        StringBuffer ret = new StringBuffer();\n        while (st.hasMoreTokens()) {\n            ret.append(st.nextToken());\n        }\n        String className = ret.toString();\n        breakpoint bp = null;\n        try {\n            bp = user.bmap.findBreakpoint(className + \".main\", null, user.reg.hardwareIP());\n        } catch (BmapMultipleException e1) {\n            jdp_console.writeOutput(e1.getMessage());\n        } catch (BmapNotFoundException e2) {\n            jdp_console.writeOutput(e2.getMessage());\n        }\n        user.bpset.setBreakpoint(bp);\n        return bp;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2590702.java 239 250\n/home/jeff/BigCloneBench/sample/selected/1774101.java 197 206\n----------------------------------------\n    public Object eGet(int featureID, boolean resolve, boolean coreType) {\n        switch(featureID) {\n            case ActionstepPackage.SET_GLOBAL_VARIABLE__CALL1:\n                if (resolve) return getCall1();\n                return basicGetCall1();\n            case ActionstepPackage.SET_GLOBAL_VARIABLE__VALUE:\n                return getValue();\n            case ActionstepPackage.SET_GLOBAL_VARIABLE__VARIABLE:\n                return getVariable();\n        }\n        return super.eGet(featureID, resolve, coreType);\n    }\n\n----------------------------------------\n    public Object eGet(int featureID, boolean resolve, boolean coreType) {\n        switch(featureID) {\n            case ActionstepPackage.SET_PRIORITY__CALL1:\n                if (resolve) return getCall1();\n                return basicGetCall1();\n            case ActionstepPackage.SET_PRIORITY__PRIORITY:\n                return getPriority();\n        }\n        return super.eGet(featureID, resolve, coreType);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/118344.java 629 646\n/home/jeff/BigCloneBench/sample/default/81123.java 631 648\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/72323.java 394 404\n/home/jeff/BigCloneBench/sample/default/93531.java 394 404\n----------------------------------------\n    private void build(DirWriter w, String[] args, int off) throws IOException {\n        DirBuilderPref pref = getDirBuilderPref();\n        long t1 = System.currentTimeMillis();\n        int[] counter = new int[2];\n        DirBuilder builder = fact.newDirBuilder(w, pref);\n        for (int i = off; i < args.length; ++i) {\n            append(builder, new File(args[i]), counter);\n        }\n        long t2 = System.currentTimeMillis();\n        System.out.println(MessageFormat.format(messages.getString(\"insertDone\"), new Object[] { String.valueOf(counter[1]), String.valueOf(counter[0]), String.valueOf((t2 - t1) / 1000f) }));\n    }\n\n----------------------------------------\n    private void build(DirWriter w, String[] args, int off) throws IOException {\n        DirBuilderPref pref = getDirBuilderPref();\n        long t1 = System.currentTimeMillis();\n        int[] counter = new int[2];\n        DirBuilder builder = fact.newDirBuilder(w, pref);\n        for (int i = off; i < args.length; ++i) {\n            append(builder, new File(args[i]), counter);\n        }\n        long t2 = System.currentTimeMillis();\n        System.out.println(MessageFormat.format(messages.getString(\"insertDone\"), new Object[] { String.valueOf(counter[1]), String.valueOf(counter[0]), String.valueOf((t2 - t1) / 1000f) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/55109.java 546 568\n/home/jeff/BigCloneBench/sample/default/27552.java 570 590\n----------------------------------------\n    private boolean doRemoveSeries(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (seriesUIDs.contains(rec.getDataset().getString(Tags.SeriesInstanceUID))) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else if (doRemoveInstances(w, rec, counter, delFiles)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doRemoveInstances(DirWriter w, DirRecord parent, int[] counter, boolean delFiles) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (sopInstUIDs.contains(rec.getRefSOPInstanceUID()) || matchFileIDs(rec.getRefFileIDs())) {\n                if (delFiles) {\n                    deleteRefFiles(w, rec, counter);\n                }\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[1] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/36322.java 493 507\n/home/jeff/BigCloneBench/sample/default/87896.java 394 404\n----------------------------------------\n    public void remove(String[] args, int off, boolean delFiles) throws IOException {\n        long t1 = System.currentTimeMillis();\n        int[] counter = new int[2];\n        DirWriter w = fact.newDirWriter(dirFile, encodeParam());\n        try {\n            for (int i = off; i < args.length; ++i) {\n                addFileIDs(w, new File(args[i]));\n            }\n            doRemove(w, counter, delFiles);\n        } finally {\n            w.close();\n        }\n        long t2 = System.currentTimeMillis();\n        System.out.println(MessageFormat.format(messages.getString(\"removeDone\"), new Object[] { String.valueOf(counter[1]), String.valueOf(counter[0]), String.valueOf((t2 - t1) / 1000f) }));\n    }\n\n----------------------------------------\n    private void build(DirWriter w, String[] args, int off) throws IOException {\n        DirBuilderPref pref = getDirBuilderPref();\n        long t1 = System.currentTimeMillis();\n        int[] counter = new int[2];\n        DirBuilder builder = fact.newDirBuilder(w, pref);\n        for (int i = off; i < args.length; ++i) {\n            append(builder, new File(args[i]), counter);\n        }\n        long t2 = System.currentTimeMillis();\n        System.out.println(MessageFormat.format(messages.getString(\"insertDone\"), new Object[] { String.valueOf(counter[1]), String.valueOf(counter[0]), String.valueOf((t2 - t1) / 1000f) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/70284.java 249 265\n/home/jeff/BigCloneBench/sample/default/95106.java 249 265\n----------------------------------------\n    public void send(String[] args, int offset) throws InterruptedException, IOException, GeneralSecurityException {\n        if (bufferSize > 0) {\n            buffer = new byte[bufferSize];\n        }\n        long t1 = System.currentTimeMillis();\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                for (int k = offset; k < args.length; ++k) {\n                    send(active, new File(args[k]));\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"sendDone\"), new Object[] { new Integer(sentCount), new Long(sentBytes), new Long(dt), new Float(sentBytes / (1.024f * dt)) }));\n    }\n\n----------------------------------------\n    public void send(String[] args, int offset) throws InterruptedException, IOException, GeneralSecurityException {\n        if (bufferSize > 0) {\n            buffer = new byte[bufferSize];\n        }\n        long t1 = System.currentTimeMillis();\n        for (int i = 0; i < repeatWhole; ++i) {\n            ActiveAssociation active = openAssoc();\n            if (active != null) {\n                for (int k = offset; k < args.length; ++k) {\n                    send(active, new File(args[k]));\n                }\n                active.release(true);\n            }\n        }\n        long dt = System.currentTimeMillis() - t1;\n        log.info(MessageFormat.format(messages.getString(\"sendDone\"), new Object[] { new Integer(sentCount), new Long(sentBytes), new Long(dt), new Float(sentBytes / (1.024f * dt)) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/40796.java 120 136\n/home/jeff/BigCloneBench/sample/default/75105.java 125 141\n----------------------------------------\n                public void run() {\n                    int exitCode = -99;\n                    boolean exited = false;\n                    do {\n                        try {\n                            exitCode = tac.exitValue();\n                            exited = true;\n                        } catch (IllegalThreadStateException e) {\n                            System.out.println(\"still alive!\");\n                            try {\n                                Thread.sleep(1000);\n                            } catch (Exception ee) {\n                            }\n                        }\n                    } while (!exited);\n                    System.out.println(\"exitValue(): Process exited with code \" + exitCode);\n                }\n\n----------------------------------------\n                public void run() {\n                    int exitCode = -99;\n                    boolean exited = false;\n                    do {\n                        try {\n                            exitCode = tac.exitValue();\n                            exited = true;\n                        } catch (IllegalThreadStateException e) {\n                            System.out.println(\"still alive!\");\n                            try {\n                                Thread.sleep(1000);\n                            } catch (Exception ee) {\n                            }\n                        }\n                    } while (!exited);\n                    System.out.println(\"exitValue(): Process exited with code \" + exitCode);\n                }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/53763.java 126 133\n/home/jeff/BigCloneBench/sample/default/41265.java 199 206\n----------------------------------------\n    private static void set(Configuration cfg, String s) {\n        int pos = s.indexOf(':');\n        if (pos == -1) {\n            cfg.put(\"set.\" + s, \"\");\n        } else {\n            cfg.put(\"set.\" + s.substring(0, pos), s.substring(pos + 1));\n        }\n    }\n\n----------------------------------------\n    private static void putKey(Properties cfg, String s) {\n        int pos = s.indexOf(':');\n        if (pos == -1) {\n            cfg.put(\"key.\" + s, \"\");\n        } else {\n            cfg.put(\"key.\" + s.substring(0, pos), s.substring(pos + 1));\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/55192.java 36 41\n/home/jeff/BigCloneBench/sample/default/24133.java 36 41\n----------------------------------------\n    public void testForSkip() {\n        StringBuilder builder = new StringBuilder();\n        String string = \"123456\";\n        for (int i = 0; i < string.length(); i += 2) builder.append(string.charAt(i));\n        assertEquals(\"135\", builder.toString());\n    }\n\n----------------------------------------\n    public void testForSkip() {\n        StringBuilder builder = new StringBuilder();\n        String string = \"123456\";\n        for (int i = 0; i < string.length(); i += 2) builder.append(string.charAt(i));\n        assertEquals(\"135\", builder.toString());\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/28532.java 529 543\n/home/jeff/BigCloneBench/sample/default/5657.java 116 130\n----------------------------------------\n    public void test28() throws Exception {\n        String data = \"\\\"bob said, \\\\\\\"Hey!\\\\\\\"\\\",2, 3 \";\n        CsvReader reader = CsvReader.parse(data);\n        reader.setEscapeMode(CsvReader.ESCAPE_MODE_BACKSLASH);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"bob said, \\\"Hey!\\\"\", reader.get(0));\n        Assert.assertEquals(\"2\", reader.get(1));\n        Assert.assertEquals(\"3\", reader.get(2));\n        Assert.assertEquals(',', reader.getDelimiter());\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(3, reader.getColumnCount());\n        Assert.assertEquals(\"\\\"bob said, \\\\\\\"Hey!\\\\\\\"\\\",2, 3 \", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        reader.close();\n    }\n\n----------------------------------------\n    public void test2() throws Exception {\n        String data = \"\\\"bob said, \\\"\\\"Hey!\\\"\\\"\\\",2, 3 \";\n        CsvReader reader = CsvReader.parse(data);\n        Assert.assertTrue(reader.readRecord());\n        Assert.assertEquals(\"bob said, \\\"Hey!\\\"\", reader.get(0));\n        Assert.assertEquals(\"2\", reader.get(1));\n        Assert.assertEquals(\"3\", reader.get(2));\n        Assert.assertEquals(',', reader.getDelimiter());\n        Assert.assertEquals(0L, reader.getCurrentRecord());\n        Assert.assertEquals(3, reader.getColumnCount());\n        Assert.assertEquals(\"\\\"bob said, \\\"\\\"Hey!\\\"\\\"\\\",2, 3 \", reader.getRawRecord());\n        Assert.assertFalse(reader.readRecord());\n        Assert.assertEquals(\"\", reader.getRawRecord());\n        reader.close();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/81123.java 621 629\n/home/jeff/BigCloneBench/sample/default/5621.java 619 627\n----------------------------------------\n    private int doPurge(DirWriter w) throws IOException {\n        int[] counter = { 0 };\n        for (DirRecord rec = w.getFirstRecord(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeStudy(w, rec, counter)) {\n                counter[0] += w.remove(rec);\n            }\n        }\n        return counter[0];\n    }\n\n----------------------------------------\n    private int doPurge(DirWriter w) throws IOException {\n        int[] counter = { 0 };\n        for (DirRecord rec = w.getFirstRecord(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeStudy(w, rec, counter)) {\n                counter[0] += w.remove(rec);\n            }\n        }\n        return counter[0];\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/88374.java 191 198\n/home/jeff/BigCloneBench/sample/default/37347.java 191 198\n----------------------------------------\n    private static void mergeCfg(Configuration cfg, String mergeCfg) throws IOException {\n        InputStream is = new BufferedInputStream(new FileInputStream(mergeCfg));\n        try {\n            cfg.load(is);\n        } finally {\n            is.close();\n        }\n    }\n\n----------------------------------------\n    private static void mergeCfg(Configuration cfg, String mergeCfg) throws IOException {\n        InputStream is = new BufferedInputStream(new FileInputStream(mergeCfg));\n        try {\n            cfg.load(is);\n        } finally {\n            is.close();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1397981.java 159 181\n/home/jeff/BigCloneBench/sample/selected/267898.java 125 147\n----------------------------------------\n    public void shuttlesort(int from[], int to[], int low, int high) {\n        if (high - low < 2) {\n            return;\n        }\n        int middle = (low + high) / 2;\n        shuttlesort(to, from, low, middle);\n        shuttlesort(to, from, middle, high);\n        int p = low;\n        int q = middle;\n        if (high - low >= 4 && compare(from[middle - 1], from[middle]) <= 0) {\n            for (int i = low; i < high; i++) {\n                to[i] = from[i];\n            }\n            return;\n        }\n        for (int i = low; i < high; i++) {\n            if (q >= high || (p < middle && compare(from[p], from[q]) <= 0)) {\n                to[i] = from[p++];\n            } else {\n                to[i] = from[q++];\n            }\n        }\n    }\n\n----------------------------------------\n    public void shuttlesort(int from[], int to[], int low, int high) {\n        if (high - low < 2) {\n            return;\n        }\n        int middle = (low + high) / 2;\n        shuttlesort(to, from, low, middle);\n        shuttlesort(to, from, middle, high);\n        int p = low;\n        int q = middle;\n        if (high - low >= 4 && compare(from[middle - 1], from[middle]) <= 0) {\n            for (int i = low; i < high; i++) {\n                to[i] = from[i];\n            }\n            return;\n        }\n        for (int i = low; i < high; i++) {\n            if (q >= high || (p < middle && compare(from[p], from[q]) <= 0)) {\n                to[i] = from[p++];\n            } else {\n                to[i] = from[q++];\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2331912.java 151 167\n/home/jeff/BigCloneBench/sample/selected/787909.java 153 169\n----------------------------------------\n            protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {\n                Diagram model = createInitialModel();\n                attachModelToResource(model, modelResource);\n                org.eclipse.gmf.runtime.notation.Diagram diagram = ViewService.createDiagram(model, DiagramEditPart.MODEL_ID, OrmmetaDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);\n                if (diagram != null) {\n                    diagramResource.getContents().add(diagram);\n                    diagram.setName(diagramName);\n                    diagram.setElement(model);\n                }\n                try {\n                    modelResource.save(ch.hsr.orm.model.diagram.part.OrmmetaDiagramEditorUtil.getSaveOptions());\n                    diagramResource.save(ch.hsr.orm.model.diagram.part.OrmmetaDiagramEditorUtil.getSaveOptions());\n                } catch (IOException e) {\n                    OrmmetaDiagramEditorPlugin.getInstance().logError(\"Unable to store model and diagram resources\", e);\n                }\n                return CommandResult.newOKCommandResult();\n            }\n\n----------------------------------------\n            protected CommandResult doExecuteWithResult(IProgressMonitor monitor, IAdaptable info) throws ExecutionException {\n                Switch model = createInitialModel();\n                attachModelToResource(model, modelResource);\n                Diagram diagram = ViewService.createDiagram(model, SwitchEditPart.MODEL_ID, SaveccmDiagramEditorPlugin.DIAGRAM_PREFERENCES_HINT);\n                if (diagram != null) {\n                    diagramResource.getContents().add(diagram);\n                    diagram.setName(diagramName);\n                    diagram.setElement(model);\n                }\n                try {\n                    modelResource.save(se.mdh.mrtc.saveccm.swi.diagram.part.SaveccmDiagramEditorUtil.getSaveOptions());\n                    diagramResource.save(se.mdh.mrtc.saveccm.swi.diagram.part.SaveccmDiagramEditorUtil.getSaveOptions());\n                } catch (IOException e) {\n                    SaveccmDiagramEditorPlugin.getInstance().logError(\"Unable to store model and diagram resources\", e);\n                }\n                return CommandResult.newOKCommandResult();\n            }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1264993.java 85 101\n/home/jeff/BigCloneBench/sample/selected/1264993.java 118 135\n----------------------------------------\n    private void load(Schedule sche) throws SchedulerException {\n        if (null != sched) {\n            long jobId = sche.getJobId();\n            long startURLId = sche.getStartURLId();\n            int status = sche.getStatus();\n            if (status == Schedule.STATUS_VALID && jobId > 0 && startURLId >= 0) {\n                JobDetail job = createJob(sche, group);\n                Trigger trigger = createTrigger(sche, group);\n                if (null != job && null != trigger) {\n                    sched.scheduleJob(job, trigger);\n                    l.debug(\"add job: \" + job.getKey());\n                }\n            } else {\n                l.debug(\"schedule: \" + sche.getId() + \" is invalid. \" + \"which jobId is \" + sche.getJobId() + \" and startURLId is \" + sche.getStartURLId());\n            }\n        }\n    }\n\n----------------------------------------\n    public void reload(Schedule sche) throws SchedulerException {\n        if (Started == status()) {\n            long jobId = sche.getJobId();\n            long startURLId = sche.getStartURLId();\n            int status = sche.getStatus();\n            if (status == Schedule.STATUS_VALID && jobId > 0 && startURLId > 0) {\n                JobDetail job = createJob(sche, group);\n                Trigger trigger = createTrigger(sche, group);\n                if (null != job && null != trigger) {\n                    sched.deleteJob(job.getKey());\n                    sched.scheduleJob(job, trigger);\n                    l.debug(\"rescheduled job: \" + job.getKey());\n                }\n            } else {\n                l.debug(\"schedule: \" + sche.getId() + \" is invalid. \" + \"which jobId is \" + sche.getJobId() + \" and startURLId is \" + sche.getStartURLId());\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/46902.java 194 203\n/home/jeff/BigCloneBench/sample/default/80028.java 194 203\n----------------------------------------\n    public void testRetroCollections() {\n        {\n            List names = new Vector();\n            Map dictionary = new Hashtable();\n        }\n        {\n            List<String> names = new Vector<String>();\n            Map<String, String> dictionary = new Hashtable<String, String>();\n        }\n    }\n\n----------------------------------------\n    public void testRetroCollections() {\n        {\n            List names = new Vector();\n            Map dictionary = new Hashtable();\n        }\n        {\n            List<String> names = new Vector<String>();\n            Map<String, String> dictionary = new Hashtable<String, String>();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1321892.java 490 499\n/home/jeff/BigCloneBench/sample/selected/448380.java 780 789\n----------------------------------------\n    public Matrix uminus() {\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = -A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n    public Matrix times(double s) {\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = s * A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/11262.java 139 193\n/home/jeff/BigCloneBench/sample/default/52364.java 135 182\n----------------------------------------\n    public static void main(String args[]) throws Exception {\n        Getopt g = new Getopt(\"dcmsnd\", args, \"\", LONG_OPTS);\n        Configuration cfg = new Configuration(DcmSnd.class.getResource(\"dcmsnd.cfg\"));\n        String mergeCfg = null;\n        int c;\n        while ((c = g.getopt()) != -1) {\n            switch(c) {\n                case 2:\n                    cfg.put(LONG_OPTS[g.getLongind()].getName(), g.getOptarg());\n                    break;\n                case 'P':\n                    cfg.put(\"prior\", \"1\");\n                    break;\n                case 'p':\n                    cfg.put(\"prior\", \"2\");\n                    break;\n                case 'k':\n                    cfg.put(\"pack-pdvs\", \"true\");\n                    break;\n                case 't':\n                    cfg.put(\"trunc-post-pixeldata\", \"true\");\n                    break;\n                case 'x':\n                    cfg.put(\"exclude-private\", \"true\");\n                    break;\n                case 's':\n                    set(cfg, g.getOptarg());\n                    break;\n                case 'm':\n                    mergeCfg = g.getOptarg();\n                    break;\n                case 'v':\n                    exit(messages.getString(\"version\"), false);\n                case 'h':\n                    exit(messages.getString(\"usage\"), false);\n                case '?':\n                    exit(null, true);\n                    break;\n            }\n        }\n        int optind = g.getOptind();\n        int argc = args.length - optind;\n        if (argc == 0) {\n            exit(messages.getString(\"missing\"), true);\n        }\n        try {\n            if (mergeCfg != null) {\n                mergeCfg(cfg, mergeCfg);\n            }\n            DcmSnd dcmsnd = new DcmSnd(cfg, new DcmURL(args[optind]), argc);\n            dcmsnd.execute(args, optind + 1);\n        } catch (Exception e) {\n            exit(e.getMessage(), true);\n        }\n    }\n\n----------------------------------------\n    public static void main(String args[]) throws Exception {\n        Getopt g = new Getopt(\"dcmsnd\", args, \"\", LONG_OPTS);\n        Configuration cfg = new Configuration(DcmSnd.class.getResource(\"dcmsnd.cfg\"));\n        int c;\n        while ((c = g.getopt()) != -1) {\n            switch(c) {\n                case 2:\n                    cfg.put(LONG_OPTS[g.getLongind()].getName(), g.getOptarg());\n                    break;\n                case 'P':\n                    cfg.put(\"prior\", \"1\");\n                    break;\n                case 'p':\n                    cfg.put(\"prior\", \"2\");\n                    break;\n                case 'k':\n                    cfg.put(\"pack-pdvs\", \"true\");\n                    break;\n                case 't':\n                    cfg.put(\"trunc-post-pixeldata\", \"true\");\n                    break;\n                case 'x':\n                    cfg.put(\"exclude-private\", \"true\");\n                    break;\n                case 's':\n                    set(cfg, g.getOptarg());\n                    break;\n                case 'v':\n                    exit(messages.getString(\"version\"), false);\n                case 'h':\n                    exit(messages.getString(\"usage\"), false);\n                case '?':\n                    exit(null, true);\n                    break;\n            }\n        }\n        int optind = g.getOptind();\n        int argc = args.length - optind;\n        if (argc == 0) {\n            exit(messages.getString(\"missing\"), true);\n        }\n        try {\n            DcmSnd dcmsnd = new DcmSnd(cfg, new DcmURL(args[optind]), argc);\n            dcmsnd.execute(args, optind + 1);\n        } catch (IllegalArgumentException e) {\n            exit(e.getMessage(), true);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/33022.java 98 113\n/home/jeff/BigCloneBench/sample/selected/1440527.java 198 212\n----------------------------------------\n    public OutputStream startFile(String name, String filename) throws IOException {\n        boundary();\n        writeName(name);\n        write(\"; filename=\\\"\");\n        write(filename);\n        write('\"');\n        newline();\n        write(\"Content-Type: \");\n        String type = connection.guessContentTypeFromName(filename);\n        if (type == null) {\n            type = \"application/octet-stream\";\n        }\n        writeln(type);\n        newline();\n        return os;\n    }\n\n----------------------------------------\n    public void setParameter(String name, String filename, InputStream is) throws IOException {\n        boundary();\n        writeName(name);\n        write(\"; filename=\\\"\");\n        write(filename);\n        write('\"');\n        newline();\n        write(\"Content-Type: \");\n        String type = URLConnection.guessContentTypeFromName(filename);\n        if (type == null) type = \"application/octet-stream\";\n        writeln(type);\n        newline();\n        pipe(is, os);\n        newline();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2286616.java 697 705\n/home/jeff/BigCloneBench/sample/selected/1812318.java 640 648\n----------------------------------------\n    public Matrix arrayTimesEquals(Matrix B) {\n        checkMatrixDimensions(B);\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                A[i][j] = A[i][j] * B.A[i][j];\n            }\n        }\n        return this;\n    }\n\n----------------------------------------\n    public Matrix arrayLeftDivideEquals(Matrix B) {\n        checkMatrixDimensions(B);\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                A[i][j] = B.A[i][j] / A[i][j];\n            }\n        }\n        return this;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/943298.java 384 400\n/home/jeff/BigCloneBench/sample/selected/1960353.java 384 400\n----------------------------------------\n    private String constructXmlContent(List<ContentXmlData> details) {\n        if (details != null) {\n            String xml = \"\";\n            xml += \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><content>\";\n            for (Iterator<ContentXmlData> itr = details.iterator(); itr.hasNext(); ) {\n                ContentXmlData data = itr.next();\n                xml += \"<\" + data.getName() + \">\";\n                xml += \"<![CDATA[\";\n                xml += data.getData().toString();\n                xml += \"]]>\";\n                xml += \"</\" + data.getName() + \">\";\n            }\n            xml += \"</content>\";\n            return xml;\n        }\n        return null;\n    }\n\n----------------------------------------\n    private String constructXmlContent(List<ContentXmlData> details) {\n        if (details != null) {\n            String xml = \"\";\n            xml += \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><content>\";\n            for (Iterator<ContentXmlData> itr = details.iterator(); itr.hasNext(); ) {\n                ContentXmlData data = itr.next();\n                xml += \"<\" + data.getName() + \">\";\n                xml += \"<![CDATA[\";\n                xml += data.getData().toString();\n                xml += \"]]>\";\n                xml += \"</\" + data.getName() + \">\";\n            }\n            xml += \"</content>\";\n            return xml;\n        }\n        return null;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/828322.java 113 118\n/home/jeff/BigCloneBench/sample/default/72939.java 31 36\n----------------------------------------\n    public static XDriveHTTPManager getXDriveHTTPManager() {\n        if (instance == null) {\n            instance = new XDriveHTTPManager();\n        }\n        return instance;\n    }\n\n----------------------------------------\n    public static Password getInstance() {\n        if (instance == null) {\n            instance = new Password();\n        }\n        return instance;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/42993.java 662 680\n/home/jeff/BigCloneBench/sample/default/24546.java 667 685\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeInstances(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            File file = w.getRefFile(rec.getRefFileIDs());\n            if (!file.exists()) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/952606.java 343 353\n/home/jeff/BigCloneBench/sample/selected/497716.java 363 373\n----------------------------------------\n    public static int nullSafeHashCode(float[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + hashCode(array[i]);\n        }\n        return hash;\n    }\n\n----------------------------------------\n    public static int nullSafeHashCode(int[] array) {\n        if (array == null) {\n            return 0;\n        }\n        int hash = INITIAL_HASH;\n        int arraySize = array.length;\n        for (int i = 0; i < arraySize; i++) {\n            hash = MULTIPLIER * hash + array[i];\n        }\n        return hash;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/666572.java 81 92\n/home/jeff/BigCloneBench/sample/selected/1199345.java 190 203\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_universal_time(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            UTO _ob_r = universal_time();\n            out = handler.createReply();\n            UTOHelper.write(out, _ob_r);\n        } catch (TimeUnavailable _ob_ex) {\n            out = handler.createExceptionReply();\n            TimeUnavailableHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_resume_connection(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            resume_connection();\n            out = handler.createReply();\n        } catch (ConnectionAlreadyActive _ob_ex) {\n            out = handler.createExceptionReply();\n            ConnectionAlreadyActiveHelper.write(out, _ob_ex);\n        } catch (NotConnected _ob_ex) {\n            out = handler.createExceptionReply();\n            NotConnectedHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2448131.java 392 398\n/home/jeff/BigCloneBench/sample/selected/2382371.java 392 398\n----------------------------------------\n    protected void writeLSD() throws IOException {\n        writeShort(width);\n        writeShort(height);\n        out.write((0x80 | 0x70 | 0x00 | palSize));\n        out.write(0);\n        out.write(0);\n    }\n\n----------------------------------------\n    protected void writeLSD() throws IOException {\n        writeShort(width);\n        writeShort(height);\n        out.write((0x80 | 0x70 | 0x00 | palSize));\n        out.write(0);\n        out.write(0);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/849450.java 355 365\n/home/jeff/BigCloneBench/sample/selected/849450.java 373 383\n----------------------------------------\n    public void setMatrix(int i0, int i1, int j0, int j1, Matrix X) {\n        try {\n            for (int i = i0; i <= i1; i++) {\n                for (int j = j0; j <= j1; j++) {\n                    A[i][j] = X.get(i - i0, j - j0);\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new ArrayIndexOutOfBoundsException(\"Submatrix indices\");\n        }\n    }\n\n----------------------------------------\n    public void setMatrix(int[] r, int[] c, Matrix X) {\n        try {\n            for (int i = 0; i < r.length; i++) {\n                for (int j = 0; j < c.length; j++) {\n                    A[r[i]][c[j]] = X.get(i, j);\n                }\n            }\n        } catch (ArrayIndexOutOfBoundsException e) {\n            throw new ArrayIndexOutOfBoundsException(\"Submatrix indices\");\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/2482618.java 78 83\n/home/jeff/BigCloneBench/sample/selected/2616353.java 76 81\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_MyType(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        ProxyType _ob_r = MyType();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        ProxyTypeHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_att_get_MyType(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        ProxyType _ob_r = MyType();\n        org.omg.CORBA.portable.OutputStream out = handler.createReply();\n        ProxyTypeHelper.write(out, _ob_r);\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/70088.java 707 715\n/home/jeff/BigCloneBench/sample/default/73352.java 707 715\n----------------------------------------\n    private static void exit(String prompt, boolean error) {\n        if (prompt != null) {\n            System.err.println(prompt);\n        }\n        if (error) {\n            System.err.println(messages.getString(\"try\"));\n        }\n        System.exit(1);\n    }\n\n----------------------------------------\n    private static void exit(String prompt, boolean error) {\n        if (prompt != null) {\n            System.err.println(prompt);\n        }\n        if (error) {\n            System.err.println(messages.getString(\"try\"));\n        }\n        System.exit(1);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/113166.java 84 91\n/home/jeff/BigCloneBench/sample/default/106993.java 84 91\n----------------------------------------\n    public void testEndTrim() {\n        assertEquals(\"\", endTrim(\"\"));\n        assertEquals(\"  x\", endTrim(\"  x  \"));\n        assertEquals(\"y\", endTrim(\"y\"));\n        assertEquals(\"xaxa\", endTrim(\"xaxa\"));\n        assertEquals(\"\", endTrim(\" \"));\n        assertEquals(\"xxx\", endTrim(\"xxx      \"));\n    }\n\n----------------------------------------\n    public void testEndTrim() {\n        assertEquals(\"\", endTrim(\"\"));\n        assertEquals(\"  x\", endTrim(\"  x  \"));\n        assertEquals(\"y\", endTrim(\"y\"));\n        assertEquals(\"xaxa\", endTrim(\"xaxa\"));\n        assertEquals(\"\", endTrim(\" \"));\n        assertEquals(\"xxx\", endTrim(\"xxx      \"));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/10551.java 48 62\n/home/jeff/BigCloneBench/sample/default/113078.java 48 62\n----------------------------------------\n    public static void main(String[] args) {\n        if (args.length == 0) {\n            System.err.println(\"PixelDataTest: Error: Too few parameters\");\n            System.out.println(\"Usage: PixelDataTest <dicom-file>\");\n            System.exit(1);\n        }\n        for (int i = 0; i < args.length; i++) {\n            try {\n                File inFile = new File(args[i]), outFile = new File(inFile.getAbsolutePath() + \".TEST\");\n                readAndRewrite(inFile, outFile);\n            } catch (IOException ioe) {\n                System.err.println(\"FAILED: \" + ioe);\n            }\n        }\n    }\n\n----------------------------------------\n    public static void main(String[] args) {\n        if (args.length == 0) {\n            System.err.println(\"PixelDataTest: Error: Too few parameters\");\n            System.out.println(\"Usage: PixelDataTest <dicom-file>\");\n            System.exit(1);\n        }\n        for (int i = 0; i < args.length; i++) {\n            try {\n                File inFile = new File(args[i]), outFile = new File(inFile.getAbsolutePath() + \".TEST\");\n                readAndRewrite(inFile, outFile);\n            } catch (IOException ioe) {\n                System.err.println(\"FAILED: \" + ioe);\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/46902.java 175 180\n/home/jeff/BigCloneBench/sample/default/14833.java 175 180\n----------------------------------------\n    public void testArrayEquality() {\n        int[] a = { 1, 2, 3 };\n        int[] b = { 1, 2, 3 };\n        assertFalse(a.equals(b));\n        assertFalse(a == b);\n    }\n\n----------------------------------------\n    public void testArrayEquality() {\n        int[] a = { 1, 2, 3 };\n        int[] b = { 1, 2, 3 };\n        assertFalse(a.equals(b));\n        assertFalse(a == b);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/114331.java 394 404\n/home/jeff/BigCloneBench/sample/default/79012.java 493 507\n----------------------------------------\n    private void build(DirWriter w, String[] args, int off) throws IOException {\n        DirBuilderPref pref = getDirBuilderPref();\n        long t1 = System.currentTimeMillis();\n        int[] counter = new int[2];\n        DirBuilder builder = fact.newDirBuilder(w, pref);\n        for (int i = off; i < args.length; ++i) {\n            append(builder, new File(args[i]), counter);\n        }\n        long t2 = System.currentTimeMillis();\n        System.out.println(MessageFormat.format(messages.getString(\"insertDone\"), new Object[] { String.valueOf(counter[1]), String.valueOf(counter[0]), String.valueOf((t2 - t1) / 1000f) }));\n    }\n\n----------------------------------------\n    public void remove(String[] args, int off, boolean delFiles) throws IOException {\n        long t1 = System.currentTimeMillis();\n        int[] counter = new int[2];\n        DirWriter w = fact.newDirWriter(dirFile, encodeParam());\n        try {\n            for (int i = off; i < args.length; ++i) {\n                addFileIDs(w, new File(args[i]));\n            }\n            doRemove(w, counter, delFiles);\n        } finally {\n            w.close();\n        }\n        long t2 = System.currentTimeMillis();\n        System.out.println(MessageFormat.format(messages.getString(\"removeDone\"), new Object[] { String.valueOf(counter[1]), String.valueOf(counter[0]), String.valueOf((t2 - t1) / 1000f) }));\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/927691.java 633 649\n/home/jeff/BigCloneBench/sample/selected/183804.java 658 674\n----------------------------------------\n    public static boolean encodeToFile(byte[] dataToEncode, String filename) {\n        boolean success = false;\n        Base64.OutputStream bos = null;\n        try {\n            bos = new Base64.OutputStream(new java.io.FileOutputStream(filename), Base64.ENCODE);\n            bos.write(dataToEncode);\n            success = true;\n        } catch (java.io.IOException e) {\n            success = false;\n        } finally {\n            try {\n                bos.close();\n            } catch (Exception e) {\n            }\n        }\n        return success;\n    }\n\n----------------------------------------\n    public static boolean decodeToFile(String dataToDecode, String filename) {\n        boolean success = false;\n        Base64.OutputStream bos = null;\n        try {\n            bos = new Base64.OutputStream(new java.io.FileOutputStream(filename), Base64.DECODE);\n            bos.write(dataToDecode.getBytes(PREFERRED_ENCODING));\n            success = true;\n        } catch (java.io.IOException e) {\n            success = false;\n        } finally {\n            try {\n                bos.close();\n            } catch (Exception e) {\n            }\n        }\n        return success;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/700852.java 605 624\n/home/jeff/BigCloneBench/sample/selected/1712367.java 490 509\n----------------------------------------\n    public static String nullSafeToString(char[] array) {\n        if (array == null) {\n            return NULL_STRING;\n        }\n        int length = array.length;\n        if (length == 0) {\n            return EMPTY_ARRAY;\n        }\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < length; i++) {\n            if (i == 0) {\n                buffer.append(ARRAY_START);\n            } else {\n                buffer.append(ARRAY_ELEMENT_SEPARATOR);\n            }\n            buffer.append(\"'\").append(array[i]).append(\"'\");\n        }\n        buffer.append(ARRAY_END);\n        return buffer.toString();\n    }\n\n----------------------------------------\n    public static String nullSafeToString(Object[] array) {\n        if (array == null) {\n            return NULL_STRING;\n        }\n        int length = array.length;\n        if (length == 0) {\n            return EMPTY_ARRAY;\n        }\n        StringBuffer buffer = new StringBuffer();\n        for (int i = 0; i < length; i++) {\n            if (i == 0) {\n                buffer.append(ARRAY_START);\n            } else {\n                buffer.append(ARRAY_ELEMENT_SEPARATOR);\n            }\n            buffer.append(String.valueOf(array[i]));\n        }\n        buffer.append(ARRAY_END);\n        return buffer.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/64609.java 146 209\n/home/jeff/BigCloneBench/sample/default/55419.java 146 209\n----------------------------------------\n    public static int parseArgs(String[] args) {\n        if (args.length == 0) {\n            usage();\n        }\n        try {\n            for (int i = 0; i < args.length; i++) {\n                String arg = args[i];\n                if (arg.equals(\"--help\")) {\n                    usage();\n                }\n                if (arg.length() > 3 || arg.length() < 2 || !arg.startsWith(\"-\")) {\n                    return i;\n                }\n                char cArg = arg.charAt(1);\n                if (cArg == 'v') {\n                    DEBUG = true;\n                    continue;\n                } else if (cArg == 'e') {\n                    dumpExceptions = true;\n                    continue;\n                } else if (cArg == 't') {\n                    org.tritonus.share.TDebug.TraceAudioConverter = true;\n                    continue;\n                } else if (cArg == 's') {\n                    quiet = true;\n                    continue;\n                } else if (cArg == 'V') {\n                    try {\n                        System.setProperty(\"tritonus.lame.vbr\", \"true\");\n                    } catch (Throwable t1) {\n                    }\n                    continue;\n                } else if (cArg == 'h') {\n                    usage();\n                }\n                if (args.length < i + 2) {\n                    throw new Exception(\"Missing parameter or unrecognized option \" + arg + \".\");\n                }\n                String param = args[i + 1];\n                i++;\n                switch(cArg) {\n                    case 'q':\n                        try {\n                            System.setProperty(\"tritonus.lame.quality\", param);\n                        } catch (Throwable t2) {\n                        }\n                        break;\n                    case 'b':\n                        try {\n                            System.setProperty(\"tritonus.lame.bitrate\", param);\n                        } catch (Throwable t3) {\n                        }\n                        break;\n                    default:\n                        throw new Exception(\"Unrecognized option \" + arg + \".\");\n                }\n            }\n            throw new Exception(\"No input file(s) are given.\");\n        } catch (Exception e) {\n            System.err.println(e.getMessage());\n            System.exit(1);\n        }\n        return 0;\n    }\n\n----------------------------------------\n    public static int parseArgs(String[] args) {\n        if (args.length == 0) {\n            usage();\n        }\n        try {\n            for (int i = 0; i < args.length; i++) {\n                String arg = args[i];\n                if (arg.equals(\"--help\")) {\n                    usage();\n                }\n                if (arg.length() > 3 || arg.length() < 2 || !arg.startsWith(\"-\")) {\n                    return i;\n                }\n                char cArg = arg.charAt(1);\n                if (cArg == 'v') {\n                    DEBUG = true;\n                    continue;\n                } else if (cArg == 'e') {\n                    dumpExceptions = true;\n                    continue;\n                } else if (cArg == 't') {\n                    org.tritonus.share.TDebug.TraceAudioConverter = true;\n                    continue;\n                } else if (cArg == 's') {\n                    quiet = true;\n                    continue;\n                } else if (cArg == 'V') {\n                    try {\n                        System.setProperty(\"tritonus.lame.vbr\", \"true\");\n                    } catch (Throwable t1) {\n                    }\n                    continue;\n                } else if (cArg == 'h') {\n                    usage();\n                }\n                if (args.length < i + 2) {\n                    throw new Exception(\"Missing parameter or unrecognized option \" + arg + \".\");\n                }\n                String param = args[i + 1];\n                i++;\n                switch(cArg) {\n                    case 'q':\n                        try {\n                            System.setProperty(\"tritonus.lame.quality\", param);\n                        } catch (Throwable t2) {\n                        }\n                        break;\n                    case 'b':\n                        try {\n                            System.setProperty(\"tritonus.lame.bitrate\", param);\n                        } catch (Throwable t3) {\n                        }\n                        break;\n                    default:\n                        throw new Exception(\"Unrecognized option \" + arg + \".\");\n                }\n            }\n            throw new Exception(\"No input file(s) are given.\");\n        } catch (Exception e) {\n            System.err.println(e.getMessage());\n            System.exit(1);\n        }\n        return 0;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/868705.java 881 893\n/home/jeff/BigCloneBench/sample/selected/526365.java 1099 1111\n----------------------------------------\n    public void print(PrintWriter output, NumberFormat format, int width) {\n        output.println();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                String s = format.format(A[i][j]);\n                int padding = Math.max(1, width - s.length());\n                for (int k = 0; k < padding; k++) output.print(' ');\n                output.print(s);\n            }\n            output.println();\n        }\n        output.println();\n    }\n\n----------------------------------------\n    public void print(PrintWriter output, NumberFormat format, int width) {\n        output.println();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                String s = format.format(A[i][j]);\n                int padding = Math.max(1, width - s.length());\n                for (int k = 0; k < padding; k++) output.print(' ');\n                output.print(s);\n            }\n            output.println();\n        }\n        output.println();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/894545.java 302 310\n/home/jeff/BigCloneBench/sample/selected/535388.java 530 538\n----------------------------------------\n        private void decodeParms(String parms, Properties p) throws InterruptedException {\n            if (parms == null) return;\n            StringTokenizer st = new StringTokenizer(parms, \"&\");\n            while (st.hasMoreTokens()) {\n                String e = st.nextToken();\n                int sep = e.indexOf('=');\n                if (sep >= 0) p.put(decodePercent(e.substring(0, sep)).trim(), decodePercent(e.substring(sep + 1)));\n            }\n        }\n\n----------------------------------------\n        private void decodeParms(String parms, Properties p) throws InterruptedException {\n            if (parms == null) return;\n            StringTokenizer st = new StringTokenizer(parms, \"&\");\n            while (st.hasMoreTokens()) {\n                String e = st.nextToken();\n                int sep = e.indexOf('=');\n                if (sep >= 0) p.put(decodePercent(e.substring(0, sep)).trim(), decodePercent(e.substring(sep + 1)));\n            }\n        }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1509576.java 269 291\n/home/jeff/BigCloneBench/sample/selected/2501183.java 187 209\n----------------------------------------\n    public void shuttlesort(int from[], int to[], int low, int high) {\n        if (high - low < 2) {\n            return;\n        }\n        int middle = (low + high) / 2;\n        shuttlesort(to, from, low, middle);\n        shuttlesort(to, from, middle, high);\n        int p = low;\n        int q = middle;\n        if (high - low >= 4 && compare(from[middle - 1], from[middle]) <= 0) {\n            for (int i = low; i < high; i++) {\n                to[i] = from[i];\n            }\n            return;\n        }\n        for (int i = low; i < high; i++) {\n            if (q >= high || (p < middle && compare(from[p], from[q]) <= 0)) {\n                to[i] = from[p++];\n            } else {\n                to[i] = from[q++];\n            }\n        }\n    }\n\n----------------------------------------\n    public void shuttlesort(int from[], int to[], int low, int high) {\n        if (high - low < 2) {\n            return;\n        }\n        int middle = (low + high) / 2;\n        shuttlesort(to, from, low, middle);\n        shuttlesort(to, from, middle, high);\n        int p = low;\n        int q = middle;\n        if (high - low >= 4 && compare(from[middle - 1], from[middle]) <= 0) {\n            for (int i = low; i < high; i++) {\n                to[i] = from[i];\n            }\n            return;\n        }\n        for (int i = low; i < high; i++) {\n            if (q >= high || (p < middle && compare(from[p], from[q]) <= 0)) {\n                to[i] = from[p++];\n            } else {\n                to[i] = from[q++];\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1017245.java 507 517\n/home/jeff/BigCloneBench/sample/selected/526365.java 743 753\n----------------------------------------\n    public Matrix plus(Matrix B) {\n        checkMatrixDimensions(B);\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = A[i][j] + B.A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n    public Matrix arrayRightDivide(Matrix B) {\n        checkMatrixDimensions(B);\n        Matrix X = new Matrix(m, n);\n        double[][] C = X.getArray();\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                C[i][j] = A[i][j] / B.A[i][j];\n            }\n        }\n        return X;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/4072.java 527 543\n/home/jeff/BigCloneBench/sample/default/18628.java 527 543\n----------------------------------------\n    private String readFromCookedTTY() {\n        StringBuffer buf = new StringBuffer();\n        System.out.print(prompt);\n        System.out.flush();\n        try {\n            for (; ; ) {\n                int ch = System.in.read();\n                if (ch == -1) break;\n                if (ch == '\\r') continue;\n                if (ch == '\\n') break;\n                buf.append((char) ch);\n            }\n        } catch (IOException e) {\n            buf.append(\"?\");\n        }\n        return buf.toString();\n    }\n\n----------------------------------------\n    private String readFromCookedTTY() {\n        StringBuffer buf = new StringBuffer();\n        System.out.print(prompt);\n        System.out.flush();\n        try {\n            for (; ; ) {\n                int ch = System.in.read();\n                if (ch == -1) break;\n                if (ch == '\\r') continue;\n                if (ch == '\\n') break;\n                buf.append((char) ch);\n            }\n        } catch (IOException e) {\n            buf.append(\"?\");\n        }\n        return buf.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/751919.java 120 132\n/home/jeff/BigCloneBench/sample/selected/1656760.java 192 204\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_get_filter(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            int _ob_a0 = org.omg.CosNotifyFilter.FilterIDHelper.read(in);\n            org.omg.CosNotifyFilter.Filter _ob_r = get_filter(_ob_a0);\n            out = handler.createReply();\n            org.omg.CosNotifyFilter.FilterHelper.write(out, _ob_r);\n        } catch (org.omg.CosNotifyFilter.FilterNotFound _ob_ex) {\n            out = handler.createExceptionReply();\n            org.omg.CosNotifyFilter.FilterNotFoundHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n    private org.omg.CORBA.portable.OutputStream _OB_op_get_proxy_supplier(org.omg.CORBA.portable.InputStream in, org.omg.CORBA.portable.ResponseHandler handler) {\n        org.omg.CORBA.portable.OutputStream out = null;\n        try {\n            int _ob_a0 = org.omg.CosNotifyChannelAdmin.ProxyIDHelper.read(in);\n            org.omg.CosNotifyChannelAdmin.ProxySupplier _ob_r = get_proxy_supplier(_ob_a0);\n            out = handler.createReply();\n            org.omg.CosNotifyChannelAdmin.ProxySupplierHelper.write(out, _ob_r);\n        } catch (org.omg.CosNotifyChannelAdmin.ProxyNotFound _ob_ex) {\n            out = handler.createExceptionReply();\n            org.omg.CosNotifyChannelAdmin.ProxyNotFoundHelper.write(out, _ob_ex);\n        }\n        return out;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/15826.java 194 203\n/home/jeff/BigCloneBench/sample/default/104755.java 194 203\n----------------------------------------\n    public void testRetroCollections() {\n        {\n            List names = new Vector();\n            Map dictionary = new Hashtable();\n        }\n        {\n            List<String> names = new Vector<String>();\n            Map<String, String> dictionary = new Hashtable<String, String>();\n        }\n    }\n\n----------------------------------------\n    public void testRetroCollections() {\n        {\n            List names = new Vector();\n            Map dictionary = new Hashtable();\n        }\n        {\n            List<String> names = new Vector<String>();\n            Map<String, String> dictionary = new Hashtable<String, String>();\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/114331.java 629 646\n/home/jeff/BigCloneBench/sample/default/90330.java 487 504\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n    private boolean doPurgeStudy(DirWriter w, DirRecord parent, int[] counter) throws IOException {\n        boolean matchAll = true;\n        LinkedList toRemove = new LinkedList();\n        for (DirRecord rec = parent.getFirstChild(true); rec != null; rec = rec.getNextSibling(true)) {\n            if (doPurgeSeries(w, rec, counter)) {\n                toRemove.add(rec);\n            } else {\n                matchAll = false;\n            }\n        }\n        if (matchAll) {\n            return true;\n        }\n        for (Iterator it = toRemove.iterator(); it.hasNext(); ) {\n            counter[0] += w.remove((DirRecord) it.next());\n        }\n        return false;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/743348.java 286 295\n/home/jeff/BigCloneBench/sample/selected/2688832.java 295 304\n----------------------------------------\n    private Node getChildByName(Node node, String name) {\n        NodeList children = node.getChildNodes();\n        for (int i = 0; i < children.getLength(); i++) {\n            Node child = children.item(i);\n            if (child.getNodeName().equals(name)) {\n                return child;\n            }\n        }\n        return null;\n    }\n\n----------------------------------------\n    private Node getChildByName(Node node, String name) {\n        NodeList children = node.getChildNodes();\n        for (int i = 0; i < children.getLength(); i++) {\n            Node child = children.item(i);\n            if (child.getNodeName().equals(name)) {\n                return child;\n            }\n        }\n        return null;\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/44026.java 604 617\n/home/jeff/BigCloneBench/sample/default/35053.java 604 617\n----------------------------------------\n    private void deleteRefFiles(DirWriter w, DirRecord rec, int[] counter) throws IOException {\n        String[] fileIDs = rec.getRefFileIDs();\n        if (fileIDs != null) {\n            File f = w.getRefFile(fileIDs);\n            if (!f.delete()) {\n                System.out.println(MessageFormat.format(messages.getString(\"deleteFailed\"), new Object[] { f }));\n            } else {\n                ++counter[0];\n            }\n        }\n        for (DirRecord child = rec.getFirstChild(true); child != null; child = child.getNextSibling(true)) {\n            deleteRefFiles(w, child, counter);\n        }\n    }\n\n----------------------------------------\n    private void deleteRefFiles(DirWriter w, DirRecord rec, int[] counter) throws IOException {\n        String[] fileIDs = rec.getRefFileIDs();\n        if (fileIDs != null) {\n            File f = w.getRefFile(fileIDs);\n            if (!f.delete()) {\n                System.out.println(MessageFormat.format(messages.getString(\"deleteFailed\"), new Object[] { f }));\n            } else {\n                ++counter[0];\n            }\n        }\n        for (DirRecord child = rec.getFirstChild(true); child != null; child = child.getNextSibling(true)) {\n            deleteRefFiles(w, child, counter);\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/44891.java 73 82\n/home/jeff/BigCloneBench/sample/default/32955.java 64 71\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/1783412.java 95 126\n/home/jeff/BigCloneBench/sample/selected/1977800.java 132 163\n----------------------------------------\n    private void sort(Object[] a, int lo0, int hi0, boolean up) {\n        int lo = lo0;\n        int hi = hi0;\n        if (lo >= hi) {\n            return;\n        }\n        int mid = (lo + hi) / 2;\n        sort(a, lo, mid, up);\n        sort(a, mid + 1, hi, up);\n        int end_lo = mid;\n        int start_hi = mid + 1;\n        while ((lo <= end_lo) && (start_hi <= hi)) {\n            boolean isChange;\n            if (up) {\n                isChange = (fComparator.compare(a[fSortOrder[lo]], a[fSortOrder[start_hi]]) <= 0);\n            } else {\n                isChange = (fComparator.compare(a[fSortOrder[lo]], a[fSortOrder[start_hi]]) >= 0);\n            }\n            if (isChange) {\n                lo++;\n            } else {\n                int T = fSortOrder[start_hi];\n                for (int k = start_hi - 1; k >= lo; k--) {\n                    fSortOrder[k + 1] = fSortOrder[k];\n                }\n                fSortOrder[lo] = T;\n                lo++;\n                end_lo++;\n                start_hi++;\n            }\n        }\n    }\n\n----------------------------------------\n    private void sort(Object[] a, int lo0, int hi0, boolean up) {\n        int lo = lo0;\n        int hi = hi0;\n        if (lo >= hi) {\n            return;\n        }\n        int mid = (lo + hi) / 2;\n        sort(a, lo, mid, up);\n        sort(a, mid + 1, hi, up);\n        int end_lo = mid;\n        int start_hi = mid + 1;\n        while ((lo <= end_lo) && (start_hi <= hi)) {\n            boolean isChange;\n            if (up) {\n                isChange = (fComparator.compare(a[fSortOrder[lo]], a[fSortOrder[start_hi]]) <= 0);\n            } else {\n                isChange = (fComparator.compare(a[fSortOrder[lo]], a[fSortOrder[start_hi]]) >= 0);\n            }\n            if (isChange) {\n                lo++;\n            } else {\n                int T = fSortOrder[start_hi];\n                for (int k = start_hi - 1; k >= lo; k--) {\n                    fSortOrder[k + 1] = fSortOrder[k];\n                }\n                fSortOrder[lo] = T;\n                lo++;\n                end_lo++;\n                start_hi++;\n            }\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/749441.java 730 736\n/home/jeff/BigCloneBench/sample/selected/661113.java 519 525\n----------------------------------------\n    public static void main(String[] args) {\n        if (args.length == 0) {\n            printDocs();\n            System.exit(0);\n        }\n        new Text2USeq(args);\n    }\n\n----------------------------------------\n    public static void main(String[] args) {\n        if (args.length < 1) {\n            printDocs();\n            System.exit(0);\n        }\n        new RNASeq(args);\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/selected/330378.java 983 999\n/home/jeff/BigCloneBench/sample/selected/2198965.java 412 429\n----------------------------------------\n    public void test_18_117_writeObject() {\n        Object objToSave = null;\n        Object objLoaded;\n        try {\n            objToSave = PERM;\n            if (DEBUG) System.out.println(\"Obj = \" + objToSave);\n            objLoaded = dumpAndReload(objToSave);\n            assertTrue(MSG_TEST_FAILED + objToSave, PERM.equals(objLoaded));\n        } catch (IOException e) {\n            fail(\"IOException serializing \" + objToSave + \" : \" + e.getMessage());\n        } catch (ClassNotFoundException e) {\n            fail(\"ClassNotFoundException reading Object type : \" + e.getMessage());\n        } catch (Error err) {\n            System.out.println(\"Error when obj = \" + objToSave);\n            throw err;\n        }\n    }\n\n----------------------------------------\n    public void test_18_6_writeObject() {\n        Object objToSave = null;\n        Object objLoaded;\n        try {\n            long[] longs = { 0, 1, 2, 3 };\n            objToSave = longs;\n            if (DEBUG) System.out.println(\"Obj = \" + objToSave);\n            objLoaded = dumpAndReload(objToSave);\n            assertTrue(MSG_TEST_FAILED + objToSave, Arrays.equals((long[]) objLoaded, (long[]) objToSave));\n        } catch (IOException e) {\n            fail(\"IOException serializing data : \" + e.getMessage());\n        } catch (ClassNotFoundException e) {\n            fail(\"ClassNotFoundException reading Object type : \" + e.getMessage());\n        } catch (Error err) {\n            System.out.println(\"Error when obj = \" + objToSave);\n            throw err;\n        }\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/47340.java 73 82\n/home/jeff/BigCloneBench/sample/default/115646.java 64 71\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingFor(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        for (int i = start; i <= stop; i++) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n/home/jeff/BigCloneBench/sample/default/57424.java 73 82\n/home/jeff/BigCloneBench/sample/default/70893.java 54 62\n----------------------------------------\n    String sequenceUsingWhile(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        while (i <= stop) {\n            if (i > start) builder.append(',');\n            builder.append(i);\n            i++;\n        }\n        return builder.toString();\n    }\n\n----------------------------------------\n    String sequenceUsingDo(int start, int stop) {\n        StringBuilder builder = new StringBuilder();\n        int i = start;\n        do {\n            if (i > start) builder.append(',');\n            builder.append(i);\n        } while (++i <= stop);\n        return builder.toString();\n    }\n\n----------------------------------------\n", "encoding": "utf-8"}