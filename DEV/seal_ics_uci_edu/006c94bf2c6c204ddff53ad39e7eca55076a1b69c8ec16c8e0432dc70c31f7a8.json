{"url": "http://seal.ics.uci.edu/projects/salma/index.html", "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>SEAL - DELDroid</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<meta http-equiv=\"Reply-to\" content=\"hammadm at uci dot edu\">\n<meta http-equiv=\"Owner\" content=\"Mahmoud Hammad\">\n<meta name=\"Author\" content=\"Mahmoud Hammad\">\n<meta name=\"Generator\" content=\"Emacs\">\n<link rev=\"MADE\" href=\"mailto:hammadm at uci dot edu\">\n<link href=\"../../seal.css\" rel=\"stylesheet\" type=\"text/css\">\n\n<style>\nh1 {\n    background-color: #cbe1f4;\n}\n\nh2 {\n    background-color: lightblue;\n}\nh3 {\n    background-color: lightgreen;\n}\nh4 {\n    background-color: lightgreen;\n}\n\n.box {\n  width: 70%;\n    padding: 10px;\n    border: 5px solid #ff4040;\n    margin: 0;\n}\n.tooltip {\n    position: relative;\n    display: inline-block;\n    border-bottom: 1px dotted black;\n}\n\n.tooltip .tooltiptext {\n    visibility: hidden;\n    width: 520px;\n    background-color: black;\n    color: #fff;\n    text-align: center;\n    border-radius: 10px;\n    font-size: 14px;\n    padding: 5px 0;\n\n    /* Position the tooltip */\n    position: absolute;\n    z-index: 1;\n}\n\n.tooltip:hover .tooltiptext {\n    visibility: visible;\n}\n\n</style>\n\n</head>\n\n<body>\n\n\n\n<div class=\"wrapper\">\n<!-- *************** Beginning of content ****************** -->\n\n<div alighn=\"center\">\n<h1><center>SALMA: Self-Protection of Android Systems from Inter-Component Communication Attacks</center></h1>\n</div>\n\n<b>Jump to ...</b>\n<ul>\n  <li><a href=\"#pub\">Publication</a></li>\n  <li><a href=\"#slides\">Presentation</a></li>\n  <li><a href=\"#intro\">Introduction</a></li>\n  <li><a href=\"#eval\">Evaluation</a></li>\n  <li><a href=\"#imp\">Implementation</a></li>\n</ul>\n\n\n<div id=\"pub\"><center><h2>Publication</h2></center></div>\n\nMahmoud Hammad, Joshua Garcia, and Sam Malek.<br/>\nSALMA: Self-Protection of Android Systems from Inter-Component Communication Attacks.<br/>\nThe 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE 2018), September 2018, Montpellier, France. (20% acceptance rate) <a href=\"../../publications/2018_ASE_salma.pdf\">[PDF]</a>\n\n<div id=\"slides\"><center><h2>Presentation</h2></center></div>\n<center>\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/key/GOjAJyNEQHLUQl\" width=\"595\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"//www.slideshare.net/MahmoudHammad23/ase2018-salma\" title=\"SALMA: Self-Protection of Android Systems from Inter-Component Communication Attacks.\" target=\"_blank\">SALMA: Self-Protection of Android Systems from Inter-Component Communication Attacks.</a> </strong> from <strong><a href=\"https://www.slideshare.net/MahmoudHammad23\" target=\"_blank\">Mahmoud Hammad</a></strong> </div>\n</center>\n\n<div id=\"intro\"><center><h2>Introduction</h2></center></div>\n<div>\n<p>\n    The current security mechanisms for Android apps, both static and dynamic analysis approaches, are insufficient for detection and prevention of the increasingly dynamic and sophisticated security attacks.\n<p>\n    Static analysis approaches suffer from false positives whereas dynamic analysis approaches suffer from false negatives. Moreover, they all lack the ability to efficiently analyze systems with incremental changes---such as adding/removing apps, granting/revoking permissions, and dynamic components' communications.\n    Each time the system changes, the entire analysis needs to be repeated, making the existing approaches inefficient for practical use.\n  <p>  \n    To mitigate their shortcomings, we have developed SALMA, a novel self-protecting Android software system that monitors itself and adapts its behavior at runtime to prevent a wide-range of security risks.\n    SALMA maintains a precise architectural model, represented as a Multiple-Domain-Matrix, and incrementally and efficiently analyzes an Android system in response to incremental system changes.\n    The maintained architecture is used to reason about the running Android system. \n    Every time the system changes, SALMA determines (1) the impacted part of the system, and (2) the subset of the security analyses that need to be performed, thereby greatly improving the performance of the approach. Our experimental results on hundreds of real-world apps corroborate SALMA's scalability and efficiency as well as its ability to detect and prevent security attacks at runtime with minimal disruption.\n\n    <div><center>\n        <figure>\n      <img width=\"50%\" src=\"./res/approach.png\" alt=\"Overview of SALMA\">\n      <figcaption>Overview of SALMA</figcaption>\n      </figure>\n    </center></div>\n    \n</div>\n\n<div  id=\"eval\"><center><h2>Evaluation</h2></center></div>\n<center><h3>Efficiency</h3></center>\n<div>\n    Every time an app is added to the system, SALMA incrementally analyzes the system whereas DELDROID, a complete analysis approach,  reanalyzes the entire system. As illustrated in the figure below, the analysis time of SALMA takes, on average, 2 seconds to incrementally analyze an Android system whenever a new app is installed. On the other hand, DELDROID  takes, on average, 75 seconds.\n</div>\n<div><center>\n    <figure>\n  <img width=\"70%\" src=\"./res/add.png\" alt=\"\">\n  <figcaption>The analysis time of SAlMA against the complete analysis approach over an increasing size of Android bundle due to ADD_APP event.</figcaption>\n  </figure>\n</center></div>\n\n<div>\n    Similarly, the figure below contains box-and-whisker plots comparing the analysis time of each approach with a decreasing number of apps, i.e., in response to the removing apps system events. We started with a bundle of 150 apps, then we removed one app at a time until the system contains 120 apps. The average analysis time of SALMA is 0.2 seconds while the average analysis time of DELDROID  is 35.3 seconds.\n</div>\n<div><center>\n    <figure>\n  <img width=\"70%\" src=\"./res/remove.png\" alt=\"\">\n  <figcaption>The analysis time of SAlMA against the complete analysis approach over a decreasing size Android bundle due to REMOVE_APP event.</figcaption>\n  </figure>\n</center></div>\n\n<div>\n    We also measured the efficiency of SALMA on all other events (grant/revoke permissions, dynamically added interactions).  To that end, we randomly considered 100 different transactions of each event type to be considered only at runtime for an Android system with 100 apps randomly selected from the app datasets.  For example, in the cases of grant a permission or revoke a permission, we randomly selected 100 permissions required by various apps to be revoked from these apps and then to be granted at a later time.  Regarding new explicit communication or new implicit communication events, for each event, we randomly selected 100 communications to be added only at runtime, i.e., these communications have been removed from the initial system's model.  Finally, since the studied Android system with 100 apps contains 80 database interactions (40 data access and 40 data manipulation requests), we considered all of these interactions to be added at runtime.  The total number of transactions considered for this experiment is 480 events.  The box-and-whisker plots in the below figure compares the efficiency of SALMA with DELDroid for each event. SALMA takes, on average across all events, 1.6 milliseconds (0.0016 seconds) while DELDroid takes, on average across all events, 63.8 seconds.\n</div>\n<div><center>\n    <figure>\n  <img width=\"70%\" src=\"./res/other_ops.png\" alt=\"\">\n  <figcaption>The analysis time of SAlMA against the complete analysis approach on a bundle of 100 apps over a variety of system events.</figcaption>\n  </figure>\n</center></div>\n\n<center><h3>Disruption</h3></center>\n<div>\n    <p>Applying security policies at runtime can cause disruption to the app's benign functionality. SALMA minimizes the disruption by only preventing the malicious communication instead of (1) revoking permissions of the vulnerable app or (2) preventing the installation of the vulnerable app as suggested by other approaches in the literature.\n\n    <p>The figure below compares the three different permission-induced prevention mechanisms. The diagram shows that SALMA has 0.4% disruption, meaning that SALMA does not disturb components from providing their services except in one identical custom permission case. In that case, SALMA created a security policy to revoke a custom permission from the malicious app so it will not be able to access the vulnerable app. On the other hand, the install-time approach performs the worst (100%), as it does not allow installation of a vulnerable app. Finally, revoking permissions at runtime to prevent permission-induced attacks would result, on average per app, in 32%disruption. Meaning that, on average, 32% of the components in a vulnerable app will not be able to provide their full services due to the lack of required permissions even though some of these components are not vulnerable or involved in any vulnerability. Moreover, revoking permissions from apps at runtime lead to crashes or unexpected behaviors due to inappropriate handling of dynamic permissions in Android.\n</div>\n<div><center>\n    <figure>\n  <img width=\"70%\" src=\"./res/disruption.png\" alt=\"\">\n  <figcaption>The disruption result of each app.</figcaption>\n  </figure>\n</center></div>\n\n\n<center><h3>Security attacks detection and prevention</h3></center>\n<div>\n\n</div>\n<div><center>\n    <figure>\n  <img width=\"70%\" src=\"./res/detect_prevent.png\" alt=\"\">\n  <figcaption>The ability of SALMA in detecting and preventing security attacks comparing to the state-of-the-art approaches.</figcaption>\n  </figure>\n</center></div>\n\n\n\n<div  id=\"imp\"><center><h2>Implementation</h2></center></div>\n<div>\n    <a href=\"https://github.com/HammadMahmoud\">Github</a>\n</div>\n\n\n\n<hr/>\n<!-- ***************** End of content ****************** -->\n<br><br><br><br>\n<div style=\"float:left\">\n            <a href=\"http://www.ics.uci.edu/~seal/\"><img ALT=\"[seal's logo]\" height=\"200\" src=../../seal.png></a>\n</div>\n<div style=\"float:right\">\n            <a href=\"http://www.ics.uci.edu\"><img ALT=\"[uci's logo]\" style=\"padding-top: 40px\" height=\"100\" src=../../uci.jpg></a>\n</div> \n</div>\n</body>\n", "encoding": "ascii"}