{"url": "https://seal.ics.uci.edu/projects/darcy/index.html", "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-83301040-1', 'auto');\n  ga('send', 'pageview');\n\n</script>\n<head>\n<title>SEAL - Detection and Repair of Architectural Inconsistencies in Java</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<meta http-equiv=\"Reply-to\" content=\"malek at uci dot edu\">\n<meta http-equiv=\"Owner\" content=\"Sam Malek\">\n<meta name=\"Author\" content=\"Sam Malek\">\n<meta name=\"Generator\" content=\"Emacs\">\n<link rev=\"MADE\" href=\"mailto:malek at uci dot edu\">\n<link href=\"../../seal.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n\n<body>\n<div class=\"wrapper\">\n    \n<!-- *************** Beginning of content ****************** -->\n\n<h2>Detection and Repair of Architectural Inconsistencies in Java</h2>\n\n<p>\n    Java is one of the most widely used programming languages. However, the absence of explicit support for architectural constructs, such as software components, in the programming language itself has prevented software developers from achieving the many benefits that come with architecture-based development. To address this issue, Java 9 has introduced the Java Platform Module System (JPMS), resulting in the first instance of encapsulation of modules with rich software architectural interfaces added to a mainstream programming language. The primary goal of JPMS is to construct and maintain large applications efficiently---as well as improve the encapsulation, security, and maintainability of Java applications in general and the JDK itself. A challenge, however, is that module declarations do not necessarily reflect actual usage of modules in an application, allowing developers to mistakenly specify inconsistent dependencies among the modules. In this research project, we formally define 8 inconsistent modular dependencies that may arise in Java-9 applications. We also present Darcy, an approach that leverages these definitions and static program analyses to automatically (1) detect the specified inconsistent dependencies within Java applications and (2) repair those identified inconsistencies. The results of our experiments, conducted over 38 open-source Java-9 applications, indicate that architectural inconsistencies are widespread and demonstrate the benefits of Darcy in automated detection and repair of these inconsistencies.\n</p>\n\n<h3>How does Darcy work?</h3>\n<p>\nFigure below depicts a high-level overview of Darcy comprised of two phases, Detection and Repair. Darcy is implemented in Java and Python. The detection phase takes a Java application as input and leverages static analyses to identify any instance of the specified inconsistent dependencies. The repair section takes the identified inconsistencies in the detection phase and deletes or modifies the explicit dependencies defined in the module-info files within the Java application.\n</p>\n\n<img style=\"margin:10\" ALT=\"[Darcy picture]\" height=\"250\" src=./tool.png><br>\n\n<h3>Artifacts</h3>\n\n<p>\nThe artifacts are available for download from <a href=\"https://github.com/negarq/darcy-artifact\">here</a>.\n\n<h3>Publications</h3>\n\nMore details about this project can be found in our publication below:\n<br>\n<ul class=\"paperlist\">\n    <li><b>Detection and Repair of Architectural Inconsistencies in Java</b><br> \n    Negar Ghorbani, Joshua Garcia, and Sam Malek<br>\n    <i>41st International Conference on Software Engineering (ICSE 2019), Montreal, Canada, May 2019. (21% acceptance rate)</i>\n    <br>[<a href=\"./ICSE_2019_Darcy.pdf\">PDF</a>]\n    </li> \n</ul>\n\n<!-- ***************** End of content ****************** -->\n<br><br>\n<div style=\"float:left\">\n            <a href=\"http://www.ics.uci.edu/~seal/\"><img ALT=\"[seal's logo]\" height=\"200\" src=../../seal.png></a>\n</div>\n<div style=\"float:right\">\n            <a href=\"http://www.ics.uci.edu\"><img ALT=\"[uci's logo]\" style=\"padding-top: 40px\" height=\"100\" src=../../uci.jpg></a>\n</div>\n</div>\n</body>", "encoding": "ascii"}