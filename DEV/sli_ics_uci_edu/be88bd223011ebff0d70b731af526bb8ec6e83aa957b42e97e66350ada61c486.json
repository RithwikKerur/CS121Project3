{"url": "http://sli.ics.uci.edu/pmwiki/pmwiki.php?n=Code%2FLearners", "content": "<!DOCTYPE html \n    PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html>\n<head>\n  <title>SLI | Code / Learners </title>\n  <meta http-equiv='Content-Style-Type' content='text/css' />\n  <link rel='stylesheet' href='http://sli.ics.uci.edu/pmwiki/pub/skins/custom/pmwiki.css' type='text/css' />\n  <!--HTMLHeader--><style type='text/css'><!--\n  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }\n  code.escaped { white-space: nowrap; }\n  .vspace { margin-top:1.33em; }\n  .indent { margin-left:40px; }\n  .outdent { margin-left:40px; text-indent:-40px; }\n  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }\n  a.createlink { text-decoration:none; position:relative; top:-0.5em;\n    font-weight:bold; font-size:smaller; border-bottom:none; }\n  img { border:0px; }\n  .editconflict { color:green; \n  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }\n\n  table.markup { border:2px dotted #ccf; width:90%; }\n  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }\n  table.vert td.markup1 { border-bottom:1px solid #ccf; }\n  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }\n  table.markup caption { text-align:left; }\n  div.faq p, div.faq pre { margin-left:2em; }\n  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }\n  div.faqtoc div.faq * { display:none; }\n  div.faqtoc div.faq p.question \n    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }\n  div.faqtoc div.faq p.question * { display:inline; }\n   \n    .frame \n      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }\n    .lfloat { float:left; margin-right:0.5em; }\n    .rfloat { float:right; margin-left:0.5em; }\na.varlink { text-decoration:none;}\n\n--></style>  <meta name='robots' content='index,follow' />\n\n</head>\n<body>\n<!--PageHeaderFmt-->\n  <div id='wikilogo'><a href='http://sli.ics.uci.edu'><img src='/pmwiki/pub/skins/custom/SLI_white.png'\n    alt='SLI' border='0' /></a></div>\n  <div id='wikihead'>\n  <form action='http://sli.ics.uci.edu'>\n    <!-- <span class='headnav'><a href='http://sli.ics.uci.edu/Code/RecentChanges'\n      accesskey='c'>Recent Changes</a> -</span> --> \n    <input type='hidden' name='n' value='Code.Learners' />\n    <input type='hidden' name='action' value='search' />\n    <!-- <a href='http://sli.ics.uci.edu/Site/Search'>Search</a>: -->\n    <input type='text' name='q' value='' class='inputbox searchbox' />\n    <input type='submit' class='inputbutton searchbutton'\n      value='Search' />\n    <a href='http://sli.ics.uci.edu/Site/Search'>(?)</a>\n  </form></div>\n<!--/PageHeaderFmt-->\n  <table id='wikimid' width='100%' cellspacing='0' cellpadding='0'><tr>\n<!--PageLeftFmt-->\n      <td id='wikileft' valign='top'>\n        <ul><li><a class='wikilink' href='http://sli.ics.uci.edu/Classes/Classes'>Classes</a>\n</li><li><a class='wikilink' href='http://sli.ics.uci.edu/Group/Group'>Group</a>\n</li><li><a class='wikilink' href='http://sli.ics.uci.edu/Projects/Projects'>Research</a>\n</li><li><a class='urllink' href='http://www.ics.uci.edu/~ihler/pubs.html' rel='nofollow'>Publications</a>\n</li><li><a class='wikilink' href='http://sli.ics.uci.edu/Code/Code'>Code</a>\n</li></ul><div class='vspace'></div><hr />\n<div class='vspace'></div>\n</td>\n<!--/PageLeftFmt-->\n      <td id='wikibody' valign='top'>\n<!--PageActionFmt-->\n        <div id='wikicmds'><ul><li class='browse'><a class='wikilink' href='http://sli.ics.uci.edu/Code/Learners?action=login'>login</a>\n</li></ul>\n</div>\n<!--PageTitleFmt-->\n        <div id='wikititle'>\n          <div class='pagegroup'><a href='http://sli.ics.uci.edu/Code'>Code</a> /</div>\n          <h1 class='pagetitle'>Learners</h1></div>\n<!--PageText-->\n<div id='wikitext'>\n<h2>Matlab learner classes for CS178 / CS273a </h2>\n<p>The following are matlab functions and classes designed to assist in exploring machine learning, and for use in homework and projects in my courses.\n</p>\n<div class='vspace'></div><h3>Preprocessing and data manipulation</h3>\n<div class='Matlab' style='padding:5px; border:1px solid black; background-color:#dddddd' >\n<pre> <span  style='color: green;'>% Data splitting and re-ordering operations</span>\n [X Y]             = reorderData(X,Y);                   <span  style='color: green;'>% reorder (permute) data set</span>\n [X Y]             = bootstrapData(X,Y,nBoot);           <span  style='color: green;'>% resample (bootstrap) data set</span>\n [Xtr Xte Ytr Yte] = crossValidate(X,Y,nFolds,iFold);    <span  style='color: green;'>% split data for n-fold cross validation</span>\n [Xtr Xte Ytr Yte] = splitData(X, Y, trainFraction);     <span  style='color: green;'>% split data into training and test sets</span>\n\n <span  style='color: green;'>% Data pre-processing and feature operations</span>\n [X scale]  = rescale(X [,scale])                        <span  style='color: green;'>% scale data to unit variance</span>\n [X mu sig] = whiten(X  [,mu,sig])                       <span  style='color: green;'>% whiten (decorrelate) data</span>\n [X feat] = fsubset(X, K [,feat])                        <span  style='color: green;'>% extract (random) subset of features</span>\n [X proj] = fproject(X, K [,proj])                       <span  style='color: green;'>% (random) linear projection of features</span>\n [X hash] = fhash(X, K [,hash])                          <span  style='color: green;'>% create random hash projection of F into K features</span>\n X = fpoly(X, degree)                                    <span  style='color: green;'>% Xout = polynomial combinations of Xin</span>\n X = fkitchenSink(X, K [,opt])                           <span  style='color: green;'>% create random transform of F into dimension K</span>\n [X T] = fsvd(X, K [,T])                                 <span  style='color: green;'>% PCA-based (SVD) projection of X into K dimensions</span>\n <span  style='color: gray;'>% [X L] = fLDA(X, Y, K [,L])                            </span><span  style='color: green;'>% Fisher's LDA proj of X into K dimensions</span>\n</pre></div> \n<div class='vspace'></div><div class='Matlab' style='padding:5px; border:1px solid black; background-color:#dddddd' >\n<pre> <span  style='color: green;'>% Plotting</span>\n plotClassify2D(learner, X,Y ,pre???);                   <span  style='color: green;'>% plot data and classifier outputs on 2D data</span>\n h = plotGauss2D( gMean, gCov, colorString, varargin)    <span  style='color: green;'>% plot a Gaussian ellipse shape in 2D</span>\n</pre></div>\n<div class='vspace'></div><div class='Matlab' style='padding:5px; border:1px solid black; background-color:#dddddd' >\n<pre> <span  style='color: green;'>% Basic Learners</span>\n knnRegress(xTrain, yTrain, K)                           <span  style='color: green;'>% k-nearest-neighbors regression using given training data</span>\n linearRegress(xTrain,yTrain,l2reg)                      <span  style='color: green;'>% linear regression, with optional L2-regularization</span>\n treeRegress(xTrain,yTrain [,options{:}])                <span  style='color: green;'>% decision-tree least-squares regression</span>\n <span  style='color: gray;'>%neuralNet???</span>\n\n knnClassify(xTrain, yTrain, K)                          <span  style='color: green;'>% k-nearest-neighbors classifier using given training data</span>\n gaussBayesClassify(xTrain, yTrain, equalCovar)          <span  style='color: green;'>% learn Gaussian class-conditional distributions</span>\n logisticClassify(xTrain,yTrain [,...])                  <span  style='color: green;'>% learn (mse loss) logistic regression classifier </span>\n <span  style='color: gray;'>%perceptron???</span>\n\n <span  style='color: gray;'>%decisionTree???</span>\n <span  style='color: gray;'>%treeClassify???</span>\n <span  style='color: gray;'>%simpleStump</span>\n <span  style='color: gray;'>%svmPrimal???  (or liblinear wrapper?)</span>\n <span  style='color: gray;'>%svmDual???</span>\n\n <span  style='color: green;'>%Ensembling methods</span>\n baggedClassif(baseLearner,N [,Xtr,Ytr,...])             <span  style='color: green;'>% learn N bagged classifiers of type baseLearner</span>\n gradBoostRegress(baseLearner, N, [,Xtr,Ytr,...])        <span  style='color: green;'>% learn N gradient boosted regressors of type baseLearner</span>\n adaboost(baseLearner [,Xtr,Ytr,N])                      <span  style='color: green;'>% learn N boosted classifiers</span>\n <span  style='color: gray;'>%ALSO: weighted combination?  (1) Add classifiers, choose weight by hold-out; (2) Add with MSE, Netflix method?</span>\n</pre><div class='vspace'></div></div>\n<div class='vspace'></div>\n</div>\n\n      </td>\n    </tr></table>\n<!--PageFooterFmt-->\n  <div id='wikifoot'>\n    <div class='footnav' style='float:left'> Last modified October 09, 2012, at 03:04 PM</div>\n    <div class='footnav' style='float:right; text-align:right'>\n    <a href=\"http://www.ics.uci.edu\">Bren School of Information and Computer Science</a><br>\n    <a href=\"http://www.uci.edu\">University of California, Irvine</a>\n    </div>\n  </div>\n<!--HTMLFooter--><script type=\"text/javascript\">\n  var _gaq = _gaq || [];\n  _gaq.push([\"_setAccount\", \"UA-24148957-2\"]);\n\t_gaq.push([\"_trackPageview\"]);\n\t(function() {\n\t  var ga = document.createElement(\"script\"); ga.type = \"text/javascript\"; ga.async = true;\n\t  ga.src = (\"https:\" == document.location.protocol ? \"https://ssl\" : \"http://www\") + \".google-analytics.com/ga.js\";\n\t  var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(ga, s);\n\t  })();\n</script>\n</body>\n</html>\n", "encoding": "ascii"}