{"url": "http://sprout.ics.uci.edu/past_projects/cliques/download/README", "content": "CLQ_API 1.0  June, 2002\n\nCopyright (c) 2002 University of California at Irvine \nAll rights reserved.\n\n\n DESCRIPTION\n -----------\n CLQ_API provides group key agreement protocol over OpenSSL library. 5\n group key agreement protocols are provided.   \n\n The five key agreement protocols supported are:\n  * GDH : protocol based on group extensions of the two-party\n          Diffie-Hellman key exchange.\n\n  * CKD : is a centralized key distribution with the key server\n          dynamically chosen from among the group members. The key\n          server uses pairwise Diffie-Hellman key exchange to\n          distribute keys.\n\n  * TGDH : combines a binary key tree structure with the group\n           Diffie-Hellman technique.\n\n  * STR : a form of TGDH with a so-called ``skinny'' or\n          imbalanced tree.\n\n  * BD : a protocol proposed by Burmester-Desmedt, another\n         variation of group Diffie-Hellman. BD is\n         computation-efficient requiring a constant number of\n         exponentiations upon any membership change, using more\n         messages.\n\n OVERVIEW\n --------\n This  package contains the following:\n  \n libclq_api.a, libbd, libstr.a, libself.a:\n    Libraries that provides the primitives used to implement the\n    following key agreement protocols: GDH, CKD,\n    Burmester-Dermstedt, STR and TGDH. For more details see\n    http://sconce.ics.uci.edu/cliques/. \n\n In addition, each of the above listed libraries comes with example\n programs.\n\n NOTE: This package requires Openssl (www.openssl.org).\n   \n\n INSTALLATION \n ------------\n\n After unzipping the files, change the current directory to be\n clq_api1.0, then do the following:\n\t \n 1) define the following environment variables SSL_DIR and\n    SSL_INC. They are used by the configure file to find \n    libcrypto.a (Openssl):\n\n    Example:\n\n    setenv  SSL_DIR  /usr\n    setenv  SSL_INC  /usr/include/openssl\n\n 2) run ./configure\n 2) run ./make\n\n\n FAQs\n ----\n\n 1) How to generate certificates\n    The certificates used are X509 certificates. Some simple programs\n    that use openssl tools to create the certificates are provided\n    with this package. They can be found in the ``utils'' directory.\n    Also see README_certificates for more information.    \n\n 2) How do I specify the path to the certificates\n    There are three environment variables used to specify the path to\n    the certificates. If they are not set up, the library expects all\n    users certificates, the CA certificate and the dsa parameters\n    files to be in the same directory with the binary programs.\n\n    The variables are:     \n\n    CLQ_CERTF specifies the path to user certificates (the *_cert.pem\n              files) and the dsa parameters (dsa_param.pem).\n    CLQ_KPRIV specifies the path to the private key files (*_priv.pem\n              files)\n    CLQ_CA    specifies the path to the CA certificate file (cacert.pem\n              file)\n\n 3) What is dsa_param.pem file? \n    All the protocols supported by Secure Spread are variaations on\n    Diffie-Hellman extended to groups. This is the file that contains DH\n    common parameters, or DSA parameters (for details see www.openssl.org\n    documentation). It is used by the key agreement protocol. The number of \n    bits chosen for these parameters has a big impact on the security and\n    performance of the protocol.\n\n SUPPORT\n -------\n\n kyongdae@ics.uci.edu\n\n\n\n\n\n", "encoding": "ascii"}