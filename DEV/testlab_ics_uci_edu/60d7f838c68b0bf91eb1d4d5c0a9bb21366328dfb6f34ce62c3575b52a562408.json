{"url": "http://testlab.ics.uci.edu/data/projects.html", "content": "<HTML>\r\n<HEAD>\r\n   <TITLE>Research projects, UCI System Test Laboratory</TITLE>\r\n<META NAME=\"DESCRIPTION\" CONTENT=\"Research projects of the System Test Lab at the University of California Irvine\">\r\n</HEAD>        \r\n<BODY TEXT=    \"#FFFFFF\"\r\n      BGCOLOR= \"#FFFFFF\"\r\n      LINK=    \"#43A9FF\"\r\n\tTOPMARGIN=0\r\n\tLEFTMARGIN=0>\r\n<TABLE BORDER=0\r\n       CELLSPACING=0\r\n       CELLPADDING=15\r\n       WIDTH=100%\r\n       HEIGHT=12%>\r\n <TR>\r\n  <TD WIDTH=17% BGCOLOR=\"#222222\"> <!-- upper-left box -->\r\n  &nbsp;<BR>\r\n  </TD>\r\n\r\n\r\n  <!-- top title contents -->\r\n  <TD width=83% BGCOLOR=\"#111191\" valign=middle halign=middle>\r\n      <FONT COLOR=\"#111191\">xxxxxx</font> <!-- hoffset -->\r\n      <FONT SIZE=2 FACE=\"ARIAL\"><strong>UCI System Test Laboratory</strong></font><br>\r\n      <FONT COLOR=\"#111191\">xxxxxx</font> <!-- hoffset -->\r\n      <FONT SIZE=5 FACE=\"ARIAL\"><strong>Research Projects</strong></font>\r\n  </td>\r\n\r\n\r\n </tr>\r\n</table>\r\n\r\n<!-- CONTENT -->\r\n\r\n<TABLE BORDER=0\r\n       CELLSPACING=0\r\n       CELLPADDING=15\r\n       WIDTH=100%>\r\n <TR>\r\n\r\n  <TD WIDTH=17% HEIGHT=100% BGCOLOR=\"#6D1276\" VALIGN=TOP>\r\n      <BR>\r\n<!--SITE LINKS -->\r\n<font color=#43A9FF face=\"arial,helvetica\" size=-1>\r\n      <A HREF=\"http://testlab.ics.uci.edu/index.html\">Testing Home</A>\r\n\t<p>\r\n      <A HREF=\"http://testlab.ics.uci.edu/data/projects.html\">Projects</A>\r\n<!--\t<p>\r\n      <A HREF=\"http://testlab.ics.uci.edu/data/people.html\">People</A>\r\n-->\r\n\t<p>\r\n      <A HREF=\"http://testlab.ics.uci.edu/data/pubs.html\">Publications</A>\r\n\t<p>\r\n      <A HREF=\"http://testlab.ics.uci.edu/data/links.html\">Links</A>\r\n  </font></TD>\r\n \r\n\r\n<!-- PAGE CONTENT -->\r\n\r\n  <TD width=83% HEIGHT=100% BGCOLOR=\"FFFFFF\" VALIGN=TOP>\r\n     <FONT SIZE=2 FACE=\"ARIAL\" COLOR=\"#000000\">\r\n      <BR>\r\n<!--  MAIN DOCUMENT GOES HERE -->\r\n<blockquote>\r\n\r\n\t<h2>  Hardware-Software Covalidation </h2>\r\n\r\n\t\r\n\r\nA hardware-software system can be defined as one in which hardware and\r\nsoftware must be designed together, and must interact to properly\r\nimplement system functionality. The widespread use of these systems in\r\ncost-critical and life-critical applications motivates the need for a\r\nsystematic approach to verify functionality. In order to manage the\r\ncomplexity of the problem, many researchers are investigating <em>\r\ncovalidation </em> techniques, in which functionality is verified by\r\nsimulating (or emulating) a system description with a given test input\r\nsequence. The tractability of covalidation makes it the only practical\r\nsolution for many real designs. A practical difficulty in the\r\nvalidation of hardware-software systems has been the wide gap between\r\nthe hardware design and the software engineering communities. During\r\nthe design of a system, lack of communication between hardware and\r\nsoftware design groups causes system defects to be discovered late in\r\nthe design process, requiring costly redesign. Covalidation brings\r\ntogether hardware validation and software testing approaches to\r\naddress the hardware-software covalidation problem with a uniform\r\napproach.\r\n\r\n\r\n\t<h2>  Behavioral Design Validation </h2>\r\n\t\r\nDesign validation by simulation-based techniques is the most common\r\napproach to hardware verification due to the computational complexity of more\r\nformal techniques. Validation entails the generation of a test pattern\r\nsequence which is applied to the design during simulation to trigger\r\nerroneous behavior. Since simulation can only be performed with a\r\nsmall subset of the entire space of test sequences, some method is\r\nneeded to estimate the degree of verification achieved by a given test\r\nsequence. The degree of verification afforded by a test sequence must\r\nbe known in order to direct test pattern generation, and to provide\r\nthe designer with the knowledge that verification goals have been\r\nachieved. Research in software testing has produces several validation metrics \r\nwhich operate at the behavioral level, including simple metrics such as \r\nstatement and branch coverage, as well as more complex metrics based on\r\nmutation and dataflow analysis. We are investigating the application of\r\nsoftware testing metrics to measure hardware validation coverage. We\r\nare also developing metrics to enable the detection of faults\r\nassociated with concurrency and timing.\r\n\r\n\r\n\r\n\t<h2>  Testing of FPGA Architectures </h2>\r\n\r\nAs IC densities are increasing, cluster-based FPGA architectures are\r\nbecoming the architecture of choice for major FPGA manufacturers. A\r\ncluster-based architecture is one in which several logic blocks are\r\ngrouped together into a coarse-grained logic block. The high density\r\nlocal interconnect serves to improve FPGA utilization, but also\r\ngreatly complicates the FPGA interconnect testing problem. We have\r\ndeveloped a hierarchical approach to define a set of FPGA\r\nconfigurations which enable interconnect faults to be detected. This\r\ntechnique is applicable to any cluster-based FPGA architecture and\r\nenables the detection of bridging faults involving intra-cluster\r\ninterconnect and extra-cluster interconnect. The hierarchical\r\nstructure of a cluster-based tile is exploited to define intra-cluster\r\nconfigurations separately from extra-cluster configurations, thereby\r\nimproving the efficiency of the configuration definition process. By\r\nguaranteeing that both intra-cluster and extra-cluster configurations\r\nhave several test transparency properties, hierarchical fault\r\ndetectability is ensured.\r\n\r\n\r\n\r\n</font>\r\n</blockquote>\r\n </TD>\r\n </TR>\r\n</TABLE>\r\n<center>\r\n<hr size = 2 color=\"#002858\" noshade width=\"90%\">\r\n\r\n\r\n</CENTER>\r\n</BODY>\r\n</HTML>\r\n", "encoding": "ascii"}