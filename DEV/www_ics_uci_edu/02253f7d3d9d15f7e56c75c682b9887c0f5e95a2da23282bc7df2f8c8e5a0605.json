{"url": "https://www.ics.uci.edu/~eppstein/pubs/j-ipl.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nInformation Processing Letters\n</h2>\n<ul>\n<li><b>Arboricity and bipartite subgraph listing algorithms</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-94-11.pdf\">Tech. Rep. 94-11</a>, ICS, UCI, 1994.<br>\n<a href=\"//doi.org/10.1016/0020-0190(94)90121-X\">\n<i>Inf. Proc. Lett.</i> 51: 207&ndash;211, 1994</a>.\n<p>\nFor any sparse family of graphs,\none can list in linear time all\ncomplete bipartite subgraphs of a graph in the family.\nThere are O(n) complete bipartite subgraphs of a graph in the family,\nand the sum of the numbers of vertices in these subgraphs is also O(n).\n<p>\nNowadays these results can also be interpreted as a form of\n<a href=\"//en.wikipedia.org/wiki/Formal_concept_analysis\">formal\nconcept analysis</a>. If a set of objects and attributes is sparse\n(e.g., if it is generated by adding objects and attributes one at a\ntime, where each newly-added object is given O(1) attributes and each\nnewly-added attribute is held by O(1) objects) then the total size of\nall concepts in its concept lattice is linear, and this lattice may be\ngenerated in linear time.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Arboricity and bipartite subgraph listing algorithms\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Arboricity-and-bipartite-subgraph-listing-algorithms.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein94arboricity.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=190450\">ACM DL</a>)\n<p>\n<li><b>Dynamic connectivity in digital images</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-13.pdf\">Tech. Rep. 96-13</a>, ICS, UCI, 1996.<br>\n<i>Inf. Proc. Lett.</i> 62: 121&ndash;126, 1997.\n<p>\nAny algorithm that maintains the connected components\nof a bitmap image must take Omega(log <i>n</i> / log log <i>n</i>)\ntime per change to the image.  The problem can be solved in \nO(log <i>n</i>) time per change using dynamic planar graph techniques.\nWe discuss applications to computer Go and other games.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic connectivity in digital images\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-connectivity-in-digital-images.html\">Citations</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~dmjones/hbp/ipl/References/eppstein1997:121.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96dynamic.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=259717\">ACM DL</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"jour.html\">Journals</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}