{"url": "https://www.ics.uci.edu/~theory/269/140307b.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, Mar 7, 2014</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Winter 2014: Theory Seminar</a><br>\nBren Hall, Room 1423, 1pm\n\n<hr>\nMarch 7, 2014:</h2>\n<h1>\nFinding small patterns in permutations in linear time\n</h1>\n<h2>\nJack Cheng\n</h2>\n<p>\nGiven two permutations \u03c3 and \u03c0, the Permutation Pattern problem asks\nif \u03c3 is a subpattern of \u03c0. We show that the problem can be solved in\ntime 2^O(\u2113^2 log \u2113)\u22c5n, where \u2113=|\u03c3| and n=|\u03c0|. In other words, the\nproblem is fixed-parameter tractable parameterized by the size of the\nsubpattern to be found.\n</p>\n\n<p>\nWe introduce a novel type of decompositions for permutations and a\ncorresponding width measure. We present a linear-time algorithm that\neither finds \u03c3 as a subpattern of \u03c0, or finds a decomposition of \u03c0\nwhose width is bounded by a function of |\u03c3|. Then we show how to solve\nthe Permutation Pattern problem in linear time if a bounded-width\ndecomposition is given in the input.\n</p>\n\n<p>\nBased on a paper by Sylvain Guillemot and Daniel Marx in Soda 2014.\n</p>\n\n</body>\n</html>\n\n", "encoding": "utf-8"}