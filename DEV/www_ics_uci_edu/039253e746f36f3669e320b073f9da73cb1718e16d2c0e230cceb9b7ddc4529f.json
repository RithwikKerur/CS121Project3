{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/api/hog.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n  <!-- Page title -->\n  <title>VLFeat - Documentation > C API</title>\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"doxygen.css\"></link>\n  <!-- Scripts-->\n  <script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li><a href=\"../overview/tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"../overview/frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"../overview/covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"../overview/hog.html\">HOG features</a>\n</li>\n<li><a href=\"../overview/sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"../overview/dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"../overview/liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"../overview/mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"../overview/imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"../overview/encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"../overview/gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"../overview/kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"../overview/aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"../overview/quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"../overview/slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"../overview/svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"../overview/kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"../overview/plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"../overview/utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"../overview/ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"../overview/hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li class='active'><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n</li>\n</ul></li>\n</ul>\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"../doc.html\">Documentation</a></span><span class='separator'>></span><span class='page'><a href=\"index.html\">C API</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n      <!-- <pagestyle href=\"%pathto:root;api/tabs.css\"/> -->\n      <div class=\"doxygen\">\n<div id=\"top\">\n<div id=\"top\">\n<!-- Generated by Doxygen 1.8.7 -->\n  <div id=\"navrow1\" class=\"tabs\">\n    <ul class=\"tablist\">\n      <li><a href=\"index.html\"><span>Main&#160;Page</span></a></li>\n      <li class=\"current\"><a href=\"pages.html\"><span>Related&#160;Pages</span></a></li>\n      <li><a href=\"annotated.html\"><span>Data&#160;Structures</span></a></li>\n      <li><a href=\"files.html\"><span>Files</span></a></li>\n    </ul>\n  </div>\n<div id=\"nav-path\" class=\"navpath\">\n  <ul>\n<li class=\"navelem\"><a class=\"el\" href=\"index.html\">Vision Lab Features Library (VLFeat)</a></li>  </ul>\n</div>\n</div><!-- top -->\n<div class=\"header\">\n  <div class=\"headertitle\">\n<div class=\"title\">Histogram of Oriented Gradients (HOG) features </div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"textblock\"><dl class=\"section author\"><dt>Author</dt><dd>Andrea Vedaldi</dd></dl>\n<p><a class=\"el\" href=\"hog_8h.html\">hog.h</a> implements the Histogram of Oriented Gradients (HOG) features in the variants of Dalal Triggs <a class=\"el\" href=\"citelist.html#CITEREF_dalal05histograms\">[5]</a> and of UOCTTI <a class=\"el\" href=\"citelist.html#CITEREF_felzenszwalb09object\">[8]</a> . Applications include object detection and deformable object detection.</p>\n<ul>\n<li><a class=\"el\" href=\"hog.html#hog-overview\">Overview</a></li>\n<li><a class=\"el\" href=\"hog.html#hog-tech\">Technical details</a></li>\n</ul>\n<h1><a class=\"anchor\" id=\"hog-overview\"></a>\nOverview</h1>\n<p>HOG is a standard image feature used, among others, in object detection and deformable object detection. It decomposes the image into square cells of a given size (typically eight pixels), compute a histogram of oriented gradient in each cell (similar to <a class=\"el\" href=\"sift.html\">Scale Invariant Feature Transform (SIFT)</a>), and then renormalizes the cells by looking into adjacent blocks.</p>\n<p>VLFeat implements two HOG variants: the original one of Dalal-Triggs <a class=\"el\" href=\"citelist.html#CITEREF_dalal05histograms\">[5]</a> and the one proposed in Felzenszwalb et al. <a class=\"el\" href=\"citelist.html#CITEREF_felzenszwalb09object\">[8]</a> .</p>\n<p>In order to use HOG, start by creating a new HOG object, set the desired parameters, pass a (color or grayscale) image, and read off the results.</p>\n<div class=\"fragment\"><div class=\"line\">VlHog * hog = <a class=\"code\" href=\"hog_8c.html#adb99ad366dbd4ea539a76f48df1dff9c\">vl_hog_new</a>(VlHogVariantDalalTriggs, numOrientations, <a class=\"code\" href=\"host_8h.html#abce143a5a9b51d987a74f2ad30046520\">VL_FALSE</a>) ;</div>\n<div class=\"line\"><a class=\"code\" href=\"hog_8c.html#a86e1faec74ae8163db8dd1e0d292c305\">vl_hog_put_image</a>(hog, image, height, width, numChannels, cellSize) ;</div>\n<div class=\"line\">hogWidth = <a class=\"code\" href=\"hog_8c.html#a8e899624c92435e77f3a1916b7ce5ed4\">vl_hog_get_width</a>(hog) ;</div>\n<div class=\"line\">hogHeight = <a class=\"code\" href=\"hog_8c.html#ad7037e000f578c2abeeb4e8a3d6bbaf6\">vl_hog_get_height</a>(hog) ;</div>\n<div class=\"line\">hogDimenison = <a class=\"code\" href=\"hog_8c.html#acce19086c37f34edc0078933f224ebcc\">vl_hog_get_dimension</a>(hog) ;</div>\n<div class=\"line\">hogArray = <a class=\"code\" href=\"generic_8c.html#a9f0d2ab48ad66f0588c89a3e526044ed\">vl_malloc</a>(hogWidth*hogHeight*hogDimension*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>)) ;</div>\n<div class=\"line\"><a class=\"code\" href=\"hog_8c.html#ab66448d416e661344327f969aebb9a42\">vl_hog_extract</a>(hog, hogArray) ;</div>\n<div class=\"line\"><a class=\"code\" href=\"hog_8c.html#a31692138ce8b6c925bf9cf4761f9dd71\">vl_hog_delete</a>(hog) ;</div>\n</div><!-- fragment --><p>HOG is a feature array of the dimension returned by <a class=\"el\" href=\"hog_8c.html#a8e899624c92435e77f3a1916b7ce5ed4\" title=\"Get the width of the HOG cell array. \">vl_hog_get_width</a>, <a class=\"el\" href=\"hog_8c.html#ad7037e000f578c2abeeb4e8a3d6bbaf6\" title=\"Get the height of the HOG cell array. \">vl_hog_get_height</a>, with each feature (histogram) having dimension <a class=\"el\" href=\"hog_8c.html#acce19086c37f34edc0078933f224ebcc\" title=\"Get the dimension of the HOG features. \">vl_hog_get_dimension</a>. The array is stored in row major order, with the slowest varying dimension beying the dimension indexing the histogram elements.</p>\n<p>The number of entreis in the histogram as well as their meaning depends on the HOG variant and is detailed later. However, it is usually unnecessary to know such details. <a class=\"el\" href=\"hog_8h.html\">hog.h</a> provides support for creating an inconic representation of a HOG feature array:</p>\n<div class=\"fragment\"><div class=\"line\">glyphSize = <a class=\"code\" href=\"hog_8c.html#a61ae53dfac6a9ed20a8865e531c23d5a\">vl_hog_get_glyph_size</a>(hog) ;</div>\n<div class=\"line\">imageHeight = glyphSize * hogArrayHeight ;</div>\n<div class=\"line\">imageWidth = glyphSize * hogArrayWidth ;</div>\n<div class=\"line\">image = <a class=\"code\" href=\"generic_8c.html#a9f0d2ab48ad66f0588c89a3e526044ed\">vl_malloc</a>(<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>)*imageWidth*imageHeight) ;</div>\n<div class=\"line\"><a class=\"code\" href=\"hog_8c.html#aafce8a9f029f232887bda4e64c585aa3\">vl_hog_render</a>(hog, image, hogArray) ;</div>\n</div><!-- fragment --><p>It is often convenient to mirror HOG features from left to right. This can be obtained by mirroring an array of HOG cells, but the content of each cell must also be rearranged. This can be done by the permutation obtaiend by <a class=\"el\" href=\"hog_8c.html#ac700d5506dd453b9a41d3a17b9e3cca7\" title=\"Get HOG left-right flip permutation. \">vl_hog_get_permutation</a>.</p>\n<p>Furthermore, <a class=\"el\" href=\"hog_8h.html\">hog.h</a> suppots computing HOG features not from images but from vector fields.</p>\n<h1><a class=\"anchor\" id=\"hog-tech\"></a>\nTechnical details</h1>\n<p>HOG divdes the input image into square cells of size <code>cellSize</code>, fitting as many cells as possible, filling the image domain from the upper-left corner down to the right one. For each row and column, the last cell is at least half contained in the image. More precisely, the number of cells obtained in this manner is:</p>\n<div class=\"fragment\"><div class=\"line\">hogWidth = (width + cellSize/2) / cellSize ;</div>\n<div class=\"line\">hogHeight = (height + cellSize/2) / cellSize ;</div>\n</div><!-- fragment --><p>Then the image gradient \\( \\nabla \\ell(x,y) \\) is computed by using central difference (for colour image the channel with the largest gradient at that pixel is used). The gradient \\( \\nabla \\ell(x,y) \\) is assigned to one of <code>2*numOrientations</code> orientation in the range \\( [0,2\\pi) \\) (see <a class=\"el\" href=\"hog.html#hog-conventions\">Conventions</a> for details). Contributions are then accumulated by using bilinear interpolation to four neigbhour cells, as in <a class=\"el\" href=\"sift.html\">Scale Invariant Feature Transform (SIFT)</a>. This results in an histogram \\(h_d\\) of dimension 2*numOrientations, called of <em>directed</em> orientations since it accounts for the direction as well as the orientation of the gradient. A second histogram \\(h_u\\) of undirected orientations of half the size is obtained by folding \\( h_d \\) into two.</p>\n<p>Let a block of cell be a \\( 2\\times 2 \\) sub-array of cells. Let the norm of a block be the \\( l^2 \\) norm of the stacking of the respective unoriented histogram. Given a HOG cell, four normalisation factors are then obtained as the inverse of the norm of the four blocks that contain the cell.</p>\n<p>For the Dalal-Triggs variant, each histogram \\( h_d \\) is copied four times, normalised using the four different normalisation factors, the four vectors are stacked, saturated at 0.2, and finally stored as the descriptor of the cell. This results in a <code>numOrientations</code> * 4 dimensional cell descriptor. Blocks are visited from left to right and top to bottom when forming the final descriptor.</p>\n<p>For the UOCCTI descriptor, the same is done for both the undirected as well as the directed orientation histograms. This would yield a dimension of <code>4*</code>(2+1)*numOrientations elements, but the resulting vector is projected down to <code></code>(2+1)*numOrientations elements by averaging corresponding histogram dimensions. This was shown to be an algebraic approximation of PCA for descriptors computed on natural images.</p>\n<p>In addition, for the UOCTTI variant the l1 norm of each of the four l2 normalised undirected histograms is computed and stored as additional four dimensions, for a total of <code>4+3*numOrientations</code> dimensions.</p>\n<h2><a class=\"anchor\" id=\"hog-conventions\"></a>\nConventions</h2>\n<p>The orientation of a gradient is expressed as the angle it forms with the horizontal axis of the image. Angles are measured clock-wise (as the vertical image axis points downards), and the null angle corresponds to an horizontal vector pointing right. The quantized directed orientations are \\( \\mathrm{k} \\pi / \\mathrm{numOrientations} \\), where <code>k</code> is an index that varies in the ingeger range \\( \\{0, \\dots, 2\\mathrm{numOrientations} - 1\\} \\).</p>\n<p>Note that the orientations capture the orientation of the gradeint; image edges would be oriented at 90 degrees from these. </p>\n</div></div><!-- contents -->\n        <!-- Doc Here -->\n      </div>\n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n", "encoding": "ascii"}