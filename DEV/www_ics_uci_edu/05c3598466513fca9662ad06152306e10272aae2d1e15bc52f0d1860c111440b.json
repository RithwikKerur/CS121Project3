{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/ui/TOCHI_abstract.html", "content": "<HTML>\n<!-- $Id: TOCHI_abstract.html,v 1.1 1995/04/11 23:48:02 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"ftp://liege.ics.uci.edu/pub/arcadia/chiron//UCI_Tech_Report_94-12.ps.Z\">\n\"<b>Supporting Separations of Concerns and Concurrency in the Chiron-1\n User Interface System</b>\"</A>,\n by Richard N. Taylor, Kari A. Nies, Gregory Alan Bolcer, Craig A. MacFarlane,\n Gregory F. Johnson, and Kenneth M. Anderson in\n <i> To appear in ACM Transactions on Computer-Human Interaction.</i>\n\n<H2> Abstract </H2>\n\nThe Chiron-1 user interface system demonstrates key techniques which\nenable a strict separation of an application from its user interface.\nThese techniques include separating the control flow aspects of\nthe application and user interface: they are concurrent and may contain\nmany threads.  Chiron also separates windowing and look-and-feel\nissues from dialog and abstract presentation decisions via\nmechanisms employing a client-server architecture.\n\n<P>\nTo separate application code from user interface code, user interface\nagents called <i>artists</i> are attached to instances of application\nabstract data types (ADTs).  Operations on ADTs within the application\nimplicitly trigger user interface activities within the artists.\nMultiple artists can be attached ADTs, providing multiple\nviews and alternative forms of access and manipulation by either a single\nuser or by multiple users.\nEach artist and the application run in separate threads of control.\n\n<P>\nArtists maintain the user interface by making remote\ncalls to an abstract depiction hierarchy in the Chiron server,\ninsulating the UI code from the specifics of particular windowing systems\nand toolkits.  The Chiron server and clients execute in separate processes.\nThe client-server architecture also supports multi-lingual systems:\nmechanisms are demonstrated which support clients written in languages\nother than that of the server, while nevertheless supporting\nobject-oriented server concepts.\nThe system has been used in several universities and research and\ndevelopment projects.  It is available by anonymous ftp.\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Fri Nov 11 14:45:56 1994\n</ADDRESS>\n</BODY></HTML>\n\n", "encoding": "ascii"}