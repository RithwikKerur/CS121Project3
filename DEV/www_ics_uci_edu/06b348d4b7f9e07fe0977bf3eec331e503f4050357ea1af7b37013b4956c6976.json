{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/analysis/automated_abstract.html", "content": "<HTML>\n<!-- $Id: automated_abstract.html,v 1.1 1995/04/11 23:38:11 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"ftp://ftp.cs.umass.edu/pub/techrept/techreport/1990/UM-CS-1990-118.ps\">\n\"<b>Automated Analysis of Concurrent and Real-time Software</b>\"</A>,\nby George S. Avrunin and Jack C. Wileden in Technical Report 90-118,\nDepartment of Computer Science, University of Massachusetts at Amherst, 1990.\n\n<H2> Abstract </H2>\n\nThe constrained expression approach to analysis of concurrent software \nsystems has several attractive features, including the facts that it \ncan be used with a variety of design and programming languages and that \nit does not require a complete enumeration of the set of reachable states \nof the concurrent system. This paper reports on the construction of a\ntoolset automating the main constrained expression analysis techniques and \nthe results of experiments with that toolset. The toolset is capable of \ncarrying out completely automated analyses of a variety of concurrent \nsystems, starting from source code in an Ada-like design language and \nproducing system traces displaying the properties represented by the \nanalyst's queries. It has been successfully used with designs that \ninvolve hundreds of concurrent processes. \n\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Thu Jan 26 13:35:50 1995\n</ADDRESS>\n</BODY></HTML>\n\n", "encoding": "ascii"}