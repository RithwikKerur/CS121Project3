{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0154.html", "content": "<!-- received=\"Tue Sep  3 21:07:00 1996 PDT\" -->\n<!-- sent=\"Wed, 4 Sep 1996 00:07:38 -0400\" -->\n<!-- name=\"David G. Durand\" -->\n<!-- email=\"dgd@cs.bu.edu\" -->\n<!-- subject=\"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\" -->\n<!-- id=\"v02130502ae52a0f89414@[128.148.157.46]\" -->\n<!-- inreplyto=\"Seiwald Q &amp; A -- \"GET for EDIT\" cookies\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies</title>\n<h1>Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies</h1>\n<b>David G. Durand</b> (<a href=\"mailto:dgd@cs.bu.edu\"><i>dgd@cs.bu.edu</i></a>)<br>\n<i>Wed, 4 Sep 1996 00:07:38 -0400</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#154\">[ date ]</a><a href=\"thread.html#154\">[ thread ]</a><a href=\"subject.html#154\">[ subject ]</a><a href=\"author.html#154\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0155.html\">Christopher Seiwald: \"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies -- final volley\"</a>\n<li> <b>Previous message:</b> <a href=\"0153.html\">David G. Durand: \"RE: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\"</a>\n<!-- nextthread=\"start\" -->\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nAt 4:38 PM 9/3/96, Christopher Seiwald wrote:\n&gt;| From: \"Roy T. Fielding\" &lt;<a href=\"mailto:fielding@liege.ICS.UCI.EDU\">fielding@liege.ICS.UCI.EDU</a>&gt;\n&gt;| Checkout does not have meaning on all systems, whereas version has a generic\n&gt;| meaning (at times, too generic). It is intended to be as flexible as\n&gt;possible.\n&gt;| The \"Content-\" prefix is a requirement of MIME for what HTTP calls\n&gt;| entity-header field names.\n&gt;\n&gt;Not to beat a dead horse (but this one's still kicking):\n&gt;\n&gt;I'm pushing for us to recognise \"checkout\" as a meaningful act for the\n&gt;version abstraction we are trying to support, whether or not the underlying\n&gt;system can make real use of it.  It means \"GET the SOURCE for EDIT\".\n&gt;\"GET\" because the document has to be fetched (or via existing methods\n&gt;determined that the user has the requested copy), \"the SOURCE\" because\n&gt;the user needs the document as it is prior to any server-side\n&gt;interpretation, and \"for EDIT\" so that the VC backend is aware of the\n&gt;user's activity.\n\nIf we have a CHECKOUT method, then we don't need the LOCK method I propose.\nBut we must tell clients to ask for a checkout before trying a put, in case\nthey need one. We cannot require that clients do a special GET operation\nbefore posting an update because it's not always required, and could just\nsend a lot of redundant bytes. A system is free to implement the protocol\nso that sending the redundant bytes is a requirement, but I don't think the\nprotocol should require it.\n\n    I myself don't see, nor have I heard any argument showing how my\nproposal for a separate operation (wh/ probably should not be called LOCK)\nto reserve a resource, separate from GETing it, is functionally inferior to\na joined-at-the-hip checkout that is not as flexible. Maybe the REQUEST(old\nLOCK) operation needs a \"GET required\" status code for systems that want to\nmake me consume some fresh bytes.\n\n   This brings me to a question. One of the points that I am most attached\nto is the \"configuration management treated separately\" requirement. The\nsimplest foundation for any versioning system is to turn resource addresses\ninto ordered pairs of (ID x version). Once we have that we can implement\nlots of policies on top -- the number of CM systems implemented on top of\nRCS tends to support that claim. So I'd like to hold off discussions of\nthese complex policy issues until we have to get to them. And I think that\nif Content-version can serve as a cookie, then it should, because it makes\nthe model for the simple stuff simpler, and doesn't add much work for a\ncomplex system anyway.\n\nI'm  afraid that with tabs changed to spaces by some mailer, your table of\npolicies was too hard for me to decipher. But I think that this needs to go\non hold.\n\n&gt;There is use for the checkout cookie for all these systems, even if the\n&gt;cookied degrades into being little more than \"Content-Version\".  Since\n&gt;All VC systems can make use of the cookies, and some need them for sane\n&gt;operation (checkin without checkout under clearcase is a no-go), it makes\n&gt;sense to use a single tag across all underlying VC systems.\n\nI think we want a wide variety of version styles to work nicely. I also\nthink that client requirements have to be simple to be widely implemented\n-- and if they're not to be widely implemented outside the hard-core\nconfiguration management community, then standardization is a waste of\ntime. Why is it bad for a \"checkout-style\" cookie to be the same thing as\nthe version-ID (ie. the Content-version header)? It works for complex\nsystems and simple ones, and is less work for simple systems.\n\nI think we may have actually run this to ground. Either we're talking about\na single field associated with a resource, and we're arguing about whether\nto call it a Cookie or a Content-version, or we're claiming that two fields\nare required. I don't see that we need two fields. In fact, I think that\nthe negotiation flexibility gained in the separation of resource\nreservation from data movement makes it easier to  and negotiate the\nassignment of different version numbers at reservation and release times. I\neven think treating a cookie as a \"temporary version number for the working\nversion\" is a nice concrete way to think of the semantics of parallel\nsessions. If we really need two fields, then we can probably postpone the\ndiscussion. If we don't, then I'd argue that Content-version is the name\nthat should win because it best represents the simple case. But I must say\nthat if we're just arguing about the name of a field I don't care, except\nfor the confusion that it will cause.\n\n   -- David\n\n--------------------------------------------+--------------------------\nDavid Durand                  <a href=\"mailto:dgd@cs.bu.edu\">dgd@cs.bu.edu</a> | david@dynamicDiagrams.com\nBoston University Computer Science          | Dynamic Diagrams\n<a href=\"http://www.cs.bu.edu/students/grads/dgd/\">http://www.cs.bu.edu/students/grads/dgd/</a>    | http://dynamicDiagrams.com/\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0155.html\">Christopher Seiwald: \"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies -- final volley\"</a>\n<li> <b>Previous message:</b> <a href=\"0153.html\">David G. Durand: \"RE: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\"</a>\n<!-- nextthread=\"start\" -->\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}