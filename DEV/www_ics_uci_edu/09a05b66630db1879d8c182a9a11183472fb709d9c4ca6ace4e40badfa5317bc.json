{"url": "https://www.ics.uci.edu/~eppstein/projects/pairs/Source/testbed/CheapestInsertion.cp", "content": "// Test of closest pair algorithms\n// David Eppstein, UC Irvine, 20 Apr 1997\n//\n// Cheapest insertion TSP application\n\n#include \"CheapestInsertion.h\"\n#include \"Error.h\"\n\n// compute cheapest insertion tsp\ndouble CheapestInsertion(unsigned long np, PointSet & ps, ClosestPairs & cp)\n{\n\tCheapestInsDistance & cid = (CheapestInsDistance &) ps;\n\tdouble total = 2*cid.base(0,1);\t\t// find initial tour length\n\tcid.partners[0] = 1;\t\t\t\t// make initial tour\n\tcid.partners[1] = 0;\n\tcp.UpdatePoint(0);\n\tcp.UpdatePoint(1);\n\tnp -= 2;\t\t\t\t\t\t\t// how many points are left out of tour?\n\twhile (np > 0) {\n\t\tpoint a, b;\n\t\ttotal += cp(a,b);\t\t\t\t// find best edge-point insertion\n\t\tps.interact(a,b);\t\t\t\t// and do it\n\t\tcp.UpdatePoint(a);\t\t\t\t// tell closest pairs about changes\n\t\tcp.UpdatePoint(b);\n\t\tnp--;\t\t\t\t\t\t\t// one fewer point outside tour\n\t}\n\treturn total;\n}\n\nCheapestInsDistance::CheapestInsDistance(unsigned long npoints, PointSet & b)\n\t: PointSet(npoints), base(b), partners(new point[npoints])\n{\n\tif (partners == 0) error(\"CheapestInsDistance: can't create partners\");\n\tfor (long i = 0; i < npoints; i++)\n\t\tpartners[i] = i;\n}\n\n// return cost of inserting i into tour at edge j->partners[j]\ndouble CheapestInsDistance::operator() (point i, point j)\n{\n\tif (partners[i] == i) {\n\t\tif (partners[j] != j)\n\t\t\treturn base(i,j)+base(i,partners[j])-base(j,partners[j]);\n\t} else if (partners[j] == j) return (*this)(j,i);\n\treturn MAX_DISTANCE;\n}\n\n// insert i into tour at edge j->partners[j]\nvoid CheapestInsDistance::interact(point i, point j)\n{\n\tif (partners[i] == i) {\n\t\tif (partners[j] == j)\n\t\t\terror(\"CheapestInsertion: neither interacting point is in tour\");\n\t\tpartners[i] = partners[j];\n\t\tpartners[j] = i;\n\t} else if (partners[j] == j) interact(j,i);\n\telse error(\"CheapestInsertion: both interacting points are in tour\");\n}", "encoding": "ascii"}