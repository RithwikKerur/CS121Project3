{"url": "https://www.ics.uci.edu/~minhaenl/class/2015/cs_171_fall/draft/results_7x7_missed/results_vs_AverageAI_w7_h7_g0/vamirkha_ARVI/ARVI_AI.class_log.txt", "content": "Found boardWidth = 7\nFound boardHeight = 7\nFound gravity = false\nFound winningRun = 5\nFound GUI = false\nFound onlyTeam = 1\n60\nStarting tournament with 2 teams.\n60\nGame 0, 1, player 1: ./Files/vamirkha_Amirkhanyan_vamirkha_ARVI/bin/ARVI_AI.class, player 2: ./testAIs/AverageAI/AverageAI.class\nPlayer 1 returned a bad move null or went over time (10003).\nGame 0, 1, Loser: ./Files/vamirkha_Amirkhanyan_vamirkha_ARVI/bin/ARVI_AI.class, Winner: ./testAIs/AverageAI/AverageAI.class\n60\nGame 1, 0, player 1: ./testAIs/AverageAI/AverageAI.class, player 2: ./Files/vamirkha_Amirkhanyan_vamirkha_ARVI/bin/ARVI_AI.class\nPlayer 1 returns move 3, 3.\nPlayer 2 returned a bad move null or went over time (10001).\nGame 1, 0, Winner: ./testAIs/AverageAI/AverageAI.class, Loser: ./Files/vamirkha_Amirkhanyan_vamirkha_ARVI/bin/ARVI_AI.class\nException in thread \"Thread-2\" java.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat MinMaxTree.getFreeSpots(MinMaxTree.java:106)\n\tat MinMaxTree.createGameTree(MinMaxTree.java:144)\n\tat MinMaxTree.createGameTree(MinMaxTree.java:144)\n\tat MinMaxTree.createGameTree(MinMaxTree.java:144)\n\tat MinMaxTree.createGameTree(MinMaxTree.java:144)\n\tat MinMaxTree.<init>(MinMaxTree.java:36)\n\tat ARVI_AI.getMove(ARVI_AI.java:20)\n\tat ARVI_AI.getMove(ARVI_AI.java:31)\n\tat connectK.PlayerThread.run(ConnectK.java:99)\n****************Tree created***************\nBEST Move: java.awt.Point[x=3,y=3]\n", "encoding": "ascii"}