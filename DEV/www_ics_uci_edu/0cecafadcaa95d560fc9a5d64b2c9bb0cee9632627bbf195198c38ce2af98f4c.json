{"url": "https://www.ics.uci.edu/~ejw/authoring/memphis/minutes.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\n<html>\n  <head>\n    <title>Minutes for WEBDAV WG Meeting at Memphis IETF</title>\n  </head>\n\n  <body>\n      <h1>Minutes for WEBDAV WG Meeting at Memphis IETF</h1>\n\n      <P>The WEBDAV Working Group held a meeting at the 38th IETF, in\n      Memphis, TN, on April 7, 1997.  There were 49 people in\n      attendance throughout the duration of the meeting.  The meeting\n      was chaired by Jim Whitehead, and minutes were collected by Del\n      Jensen.  These minutes are reported by Jim Whitehead due to the\n      unavailability of Del Jensen for medical reasons.</P>\n\n      <P>The meeting began with a poll of the audience to determine\n      how many people in attendance were familiar with the WEBDAV WG.\n      Since approximately on third of those in attendance were being\n      exposed to WEBDAV for the first time, the session began with a\n      brief overview presentation on WEBDAV.  This presentation was\n      followed by a discussion, led by Judith Slein, on open issues in\n      the requirements document.</P>\n\n      <P>During these first two presentations, questions were asked\n      about the scope of the WG's activities with respect to security,\n      authentication, and access control.  The stated response, that\n      WEBDAV was planning on using existing security and\n      authentication schemes, but was not planning on implementing new\n      schemes specifically for WEBDAV, met with some scepticism.\n      Several parties expressed the opinion that distributed authoring\n      in absence of good security, authentication, and access control\n      was potentially dangerous, creating a hackers paradise.  Another\n      participant stated that expressing the WEBDAV requirements for\n      security, authentication and access control was a necessary\n      first step, even if the WEBDAV WG does end up using existing\n      schemes for this functionality.  One participant urged caution\n      when considering these issues, stating that they were very\n      complex (a.k.a. \"pits of infinite depth\"), while another viewed\n      authentication and access control as server configuration\n      issues, and hence out of scope for the WG.  At the end of the\n      discussion, Judith Slein took an action item to bring up a\n      thread on the discussion about security, authentication, and\n      access control.</P>\n\n      <P>Jim Whitehead next gave a presentation of several topics and\n      preliminary proposals for their implementation, which were\n      discussed in the Design Team meeting of April 1-4, 1997, held at\n      U.C. Irvine, specifically locking, metadata, versioning, and\n      partial write.  Discussion of locking centered on a description of\n      the characteristics of a proposed lock method, which can be used\n      to provide two types of lock semantics: an exclusive write lock,\n      where only the principal who owns the lock may modify the state\n      of the resource (body and metadata), and a shared write lock,\n      where only the principal(s) who own/share the lock may modify\n      the state of the resource.  There was some discussion about\n      whether it should be possible to lock a deleted or non-existent\n      resource in order to avoid a race condition between creating a\n      resource (reserving its name) and then taking out a lock on the\n      resource.  This led to the need to define a new requirement to\n      make it possible to reserve a name in the namespace controlled\n      by a server.</P>\n\n      <P>Also discussed during locking was whether the proposed\n      locking interface was sufficient for specifying a lock for\n      replicated systems which employ a golden copy replication\n      system.  While no counter examples were found by the\n      participants, one asked about non-golden copy systems.  This\n      raised the issue of whether locking capability should be a\n      SHOULD requirement, rather than a MUST requirement, since\n      non-golden copy replicated storage systems cannot implement a\n      lock as defined.</P>\n\n      <P>Metadata facilities were described in terms of a \"mixed\"\n      model, where small chunk metadata is expressed using\n      attribute-value pairs stored with a resource, using new methods\n      GETMETA, PUTMETA, DELMETA, and large chunk metadata is expressed\n      using a link on the described resource which points to another\n      resource which contains the metadata description.  Referential\n      integrity can be assured for small chunk metadata, but cannot be\n      assured in the general case for large chunk metadata.</P>\n\n      <P>A proposal for versioning was introduced where instead of\n      using special checkout and checkin methods, versioning would be\n      performed using the lock, unlock, and a new \"save\" method which\n      would update the predecessor and successor relationships and\n      store an updated resource.  A poll of participants found that\n      they did not understand the new proposal well enough to tell\n      whether it would work.</P>\n\n      <P>The old patch method was resurrected in the proposal for\n      partial write capability which was presented.  The notion of\n      patch is that the body of the method request contains\n      instructions for how to update the resource specified by the\n      request URI.  It was recommended that multipart/byte-ranges be\n      used as the default update instruction format which must be\n      supported in the patch method is supported.  This choice was\n      viewed as strange by some participants.  Other update formats\n      suggested were VTML and Unix diff.</P>\n\n      <P>*** End of meeting ***</P>\n\n  </body>\n</html>\n", "encoding": "ascii"}