{"url": "https://www.ics.uci.edu/~eli/courses/cs153-f09/p1.txt", "content": "Project 1\r\n\r\nImplement an entity that takes 2 8-bit unsigned inputs (a, b) and one 2-bit\r\nunsigned input (op). Your entity should have one 16-bit unsigned output (z).\r\nThe entity, a combinational circuit, computes z as follows:\r\n\r\n  z = a + b     (if op == \"00\")\r\n  z = a - b     (if op == \"01\")\r\n  z = a * b     (if op == \"10\")\r\n  z = \"0 ...0\"  (if op == \"11\")\r\n\r\nImplement an exhaustive testbench for your entity. You'll find 95% of the code\r\nprovided below. However, make sure you complete the project.\r\n\r\n--\r\n--  ALU.vhdl\r\n--\r\n\r\nlibrary IEEE;\r\nuse IEEE.STD_LOGIC_1164.all;\r\nuse IEEE.STD_LOGIC_ARITH.all;\r\n\r\nentity ALU is\r\n  port (A  : in  UNSIGNED (7 downto 0);\r\n        B  : in  UNSIGNED (7 downto 0);\r\n        OP : in  UNSIGNED (1 downto 0);\r\n        Z : out UNSIGNED (15 downto 0));\r\nend ALU;\r\n\r\narchitecture BHV of ALU is\r\nbegin\r\n  process(A, B, OP)\r\n  begin\r\n    case OP is\r\n      when \"00\" =>\r\n        Z <= \"00000000\" & (A + B);\r\n      when \"01\" =>\r\n        Z <= \"00000000\" & (A - B);\r\n      when \"10\" =>\r\n        Z <= A * B;\r\n      when others =>\r\n        Z <= \"0000000000000000\";\r\n    end case;\r\n  end process;\r\nend BHV;\r\n\r\n--\r\n-- ALU_TB.vhdl\r\n--\r\n\r\nlibrary IEEE;\r\nuse IEEE.STD_LOGIC_1164.all;\r\nuse IEEE.STD_LOGIC_ARITH.all;\r\n\r\nentity ALU_TB is\r\nend ALU_TB;\r\n\r\narchitecture BHV of ALU_TB is\r\n  component ALU\r\n    port (A  : in  UNSIGNED (7 downto 0);\r\n          B  : in  UNSIGNED (7 downto 0);\r\n          OP : in  UNSIGNED (1 downto 0);\r\n          Z : out UNSIGNED (15 downto 0));\r\n  end component;\r\n  signal A : UNSIGNED (7 downto 0) := \"00000000\";\r\n  signal B : UNSIGNED (7 downto 0) := \"00000000\";\r\n  signal OP : UNSIGNED (1 downto 0) := \"00\";\r\n  signal Z : UNSIGNED (15 downto 0);\r\nbegin\r\n  U1: ALU port map(A, B, OP, Z);\r\n  process\r\n  begin\r\n    for i in 0 to 255 loop\r\n      for j in 0 to 255 loop\r\n        A <= conv_unsigned(i, 8);\r\n        B <= conv_unsigned(j, 8);\r\n        OP <= \"00\";\r\n        wait for 5 ns;\r\n        assert Z = conv_unsigned(A + B, 16) report \"Addition Failed!\" severity ERROR;\r\n        -- add more here\r\n      end loop;\r\n    end loop;\r\n  end process;\r\nend BHV;\r\n\r\nSimulate your testbench entity and show the wave-forms of input and output\r\nsignals to your TA. Make sure your TA checks out your demo. This will be worth\r\n70% the points for this project.\r\n\r\nComplete a report and attach to it all source VHDL files. Your report should\r\ninclude your name, a description of the VHDL files attached, any special notes\r\nor comments, and a description of how you tested your design.\r\n\r\nYour TA will provide you with information on tools, lab setup, and other\r\nthings related to this project. Make sure you seek help to get you started.\r\n", "encoding": "ascii"}