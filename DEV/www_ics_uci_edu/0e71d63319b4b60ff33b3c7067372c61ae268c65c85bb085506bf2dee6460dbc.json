{"url": "https://www.ics.uci.edu/~eppstein/161/f15.html", "content": "<?xml version=\"1.0\" encoding=\"utf8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\">\n<html>\n<head>\n  <title>Algorithms</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n<h1>CS/CSE 161, Fall 2015:<br> Design and Analysis of Algorithms</h1>\n\n<hr>\n\n<h2>Instructors and office hours</h2>\n<p>The course will be taught by <a href=\"/~eppstein/\">David\nEppstein</a>, eppstein@uci.edu (office hours Tues 2:30 &ndash; 3:30 and\nWeds 3:30 &ndash; 4:30 in Bren 4082). The teaching\nassistants are <a href=\"http://www.ics.uci.edu/~jlam2/\">Jenny Lam</a>\n(office hours MWF 9:00 &ndash; 10:00 in Bren 4011)\nand <a href=\"mailto:siluy@uci.edu\">Silu Yang</a>\n(office hours Tues 6:30 &ndash; 7:30 and Thurs 12:30 &ndash; 1:30 in\nBren 4011). We also have three readers.\n\n<h2>Lectures and discussions</h2>\n<p>The course meets for lectures Mondays, Wednesdays, and\nFridays, from 2:00 &ndash; 2:50, in the Howard Schneiderman (Biology) Lecture Hall, Room 100A. In addition there\nare discussion sections, Mondays and Wednesdays 6:00 &ndash; 6:50 in SSH 100\nand Tuesdays and Thursdays 8:00 &ndash; 8:50 in ELH 100. Students are expected\nto be enrolled in one of the two discussion sections and to attend\ndiscussions regularly. At the discussion\nsections, the teaching assistant will go over homework and midterm\nsolutions, give additional examples of topics covered in the lecture,\nand be available to answer questions.</p>\n\n<p>Lecture materials will not be distributed to the class; instead, you are encouraged to attend the lecture yourself and take your own notes. Recording the lectures for your own personal use is allowed, but other uses of recorded lectures (including making them available online) is forbidden.</p>\n\n<h2>Textbook</h2>\n<p>The course text will be \"Algorithm Design and Applications\" by\nGoodrich and Tamassia (Wiley, 2015;\nsee <a href=\"http://www.wiley.com/WileyCDA/Section/id-825796.html\">publisher\nsite for special direct student purchase price</a>).\nStudents are expected to own a copy and to read the relevant chapters\nand sections. The official version of the textbook is the one sold in\nthe bookstore. Most homework problems will be assigned from this text.\nIf you are using a different version (e.g., an\ninternational version, or the older text by the same authors), then it is your responsibility to make sure you\nare doing the correct homework problems.</p>\n\n<h2>Homework and grading policy</h2>\n<p>Coursework will consist of weekly homeworks (typically due on Fridays and posted on this page before the start of class on Monday of the week it is due)\nas well as two midterms and a comprehensive final exam. The overall\ngrade will be determined 10% from homework, 25% from each midterm, and\n40% from the final.</p>\n\n<p>Group work on homeworks is permitted; each student\nshould turn in his or her own copy of the homeworks. Some of the\nhomework problems will ask you to perform calculations or trace the\nsteps of an algorithm; you are welcome to use computer programs\nto solve these problems rather than doing everything by hand.\nEach week's\nhomework assignment will be given on this web page. Homework is due by\n9:00pm on Fridays and must be turned in through dropbox\non eee. No late\nhomework will be accepted. Homework must be typed, and formatted as a\npdf file. Handwritten homework or homeworks in other formats will not be\ngraded. Students who add the class after the start of quarter will be\nresponsible for turning in all earlier homeworks by the following\nFriday. The lowest homework score of the quarter will be dropped from\nthe course average.</p>\n\n<p>For the UCI honesty policy, please see <a href=\"http://honesty.uci.edu/\">honesty.uci.edu</a>. Students who are caught cheating in this class (for instance by copying exam solutions or allowing other students to copy from them) risk getting an F in the class or other disciplinary action as allowed by this policy.</p>\n\n<h2>Tentative Schedule</h2>\n\n<dl>\n<dt><b>Week 0:</b></dt>\n<dd>Sep. 25: Organizational meeting, review of O-notation (Jenny Lam)</dd>\n<br/>\n<dt><b>Week 1: Data structures</b></dt>\n<dd>Homework 1, due 9:00pm on Friday, Oct. 2: R-1.2, R-1.3, R-1.8, R-2.1</dd>\n<dd>Sep. 28: Priority queues and heapsort (Chapter 5)</dd>\n<dd>Sep. 30: Hashing with linear probing (Chapter 6)</dd>\n<dd>Oct. 2: Nearest neighbor searching with balanced trees (Chapter 4)</dd>\n<br/>\n<dt><b>Week 2: Comparison sorting</b></dt>\n<dd>Homework 2, due 9:00pm on Friday, Oct. 9: R-4.2, R-5.11, A-5.1, R-6.5</dd>\n<dd>Oct. 5: Merge sort (Chapter 8)</dd>\n<dd>Oct. 7: Comparison sorting lower bounds (Chapter 8)</dd>\n<dd>Oct. 11: Quick sort (Chapter 8)</dd>\n<br/>\n<dt><b>Week 3: Selection and integer sorting</b></dt>\n<dd><a href=\"f15-hw3.html\">Homework 3, due 9:00pm on Friday, Oct. 16</a></dd>\n<dd>Oct. 12: Quickselect (Chapter 9)</dd>\n<dd>Oct. 14: Bucket sort and stability (Chapter 9)</dd>\n<dd>Oct. 16: Radix sort (Chapter 9)</dd>\n<br/>\n<dt><b>Week 4: Midterm; integer arithmetic</b></dt>\n<dd>Homework 4, due 9:00pm on Friday, Oct. 23: R-9.2, C-9.4, C-9.9, C-9.10</dd>\n<dd>Oct. 19: MIDTERM ONE</dd>\n<dd>Oct. 21: Karatsuba multiplication (Chapter 11)</dd>\n<dd>Oct. 23: Modular exponentiation and RSA encryption (Chapter 24)</dd>\n<br/>\n<dt><b>Week 5: Graph representation and traversal</b></dt>\n<dd>Homework 5, due 9:00pm on Friday, Oct. 30: R-11.2, R-11.4, R-24.5, C-24.6</dd>\n<dd>Oct. 26: Graph representation (Chapter 13)</dd>\n<dd>Oct. 28: Depth first search and strong connectivity (Chapter 13)</dd>\n<dd>Oct. 30: Directed acyclic graphs and topological ordering (Chapter 13)</dd>\n<br/>\n<dt><b>Week 6: Shortest paths and minimum spanning trees</b></dt>\n<dd>Homework 6, due 9:00pm on Friday, Nov. 6: R-13.2, R-13.4, R-13.6, R-13.7</dd>\n<dd>Nov. 2: DAG and Bellman&ndash;Ford shortest paths (Chapter 14)</dd>\n<dd>Nov: 4: Dijkstra's algorithm (Chapter 14)</dd>\n<dd>Nov. 6: Minimum spanning trees (Chapter 15)</dd>\n<br/>\n<dt><b>Week 7: Midterm; dynamic programming</b></dt>\n<dd>Homework 7, due 9:00pm on Friday, Nov.13: C-14.2, C-14.4, R-15.9, R-15.10</dd>\n<dd>Nov. 9: MIDTERM TWO</dd>\n<dd>Nov. 11: VETERANS DAY HOLIDAY</dd>\n<dd>Nov. 13: Dynamic programming for Fibonacci numbers and other recurrences (Chapter 12)</dd>\n<br/>\n<dt><b>Week 8: Dynamic programming applications</b></dt>\n<dd>Homework 8, due 9:00pm on Wednesday, Nov. 25: R-12.4, R-12.8,\n  C-12.3, A-12.1</dd>\n<dd>Nov. 16: Finding optimal game strategies (Chapter 12)</dd>\n<dd>Nov. 18: Longest common subsequences (Chapter 12)</dd>\n<dd>Nov. 20: The knapsack problem (Chapters 10 and 12)</dd>\n<br/>\n<dt><b>Week 9: Computational geometry</b></dt>\n<dd>Nov. 23: Convex hulls (Chapter 22)</dd>\n<dd>Nov. 25: Closest pairs (Chapter 22)</dd>\n<dd>Nov. 27: THANKSGIVING HOLIDAY</dd>\n<br/>\n<dt><b>Week 10:</b></dt>\n<dd>Homework 9, due 9:00pm on Friday, Dec. 4: R-22.6, R-22.8, C-22.1, C-22.5</dd>\n<dd>Nov. 30: Streaming algorithms (not in text;\nsee <a href=\"http://dmac.rutgers.edu/Workshops/WGUnifyingTheory/Slides/cormode.pdf\">Graham\nCormode's slides on finding frequent items</a> and\nthe <a href=\"https://en.wikipedia.org/wiki/Reservoir_sampling\">Wikipedia\narticle on reservoir sampling</a>)</dd>\n<dd>Dec. 2: NP-completeness (Chapter 17)</dd>\n<dd>Dec. 4: Approximation algorithms (Chapter 18)</dd>\n<br/>\n<dt><b>Final exam:</b></dt>\n<dd>Dec. 11 (Friday), 1:30 - 3:30 (per <a href=\"https://www.reg.uci.edu/calendars/finals/schedule-201516.html\">schedule</a>)\n</dl>\n\n<h2>Other Course-Related Information</h2>\n\nThe following material is from previous years' offerings of ICS 161.\nSome of these offerings were based on different texts (Baase and\nCormen-Leiserson-Rivest), and covered a somewhat different range of\ntopics.  You may find this material useful, but it is not required\nreading.</li>\n\n<ul><li><a href=\"syl.html\">Lecture notes from Winter 1996</a></li>\n<li><a href=\"exams/\">Sample exams from Winter 1998 and Spring\n2005</a></li>\n<li><a href=\"python/\">Python\nimplementations of various algorithms</a>, <a\nhref=\"/~eppstein/PADS/\">more Python algorithm implementations</a>, and\n<a\nhref=\"http://aspn.activestate.com/ASPN/Cookbook/Python?kwd=Algorithms\">\nstill more Python algorithms</a>.</li>\n</ul>\n</body>\n", "encoding": "ascii"}