{"url": "https://www.ics.uci.edu/~ejw/authoring/collection/dt/Minutes990706.txt", "content": "WebDAV Advanced Collections Minutes July 6, 1999\n\nATTENDING: \nJudy Slein, Geoff Clemm, Chuck Fay, Jim Whitehead\n\nACTION ITEMS\n\nJudy: arrange phone conference for July 20\n\nREQUIREMENTS\n\nJim and Geoff do not have time to take authoring responsibilities for the requirements \ndocument, but are willing to see it pushed as an informational rfc if someone else will be \nauthor.\n\nJudy is willing to be author, but needs input and comments from others.  Jim will move it \nforward as an informational rfc provided that Judy takes authorship responsibilities.\n\nJudy also circulated a draft rationale document and needs comments and help filling in \nholes.\n\nLOGISTICS\n\nGeoff will work on Oslo slides on the plane, expects to give overview of the spec and \ninvite discussion.  Jim has slides available from his upcoming presentations, and will give \nthem to Geoff.\n\nJudy and Chuck will be away on 7/20, but there should be a phone conference anyhow to \nreview the Oslo meeting.\n\nWe will aim to have a new draft of the spec available August 6, based on comments of \nthe authors and comments received in Oslo.  This draft will be the basis of working group \nlast call.\n\nVacation plans:\n\nJim will be out 7/29 - 8/2, and at Delta-V 8/17 - 8/18\nJudy will be out 7/10 - 7/28\nChuck will be out 7/15 - 7/23\n\nJudy will work on the spec till Friday 7/9, then turn it over to Jim till she gets back from \nvacation.\n\nSPEC REVIEW\n\nChuck:  Is it that it's impossible for bindings to get into an inconsistent state (as on p.6) or \nthat servers MUST NOT let them get into an inconsistent state?  He thinks the language \non p.6 should be normative.\n\nDoes para.5 on p.8 clarify this?  It says that implementations MUST ensure the integrity \nof bindings.  We don't want normative language in 2 places.\n\nWhat we're saying about the integrity of bindings may be inconsistent with the definition \nof referential integrity in the terminology section.\n\nAgreed: We'll keep normative language out of the overview.  So on p.6 we'll just say the \nintegrity of bindings is guaranteed.  We'll move the statement about MOVE and \nDELETE right after \"implementations MUST act to ensure the integrity of bindings\" in \n4.2.\n\nChuck: The definitions of bindings and URI mappings and their relationship to the \nWebDAV spec are good.\n \nGeoff: No major comments.  He'll send minor ones via e-mail.\n\nJim: On headers -- For some headers, we use plain URIs as values, for others we uses \ncoded-URIs or generic-coded-URIs.  Let's make it simpler for implementers by being \nconsistent.  We'll just always use coded-URI or generic-coded-URI.\n\nJim: Position header -- We capitalize First, Last, etc., but in the XML elements they are \nlower case.  Let's make them lower case in the Position header, too.\n \nThere may be formatting problems with white space in properties and XML elements.  \nAlso at some points in the table of contents.  These appear in Wordpad, but not in \nnotepad or IE.\n\nJim: Check the prime character in figures to make sure Word has not been doing smart \nsubstitutions.\n\nJim: Many figures are at the end of sections, so that next section header follows \nimmediately and looks like a caption.  We should fix this by labeling the figures \nunderneath or providing a brief identification of the figure in prose.\n\nJim: Reference issues -- In the normative references, change [HTTP] to refer to the new \ndraft standard RFC 2616.  Also check the text of the spec to make sure there are no \nreferences to RFC 2068.\n \nJim: Delete from the informational references [DASL] and [CollReq], since these are just \ninternet drafts.  We don't want to risk being held up for IESG approval because of \nreferences to internet drafts.\n \nJim: Doesn't like our changes to the DAV:response XML element.  Doesn't like adding a \nprop block, and doesn't like DAV:location as a pseudo-property.  He would rather \nintroduce a new DAV:headers element and use it for headers that we don't want to treat \nas properties.\n \nGeoff: Would rather treat headers and properties the same.\n\nAgreed: We'll leave section 10 on changes to the DAV:response element as is.\n \nGeoff: In 4.2.3, in step 4 of the algorithm, should right-to-left really be left-to-right? Jim \nand Geoff will discuss this offline.\n\nJim generally likes the spec.\n  \nJudy: Do we really want to require servers to implement both bindings and redirect \nreferences, or should we have 2 separate compliance classes for these?  They are very \ndifferent from each other, and you can imagine a server wanting to implement only 1 of \nthem.\n \nJim: Favors keeping them together in a single compliance class to avoid an explosion of \ncompliance classes.  Also, redirect references are so minimal to implement that server \nimplementers shouldn't object.  One issue is how easy it would be to discover exactly \nwhat the server supports.  If it's easy to discover, there's less objection to separating \nthem.\n  \nJudy: You would just have 2 separate compliance classes, and look to see which was in \nthe DAV: header in response to OPTIONS.\n\nNo decision.\n\nJudy: Why are we requiring servers guarantee the integrity of bindings?\n\nGeoff: Unless the protocol provides a way to have integrity guaranteed for bindings, his \nproduct will find an out-of-band way to do that.  In versioning, there are many orthogonal \nways of grouping information: by activity, by version tree, by configuration. Most of \npoint of versioning is to be able to reproduce this information for clients.  If it can be \nbroken, it's no use to clients.Jim: Happy to keep this requirement.  It's hard to imagine an \nimplementation where you wouldn\u2019t have strong integrity.\n\nChuck: We could have another compliance class. Geoff needs mandatory integrity, but \nnot everyone does.\n\nGeoff: Weak binding is of such limited value, that splitting that hair in compliance \nclasses is not a good idea.\n\nGeoff: We should keep a clean distinction between bindings and direct references.  Direct \nreferences differ from bindings in that strong integrity is not required for direct \nreferences.\n \nJudy: Why did DMA leave it up to servers whether to guarantee integrity of references?\n\nChuck: Cross-server bindings optional, but a server might want to provide them.  \nRequiring integrity makes this harder for servers to provide.  Making integrity optional \nmight get wider support for cross-server bindings.  In DMA there might be light weight \nDMSs that wouldn\u2019t want to enforce integrity. Bindings still are references, and it still \ntakes work to enforce integrity for them.\n \nGeoff: Make a clear distinction between bindings and references.  Bindings are \nrelationships between a name and a resource; references are relationships between 2 \nnames.\n \nChuck: The value of  allowing dangling references is that it makes possible light weight  \nimplementations.  In DMA it was expected that most systems would enforce integrity, \nbut DMA didn\u2019t require it and clients are not supposed to assume it.  They are supposed \nto avoid doing things that would result in dangling references.\n\nGeoff: Dangling references can be useful to clients, and should be allowed when we add \nin direct references.  Clients may want to be able to create the references before their \ntarget exist, etc.  But let's keep direct references separate from bindings.\n\nChuck: Hypertext analogy -- Hypertext links are not guaranteed valid, though some web \nservers might provide this as added value.  The prevailing strategy is to allow lack of \nintegrity, and people get by.\n \nChuck: There can be multiple bindings to same resource, so how heavy weight will \nimplementations have to be to track them all?  Someone who wants to implement a light \nweight server would not want to have to track them all.  If we allowed  only one binding \nit would be a lot easier to say that servers must maintain integrity.\n\nGeoff: There are still likely to be only limited numbers of bindings to a given resource.  \nCreating a binding is no heavier weight than creating a new resource.\n\nChuck: Are there systems that don\u2019t maintain the integrity of containment relationships? \nWe don't know.\n\nAgreed: We'll keep the requirement of strong integrity for bindings.\n\nJudy: COPY with Depth 0 -- How can we be consistent with our underlying model \nwithout unintuitive results?\n\nJim: A binding is an association that really spans between Depth 0 and Depth 1.  We have \nchosen to treat it as part of depth 1, as this gets fewest undesirable consequences.  If we \ntreated it as part of Depth 0, so that bindings got copied with the collection but their \nresources did not, then our COPY operation would leave us with a new set of bindings to \nexisting resources, not with new copies of the resources.\n\nJim: Has been thinking that we really need a separate set of objects that control the \nnamespace, separate from all underlying resources.  Then collections would contain \nresources.  There would be a clean separation of namespaces from resources. But he \ndoesn't propose that we make these changes now.\n\nGeoff: The purpose of collections is to affect namespace.  They give us a clean way of \ncontrolling namespace.\n\nAgreed: No changes to spec.\n\nJudy: MKREF by default overwrites an existing resource.  But what if the existing \nresource is a collection?  Overwriting it could do a lot of damage if it's unintentional.\n\nJim: But there\u2019s a UI mediating between the client and an end user, so it's not so \ndangerous as it looks at first.  If we require a delete before the MKREF, someone could \nsneak in between the delete and the mkref, so you would have to lock and unlock as well.\n\nJudy: It was really for efficiency that we decided to make overwrite the default behavior.\n\nChuck: Would prefer the safer default.\n\nAgreed: We'll switch to the safer default.\n\nJudy: DAV:reftarget and DAV:location are inconsistent.  One is #PCDATA and the other \nis an href.\n\nAgreed: Make both reftarget and location href\u2019s.\n\nJudy: No one has really thought about the list of headers required to be returned for GET \nor HEAD on a redirect reference with Passthrough: F.\n\nJim: The easy fix is to change \"at a minimum\" to \"for example\".\n \nJudy: There has been a discussion of the atomicity requirement for PROPPATCH on the \nmailing list.  Do we want to reconsider our requirements that ORDERPATCH be atomic?\n\nJim: It would be hard on clients to have to interpret partial success from ORDERPATCH, \nand the intermediate state might not be consistent with the ordering. Server implementers \nwill do their best to achieve atomicity.  Let's start with a strong requirement and see how \nimplementers do. \n", "encoding": "Windows-1252"}