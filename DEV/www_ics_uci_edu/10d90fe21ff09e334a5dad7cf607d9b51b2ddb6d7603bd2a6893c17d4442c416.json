{"url": "https://www.ics.uci.edu/~jacobson/cs122b/Project/03-Phase0.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n    \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n   <meta name=\"GENERATOR\" content=\"Mozilla/4.79 (Macintosh; U; PPC) [Netscape]\">\n   <title>Setting Up the Development Environment</title>\n<link rel=\"stylesheet\" href=\"../course.css\" type=\"text/css\">\n</head>\n\n<body>\n\n<div class=\"title\">\n<center>\n<h2>Setting Up the Development Environment</h2>\n<h4>Phase 0</h4>\n</center>\n</div>\n\n<div class=\"section\">\n<hr>\n<h3>Context</h3>\n</div>\n\n<p>Our MIS division has identified the applications needed to develop, test and deploy FabFlixs so that it is consistent with our Windows XP production environment. Fortunately, all are freely available and have proven their stability and robustness.</p>\n\n<p>PostgreSQL has been chosen as the database.</p>\n\n<p>To develop Web software, we need the Java development environment; the most current version, 6.0, is required. In addition to the Java language itself, we need the JDBC libraries so that the developed Java code can interface with PostgreSQL.</p>\n\n<p>We need C to allow us to add capabilities to the built-in SQL available in PostgreSQL. Management has decided to use the free version of Microsoft Visual C++, called the Microsoft Visual C++ 2008 Express Edition. It has a C compiler, a powerful linker and appears to be the best documented of the available free C compilers for Windows. Its for-sale cousin, the C/C++ environment in Microsoft's .NET Framework, has a huge user base, so there's vast material about it on the Web and elsewhere; as figuring out the right compiler and linker switches could be tricky, having good documentation for the environment and language is likely to be very helpful.</p>\n\n<p>We install Tomcat, a service that handles dynamic web content and servlets, features we will need to deploy FabFlixs.</p>\n\n<p>We also install pgAdmin, which provides a graphical interface to PostgreSQL. This tool is easier to use for some tasks than psql, the command-line interface to postgreSQL.</p>\n\n<p>Management has okayed using any environemnt (Mac, Windwos, Linux, Windows Vista) for developing any aspect of FabFlixs that can be ported to Windows without change.</p>\n\n<p>In developing FabFlixs, you may use any software tools to which you have legitimate access. In particular, consider using an integrated development environment (such as <a href=\"http://www.eclipse.org/downloads/\">Eclipse</a>\nor&nbsp;<a href=\"http://download.netbeans.org/netbeans/6.1/final/\">Netbeans</a>); the latter is also available in a package with Java from java.sun.com.</p>\n\n\n\n<div class=\"section\">\n<hr>\n<h3>References</h3>\n</div>\n<ul>\n\t<li><a href=\"http://www.postgresql.org/docs/8.3/interactive/index.html\">PostgreSQL 8.3.7 Manual</a>\n\t<li><a href=\"http://www.postgresql.org/docs/8.3/interactive/app-psql.html\">psql 8.3.7 Documentation</a>\n\t<li><a href=\"http://www.pgadmin.org/docs/1.8/index.html\">pgAdmin Documentation</a>\n\t<li><a href = \"http://www.microsoft.com/windowsxp/using/mobility/getstarted/remoteintro.mspx\">Get started using Remote Desktop with Windows XP Professional</a></li>\n</ul>\n\n<div class=\"section\">\n<hr>\n<h3>Notes</h3>\n</div>\n\n<p>If you want to use a non-Windows machine (e.g., a Mac, a computer running Linux) for development, that's fine&#151;but your installation procedures will be different than those given here. Limits on course resources prevent us from supporting multiple environments. We'll help you as we can with installs on non-Windows platforms, but we cannot be responsible for any substantial research or debugging that may be required to get such a system to work correctly.</p>\n\n<p>If using a Linux or Mac OS X machine, consider obtaining a Windows emulator for your operating system (such as <a href=\"http://www.vmware.com/products/fusion/\">VMware Fusion</a> or <a href=\"http://www.virtualbox.org/\">VirtualBox</a>; the latter is open source and thus free). These virtualization programs allow Linux and Mac O/S computers to run Windows. Install the emulator, then the Windows O/S; you can then install the software suite for FabFlixs development, as described here for Windows, within that environment.</p>\n\n<p>These installations do not all need to be done in one sitting; a convenient place to break is when a package's installation is complete. (Testing of that installation can be done at a later time.) We recommend you install the packages in the order given, as some later ones require the presence of earlier ones (.e.g., Java needs to be installed for Tomcat to be installed).</p>\n\n<div class=\"section\">\n<hr>\n<h3>What to Turn In</h3>\n</div>\n<p>Nothing; the point of this phase is to set up tools so you are ready to undertake the FabFlixs phases that follow.</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Installing Java</h3>\n</div>\n\n<p>You will need Java on your machine; we <i>strongly</i> recommend getting the latest version, Java 6.0 (also known as Java 1.6.0) update 13.  If you do not already have it installed on your machine, or you want to update from an older version:\n<ol>\n<li> <p>Go to <font class = \"codeFaceSmall\"><a href = \"http://java.sun.com/javase/downloads/index.jsp\">http://java.sun.com/javase/downloads/index.jsp</a></font>.</p> \n<li> <p>Choose either the stand-alone JDK 6 Update 13 or that JDK bundled with the NetBeans development environment (don't choose the JRE--that does not have the compiler).</p>\n<li> <p>For <font class = \"codefacesmall\">Platform</font>, choose <font class = \"codefacesmall\">Windows</font>; click in the box to agree to the license agreement; click on <font class = \"codefacesmall\">Continue</font>.</p>\n<li> <p>Click on the file name (<font class = \"codefacesmall\">jdk-6u13-windows-i586-p.exe</font>)</p>\n<li><p>Click <font class = \"codefacesmall\">Run</font> on the pop-up window that appears  to begin downloading. The download typically takes several minutes.</p>\n<li><p>If a security window appears, click <font class = \"codefacesmall\">Run</font>.</p>\n<li> <p>Next, the Java license will display; click <font class = \"codeFaceSmall\">Accept</font>.</p>\n<li> <p>Accept the default for the direftory in which to install Java and the setups for the various components presented to you (these will differ depending on whether you are downloading just the JDK or both the JDK and NetBeans); click <font> each time you are given a screen with that option. \n<li><p>Java may warn you at some point that installation cannot proceed unless an application or two are quit. (This typiically occurs if your browser is still open.) If this warning appears, cllick the box next to <font class = \"codefacesmall\">Quit the applications listed..</font> and then click <font class = \"codefacesmall\">Retry</font>.</p> It can take some time for installation to complete.</p>\n<li> <p>Click <font class = \"codeFaceSmall\">Finish</font>.</p>\n<li><p>Your Web brower may now open to Java's regiatration page. Register if you wish; registrationis not required.</p>\n<li><p>Right-click on <font class = \"codeFaceSmall\">Start->My Computer</font>; choose <font class = \"codeFaceSmall\">Properties</font>. Click the <font class = \"codeFaceSmall\">Advanced</font> tab.\nClick <font class = \"codeFaceSmall\">Environment Variables</font>. Under <font class = \"codeFaceSmall\">System Variables</font>, find the PATH variable and <font class = \"codeFaceSmall\">Edit</font> it; add this to the end of the<font class = \"codeFaceSmall\"> Variable Value:</font></p>\n\n<center><tt>;C:\\jdk1.6.0_13\\bin</tt></center>\n\n<p>(If you had a previous version of Java installed on this machine, modify the existing jdk path to be 6.0_13)</p>\n<p>Click <font class = \"codefacesmall\">OK</font>.</p>\n<p>Then find the CLASSPATH variable. If it doesn't exist (if you've never used your system to develop Java code, it probably won't), click the <font class = \"codeFaceSmall\">New...</font> button. For <font class = \"codeFaceSmall\">Variable Name</font> enter <font class = \"codeFaceSmall\">CLASSPATH</font>; for <font class = \"codeFaceSmall\">Variable Value</font> enter </p>\n\n<center><tt>.;C:\\jdk1.6.0_13\\lib.</tt></center>\n\n<p>or add that string onto the end of the existing CLASSPATH.</p>\n<p>(Again, if you had a previous version of Java installed on this machine, modify the existing jdk path to be 6.0_13)</p>\n<li><p>Click <font class = \"codeFaceSmall\">OK</font>; click <font class = \"codeFaceSmall\">OK</font> again; click <font class = \"codeFaceSmall\">OK</font> again!</p>\n</ol>\n<p>Java should now be ready to use. To check that the CLASSPATH and PATH variables are properly set, open a command window and enter <font class = \"codeFaceSmall\">javac -version</font>. If the version prints, the PATH is working; if you get the message <font class = \"codeFaceSmall\">'javac' is not recognized as an internal or external command, operable program or batch file</font>, either the PATH is incorrect, or you did not start with a fresh command line window after you changed the PATH command. When trying to run a java program, if you get a <font class = \"codeFaceSmall\">ClassNotFoundException</font> exception, check the CLASSPATH variable.</p>\n<p>Once you are sure Java is working, you can (but do have have to) delete any old versions of Java from your machine.</p>\n\n\n\n<div class=\"section\">\n<hr>\n<h3>Installing PostgresSQL, psql and pgAdmin</h3>\n</div>\n\n<h4>About pgInstaller, psql and pgAdmin</h4>\n\n<p>pgInstaller (PostgresSQL Installer) installs postgesSQL, psql, pgAdmin and related tools and libraries. EnterpriseDB has provided a \"one click installer\" that downloads and installs this software with minimal additional setup.</p>\n\n<p> psql is a command-line tool for developing and administering PostgreSQL databases; it's distributed as part of the PostgreSQL software system. pgAdmin is a tool that allows for the same sorts of interactions as psql but via a graphical user interface. Typically, it's easier in psql to execute simple, common commands (for example, for ones where you've memorized the syntax) and to run lengthy or to-be-used-many-times SQL scripts. pgAdmin is typically the better tool for complicated one-time actions. Become familiar with both; use whichever one (or others, for that matter) you prefer. Note that sometimes the FabFlixs requirements will mandate that certain work (e.g., a script) is to be processed by a specific tool (e.g., psql); be sure to meet those requirements.</p>\n\n\n<h4>Installation</h4>\n\n<li><p>Go to <a href=\"http://www.enterprisedb.com/products/pgdownload.do#windows\"> the PosgreSQL 8.3 one-click download page</a>. Click on the <font class = \"codefacesmall\">Windows</font> button; in the pop-up window, click <font class = \"codefacesmall\">Run</font>; the installation file will download. It can take several minutes for the download to complete.</p>\n\n<ul>\n<li><p>In the pop-up window that (finally) appears, click <font class = \"codefacesmall\">Run</font>; after a bit, the Setup window will appear. Click <font class = \"codefacesmall\">Next</font>.</p>\n\n<li><p>Accept the default installation directory by clicking <font class = \"codefacesmall\">Next</font>.</p>\n\n<li><p>Accept the default data directory by clicking <font class = \"codefacesmall\">Next</font>.</p>\n\n<p>PostgreSQL runs as a service; think of it as a specialized server that handles all postgreSQL work, one that just happens to be hosted on your machine (rather than the usual sitation of a server being on a remote computer). In Windows, a service is run from a specified account. The next window sets up this serice acount, and asks yuo for a password for it. If you have had postgres on this machine before, give it the password of the existing account....if you do not remember it, you will have to delete the exisiting service account: <font class = \"codefacesmall\">Start->Control Panels->Administrative Tools->Computer Managment</font>; expand<font class = \"codefacesmall\"> Local Users and Groups</font>; click on <font class = \"codefacesmall\">Users</font>; click on <font class = \"codefacesmall\">postgres</font>; click the red X to delete ithe postgres user; confirm the delete; exit. </p>\n\n<li><p>In the next window, supply the postgres service password and retype it to verify it; click <font class = \"codefacesmall\">Next</font>.</p>\n\n<li><p>In the next window, <i>leave the port number as is</i>; this is quite imporant. click <font class = \"codefacesmall\">Next</font>.</p>\n\n<li><p>In the next window, leave the locale as is; click <font class = \"codefacesmall\">Next</font>.</p>\n\n<li><p>Click <font class = \"codefacesmall\">Next</font> to begin installation.</p>\n</ul>\n\n<p>The installation will now occur; it may take a few minutes. When it's done, a screen appears saying installation is complete. </p>\n\n<p>If that this point you wish to continue with installing JDBC, leave <font class = \"codefacesmall\">Launch Stack Builder at exit</font> checked; if not, uncheck that box. </p>\n\n<p>Click <font class = \"codefacesmall\">finish</font> to leave pgInstaller.</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Installing JDBC</h3>\n</div>\n\n<p>Fabflixs will be using Java programs (among others) to communicate with the FabFlixs PostgreSQL database. JDBC is \"community supported\" software that enables communication between Java and PostgreSQL  databases; the pgIntaller download includes a tool called Stack Builder that makes it easy to obtains JDBC drivers (and other tools) from the Web.\n\n<p>If you left pgInstaller with <font class = \"codefacesmall\">Launch Stack Builder at exit</font> checked, you will now see a welcome screen for Stack Builder. If you exited the installer without launching Stack Builder, go to <font class = \"codefacesmall\">Start -> All Programs -> postgreSQL 8.3 -> Application Stack Builder</font> to get to the weclome screen.</p>\n\n<ul>\n<li><p>From the pull-down menu, choose the postgres server; click <font class = \"codefacesmall\">Next</font>.\n\n<li><p>From the applications list that appears, click the \"+\" next to <font class = \"codefacesmall\">Database Drivers</font>, then check the box next to the psqlJDBC selection. Click <font class = \"codefacesmall\">Next</font>.</p></li>\n\n<li><p>Next appears a list of mirror sites from which you can download the drivers; click on the \"+\" next to <font class = \"codefacesmall\">USA</font> and then click on a server. Click <font class = \"codefacesmall\">Next</font>.</p></li>\n</ul>\n\n<p>A confirmation screen will appear. Click <font class = \"codefacesmall\">Next</font>. (There's no need to change the download directory.) A progress box will pop up anddownload will commence (it may happen very quickly, or take a few seconds, depnding on the speed of the download server). When it's done, a confirmation box will appear; click <font class = \"codefacesmall\">Next</font> to launch a wizard that will guide you through the JDBC installation..</p>\n\n<ul>\n<li><p>When the wizard's opening screen appears, click <font class = \"codefacesmall\">Next</font>. On the next screen, check the box accepting the license agreement, and click <font class = \"codefacesmall\">Next</font></p></li>\n\n<li><p>The desintation folder selection window will appear; leave the directory as given, and click <font class = \"codefacesmall\">Next</font></p></li>\n\n<li><p>A new screen appears; click <font class = \"codefacesmall\">Install</font>.</p></li>\n\n<li><p>A confirmation screen appears; click <font class = \"codefacesmall\">Finish</font>.</p></li>\n\n<li><p>Click the <font class = \"codefacesmall\">Finish</font> button on the Stack Builder screen to leave Stack Builder.</p></li>\n</ul>\n\n<p>The JDBC drivers are now installed. There are several; the one compatible with Java 6 and Tomcat is <font class = \"codefacesmall\">postgresql-8.3-603.jdbc3.jar</font>. By the way, a \"jar\" file is just a compressed archive of Java class files, quite similar to a ZIP file. Java uncompresses jars \"on the fly\" as a program runs.</p>\n\n<p>You can now add the appropriate JDBC to your CLASSPATH environment variable if you want it available every time you compile a Java program-- the string is</p> \n\n<center><font class = \"codeFaceSmall\">;C:\\<i>yourFolderName</i>\\postgresql-8.3-603.jdbc3.jar</font></center>\n\n<p>Note the \";\", which separates this CLASSPATH entry from the previous one.</p>\n\n<p> Instead, you can place the driver into the CLASSPATH switch on the <font class = \"codeFaceSmall\">javac</font> command line when you need it (which is whenever you run a java class that uses JDBC commands); for example, if the program to run is PostgresJDBC then the command line is</p>\n\n<center><font class = \"codeFaceSmall\">java -classpath .\\;C:\\<i>yourFolderName</i>\\postgresql-8.3-603.jdbc3.jar</font></center>\n\n<p>Note the need for including <font class = \"codeFaceSmall\">.\\</font>, the current directory, in the classpath. It is not included automatically, as the classpath switch completely overrides any default or classpath environment variable settings.</p>\n\n<p>If you want to add something to your existing classpath for just this compile, start the <font class = \"codeFaceSmall\">-cp</font> parameter with <font class = \"codeFaceSmall\">%CLASSPATH%</font>, and since the existing classpath may have spaces in its file names, enclose the parameter in quotes; e.g.,</p>\n\n<center><font class = \"codeFaceSmall\">java -classpath \"%CLASSPATH%;C:\\postgresql-8.3-603.jdbc3.jar\" PostgresJDBC</font></center>\n\n<p>If you are using a development IDE, you may need to \"tell it\" about the JDBC jar file (of course, how that is done depends on the IDE you are using).</p>\n\n<div class=\"section\">\n<hr><h3>Installing Microsoft Visual C++ 2008 Express Edition</h3>\n</div>\n\n<p>In Phase 3, you will add C functions to the FabFlixs database to give it functionality that SQL and built-in functions do not provide. PostgreSQL expects these added functions to be in a dynamic link library (\"DLL\") file. To make a DLL from C source code, one needs a C compiler and a linker that can make DLLs.</p>\n\n<p>For the reasons given above, management has chosen Microsoft Visual C++ 2008 Express Edition for C development. However, if you already have C/C++ from .NET installed on your machine, you do not need to install C++ Express; you should be able to make DLLs with .NET (following the same procedure we discuss for Express in Phase 4). And you can use a different C environment, provided it produces DLLs that are PostgreSQL compatible.</p>\n\n<p>To install Microsoft Visual C++ 2008 Express Edition (with service pack 1):</p>\n\n<ul>\n<li><p>Go to <a href= \"http://www.microsoft.com/express/download/\">www.microsoft.com/express/download/</a>.</p></li>\n\n<li><p>In the Visual C++ box, click on <font class = \"codefacesmall\">Download</font>.</p></li>\n\n<li><p>The download window will appear; click <font class = \"codefacesmall\">Run</font>.</p>\n\n<li><p>After a couple of minutes, you will likely see a security warning window; click on <font class = \"codefacesmall\">Run</font>. (If such a window does not appear, just skip this step.)</p>\n\n<li><p>After a few moments of activity, the <font class = \"codefacesmall\">Welcome to Setup</font> window appears; click <font class = \"codefacesmall\">Next</font>.</p></li>\n\n<li><p>On the License Terms window, click the circle next to <font class = \"codefacesmall\">I have read and accept the license terms</font>; click <font class = \"codefacesmall\">Next</font>.</p></li>\n\n<li><p>On the Install Options window, you can leave the two boxes checked without harm, but we will not need these products, so you can save installation time and disk space by \"unchecking\" the two boxes. Click <font class = \"codefacesmall\">Next</font>.</p></li>\n\n<li><p>The Destination Folder window appears; leave the settings as they are and click <font class = \"codefacesmall\">Install</font>.</p></li>\n\n<li><p>Installation will now begin. It can take <i>several</i> minutes for it to complete. When it finishes, the Setup complete window will appear; click <font class = \"codefacesmall\">Exit</font>.</p></li>\n</ul>\n\n<div class=\"section\">\n<hr><h3>Modifying the PostgreSQL libraries for a Windows environment</h3>\n</div>\n\n<p>The PostgreSQL-provided C include files are when writing C functions to be added to postgreSQL databases. They were written for a Unix environment. To work correctly with Windows, we need to  provide the file <font class = \"codefacesmall\">libint.h</font>. The contents of <font class = \"codefacesmall\">libint.h</font> are never used(!) but another include file expects it to be present, so it must be!). We also need to comment out some lines of <font class = \"codefacesmall\">pg_config_os.h</font> and <font class = \"codefacesmall\">elog.h</font> that redefine variables that are already defined in Windows-based C libraries (failing to do so results in a doubly-defined variables that cause compilation errors).</p>\n\n<p>To fix these problems:</p>\n\n<ul>\n<li><p>Place <a href=\"http://www.ics.uci.edu/~jacobson/cs122b/Project/libintl.h\">libintl.h</a> into your computer's <font class = \"codefacesmall\"><location of postgresql 8.3>\\include\\server\\port\\win32</font> folder; if your postgreSQL installation is in the default location, that would be the folder <font class = \"codefacesmall\">\\Program Files\\PostgreSQL\\8.3\\include\\server\\port\\win32</font>.</p></div>\n\n<li><p>Replace the file <font class = \"codefacesmall\"><location of postgresql 8.3>\\include\\server\\pg_config_os.h</font> with the version of <font class = \"codefacesmall\">pg_config_os.h</font> stored <a href=\"http://www.ics.uci.edu/~jacobson/cs122b/Project/pg_config_os.h\">here</a>.</p>\n<li><p>Replace the file <font class = \"codefacesmall\"><location of postgresql 8.3>\\include\\server\\utils\\elog.h</font> with the version of <font class = \"codefacesmall\">elog.h</font> stored <a href=\"http://www.ics.uci.edu/~jacobson/cs122b/Project/elog.h\">here</a>.</p>\n</ul>\n\n\n\n<div class=\"section\">\n<hr>\n<h3>Enabling pgAdmin and other applications to communicate with PostgreSQL</h3>\n</div>\n\n<p>Since the PostgreSQL server resides on the same computer we are using, that make this computer a \"local host\" of that server. By definition, the local host server has IP address 127.0.0.1, with domain name <font class = \"codeFaceSmall\">localhost</font>. By convention, port 5432 is used for the localhost-PostgreSQL communications link. PostgreSQL comes preconfigured to allow communication to localhost on port 5432. The installer sets up <i>two</i> servers: one on 5432 that is accessbile by a superuser (to which the password is not provided!) and another that is set to the user \"postrgres,\" has superuser privileges (which we need) and has the password that you provided during installation. Since Tomcat and JDBC expect communication to happen on port 5432, we need to change the port on the server with user \"postgres.\" (There is a way to get JDBC to talk to a database on ports other than 5432, and there is <i>supposed</i> to be a way to do so for Tomcat. We were able to get the former to work but not the latter, so we're sticking with 5432.) Since we won't be using default database, we won't have a communications conflict between the two databases.\n\nThe easiest way to change the maintenance database to port 5432 is to\n\n<ul> \n\t<li><p>Launch pgAdmin:  <font class = \"codefacesmall\">Start -> All Programs -> PostgreSQL 8.3 -> pgAdmin III</font>; dismiss the tip.</p></li>\n\t<li><p>Right-click on <font class = \"codefacesmall\">PostgreSQL 8.3 (localhost:5433)</font> and select <font class = \"codeFaceSmall\">Properties</font>. Enter <font class = \"codefacesmall\">5432</font> for the <font class = \"codefacesmall\">Port</font> and click on <font class = \"codefacesmall\">OK.</font></li>\n\t<li><p>Read the note; click on <font class = \"codefacesmall\">OK.</font>.</p></li>\n\t<li>Check to ensure that the this database is now set to port 5432 (Look in the object browser box).</li>\n</ul>\n\n<p>Postgres' default behavior is to \"listen\" for all addresses, but to then restrict who may access postgres; the default is to set the <font class = \"codefacesmall\">listen_addresses</font> parameter in the postgresql.conf configuration file to \"*\" and to allow access only from programs running on the local machine, using password authentication; that is, setting the host line for IPv4 (the current Internet communication address scheme) in the pg_hba.conf file to</p>\n\n<font class = \"codeFaceSmall\"><div align=\"center\">host all all 127.0.0.1/32 md5 </div></font>\n\n<p>This is the standard configuration for your projects, as it restricts testing to your machine, and enforces password checks, which is part of the security Fabflixs (eventually) implements.</p>\n<ul>\n<p><li>Do look over these two files' contents so you get an idea of what they do; they are both well-commented.</p></li>\n</ul>\n\n\n<h4>Enabling remote computers to communicate with the postgreSQL server</h4>\n\n<p>If you want PostgreSQL to accept connections from other computers (for example, if you are doing a demo for us on one machine, but your database exists on another, say a computer at home), you need to change  <font class = \"codefacesmall\">pg_hba.conf</font> to specify which IP addresses are allowed to communicate with PostgreSQL.</p>\n\n<p>To enable \"outside communication,\"</p>\n\n<ul>\n<li> <p>Open <font class = \"codefacesmall\">postgresql.conf</font> in an editor; you'll find it in  <font class = \"codefacesmall\">\\Program Files\\PostgreSQL\\8.3\\data\\.</font>.</p>\n\n<p>To restrict which other IP addresses can access the database, you modify appropriately the IPv4 host command line (it's near the end of the file); some common configurations are listed below:</p>\n</ul>\n\n<ul>\n<li><p><i><b>To allow a particular IP address to have remote access to the database on this machine.</b></i> If the remote address is, say, 128.195.30.118, then this line will give that IP address complete access without any password or other checking: </p>\n\n<div align=\"center\"><font class = \"codeFaceSmall\">host all all 128.195.30.118/32 trust</font></div>\n\n<p>If you want to allow access, but only when the right password is given, make the line</p>\n\n<div align=\"center\"><font class = \"codeFaceSmall\">host all all 128.195.30.118/32 md5</font></div>\n\n<li><p><b><i>To allow access to all clients in a particular subnet:</i></b> Suppose the subnet is 128.195.30.0 (that is, machines with IP addresses of the form 128.195.30.*) and you want to give them access using password authentication:</p>\n\n<font class = \"codeFaceSmall\"><div align=\"center\">host all all 128.195.30.0/24 md5 </div></font>\n</ul>\n\n<p>Of course, save the file and exit when you're done.</p>\n\n<p>For these changes to take effect, you have to shut down the postgreSQL server (if it is running) and start it up again. If the server was running:</p>\n\n\n<ul>\n<li><p>Go to <font class = \"codefacesmall\">Start -> All Programs -> PostgreSQL 8.3 -> Stop server</font>. A command line box will appear with a message that the server is shutting down; after a few seconds, the server shuts down; press <font class = \"codefacesmall\">Return</font> to exit. </p></li>\n\n<li><p>Start up the server with <font class = \"codefacesmall\">Start -> All Programs -> PostgreSQL 8.3 -> Start Server</font>. A command line box will appear with a message that the server is starting; it will quickly tell you it was started. Press <font class = \"codefacesmall\">Return</font> to exit.</p></li>\n</ul>\n\n<p>Note the use of a fixed IP address: A remote machine connecting via an ISP that assigns a different IP address each time a connection is made will likely not get the IP address for which PostgreSQL allows access.</p>\n\n<p>If your machine has a firewall, the firewall may need to be configured to let through the various addresses that you have allowed to communicate with PostgreSQL.</p>\n\n<p>If you have set up your accesses so that a password is required, when you run psql on a chosen database with a particular user id (i.e., use the -U switch), you will be asked for the that user's password.</p>\n\n<p>If you want to do something fancier, you will need some understanding of Internet networking and its jargon (or need to ask someone who has such knowledge) to configure things properly. You can also get more information from the comments in the file, from the PostgreSQL documentation and from pgAdmin's Help function.</p>\n\n\n<h4>Creating an end user</h4>\n\n<p>To test that the postgreSQL server is properly installed and configured, and that Java and JDBC are properly installed,  we create an end user, a tiny test database and  a small Java program that uses JBDC to \"talk\" to the database. We show how to communicate with the database both via psql and pgAdmin, to introduce you to each approach. (Read the documentation for these tools to learn more.) We start with creating the end user. (Since a superuser can do \"anything,\" if we used it to connect to the database, we would not spot problems a more \"normal\" user would have. So, we create a more \"normal\" user for this test.)</p>\n\n<p>To use postgreSQL or any of the tools the communicate with it (e.g., psql and pgAdmin), the postgreSQL server must be running; so, if it is not, start it up: <font class = \"codefacesmall\">Start -> All Programs -> PostgreSQL 8.3 -> Start Server</font>. A command line box will appear with a message that the server is starting; it will quickly tell you it was started. Press <font class = \"codefacesmall\">Return</font> to exit.</p>\n\n<p><i>Using psql</i>:</p>\n\n<p>Run psql:  <font class = \"codefacesmall\">Start -> All Programs -> PostgreSQL 8.3 -> SQL Shell (psql)</font>. You will be asked to specify the server to use; accept the default (localhost). (You accept defaults by just hitting <font class = \"codefacesmall\">Return</font>).Then you'll be asked to specify the database to emply; accept the default, postgres. Then you're asked for the port; again, accept the default, port 5432. Next, your asked for the user; accept postgres, the name of the default superuser. Finally, you'll be asked for the password for the postgres user; supply the one you specified during installation of postgreSQL. If all has gone well, you'll see the psql welcome message.</p>\n\n<p>At the prompt, enter the text in italics given below. Text not in italics is text PostgreSQL prints out; text in square brackets is a description of PostgreSQL-printed text (not the actual text itself). </p>\n<ul>\n<font class = \"codeFaceSmall\">\n\t\t<li> # <i>create user testuser with password 'testpass' createdb;</i>\n\t\t<br> CREATE ROLE\n\t\t<li> # <i>\\q</i>\n</font>\n</ul>\n<p>Press any key to exit the window.</p>\n\n<p><i>Using pgAdmin:</i></p>\n<ul> \n\t<li><p>Launch pgAdmin:  <font class = \"codefacesmall\">Start -> All Programs -> PostgreSQL 8.3 -> pgAdmin III</font>; dismiss the hint.</p></li>\n\t<li><p>Right-click on <font class = \"codefacesmall\">PostgreSQL 8.3 (localhost:5433)</font> and select <font class = \"codeFaceSmall\">Connect</font>.</p>You'll be asked for the  password for the postgres user; enter the password you chose when isntalling postgres and click on <font class = \"codefacesmall\">OK</font></li>\n\t<li><p>Click on the \"+\" next to the server; in the list of items that appears, right-click on <font class = \"codeFaceSmall\">Login Roles</font> and select <font class = \"codeFaceSmall\">New Login Role...</font></p></li>\n\t<li><p>For <font class = \"codeFaceSmall\">Role name</font>, enter <font class = \"codeFaceSmall\">testuser</font>; for <font class = \"codeFaceSmall\">Password</font> and <font class = \"codeFaceSmall\">Password (again)</font>, enter <font class = \"codeFaceSmall\">testpass</font>; select <font class = \"codeFaceSmall\">Can create database objects</font>; click on <font class = \"codeFaceSmall\">OK</font></p></li>\n\t<li><p>Click on the refresh tool (the red and green arrows icon, second from the left at the top of the screen) to ensure <font class = \"codeFaceSmall\">testuser</font> appears in upper right window.</p></li>\n\t\t<p>Note that, for entries you make in dialog boxes, pgAdmin displays the SQL it generates from those entries in the pane with the SQL tab. You can look at the SQL at any time; it's a handy way to double-check your dialog box entries.</p>\n</ul>\n</ol>\n\n<h4>Building the test database</h4>\n\n<p>Now you create a movie database with one table, stars, that has just one entry (our Governator)...just enough to test a JDBC connection. When creating fields (columns) of the stars table below, create them in the order given; a different order will cause errors in the JBDC program: JDBC uses positional indicators to reference columns, so if you change the entry order of the columns, the program will (try to) access incorrect fields.</p>\n\n<p><i>Using psql</i>:</p>\n\n\n<p>\tTo enter PostgreSQL as user 'testuser', launch SQL Shell (psql) as before, but now, for user, enter <font class = \"codefacesmall\">testuser</font>, and for the password, <font class = \"codefacesmall\">testpass</font>.\n\n<li><p>Now create a database with a small table with one entry.  Be sure to  connect to the moviedb (<font class = \"codeFaceSmall\">\\c moviedb</font> below) or the tables you create will not be associated with the movie database, causing problems down the road.</p>\n\n<font class = \"codeFaceSmall\">\n\t\t<li> postgres=> <i>create database moviedb;</i>\n\t\t<br> CREATE DATABASE\n\t\t<li> postgres=> <i>\\c moviedb;</i>\n\t\t<br> You are now connected to database \"moviedb\".\n\t\t<li> moviedb=> <i> CREATE TABLE stars(id INT NOT NULL PRIMARY KEY,<br>\n\tfirst_name VARCHAR(50) NOT NULL,<br>\n\tlast_name VARCHAR(50) NOT NULL,<br>\n\tdob DATE, <br>\n\tphoto_url VARCHAR(200)); </i>\n\t<br>NOTICE: CREATE TABLE / PRIMARY KEY will create implicit index \"stars_pkey\" for table \"stars\"\n\t<br>CREATE TABLE\n\t\t<li> moviedb=><i>INSERT INTO stars VALUES(755011,\n\t'Arnold', \n\t'Schwarzeneggar', \n\t'07/30/1947', \n\t'http://www.imdb.com/gallery/granitz/2028/Events/2028/ArnoldSchw_Grani_1252920_400.jpg?path=pgallery&path_key=Schwarzenegger,%20Arnold');</i>\n\t<br>INSERT <<i>a number</i>> 1\n\t\t<li> moviedb=><i>\\q</i>\n</font>\n</ul>\n\t\n\n<p><i>Using pgAdmin:</i></p>\n<ul> \n\t<li><p>Since pgAdmin is an administator's tool, you have to connect to the database as a superuser, so double-click on <font class = \"codefacesmall\">PostgreSQL 8.3 (localhost:5433)</font> and enter your postgres user password.</p></li>\n\t<li><p>Click on the \"+\" next to <font class = \"codefacesmall\">PostgreSQL 8.3 (localhost:5433)</font>, to make <font class = \"codeFaceSmall\">Databases</font> visible. Right-click on <font class = \"codefacesmall\">Databases</font> and select <font class = \"codefacesmall\">New Database...</font> .</p></li>\n\t<li><p>For <font class = \"codeFaceSmall\">Name</font>, enter <font class = \"codeFaceSmall\">moviedb</font>; click <font class = \"codeFaceSmall\">OK</font>.</p>\n\t\n\t<li><p>Go to <font class = \"codeFaceSmall\">Servers: <font class = \"codefacesmall\">PostgreSQL 8.3 (localhost:5433)</font>:Databases:moviedb:Schemas:public:Tables</font> (again expanding the tree by clicking on \"+\" as necessary to make <font class = \"codeFaceSmall\">Tables</font> visible). Right click and select  <font class = \"codeFaceSmall\">New Table...</font></p></li>\n\t<li><p>In the <font class = \"codeFaceSmall\">Name</font> box, enter <font class = \"codeFaceSmall\">stars</font>; for <font class = \"codeFaceSmall\">Owner</font>, select <font class = \"codeFaceSmall\">testuser</font></p></li>\n\t\t<li><p>Click on the <font class = \"codeFaceSmall\">Columns</font> tab, then <font class = \"codeFaceSmall\">click Add</font>, to call up the <font class = \"codeFaceSmall\">New Column...</font> dialog box. For name, enter<font class = \"codeFaceSmall\"> id</font>; for <font class = \"codeFaceSmall\">Data type</font>, select <font class = \"codeFaceSmall\">integer</font>, and click in the <font class = \"codeFaceSmall\">Not Null</font> box to turn on that property. Click <font class = \"codeFaceSmall\">OK</font> to save this column.</p></li>\n\t\t<li><p>For last name, click <font class = \"codeFaceSmall\">Add</font> again, and enter <font class = \"codeFaceSmall\">last_name</font> for the <font class = \"codeFaceSmall\">Name</font> and <font class = \"codeFaceSmall\">character varying</font> for the <font class = \"codeFaceSmall\">Data type</font>; enter <font class = \"codeFaceSmall\">50</font> for <font class = \"codeFaceSmall\">Length</font>, and check <font class = \"codeFaceSmall\">Not Null</font>; click <font class = \"codeFaceSmall\">OK</font> to save it.</p></li>\n\t\t<li><p>To make a first name column, execute the steps just above, but with a <font class = \"codeFaceSmall\">Name</font> of <font class = \"codeFaceSmall\">first_name</font>.</p></li>\n\t<li><p>For date of birth, add a column called <font class = \"codeFaceSmall\">dob</font>, with a <font class = \"codeFaceSmall\">Data</font> type of <font class = \"codeFaceSmall\">date</font>.</p></li>\n\t<li><p>For the photo URL, add a column called <font class = \"codeFaceSmall\">photo_url</font> of varchar (varying character) of length 200.</p></li>\n\t<li><p>id needs to be the primary key, so click on the <font class = \"codeFaceSmall\">Contraints</font> tab; make sure <font class = \"codeFaceSmall\">Primary Key</font> is selected (bottom left of the window). Click <font class = \"codeFaceSmall\">Add</font>, to call up the <font class = \"codeFaceSmall\">New Primary Key...</font> dialog box. For <font class = \"codeFaceSmall\">name</font>, enter<font class = \"codeFaceSmall\"> id</font>. Click on the <font class = \"codeFaceSmall\">Columns</font> tab; select <font class = \"codeFaceSmall\">id</font> from the drop down box at the lower left of the window. Click <font class = \"codeFaceSmall\">Add</font> to save the key.</p></li>\n\t<li><p>The table is now set up; click <font class = \"codeFaceSmall\">OK</font> to leave.</p></li>\n</ul>\n\t\n<p>There are a few ways to add Arnold's information into the table; here's a straight-forward one:</p>\n\n<ul>\n\t<li><p>Click the \"+\" next to <font class = \"codefacesmall\">Tables</font>, if necessary, to make the <font class = \"codefacesmall\">stars</font> table visible. Right click on the <font class = \"codeFaceSmall\">stars</font> table; choose <font class = \"codeFaceSmall\">Scripts</font>, then <font class = \"codeFaceSmall\">INSERT script</font>.</p></li>\n\t<li><p>In the <font class = \"codeFaceSmall\">VALUES</font> clause that appears in the top left window, select each question mark (?) in turn and enter these five values, one for each question mark: <font class = \"codeFaceSmall\">755011,  'Schwarzeneggar', 'Arnold', '07/30/1947', 'http://www.imdb.com/gallery/granitz/2028/Events/2028/ArnoldSchw_Grani_1252920_400.jpg?path=pgallery&path_key=Schwarzenegger,%20Arnold'</font> .</p></li>\n\t<li><p>Select <font class = \"codeFaceSmall\">Execute</font> from the <font class = \"codeFaceSmall\">Query</font> menu (or hit the F5 key) to place the record into the table.</p></li>\n\t<li><p>Close the window (you can save the query or not as you like). Exit pgAdmin.</p></li>\n</ul>\n\n<h4>Implementing the test Java program</h4>\n\n<p>Now enter and compile the following java program; it uses JDBC to communicate with your test database and retrieve some basic information about it. Study it to get a feel for how JBDC works. (This is just a test program; a production program would clean some things up, such as not throwing an <font class = \"codeFaceSmall\">Exception</font> out of <font class = \"codeFaceSmall\">main()</font>!)</p>\n<pre>\nimport java.sql.*;\n\npublic class PostgresJDBC\n{\n \tpublic static void main(String[] arg) throws Exception\n\t{\n\t\tClass.forName(\"org.postgresql.Driver\").newInstance();\n \t\tConnection connection = DriverManager.getConnection(\n \t\t\"jdbc:postgresql://localhost/moviedb\", \"testuser\", \"testpass\");\n \n \t\tStatement select = connection.createStatement();\n\t\tResultSet result = select.executeQuery(\"Select * from stars\");\n  \t\tSystem.out.println(\"The results of the query:\");\n \t\tResultSetMetaData metadata = result.getMetaData();\n \t\tSystem.out.println(\"There are \" + metadata.getColumnCount() + \" columns\");\n \n \t\tfor (int i = 1; i &lt;= metadata.getColumnCount(); i++)\n \t\t\tSystem.out.println(\"Type of column \" + i +\" is \" + metadata.getColumnTypeName(i));\n\n \t\twhile (result.next())\n \t\t{\n \t\t\tSystem.out.print(\"id = \" + result.getInt(1));\n \t\t\tSystem.out.println(\" Name = \" + result.getString(2));\n \t\t}\n \t\tconnection.close();\n\t}\n}\n</pre>\n\n<p>Replace <font class = \"codeFaceSmall\">localhost</font> with the IP address of the computer you are using, if it is not the same machine on which the database resides.</p>\n<ul>\n\t<li> <p>Now run the program (from the directory in which the class file is stored), making sure <font class = \"codeFaceSmall\">postgresql-8.3-603.jdbc4.jar</font> is in the classpath (using any of the methods discussed above); you should see output describing the structure (metadata) and contents of this test database.</p>\n</ul>\t\n\n<div class=\"section\">\n<hr>\n<h3>Installing and testing Tomcat</h3>\n</div>\n\n<p>To support dynamic content on web pages and Java servlets (extensions of a server's basic services), we use Tomcat, a freeware package form the Apache Software Foundation. (You will be using its capabilities starting in Phase 2.) To install Tomcat</p>\n<ol>\n\t<li> <p>Go to <font class = \"codeFaceSmall\"><a href=\"http://tomcat.apache.org/\">http://tomcat.apache.org</a></font>; read a bit!</p>\n\t<li> <p>Under <font class = \"codeFaceSmall\">Download</font>, click on <font class = \"codeFaceSmall\">Tomcat 6.x</font> (look on the left-hand side of the page).</p>\n\t<li> <p>Under <font class = \"codeFaceSmall\">6.0.18</font>, select <font class = \"codeFaceSmall\">Windows Server Installer</font> under <font class = \"codeFaceSmall\">Binary Distributions</font>, <font class = \"codeFaceSmall\">Core</font>; save the EXE file.</p>\n\t<li> <p>Launch the EXE file you just downloaded.</p>\n\t<li> <p>Read the instructions; click on <font class = \"codeFaceSmall\">Next</font>; read the license and agree.</p>\n\t<li> <p>On this screen, make sure <font class = \"codeFaceSmall\">Tomcat</font> and <font class = \"codeFaceSmall\">Start Menu Items</font> are checked. Leave <font class = \"codeFaceSmall\">Documentation</font> checked if you want the documentation on your drive (it is also available at the Tomcat site); check <font class = \"codeFaceSmall\">Examples</font> if you want some examples of servlets. Click <font class = \"codeFaceSmall\">Next</font>.</p>\n\t<li> <p>Leave the destination folder as is; click <font class = \"codeFaceSmall\">Next</font>.</p>\n\t<li> <p>Leave the port at <font class = \"codeFaceSmall\">8080</font>&#151;this is crucial. Choose an administrator login name and password: <i>do not forget them</i>! Click <font class = \"codeFaceSmall\">Next</font>.</p>\n\t<li> <p>Check that the directory listed is indeed where you have the java virtual machine (<font class = \"codeFaceSmall\">java.exe</font> and its associated files) stored; if you used the default directories for java when installing it above, it is <font class = \"codeFaceSmall\">C:\\Program Files\\Java\\jre1.6.0_07</font>. (Yes, iat the top of Window it says to select a 5.0 path; don't worry, the message is just a bit out of date!) Click <font class = \"codeFaceSmall\">Install</font>.</p>\n\t<li> <p>Wait a few seconds while installation occurs.</p> \n\t<li> <p>Click <i>Finish</i>. A window should appear showing Tomcat starting up; the release notes file should appear in a window. Because Windows uses a different end-of-line marker than Unix, the notes may be quite difficult to read; don't wory, just close the window. If you need to read the release notes at some point, you can find them <a href=\"http://apache.oc1.mirrors.redwire.net/tomcat/tomcat-6/v6.0.18/RELEASE-NOTES\">here</a>.</p>\n</ol>\n\n<p>To be sure Tomcat is running, right click on the feather-like icon in the lower right of the Windows toolbar (if you hover over the correct icon, <font class = \"codeFaceSmall\">Apache Tomcat</font> will appear); <font class = \"codeFaceSmall\">Start service</font> should be grayed. To stop Tomcat at any time, right-click on the icon and select <font class = \"codeFaceSmall\">Stop service</font>. You can also start and stop Tomcat on the <font class = \"codeFaceSmall\">General</font> panel of the <font class = \"codeFaceSmall\">Apache Tomcat properties</font> window (double click on the Tomcat icon in the toolbar). </p>\n\n<p>To test that Tomcat is working and communicating with PostgreSQL properly, we've prepared a servlet that performs basically the same tasks as the JDBC program; it queries the test database and returns some structural and content information. To run this program:</p>\n\n<ol> \n<li> <p>Make sure the PostgreSQL database server is running. Be sure communications to the database server have been set up as described in <i>Enabling pgAdmin and other applications to communicate with PostgreSQL</i>, above, before proceeding.</p>\n\n<li><p> Download <font class = \"codeFaceSmall\"><a href = \"http://www.ics.uci.edu/~jacobson/cs122b/Project/TomcatTest.war\">TomcatTest.war</a></font></p> \n\n<p>A WAR file is a \"Web Application Archive.\" It contains a compressed directory of the files needed for a ready-to-run java servlet that Tomcat will launch when you go to the Web page designated in the WAR. (A WAR file must a have certain directory structure and contain appropriate files (with the appropriate contents) for Tomcat to launch the servlet. Details about WAR files will be covered in Phase 2.)</p>\n\t<li> <p>Use a Web browser to go to <font class = \"codeFaceSmall\">http://localhost:8080</font>; this is the web page that lets you access locally (stored on your computer) hosted Web services. After installing Tomcat (which is a Web service), it was set to the Tomcat welcome page; that page should appear.</p>\n\t<li> <p>Click on <font class = \"codeFaceSmall\">Tomcat Manager</font>; enter your admin user login and password (given when you installed Tomcat); click <font class = \"codeFaceSmall\">OK</font>. If your login and password are correct, the Tomcat Web Application Manger page will appear.</p>\n\t<li> <p>Under <font class = \"codeFaceSmall\">War file to deploy</font>, enter in or <font class = \"codeFaceSmall\">Browse</font> to find the location of <font class = \"codeFaceSmall\">TomcatTest.war</font>; then click the <font class = \"codeFaceSmall\">Deploy</font> button. This action decompresses the WAR and places its folders into their required locations. <font class = \"codeFaceSmall\">TomcatTest</font> should now appear in the <font class = \"codeFaceSmall\">Applications list</font>.</p>\n\t<li> <p><font class = \"codeFaceSmall\">Go to http://localhost:8080/TomcatTest/servlet/TomcatTest</font>. Tomcat will run the servlet <font class = \"codeFaceSmall\">TomcatTest</font> and print its output onto the web page. If the output is database information, all is well. If instead you see a message that an <font class = \"codeFaceSmall\">SQLException</font> occurred, check that the PostgreSQL server is running, that it is configured to allow TCP/IP access and that the test database with the correct user name, user password and table structure has been created (see above).</p>\n</ol>\n\n<p>You are now ready to proceed with FabFlixs development!</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Setting Up Windows XP Computers for a Remote Demonstration</h3>\n</div>\n\n<p>If you plan to do your demontrations by connecting an XP computer at a meeting place to a remote XP computer that houses the software to be demonstrated, follow the instructions on the  <a href = \"http://www.microsoft.com/windowsxp/using/mobility/getstarted/remoteintro.mspx\">Get started using Remote Desktop with Windows XP Professional</a> web page. Some additional things to keep in mind:</p>\n\n<ul>\n<li><p>Of course, be sure to leave the remote computer on and connected to the Internet (by whatever means that conputer uses) during the time of the demonstration or, obviously, you will not be able to access it during the demonstration.</p> \n\n<li><p><i>You will need to know the computer's name or its IP address, and the user login and password, if any, for this machine, to be able to connect to it</i>, as described on the above Web page. The name might just be one word, but you may have to provide its entire Internet name if the remote and local computers are not in the same local network. So, if your computer's name is <font class = \"codeFaceSmall\">igor</font>, you might have to say <font class = \"codeFaceSmall\">igor.ics.uci.edu</font> (or whatever) for the local computer to find it.</p>\n\n<li><p>When you are done with the demonstration, instead of logging out, you can click the <font class = \"codeFaceSmall\">X</font> in the bar at the top of the screen; you'll see a message box telling you that you are about to disconnect (but can reconnect later); click on OK. You are now disconnected from the remote machine, but will still be logged on to it.</p>\n</ul>\n\n<p>As previously discussed, it will be up to you to make remote computing work when one or both of the machines are running something other than Windows XP; we can only support XP-to-XP connections.</p>\n\n\n<div class=\"history\">\n<p>Written for ICS185 Spring 2005 by Norman Jacobson, March 2005.\n<br>&nbsp;&nbsp;&nbsp;Some sections adapted from ICS185 Winter 2005 exercises written by Chen Li, and \n<br>&nbsp;&nbsp;&nbsp;sample code and FAQs written by Chen Li and Kirill Petrov.\n<br>Updated for CS122B Spring 2007 by Norman Jacobson, March 2007.\n<br>&nbsp;&nbsp;&nbsp;Some provided information was obtained from the CS122B Winter 2007 'Fabflix: \n<br>&nbsp;&nbsp;&nbsp;Project Setup the development environment' and 'FabFlixs: Project 5' web pages. \n<br>A couple of sections rearranged and text updated to note that a password is needed if a user is invoked \n<br>&nbsp;&nbsp;&nbsp;with md5 access, by Norman Jacobson, April 2007.\n<br>Updated to include discussion of pgAdmin and to remove dcsussion of the Google Web\n<br>&nbsp;&nbsp;&nbsp;by Norman Jacobson, September 2007.\n<br>Added a warning about using older versions of postgresql, by Norman Jacobson, December 2007.\n<br>Revised to reflect use of native Windows postgreSQL 8.3.3, use of pgInstaller, C/C++\n<br>&nbsp;&nbsp;&nbsp;Express and new versions of software and other minor edits, by \n<br>&nbsp;&nbsp;&nbsp;Norman Jacobson, September 2008.\n<br>Minor revisions to reflect postgreSQL 8.3.4 and correct a few typos, by Norman Jacobson, October 2008.\n<br>Minor revision to reflect needed replacing of elog.h to remove a symbol defined elsewhere, by \n<br>&nbsp;&nbsp;&nbsp;Norman Jacobson, December 2008.\n<br>Revised to include information about virtualization of Windows (for Linux and Mac users);\n<br>&nbsp;&nbsp;&nbsp;major revisiions to installation insturctions and other updates to reflect postgreSQL\n<br>&nbsp;&nbsp;&nbsp;8.3.7; minor updates to other s/w used for FabFlixs development, by Norman\n<br>&nbsp;&nbsp;&nbsp;Jacobson, March 2009.\n<br>Removed unneeded \":\" from \"localhost\" parameter in JDBC test program (so it works now!), by \n<br>&nbsp;&nbsp;&nbsp;Norman Jacobson, April 2009.\n</p>\n\n\n</body>\n</html>\n\n", "encoding": "ascii"}