{"url": "https://www.ics.uci.edu/~aviral/papers/adlJournal.html", "content": "<title>adlJournal</title>\n<body bgcolor=#ffffff>\n<h2> ADL-driven Software Toolkit Generation for Architectural Exploration of Programmable SOCs\n</h2>\n  \n<a href=\"http://www.ics.uci.edu/~aviral/papers/adlJournal.pdf\"><img src=\"pdf.png\" alt=\"pdf\" width=\"34\" height=\"34\" border=\"0\"></a>\n\n<p><i>\n<a href=\"www.cise.ufl.edu/~prabhat/\"> Prabhat Mishra </a>,\n<a href=\"http://www.ics.uci.edu/~aviral\"> Aviral Shrivastava </a>, and \n<a href=\"http://www.ics.uci.edu/~dutt\"> Nikil Dutt </a>\n</i>\n\n<p><b>ACM TODAES:</b> <i>ACM Transactions on Design Automation of Electronic Systems \n</i>\n\n<p><b>Abstract: </b>\nThe increasing complexity of system functionality and advances in\nsemiconductor technology have resulted in system implementations using\nprogrammable Systems-on-Chips (SOCs). Furthermore as the software\ncontent of such SOCs dominates the design process, there is a critical\nneed to support exploration and evaluation of different architectural\nconfigurations. The increasing software content coupled with\ndecreasing time-to-market create a critical need for automated\nsoftware generation tools to increase designer\nproductivity. Traditional hardware-software codesign flows do not\nsupport necessary exploration and customization of the embedded\nprocessors. However the inherently application specific nature of the\nembedded processors and the stringent area, power and performance\nconstraints in embedded systems design critically require fast and\nautomated architecture exploration methodology. Architecture\nDescription Language (ADL)-driven design space exploration and\nsoftware toolkit generation strategies have become popular\nrecently. This approach provides a systematic mechanism for a top-down\ndesign and validation framework, which  is very important to develop\ncomplex systems. The heart of this approach lies in the ability to\nautomatically generate software toolkit including a\narchitecture-sensitive compiler, a cycle accurate simulator,\nassembler, debugger, and verification/validation tools. This paper\npresents a software toolkit generation methodology using the\nEXPRESSION ADL. Our exploration studies demonstrate the need and\nusefulness of this approach in compiler-in-the-loop design space\nexploration of reduced instruction-set architectures.\n<p>\n\n\n<hr>\n\n<table cellpadding=\"2\" cellspacing=\"2\" border=\"0\" width=\"100%\">\n  <tbody>\n    <tr>\n      <td valign=\"left\">\n      Center For Embedded Computer Systems,<br> \n      Department of Information and Computer Science,<br>\n      University of California, Irvine.\n      </td>\n    </tr>\n  </tbody>\n</table>\n", "encoding": "ascii"}