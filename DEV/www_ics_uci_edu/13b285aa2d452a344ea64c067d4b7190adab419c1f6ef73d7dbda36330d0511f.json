{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0064.html", "content": "<!-- received=\"Sun Jun 09 13:44:00 1996 PDT\" -->\n<!-- sent=\"Sun, 9 Jun 1996 13:43:14 -0400\" -->\n<!-- name=\"David G. Durand\" -->\n<!-- email=\"dgd@cs.bu.edu\" -->\n<!-- subject=\"Re: version management and relative links\" -->\n<!-- id=\"ade2642146021004c230@[128.195.21.209]\" -->\n<!-- inreplyto=\"version management and relative links\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: version management and relative links</title>\n<h1>Re: version management and relative links</h1>\n<b>David G. Durand</b> (<a href=\"mailto:dgd@cs.bu.edu\"><i>dgd@cs.bu.edu</i></a>)<br>\n<i>Sun, 9 Jun 1996 13:43:14 -0400</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#64\">[ date ]</a><a href=\"thread.html#64\">[ thread ]</a><a href=\"subject.html#64\">[ subject ]</a><a href=\"author.html#64\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0065.html\">Daniel W. Connolly: \"Re: version management and relative links\"</a>\n<li> <b>Previous message:</b> <a href=\"0063.html\">Larry Masinter: \"version management and relative links\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0063.html\">Larry Masinter: \"version management and relative links\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0065.html\">Daniel W. Connolly: \"Re: version management and relative links\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nAt 4:37 PM 6/8/96, Larry Masinter wrote:\n&gt;Let's say that you ask to view \"version 3\" of a HTML page. Do you want\n&gt;the verison 3 of the GIF images that were included, too? Do you want\n&gt;all of the hyperlinks to be links to version 3, or continue to be\n&gt;links to the original material.\n\nThis is the core of the \"configuration management problem\". I think that it\nwillnot be possible to define requirements on browsers so that they will\nnecessarily do the right thing: we can only try to provide help so that\nthey have the ability to do the right thing. Forn instance the correct\nversion of a GIF to match version 3 of a document might turn out to be\nversion 2.3.1 of the GIF. This highlights one of the ways that I think\nversioning-aware requests may be different in a configuration-managed\nserver\n\n&gt;Is it possible to do this without rewriting the URLs contained within\n&gt;the material? If the material uses relative links, do you want to\n&gt;arrange it so that relative URLs don't have to be rewritten?\n\nIf the URLs contain an implicit \"current version\" reference, when no\nversion is specified, then versioning-unaware clients can function\ncorrectly with relative links.\n\n   For versioning aware clients, I can imagine several possibilities: one\nwould be to include the full URL (including version) of the current\ndocument, along with the URL (without version information) of the source\nURL. This will work for some simple versioning strategies, but will fail\nwhen the same version of a document is part of several configurations.\n\n  For example with configurations C1 and C2. C1 contains documents D1v1\n(document 1, version 1) and D2v1. configuration C2 contains D1v1 and D2v2.\nNow if D1 has a relative link to D2, a browser that wants to follow the\nlink cannot select D2v1 or D2v2 without knowing which configuration\ncontaining D1v1 is the user's \"current configuration\".\n\n   Another strategy is to address configurations explicitly (but I would do\nthis as a secondary round of work) and have an opaque Configuration-ID,\nattribute of a resource that would be a magic cookie to the server,\nallowing the selection of the desired version.\n\n   Also possible should be a strategy where the user, via browser settings\nor explicit notification, can be made aware that alternative versions of\nthe document exist, and a selection made among them. In the case of a\npublication scenario, configuration management is better. However, if the\ndocuments are separately controlled (D1v1 is a hostile commentary on D2v1,\nlet us say), then the version information about D2, and the chronological\nrelations between the three versions, may be highly significant. Note that\nthis kind of situation can arise even in a single server if there is\ncollaborative work being done.\n\n   This is one reason that I think a \"current version\" strategy is\nimportant -- it provides a simple solution for versioning-unaware browsers,\nand a good default strategy for browsing, even with versioning-aware\nbrowsers, when a user is not interested in the historical record.\n\n   Versioning aware editors, however will need to have a choice of\nstrategies that include configuration management, but also include manual\nor automatic overriding of versioning information presented in the URL.\n\n   It's also worth noting that the relative URL problem is really an issue\nfor servers that are based on file-system technology. Given an integrated\nlink-database, version information in URLs might be generated by the\nHTML-export process, and not recorded directly in the document in the way\nwe think of when picturing an emacs session on the raw HTML.\n\n   This discussion has highlighted an important requirement:\n\n    **** Versions should be extractable from the URL ****\n    While the version string should be opaque, I think that there is some\nvirtue in being able to tell what part of the URL is identifying\ninformation, and what is version information: for one thing this is\nrequired to implement the \"current version\" strategy. If we don't do this,\nthen the version information is totally hidden in the URL, and special HTTP\nqueries become the only way to find out even the simplest version\nrelationships among URLs (such as the predicate\nare-versions-of-the-same-object(x, y)).\n\n&gt;In the MHTML working group (sending HTML in MIME), there was some\n&gt;design work at one time on a 'catalog' which might be included as a\n&gt;wrapper to a HTML page as part of multipart/related. The 'catalog'\n&gt;would consist of a set of renamings\n&gt;\n&gt;&gt; Interpret the following (enclosed) HTML page, but within it,\n&gt;&gt; whenever you see this URL\n&gt;&gt;       \"<a href=\"http://blah.blah.com/stuff\">http://blah.blah.com/stuff</a>\"\n&gt;&gt; substitute the following URL instead\n&gt;&gt;        \"cid:012312313ab@blah.com\"\n\n   I think you mean the MIME-SGML group and not the MIME-HTML group. On\nthat assumption:\n\n   The CATALOG proposal is based on SGML-Open catalogs for mapping ISO\nPublic Text Identitifiers to system access strings (like URLs). This is a\ngreat way to do location-independent naming (since you can get the catalog\nfrom anywhere), but it's not implemented as a URL-rewriting strategy.\nUnfortunately the ISO public names don't currently include any\nrevision-control information. I would love to set up a convention for that\nhere, but I think that this is something that should be done after the\nbasic foundations are in place.\n\n   The real problem with this is that CATALOGs only make sense in the\ncontext of an SGML entity manager -- they map Public Identifiers (for SGML\n\"external entities\") to storage locations. They do not map attribute values\n(like HREFs). If a catalog file is the best approach we might ease\nimplementors' burdens by stealing some of the syntax, but a correct CATALOG\nimplementation would not function the way you suggest (i.e. as a URL\nmapping).\n\n&gt;I'm wondering if we might presuppose a 'catalog-aware' browser rather\n&gt;than a 'version-aware' browser. A versioned resource would be\n&gt;delivered as a cataloged entity so that embedded URLs that pointed to\n&gt;or included versioned material could themselves be versioned.\n\n   Perhaps URL-renamings should be part of the configuration layer of the\nversioning stuff. Does anyone have any opinions on this?\n\n&gt;Larry\n\n----------------------------------------------+----------------------------\n  David Durand                 <a href=\"mailto:dgd@cs.bu.edu\">dgd@cs.bu.edu</a>  | david@dynamicDiagrams.com\n  Boston University Computer Science          | Dynamic Diagrams\n  <a href=\"http://cs-www.bu.edu:80/students/grads/dgd/\">http://cs-www.bu.edu:80/students/grads/dgd/</a> | http://dynamicDiagrams.com/\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0065.html\">Daniel W. Connolly: \"Re: version management and relative links\"</a>\n<li> <b>Previous message:</b> <a href=\"0063.html\">Larry Masinter: \"version management and relative links\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0063.html\">Larry Masinter: \"version management and relative links\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0065.html\">Daniel W. Connolly: \"Re: version management and relative links\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}