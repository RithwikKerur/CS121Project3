{"url": "https://www.ics.uci.edu/~jmoorkan/vhdlref/var_ass.html", "content": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n<!-- base href=\"http://www.vdlande.com/VHDL/var_ass.html\" --><title>VHDL Reference Guide - Variable Assignment</title></head><body bgcolor=\"mintcream\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: -1px -1px 0pt; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: 12px; padding: 8px; background: rgb(221, 221, 221) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-family: arial,sans-serif; font-style: normal; font-variant: normal; font-size: 13px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; color: rgb(0, 0, 0); font-weight: normal; text-align: left;\">This is Google's cache of <a href=\"http://www.vdlande.com/VHDL/var_ass.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">http://www.vdlande.com/VHDL/var_ass.html</a>. It is a snapshot of the page as it appeared on Sep 8, 2009 11:07:22 GMT. The <a href=\"http://www.vdlande.com/VHDL/var_ass.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Learn more</a><br><br><div style=\"float: right;\"><a href=\"http://74.125.155.132/search?q=cache:GA4TMLSv46kJ:www.vdlande.com/VHDL/var_ass.html+site:www.vdlande.com+VHDL+reference+guide+vdlande&amp;hl=en&amp;client=firefox-a&amp;gl=us&amp;strip=1\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background: rgb(255, 255, 102) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-weight: bold;\">vhdl</span>&nbsp;These terms only appear in links pointing to this page: <span style=\"font-weight: bold;\">reference</span>&nbsp;<span style=\"font-weight: bold;\">guide</span>&nbsp;<span style=\"font-weight: bold;\">vdlande</span>&nbsp;&nbsp;</div></div></div><div style=\"position: relative;\">\n\n\n\n\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\">\n<caption><b>Variable Assignment</b></caption>\n<tbody><tr><td colspan=\"3\"><hr></td></tr>\n<tr>\n<td bgcolor=\"lightcyan\">Sequential Statement</td>\n<td>---- used in ----&gt;</td>\n<td bgcolor=\"lightgreen\">Process<br>Procedure<br>Function</td>\n</tr>\n</tbody></table>\n\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Syntax</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td><pre>variable_name := expression;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\nSee LRM section 8.4\n\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Rules and Examples</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"60%\">\n<tbody><tr>\n<td>Assignments may be made from signals to variables and vice-versa,\nproviding the types match:\n<pre>process (A, B, C, SEL)\n  variable X : integer range 0 to 7;\nbegin\n  if SEL = '1' then\n    X := B;\n  else\n    X := C;\n  end if;\n    Z &lt;= A + X;\nend process;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td colspan=\"2\">A variable assignment takes effect immediately:\n<pre>architecture EX1 of V is\n  signal A,B,Y,Z : integer;\nbegin\n  process (A, B) \n    variable M, N : integer;\n  begin\n    M := A;\n    N := B;\n    Z &lt;= M + N;\n    M := 2*A;\n    Y &lt;= M + N;\n  end process;\nend EX1;</pre></td>\n</tr>\n<tr>\n<td width=\"50%\">&nbsp;</td>\n<td rowspan=\"2\">An equivalent architecture with concurrent signal assignments<pre>architecture EX2 of V is\n  signal A,B,Y,Z:integer;\nbegin\n  Z &lt;= A + B;\n  Y &lt;= 2*A + B;\nend EX2;</pre></td>\n</tr>\n<tr>\n<td>A variable assignment may not be given a delay.</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>A variable in a process can act as a register, if it is read before\nit has been written to, since it retains its value between sucessive\nprocess activations.\n<pre>process (CLK)\n   variable Q : std_ulogic;\nbegin\n  if CLK'event and CLK='1' then\n    PULSE &lt;= D and not(Q);\n    Q := D;\n    -- PULSE and Q act as registers\n  end if;\nend process;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Synthesis Issues</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>Variable assignments are generally synthesisable, providing they use\ntypes and operators acceptable to the synthesis tool.\n<p>\nIn a \"clocked process\", each variable which has its value read before it\nhas had an assignment to it will be synthesised as the output of a\nregister.\n</p><p>\nIn a \"combinational process\", reading a variable before it has had an\nassignment may cause a latch to be synthesised.\n</p><p>\nVariables declared in a subprogram are synthesised as combinational\nlogic.\n</p></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Whats New in '93</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\nIn <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93, a variable assignment may have a label:\n</p><pre>label: variable_name := expression;</pre>\n<b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93 supports <b>shared variables</b> which may be accessed by more\nthan one process.However, the language does not define what happens if\ntwo or more processes make conflicting accesses to a shared variable at\nthe same time. \n\n</div>\n\n<hr width=\"80%\">\n</div></body></html>", "encoding": "ascii"}