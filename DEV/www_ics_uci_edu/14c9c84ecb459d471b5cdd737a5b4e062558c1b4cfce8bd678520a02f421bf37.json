{"url": "https://www.ics.uci.edu/~stasio/winter04/ics280.html", "content": "<HTML xmlns:o>\r\n\t<HEAD>\r\n\t\t<TITLE>ICS 280: Introduction to the Theory of Cryptography</TITLE><LINK rev=\"Made\" href=\"mailto:stasio@ics.uci.edu\"></HEAD>\r\n\t<BODY>\r\n\t\t<H2 align=\"center\"><FONT size=\"6\">ICS 280: Introduction to the Theory of Cryptography</FONT></H2>\r\n\t\t<P align=\"center\"><STRONG><FONT size=\"5\">Winter Quarter, 2004</FONT></STRONG></P>\r\n\t\t<P>\r\n\t\t\t<HR>\r\n\t\t<P></P>\r\n\t\t<P><STRONG><A href=\"http://www.ics.uci.edu/~stasio/winter04/outline.html\">tentative outline</A>&nbsp;</STRONG></P>\r\n\t\t<P><STRONG><A href=\"http://www.ics.uci.edu/~stasio/winter04/reading.html\">list of reference \r\n\t\t\t\t\treadings</A></STRONG></P>\r\n\t\t<STRONG>\r\n\t\t\t<P><STRONG><A href=\"http://www.ics.uci.edu/~stasio/winter04/handouts.html\">handouts (and \r\n\t\t\t\t\t\thomeworks)</A></STRONG></P>\r\n\t\t</STRONG>\r\n\t\t<P>\r\n\t\t\t<HR>\r\n\t\t<P></P>\r\n\t\t<P>\r\n\t\t\t&nbsp;Instructor:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A href=\"http://www.ics.uci.edu/~stasio/\">\r\n\t\t\t\tStanislaw Jarecki</A>\r\n\t\t</P>\r\n\t\t<UL>\r\n\t\t\t<LI>\r\n\t\t\tClass times:&nbsp;&nbsp;&nbsp;&nbsp; Tu-Th, 11-12:20\r\n\t\t\t<LI>\r\n\t\t\tRoom:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n\t\t\tCS building, room 243\r\n\t\t\t<LI>\r\n\t\t\tClass number:&nbsp; ICS 280, Section C\r\n\t\t\t<LI>\r\n\t\t\tClass code:&nbsp;&nbsp;&nbsp;&nbsp; 36783\r\n\t\t\t<LI>\r\n\t\t\tOffice hours:&nbsp;&nbsp;&nbsp;Mon 3-5, and otherwise by appointment or just by \r\n\t\t\tstopping by\r\n\t\t\t<LI>\r\n\t\t\t\tTextbook:&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; None, but lots of material is \r\n\t\t\t\tavailable on-line (see more below)\r\n\t\t\t</LI>\r\n\t\t</UL>\r\n\t\t<P>&nbsp;</P>\r\n\t\t<H3>Course Description:</H3>\r\n\t\t<P>This course is an introduction to modern cryptography for graduate and advanced \r\n\t\t\tundergraduate students.&nbsp;&nbsp; At the end of the course, the&nbsp;students \r\n\t\t\twill be able to understand current research in cryptography and, if \r\n\t\t\tinterested,&nbsp;pursue such research themselves.&nbsp; The cryptographic \r\n\t\t\ttoolkit we will cover will be also useful&nbsp;for students interested \r\n\t\t\tin&nbsp;algorithms or in security.\r\n\t\t\t<o:p></o:p></P>\r\n\t\t<P>\r\n\t\t\tModern cryptography&nbsp;provides tools&nbsp;for the design of&nbsp;<EM>provably \r\n\t\t\t\tsecure&nbsp;</EM>protocols.&nbsp;&nbsp;It shows that complex security \r\n\t\t\trequirements of modern computer systems can be satisfied by algorithms that are \r\n\t\t\tprovably secure against adversarial attacks, assuming some \r\n\t\t\twell-defined&nbsp;computational complexity assumptions.&nbsp; Existence of such \r\n\t\t\tproofs allows&nbsp;practitioners to build&nbsp;computer systems whose security \r\n\t\t\trests on firm foundations.&nbsp; However, the resulting computer <EM>systems</EM>\r\n\t\t\tare secure only to the degree that&nbsp;they are implemented correctly (an \r\n\t\t\tissue we will not cover in this class), and that the security \r\n\t\t\trequirements&nbsp;imposed on&nbsp;the cryptographic algorithm correctly \r\n\t\t\trepresent the operation of the system, and hence the types of&nbsp;attacks \r\n\t\t\tthat&nbsp;can be launched&nbsp;against it.&nbsp;&nbsp;We will touch on this \r\n\t\t\tlast point&nbsp;quite often in our class, whenever we&nbsp;discuss the security \r\n\t\t\trequirement of&nbsp;any cryptographic tool.</P>\r\n\t\t<P>This winter&nbsp;quarter course&nbsp;is intended as an introductory class, and \r\n\t\t\tso we will start&nbsp;with <EM>the fundamentals</EM> of modern cryptography and \r\n\t\t\tgradually move up to more complex cryptographic tools, which can then be \r\n\t\t\tapplied&nbsp;to building secure protocols.&nbsp;&nbsp;The&nbsp;primary focus of \r\n\t\t\tthe class will be on:</P>\r\n\t\t<UL>\r\n\t\t\t<LI>\r\n\t\t\t\t<STRONG>Definitions:</STRONG>&nbsp; We will see how to \r\n\t\t\tconceptualize&nbsp;the&nbsp;goals of security (e.g. \"secure \r\n\t\t\tcommunication\"),&nbsp;and by doing so we will define&nbsp;cryptographic objects \r\n\t\t\t(i.e. algorithms or protocols) of increasing complexity, like one-way \r\n\t\t\tfunctions, collision-resistant functions, pseudorandom functions, signature \r\n\t\t\tschemes, encryption schemes, and others.&nbsp; We will&nbsp;define the \r\n\t\t\tneeded&nbsp;properties of these objects&nbsp;by&nbsp;drawing examples from \r\n\t\t\ttheir practical applications.\r\n\t\t\t<LI>\r\n\t\t\t\t<STRONG>Constructions, protocol design,&nbsp;composing systems from cryptographic \r\n\t\t\t\t\tobjects, rigorous proofs of security</STRONG>:&nbsp; We will see how to \r\n\t\t\t\tachieve various security goals and construct&nbsp;the \r\n\t\t\t\tcorresponding&nbsp;cryptographic&nbsp;objects which <EM>provably</EM> meet the \r\n\t\t\t\trequired properties under&nbsp;well-defined <EM>computational difficulty \r\n\t\t\t\t\tassumptions</EM>, e.g. the assumption that factoring is difficult.&nbsp; In \r\n\t\t\t\tgeneral, we will see how to construct more complex cryptographic objects from \r\n\t\t\t\tsimpler ones, and how the resulting tools can be used to satisfy requirements \r\n\t\t\t\tof actual applications.</LI></UL>\r\n\t\t<P>The most important lesson of this course should be not any particular \r\n\t\t\tcryptographic construction, but the <EM>approach</EM> of modern \r\n\t\t\tcryptography:&nbsp; (1) the &nbsp;importance of defining&nbsp;the security \r\n\t\t\trequirements of&nbsp;the&nbsp;application&nbsp;at hand, and (2)&nbsp;knowing \r\n\t\t\thow to go about arguing if (and on what grounds)&nbsp;a proposed&nbsp;algorithm \r\n\t\t\tsatisfies these requirements.</P>\r\n\t\t<H3>Tentative Outline:</H3>\r\n\t\t<P>See the <A href=\"http://www.ics.uci.edu/~stasio/winter04/outline.html\">tentative \r\n\t\t\t\toutline</A> for the list of topics we will cover.</P>\r\n\t\t<H3>Background Reading List:</H3>\r\n\t\t<P>See the <A href=\"http://www.ics.uci.edu/~stasio/winter04/reading.html\">list of \r\n\t\t\t\treference texts</A> for the course</P>\r\n\t\t<H3>Grading:</H3>\r\n\t\t<P>There will be&nbsp;about 4-6 homework sets (counting 70%) and a take-home final \r\n\t\t\t(20%).&nbsp; You will be expected to actively participate&nbsp;in the \r\n\t\t\tclass.&nbsp; Depending on the attendance level, 10% of the grade will be \r\n\t\t\teither&nbsp;for class participation or for scribing the lecture notes.\r\n\t\t</P>\r\n\t\t<h3>Prerequisites:</h3>\r\n\t\t<P>There are no formal prerequsites for this class.&nbsp; However:</P>\r\n\t\t<UL>\r\n\t\t\t<LI>\r\n\t\t\tYou should be comfortable with proofs, with elementary probability, and have \r\n\t\t\tthe basic&nbsp;knowledge of discrete math used in computer science \r\n\t\t\t(e.g.&nbsp;ICS.6A).\r\n\t\t\t<LI>\r\n\t\t\tIt's recommended that you have some algorithms class (like ICS.161) and \r\n\t\t\tyou&nbsp;are familiar with assymptotic analysis of algorithm running time.\r\n\t\t\t<LI>\r\n\t\t\tIt'd be also good if you took a computability/complexity class like ICS.162, so \r\n\t\t\tyou are familiar with P/NP and the notion of&nbsp;a reduction between \r\n\t\t\tcomputational problems.\r\n\t\t\t<LI>\r\n\t\t\t\tIt will help to be familiar with basic algebraic concepts (groups, fields), and \r\n\t\t\t\tnumber theory concepts (e.g. primality), but you don't have to have a class in \r\n\t\t\t\tit.</LI></UL>\r\n\t\t<P>The last three topics listed above will be&nbsp;briefly reviewed in class. In \r\n\t\t\tfact, if you are missing some of this background, see the reading \r\n\t\t\tlist&nbsp;link above for&nbsp;review material which&nbsp;is available \r\n\t\t\ton-line.&nbsp;&nbsp;Even if you do not have all the background listed above, \r\n\t\t\tyou&nbsp;will be able to pick it up from the class review, and then consult \r\n\t\t\tthe&nbsp;listed textbooks when needed.</P>\r\n\t\t<H3>This class is complementary to&nbsp;other UCI classes on security/cryptography:</H3>\r\n\t\t<P>No previous experience in cryptography or security is necessary for this class \r\n\t\t\t(see the prerequisites above), but for those students who have taken or are \r\n\t\t\tthinking of taking other UCI classes on security/cryptography, here is a word \r\n\t\t\tof explanation why this class differs from and complements the&nbsp;related UCI \r\n\t\t\tclasses:</P>\r\n\t\t<UL>\r\n\t\t\t<LI>\r\n\t\t\t\tICS 168/268:&nbsp;&nbsp; Students who took ICS 168/268 are very much encouraged \r\n\t\t\t\tto take this class.&nbsp; The two classes&nbsp;cover different material and can \r\n\t\t\t\tbe taken in any order.&nbsp; The reason the&nbsp;two classes complement each \r\n\t\t\t\tother&nbsp;well is that&nbsp;ICS 168/268 focuses on <EM>breadth</EM> of \r\n\t\t\t\tcryptographic algorithms and&nbsp;secure applications, while this class focuses \r\n\t\t\t\ton <EM>depth,</EM>&nbsp;by laying&nbsp;out&nbsp;a systematic approach to the \r\n\t\t\t\tstudy of&nbsp;<EM>any</EM>\r\n\t\t\tsecure algorithms and protocols.\r\n\t\t\t<LI>\r\n\t\t\t\tMath 173A:&nbsp;&nbsp; Similarly, students who took and liked&nbsp;\"Intro to \r\n\t\t\t\tCryptology\", Math&nbsp;173A, are encouraged to&nbsp;take this&nbsp;class \r\n\t\t\t\ttoo.&nbsp; The material differs, but Math 173A is a very good introduction and \r\n\t\t\t\tbackground for this class.&nbsp; Math 173A teaches number theoretical \r\n\t\t\t\tfoundations of the two most famous public key&nbsp;algorithms, i.e.&nbsp;the \r\n\t\t\t\tRSA encryption/signature schemes based on the factoring assupmtion, and the \r\n\t\t\t\tencryption/signature schemes based on the discrete logarithm \r\n\t\t\t\tassumption.&nbsp;&nbsp; This is a very useful and fun material, but&nbsp;from \r\n\t\t\t\tthe point of view of&nbsp;crypto theory as taught in this class, what Math \r\n\t\t\t\t173A&nbsp;shows is&nbsp;that a specific&nbsp;cryptographic object called a <EM>one \r\n\t\t\t\t\tway function</EM>&nbsp;can be efficiently built from \r\n\t\t\t\tparticular&nbsp;number-theoretic assumptions (discrete log or factoring).&nbsp; \r\n\t\t\t\tIn this class we will take&nbsp;the assumption that one-way functions can \r\n\t\t\t\tbe&nbsp;constructed as more or less&nbsp;our starting point (!), and we will \r\n\t\t\t\tsee how to build more complex cryptographic objects on&nbsp;this and other \r\n\t\t\t\tassumptions (see further info in the tentative course outline below).\r\n\t\t\t</LI>\r\n\t\t</UL>\r\n\t\t<P>\r\n\t\t\t<HR id=\"HR1\">\r\n\t\t<P></P>\r\n\t\t<P></P>\r\n\t\t<ADDRESS>Last modified:&nbsp;07&nbsp;Jan 2004\r\n\t\t</ADDRESS>\r\n\t</BODY>\r\n</HTML>\r\n", "encoding": "ascii"}