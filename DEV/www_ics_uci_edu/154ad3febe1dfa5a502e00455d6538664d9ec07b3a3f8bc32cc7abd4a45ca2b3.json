{"url": "https://www.ics.uci.edu/~wayne/research/students/", "content": "<h1>Research Opportunities in Wayne Hayes's Group</h1>\n\n<h2>Reviews</h2>\nI've supervised and mentored dozens of young researchers (grads, undergrads, high school students) over the years.  It's fun and productive for all --- you, me, other students, and other scientific collaborators.  It's hard work, but rewarding. Here's what some have said about working in my research group:\n\n<ul>\n<li> \"I was not expecting something this amazing in my undergraduate career\"\n<li> \"He is a passionate, helpful professor who strives to push his students to their potential.\"\n<li> \"He is very helpful and inspiring. Has good judgement for assigning work to his students.\"\n<li> \"I learned a lot about how research works and that's great. I got lots of new perspectives.\"\n<li> \"I am learning a lot about real world applications of my major\"\n<li> \"Professor Hayes explains what he wants to do clearly and provides suggestions and guidance for us on our tasks.\"\n<li> \"This undergraduate research position has been a great learning experience for me! I can't wait to do it again next quarter with Dr. Hayes.\"\n<li> \"Dr. Hayes expresses great interest in and enthusiasm for the subjects/pursuits in which he is involved, which makes doing research under his guidance a more enjoyable and fulfilling experience.\"\n</ul>\n\n<h2>Selection Criteria</h2>\n<p>To work in my group, you need to demonstrate yourself to be significantly above average among your peers: you need to undertake one of the following challenges and submit the results to me.  If they're not correct... no problem, I give second chances. You're also allowed to ask questions, but try to keep them to a minimum.  <b>The primary criterion by which you will be judged is how well you can perform, and then write up, these tasks <i>independently, without much help</i></b>.\n\n<b>Note:</b> If you already have any undergraduate degree, then you need to do the \"extra\" work required in each of the challenges.  This applies to potential grad students or STEM teachers applying to work with me, for example.\n\n<p><b> In all cases you need to submit a\n PDF write-up, with histograms or figures plotted.  I don't need your code. I want to see your write-up including a description of you did, and why, and your results with commentary. THIS IS JUST AS MUCH A TEST OF YOUR COMMUNICATION SKILLS AS CODING. Doing research requires critical thinking and the ability to explain your rationale for what you did AND WHY. Without that your code or blind results are worthless. </b>\n\n<p>I have several projects running.  Three of them are described in the PowerPoint presentation <a href=\"http://www.ics.uci.edu/~wayne/tmp/3min.ppt\">here</a>.\nYou only need to do ONE of the below challenges, depending upon which project you're interested in working on.  You need to do the task, and then <b>write it up nicely</b>, with graphs or plots to illustrate your answer.  You should be able to do the task within about a week at most, but the answer has to be GOOD.  If you hand in a GOOD solution later, that's better than a crappy solution earlier. In other words, a good solution is <i>required</i>, but faster is better than slower.\n\n<p>Let me know if there are any ambiguities, but your job is to do this task with as little supervision from me as is possible.\n\n<p>Please direct all questions to me at whayes@uci.edu.\n\n<h1>The Projects</h1>\n<h2>(0) Physics-based tracking of moving and growing cells in a colony:\n<a href=\"https://www.youtube.com/watch?v=gEwzDydciWc\">YouTube video</a>\n</h2>\n<img src=\"bacteria-animation.gif\">\n<p> The left side shows frames from a real video of a growing bacterial colony; the right frame shows our algorithm tracking the growth and motion of each individual bacterium during its whole life cycle from being born, moving, growing, to splitting into two daughter cells.  Biologists need to track cells in video frames for many purposes, including tracking the growth of cancer cells, learning about the growth of embryos, learning how bacteria move, learning how genetic changes to a cell result in functional changes during it's lifetime... it's a huge research area.  Although there already exist several cell tracking algorithms out there, we are working on a novel approach that seems to have several advantages.  In order to join this project, your task is to take the above animated GIF, and automatically estimate the number of bacteria in each of the frames, and produce a text file whose only output is one integer per line, representing the count, and the number of lines should equal the number of frames. You only need to use one of the two sides. You can use any language you want, and any method you want, as long as it's automatic, and you wrote it yourself (cite any references you use). Describe your algorithm and the output, and send your PDF write-up to me by email. <b>Extra work for those who already have an undergrad degree:</b> You must create two algorithms, one that can handle each side of the above image.  Compare the results and explain any differences.\n<p>Alternatively, if you prefer \"library\" type (reading and writing) research, use Google Scholar to look up and describe everything you can find out about cell tracking that has been published in the last 2 calendar years. (For example, if it's now 2018, then click \"since 2017\" on the left-hand side toolbar in Google Scholar and see what you can find.) There is no set number of words or pages, but you should describe <i>all</i> relevant work that has happened in cell tracking in the designated time period, devoting at least one paragraph to each paper you find.\n\n<h2>(1) Graph theory applied to network database engines and biological network alignment:\n<a href=\"https://www.youtube.com/watch?v=JERHx62YC9E\">YouTube Video</a>\n</h2>\n<img src=\"bionets.jpg\" height=200 width=860>\n<h3>Network modeling and network database queries</h3>\nWe are working on a database engine to allow complex network-based queries. This basically means we are trying to solve the subgraph isomorphism problem in such a way as to allow lightning-fast graph-based database queries of a large network corpus. Additionally, we are working on modeling networks theoretically so as to be able to create synthetic databases of graphs that \"model\" real graphs.\n<h3>Network Alignment</h3>\nNetwork alignment is the task of finding <i>large</i> subgraphs, or near-subgraphs, that are common between two or more large networks. The differerence between this and network modeling and database queries is that in queries, we are generally looking for very small (10-20 nodes at most) exact or near-exact matches inside a large database of networks; in alignment, we are given a small number of input graphs (maybe half a dozen), and we're looking for much larger (hundreds or thousands of nodes) of near-matches between them.\n<p><b>1)</b> If you want to do either the <b>graph database and network modeling</b>, or the <b>biological network alignment</b> project, you need to know what a graph is and how to work with them, especially how to code with them.  Your task is the following: you're given a text file representing a network.  The first line of the file is N, the number of nodes.  You will name the nodes from 0 through N-1. The remaining lines will have two integers per line, representing an edge.  You don't know in advance how many edges there are, you just keep reading until you reach end of file.  Your task is to compute and output two different types of <i>connected componets</i>: <b>strong</b> and <b>weak</b>. In other words, you are to compute the number of WEAKLY CONNECTED COMPONENTS in the graph, treating it as undirected (and you can ignore duplicate edges); and then a second number which is the number of STRONGLY CONNECTED COMPONENTS, and output both integers. Below I provide some sample inputs.  I don't care what language you use.  In addition, in your write up, include a histogram of the distribution of DEGREES of nodes; in the undirected case, just count all degrees; in the strongly connected (directed) case, provide histograms for both the in-degree and out-degree. (That means you'll have three histograms per graph.)  The histogram shows how many nodes have degree zero, degree 1, etc., up to the max degree. <b>If you don't know any of these terms, look them up, don't ask me.</b>  The data for this project is <a href=\"http://www.ics.uci.edu/~wayne/research/students/graphs.zip\">here</a>.  Analyze all the graphs in the zip file. <b>Extra work for those who already have a degree:</b> Read the <a href=\"/~wayne/papers/GRAAL.pdf\">GRAAL paper</a> and count the number of graphlets of size 3 in all the networks.\n<p>Alternatively, if you prefer \"library\" type (reading and writing) research, use Google Scholar to look up and describe everything you can find out about biological network alignment that has been published in the last 2 calendar years. (For example, if it's now 2018, then click \"since 2017\" on the left-hand side toolbar in Google Scholar and see what you can find.) There is no set number of words or pages, but you should describe <i>all</i> relevant work that has happened in biological network alignment in the designated time period, devoting at least one paragraph to each paper you find.\n\n<h2>(2) Image analysis of spiral galaxies:\n<a href=\"https://www.youtube.com/watch?v=VgtIHGlBME4\">YouTube Video</a>\n</h2>\n<img src=\"../../tmp/g001-all.jpg\" height=128 width=512>\n<p><b>2)</b> If you want to work in the <b>Galaxy Image Analysis</b> project, then you should start by playing around with any galaxy images you find on the web and putting them into the <a href=http://sparcfire.ics.uci.edu>SpArcFiRe webpage</a>.  Once you get the hang of it, you have two choices:\n<p>(A) find an image of NGC5054, or take the one from my paper with Darren Davis (cited on the above web page), and try to find a set of SpArcFiRe options on the website that can find the \"dim\" arm on the right hand side of the image of that galaxy in the above paper.\n<p>(B) Go get the following file:\n<a href=\"https://www.dropbox.com/s/4vmk1efntydpezr/SF5-CS.5%2BaxisRatio.5.tsv?dl=0\">here</a>\nEach row is some data about a galaxy, and the columns have names in the top row.  You don't need to know what all of the columns mean, but pay attention to these ones:\nP_CS: the probability that this galaxy is a spiral.\nnumDcoArcsGEXXX for various values of XXX: the number of arms in that spiral galaxy that are longer than XXX.\nYour task is to plot a histogram of the number of galaxies with N or more arms of length XXX, for each of the XXX values in the file.  It would be best to plot all the histograms on one figure to be easily able to compare them to each other.\n<p>Alternatively, if you prefer \"library\" type (reading and writing) research, use Google Scholar to look up and describe everything you can find out about automated galaxy classification that has been published in the last 2 calendar years. (For example, if it's now 2018, then click \"since 2017\" on the left-hand side toolbar in Google Scholar and see what you can find.) There is no set number of words or pages, but you should describe <i>all</i> relevant work that has happened in automated galaxy classification in the designated time period, devoting at least one paragraph to each paper you find.\n<p><b>Extra work for those who already have a degree:</b> Tell me about your astronomy and/or physics background.\n\n<h2>(3)Predicting sea level rise by modeling melting ice caps (NASA/JPL Collaboration): visit\n<a href=http://issm.jpl.nasa.gov>here</a>.</h2>\n<p><img width=300 src=\"ice.jpg\"></img>\n\n<p><b>3)</b> If you want to work on the <b>global warming</B> project, then you should start by going to the website http://issm.jpl.nasa.gov and seeing what the project is all about.\nThe ISSM architecture is briefly described <a href=ISSM/ISSM_Architecture.pptx>in this PPT file</a>.\nThen pick a challenge below:\n<!-- <p>(A) If you have access to a Unix / Matlab environment (eg., at the ICS OpenLab), then download, compile, and install ISSM, and then pick a tutorial to go through. Plot at least one of the plots listed in the tutorial, and explain what it is in your own words.  Submit a PDF write-up of your result.\n<p>(B) If you do not have access or are not familiar with Unix / Matlab then look at this file: https://www.dropbox.com/s/tvieux4f72jlqmr/Greenland-Points.tsv.gz?dl=0\nThen find the centroid of the points in the file, and then count how many points are within a radius of 500 miles of that point.  The points are latitude and longitude.  You'll need to be able to compute distances in miles given positions in latitude and longitude.-->\n<p>(C) JAVASCRIPT:\nGiven the cloud of 2D points <a href=http://www.ics.uci.edu/~wayne/research/students/ISSM/Data.csv>here</a>,\nlet the first point listed in that file be called <i>Reference Point A</i>.\n1) Create a website index.html (with respective javascript files) that dynamically loads the coordinates from that file;\n2) create a canvas and plot the A point in red;\n3) plot all the others in black on the canvas;\n4) compute the B and C points that are respectively closest and furthest from A; and\n5) plot B and C in blue and green respectively.\nThe whole webpage has to be driven by javascript. No offline computation allowed. You can put it all in your ~/public_html directory on openlab.ics.uci.edu and provide me the URL.\nIt must dynamically load the Data.csv <b>from the URL above</b> each time I refresh your page.  Thus, if I go and change that Data.csv file behind your back and reload your page, your page should work on the new Data.csv file.\nYou may use JS libraries/frameworks such as jQuery.\n<b>Your deliverable is both the above PDF and also the URL to your index.html file so I can test it.</b>\nNote MATLAB experience is a plus because we will eventually be converting Matlab to Javascript as well, although we are not aware of any automated way to do this (yet!).\n\n<!--<h2><a name=\"Hydrology\">\n(4)Facilitate the use of NASA hydrology tools for water management in the developing world</a></h2>\n<img src=\"Hydrology.jpg\">\n<p>Many existing and upcoming NASA satellites orbit around the Earth to measure a variety of physical quantities\nrelated to the terrestrial water cycle.  NASA scientists routinely develop tools to analyze these data as well\nas numerical models that help simulate the movement of water on Earth.  Together these computer programs have the\npotential to help water resources management agencies particularly in the developing world where observations are\nsparse.  However, such agencies often have to focus on critical real-time decision-making activities and therefore\nonly have limited resources available to learn how to analyze state-of-the-art NASA observations.  There is hence\nmuch to be gained in easing the usage of NASA hydrology tools. If you want to work on the water resources project,\nthen perform the challenge below:\n\n<p>  Your challenge is to publish a simple Python code on GitHub and run it within a hosted Continuous Integration service.  Your code must download data directly from the URL <a href=\"http://rapid-hub.org/data/angles_UCI_CS.csv\">http://rapid-hub.org/data/angles_UCI_CS.csv</a>, notice and print the top line is a header, add a third header column, and then repeat the next lines of data as well as the cosine values for each angle---that is, print all values of \u201cstation_id\u201d, \u201cangle_degrees\u201d and associated cosine values in the standard output.  (PS: the data file does not go into the repo. <b>Your code must download the data, because the data may change behind your back, although the format of the data will not change</b>.) You might use the Ubuntu or MacOS capabilities of <a href=\"https://travis-ci.org/\">Travis CI</a>, or the Windows capabilities of <a href=\"https://travis-ci.org/\">AppVeyor</a>, depending on your preferred OS.  Note that these services are free for open source software.  Hint: this challenge requires the inclusion of a YAML file (*.yml) in your repository and that this YAML file shall be tailored to the hosted Continuous Integration service you selected.  \n-->\n", "encoding": "utf-8"}