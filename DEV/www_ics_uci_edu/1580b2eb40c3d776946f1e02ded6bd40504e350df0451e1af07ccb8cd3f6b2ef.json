{"url": "https://www.ics.uci.edu/~aburtsev/238P/2018fall/lectures/final/Makefile", "content": "## -*- mode: Makefile -*-\n##\n## This is a sufficient `Makefile', but not a great one.\n##\n## \"Normal\" PDF is currently generated via `pdflatex'.  This is the route you\n## take if you make `<doc>.pdf'.\n##\n## \"Alternative\" PDF is currently generated via `dvips' and `ps2pdf'.  This is\n## the route you take if you make `<doc>-ps.pdf'.\n##\n\n###############################################################################\n\n# The root documents, minus their `.tex' file name extensions.  Each of these\n# is a (phony) Make target.  The first root file listed in `DOCUMENTS' is the\n# default target.\n#\nDOCUMENTS\t:= paper\nDOC\t\t:= $(firstword $(DOCUMENTS))\n\n# \"Extra\" figures, not made from `.fig' or `.svg' files.  These must have file\n# name extensions because we don't want to infer them.\n#\nEXTRAFIGEPS\t:=\n#\nEXTRAFIGPDF\t:=\n#\nEXTRAFIGWWW\t:=\n\n###############################################################################\n\nTEXINPUTS\t:= .:./figs:: \nBIBINPUTS\t:= .::\n\nexport TEXINPUTS\nexport BIBINPUTS\n\nLATEX\t\t:= latex\nPDFLATEX\t:= pdflatex\nBIBTEX\t\t:= bibtex\n\nDVIPS\t\t:= dvips\nPS2PDF\t\t:= ps2pdf14\nFIG2DEV\t\t:= fig2dev\nINKSCAPE \t:= inkscape\n# EPSTOPDF\t:= epstopdf\nM4\t\t:= m4\nCP\t\t:= cp\n\n# See below for some long-winded comments about these options.\n#\nDVIPSFLAGS\t:= -Ppdf -Pcmz -Pdownload35 -u ps2pk.map -tletter -G0\nPS2PDFFLAGS\t:= -sPAPERSIZE=letter -dPDFSETTINGS=/printer \\\n\t\t   -dUseCIEColor \\\n\t\t   -dEmbedAllFonts=true -dSubsetFonts=true -dMaxSubsetPct=100\nPS2PDFFLAGS_EPS\t:= -dEPSCrop -dPDFSETTINGS=/printer \\\n\t\t   -dUseCIEColor \\\n\t\t   -dEmbedAllFonts=true -dSubsetFonts=true -dMaxSubsetPct=100 \n\nTEX4HT\t\t:= tex4ht\nT4HT\t\t:= t4ht\n\n# TEXBITS\tshould exclude the root files, but it does not.\nTEXBITS\t\t:= $(wildcard *.tex)\nBIBBITS\t\t:= $(wildcard *.bib)\n\nFIGBITS\t\t:= $(wildcard figs/*.fig)\nSVGBITS \t:= $(wildcard figs/*.svg)\nFIGEPS\t\t:= $(FIGBITS:.fig=.eps) $(SVGBITS:.svg=.eps) $(EXTRAFIGEPS)\nFIGPDF\t\t:= $(FIGBITS:.fig=.pdf) $(SVGBITS:.svg=.pdf) $(EXTRAFIGPDF)\nFIGWWW\t\t:= $(FIGBITS:.fig=.png) $(SVGBITS:.svg=.png) $(EXTRAFIGWWW)\n\nDEPS\t\t:= $(wildcard *.cls) $(wildcard *.sty) $(wildcard *.cfg) \\\n\t\t   $(TEXBITS) $(BIBBITS) \\\n\t\t   Makefile\n\n###############################################################################\n\n# Some comments about some of the `DVIPSFLAGS' and `PS2PDFFLAGS'.\n#\n# -Pdownload35 --- Embed the standard PostScript fonts.  The USENIX author\n# instructions (and many other conference instructions) ask that *all* fonts be\n# embedded in PDF documents.  Note that you *must* use this option in order for\n# `ps2pdf14' to produce working PDF.  Note that the the name of the embedded\n# `Times' font is called `Nimbus'.  (See the `ps2pk.map' file.)\n#\n# -u ps2pk.map --- I think this is not required, but it doesn't hurt.  I think\n# `dvips' consults it anyway.  I could be wrong; maybe it is required in some\n# cases.\n#\n# -d... --- For the `ps2pdf' options the deal with font embedding, I believe\n# that all of these are the standard values for modern versions of Ghostscript\n# (7.05+).\n#\n# Note that you can use the `pdffonts' tool to check that all the fonts are\n# embedded.\n#\n# Some random but handy URLs for these things:\n#   <http://www.crhc.uiuc.edu/~mjmille2/howtos/latex-howtos/>\n#   <http://www.cs.wisc.edu/~ghost/doc/gnu/7.05/Ps2pdf.htm>\n\n###############################################################################\n\n.DELETE_ON_ERROR:\n\n.PHONY: all\nall: $(DOC)\n\ndefine def-doc-rule\n  .PHONY: $1\n  $1: $1.pdf\nendef\n$(foreach d,$(DOCUMENTS),$(eval $(call def-doc-rule,$d)))\n\n.PHONY: ps\nps: $(DOC)-ps.ps\n\n.PHONY: pdf\npdf: $(DOC).pdf\n\ndefine def-ps-pdf-rule\n  $1-ps.pdf: $1-ps.ps\n\t$$(PS2PDF) $$(PS2PDFFLAGS) $$<\nendef\n$(foreach d,$(DOCUMENTS),$(eval $(call def-ps-pdf-rule,$d)))\n\n.PHONY: html\nhtml: $(DOC)-www.html\n\ndefine def-www-rule\n  $1-www.html: $1-www.dvi\n\t$$(TEX4HT) $$(basename $$@)\n\t$$(T4HT) $$(basename $$@)\nendef\n# And if you have `wwwis' <http://bloodyeck.com/wwwis/>,\n#\twwwis *.html\n$(foreach d,$(DOCUMENTS),$(eval $(call def-www-rule,$d)))\n\n####\n\n$(addsuffix .pdf,$(DOCUMENTS)): $(DEPS) $(FIGPDF)\n$(addsuffix -ps.dvi,$(DOCUMENTS)): $(DEPS) $(FIGEPS)\n$(addsuffix -www.dvi,$(DOCUMENTS)): $(DEPS) $(FIGWWW)\n\n# Why be subtle?\n# Use a special job name to keep our output docs separate from those along the\n# \"normal\" route to PDF.\n%-ps.dvi: %.tex\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\t- $(BIBTEX) $(basename $@)\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\n%-www.dvi: %-www.tex\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\t- $(BIBTEX) $(basename $@)\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\t$(LATEX) -jobname $(basename $@) $(basename $<)\n\n%.ps: %.dvi\n\t$(DVIPS) $(DVIPSFLAGS) $(basename $@) -o $@\n\n# Why be subtle?\n%.pdf: %.tex\n\t$(PDFLATEX) $(basename $<)\n\t- $(BIBTEX) $(basename $@)\n\t$(PDFLATEX) $(basename $<)\n\t$(PDFLATEX) $(basename $<)\n\t$(PDFLATEX) $(basename $<)\n\n%.bbl: %.aux\n\t$(BIBTEX) $(basename $@)\n\n####\n\n%.eps: %.svg\n\t$(INKSCAPE) \\\n\t$< \\\n\t--export-eps=$@\n# XXX HotOS\n\n%.eps: %.jpg\n\t$(INKSCAPE) \\\n\t$< \\\n\t--export-eps=$@ \\\n\t--export-text-to-path\n\n%.eps: %.fig\n\t$(FIG2DEV) -L eps $< $@\n\n%.pdf: %.fig\n\t$(FIG2DEV) -L pdf $< $@\n\n# \"-m 1.5 -S 4\": magnify and smooth\n%.png: %.fig\n\t$(FIG2DEV) -L png -m 1.5 -S 4 $< $@\n\n## XXX Grab rest of crud from hotos11 Makefile.\n#\n# This method produces small PDFs that have tight bounding boxes.\n$(SVGBITS:.svg=.pdf): %.pdf: %.eps\n\t$(PS2PDF) $(PS2PDFFLAGS_EPS) $< $@\n\n###############################################################################\n\n.PHONY: clean\nclean:\n\t$(RM) *.aux *.bbl *.blg *.dvi *.log *.out *.backup *~ \n\t$(RM) *-www.4ct *-www.4tc *-www.idv *-www.lg *-www.tmp *-www.xref \\\n\t      tex4ht.fls\n\n.PHONY: realclean\nrealclean: clean\n\t$(RM) *.eps *.pdf *.ps\n\t$(RM) *-www.css *-www*.html *-www*.png\n\t$(RM) $(FIGBITS:.fig=.eps) $(SVGBITS:.svg=.eps)\n\t$(RM) $(FIGBITS:.fig=.pdf) $(SVGBITS:.svg=.pdf)\n\t$(RM) $(FIGBITS:.fig=.png) $(SVGBITS:.svg=.png)\n\n###############################################################################\n\n## End of file.\n", "encoding": "ascii"}