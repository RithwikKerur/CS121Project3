{"url": "https://www.ics.uci.edu/~kay/courses/i41/hw/lab6menus.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\" />\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\" />\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Monday, October 31, 2005 5:11 PM\" />\n<TITLE>Restaurants with Menus</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERXDATA\" CONTENT=\"D23E7C2F\" />\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"CS 1, CS1, assignment, Scheme\" />\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"An assignment for ICS H21, an honors first-quarter course in computer science in Information and Computer Science, UC Irvine, using How to Design Programs by Matthias Felleisen et al.\" />\n<META HTTP-EQUIV=\"COPYRIGHT\" CONTENT=\"Copyright &#169; 2001 by David G. Kay.  All rights reserved.\" />\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<FONT FACE=\"Goudy Old Style\">Steps for modifying restaurants2.scm to include\nrestaurants with a menu field:</FONT>\n<UL>\n<LI>\n<FONT FACE=\"Goudy Old Style\">You need data definitions for three classes\nto replace the one rrant class:  One for the new rrant class (a structure\nwith four fields, a name, cuisine, phone, and menu), one for the menu (a\nlist of dishes), and one for a dish (a structure with two fields, a name\nand a price).</FONT>\n<BR /><BR />\n<FONT FACE=\"Goudy Old Style\">By separating out each of these classes, you\nhave a way of thinking about which type of data each function (and each\nhelper function) you write needs to act on.</FONT></LI>\n<BR /><BR />\n<LI>\n<FONT FACE=\"Goudy Old Style\">You need to handle the input of the new restaurants.\n This involves three things:  Asking the user for a single dish (name and\nprice), asking the user for a menu (i.e., repeatedly asking for individual\ndishes), and creating the new restaurant with the entered menu.  For the\nmiddle task, you need some way to let the user indicate he or she is finished\nentering dishes.  One way would be to ask the user to enter the empty string\n(&quot;&quot;) instead of a name when there are no more dishes to enter.\n Another would be to have a separate (sub-)menu command to add a new dish\n(and a command to quit adding new dishes).</FONT></LI>\n<BR /><BR />\n<LI>\n<FONT FACE=\"Goudy Old Style\">To print out a restaurant, you need to print\nits menu (which means you need a way to print a nicely formatted dish).</FONT></LI>\n<BR /><BR />\n<LI>\n<FONT FACE=\"Goudy Old Style\">The change-prices function needs to work on\na list of dishes.  One good approach would be to write a </FONT><FONT FACE=\"Courier New\" SIZE=2>dish-adjust-price</FONT><FONT FACE=\"Goudy Old Style\">\nfunction that takes a dish and a percentage and returns the dish with the\nprice changed by the specified percentage (up or down, as before).  Then\nyou can apply </FONT><FONT FACE=\"Courier New\" SIZE=2>dish-adjust-price</FONT><FONT FACE=\"Goudy Old Style\">\nto a whole menu.</FONT></LI>\n</UL>\n<HR />\n<FONT FACE=\"Goudy Old Style\"><A HREF=\"http://www.ics.uci.edu/~kay/\">David G. Kay</A>, <a href=mailto:kay@uci.edu>kay@uci.edu</A> </FONT><span><br />\n<font size=\"2\" face=\"Goudy Old Style\">\n<!-- #BeginDate format:fcAm1a -->Friday, November 7, 2008 12:00 PM<!-- #EndDate -->\n</font></span>\n</BODY>\n</HTML>", "encoding": "ascii"}