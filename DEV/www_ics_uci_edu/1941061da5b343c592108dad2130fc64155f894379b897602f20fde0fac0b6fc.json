{"url": "https://www.ics.uci.edu/~jmoorkan/vhdlref/operator.html", "content": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n<!-- base href=\"http://www.vdlande.com/VHDL/operator.html\" --><title>VHDL Reference Guide - Operators</title></head><body bgcolor=\"mintcream\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: -1px -1px 0pt; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: 12px; padding: 8px; background: rgb(221, 221, 221) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-family: arial,sans-serif; font-style: normal; font-variant: normal; font-size: 13px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; color: rgb(0, 0, 0); font-weight: normal; text-align: left;\">This is Google's cache of <a href=\"http://www.vdlande.com/VHDL/operator.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">http://www.vdlande.com/VHDL/operator.html</a>. It is a snapshot of the page as it appeared on Oct 6, 2009 17:39:11 GMT. The <a href=\"http://www.vdlande.com/VHDL/operator.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Learn more</a><br><br><div style=\"float: right;\"><a href=\"http://74.125.155.132/search?q=cache:tQa10qk3Zt4J:www.vdlande.com/VHDL/operator.html+site:www.vdlande.com+VHDL+reference+guide+vdlande&amp;hl=en&amp;client=firefox-a&amp;gl=us&amp;strip=1\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background: rgb(255, 255, 102) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-weight: bold;\">vhdl</span>&nbsp;These terms only appear in links pointing to this page: <span style=\"font-weight: bold;\">reference</span>&nbsp;<span style=\"font-weight: bold;\">guide</span>&nbsp;<span style=\"font-weight: bold;\">vdlande</span>&nbsp;&nbsp;</div></div></div><div style=\"position: relative;\">\n\n\n\n\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\">\n<caption><b>Operators</b></caption>\n<tbody><tr><td colspan=\"3\"><hr></td></tr>\n<tr>\n<td bgcolor=\"lightcyan\">Operator</td>\n<td>---- used in ----&gt;</td>\n<td bgcolor=\"lightgreen\">Expression</td>\n</tr>\n</tbody></table>\n\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Syntax</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\nSee LRM section 7.2\n\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Rules and Examples</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\" width=\"100%\">\n<tbody><tr>\n<td><table border=\"1\">\n<tbody><tr><td>The <b>logical operators</b> are predefined for <b>bit, boolean,\nbit_vector</b>, linear arrays of <b>boolean, std_logic</b> and\n<b>std_logic_vector</b> types. They return a value of the same type:\n<pre>and, or, nand, nor, xor, not</pre>\n</td></tr>\n</tbody></table></td>\n<td><table border=\"1\">\n<tbody><tr><td>The <b>equality</b> and <b>inequality</b> operators are\npredefined for all types, and they return a boolean value:\n<pre>=   -- equal to\n/=  -- not equal to</pre>\n</td></tr>\n</tbody></table>\n</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"60%\">\n<tbody><tr>\n<td>The other relational operators are predefined for all scalar types,\nand all one-dimensional array types. They also return a boolean value:\n<pre>&lt;   -- less than\n&gt;   -- greater than\n&lt;=  -- less than or equal to\n&gt;=  -- greater than or equal to\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>For arrays of different lengthsm the predefined relational operators\nalign the left-hand elements and compare corresponding positions. This\ncan lead to unexpected results:\n<pre>constant ARR1 :bit_vector := \"0011\";\nconstant ARR2 :bit_vector := \"01\";\n-- (ARR1 &lt; ARR2) will return true</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"right\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>The <b>&amp;</b> operator is used to concatenate (join) arrays, or join\nnew elements to an array:\n<pre>Z_BUS(1 downto 0) &lt;= '0' &amp; B_BIT;\nBYTE &lt;= A_BUS &amp; B_BUS;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>Add, subtract, multiply and divide are defined for integer and real.\nBoth operands must be the same type, and the result is also of the same\ntype:\n<pre>signal INT1, INT2: integer := 0;\nsignal REAL1, REAL2: real := 6.7;\n...\nINT1  &lt;= INT1 + 3;\nREAL1 &lt;= REAL2 - 2.2;\nINT2  &lt;= INT1 * REAL1;   --illegal\nINT2  &lt;= INT1 * INTEGER(REAL1);\nREAL2 &lt;= REAL1 / 42.3;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"right\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>For physical types (e.g.time), assignments must be dimensionally\nconsistant:\n<pre>variable TIME1,TIME2: time;\n...\nTIME1 := TIME2 * 2.5;\nTIME1 := TIME2 / 4;\nTIME1 := 3.6 ns + TIME2;\nTIME1 := TIME2 * 6.67 ns;   --illegal\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"90%\">\n<tbody><tr>\n<td>Other numeric operators are exponentiation (<b>**</b>), absolute\nvalue (<b>abs</b>), modulus (<b>mod</b>), and remainder (<b>rem</b>).\n</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n\n<div align=\"center\">\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Synthesis Issues</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\nMost predefined operators are synthesisable, providing they are used\nwith types accepted by the synthesis tool. See also <a href=\"http://www.vdlande.com/VHDL/type_dec.htm\">type declarations</a> and <a href=\"http://www.vdlande.com/VHDL/qualifex.htm\">overloading</a>\n<p>\nThe following are <b>not</b> usually synthesisable, except as part of a\nconstant expression: exponentiation (**), division by other than 2, mod,\nrem.\n\n</p><div align=\"center\">\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Whats New in '93</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\n<b>xnor</b> has been added to the logical operators in <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-94. New\n<b>shift</b> and <b>rotate</b> operators are defined for one-dimensional\narrays of bit or boolean:\n</p><pre><b>sll</b> -- shift left logical\n<b>srl</b> -- shift right logical\n<b>sla</b> -- shift left arithmetic\n<b>sra</b> -- shift right arithmetic\n<b>rol</b> -- rotate left\n<b>ror</b> -- rotate right\n</pre>\n\n</div>\n\n<hr width=\"80%\">\n</div></body></html>", "encoding": "ascii"}