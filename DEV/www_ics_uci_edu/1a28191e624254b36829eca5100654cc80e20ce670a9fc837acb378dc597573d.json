{"url": "https://www.ics.uci.edu/~emilyo/SimSE/publications.html", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><!-- #BeginTemplate \"/Templates/SimSE-template.dwt\" --><!-- DW6 -->\n<head>\n<!-- #BeginEditable \"doctitle\" --> \n<title>SimSE Publications</title>\n<!-- #EndEditable -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" /> \n<link rel=\"shortcut icon\" href=\"favicon.ico\" />\n<style type=\"text/css\">\n<!--\n.style1 {font-size: 10px}\n-->\n</style>\n</head>\n\n<body>\n<div id=\"texttitle\">\n<h1>SimSE Online</h1></div>\n<table width=\"100%\">\n<tr><td height=\"88\" align=\"left\"><div id=\"titlebar\"></div>\n</td><td align=\"right\"><div id=\"titlebarright\"></div></td></tr>\n</table>\n<div id=\"subtitlebar\">\n  <p> <a href=\"index.html\">Home</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n    <a href=\"news.html\">News</a>&nbsp;&nbsp;|&nbsp;&nbsp;\n    <a href=\"details.html\">Details</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n\t<a href=\"publications.html\">Publications</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n    <a href=\"downloads.html\">Downloads</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n\t<a href=\"faq.html\">FAQ</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n\t<a href=\"contribute.html\">Contribute</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n\t<a href=\"discuss.html\">Discuss</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n    <a href=\"links.html\">Links</a>&nbsp;&nbsp;|&nbsp;&nbsp; \n\t<a href=\"contact.html\">Credits/Contact</a>&nbsp;&nbsp;\n  </p>\n</div>\n\n<!-- #BeginEditable \"Body\" -->\n<table width=\"100%\" class=\"index\">\n<tr> \n<td width=\"100%\" align=\"left\" valign=\"top\"><h2>Publications</h2>\n  <ul>\n    <li><strong>Multi-Site Evaluation of SimSE </strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Navarro and Andr&eacute; van der Hoek</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract:</strong> In this paper, we describe a multi-site evaluation of SimSE, an educational software engineering simulation game. This study was designed to build on our previous experience of evaluating SimSE in courses and controlled lab settings at UC Irvine, in order to validate our findings and discover any factors that come into play when SimSE is used in other institutions. The study consisted of three different universities using SimSE in their respective courses and reporting the results to us. The results confirmed several of our previous findings, as well as highlighted a number of critical considerations that must be taken into account when using SimSE in a course. </p>\n    <p>&nbsp;</p>\n    <p><em>In Proceedings of the The 40th ACM Technical Symposium on Computer Science Education, Chattanooga, TN, March 2009</em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/SIGCSE2009.pdf\" target=\"_top\"> SIGCSE2009.pdf </a> (387KB)</p>\n    <p>&nbsp;</p>\n  </blockquote>\n  <ul><li><strong>On the Role of Learning Theories in Furthering Software Engineering Education </strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro and Andr&eacute; van der Hoek</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract:</strong> Learning theories describe how people learn. There is a large body of work concerning learning theories on which to draw, a valuable resource of which the domain of software engineering educational research has thus far not taken full advantage. In this chapter, we explore what role learning theories could play in software engineering education. We propose that learning theories can move the field of software engineering education forward by helping us to categorize, design, evaluate, and communicate about software engineering educational approaches. We demonstrate this by: (1) surveying a set of relevant learning theories, (2) presenting a categorization of common software engineering educational approaches in terms of learning theories, and (3) using one such approach (SimSE) as a case study to explore how learning theories can be used to improve existing approaches, design new approaches, and structure and guide the evaluation of an approach. </p>\n    <p>&nbsp;</p>\n    <p><em>In H.J.C. Ellis, S.A. Demurjian, and J.F. Naveda (Eds), Software Engineering: Effective Teaching and Learning Approaches and Practices, IGI Global, 2008. </em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/BookChapter-1.pdf\" target=\"_top\"> BookChapter-1.pdf </a> (552KB)</p>\n    <p>&nbsp;</p>\n  </blockquote>\n  <ul>\n    <li><strong>Comprehensive Evaluation of an Educational Software Engineering Simulation Environment </strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro and Andr&eacute; van der Hoek</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract:</strong> Software engineering educational approaches are often evaluated only anecdotally, or in informal pilot studies. We describe a more comprehensive approach to evaluating a software engineering educational technique (SimSE, a graphical, interactive, customizable, game-based software engineering simulation environment). Our method for evaluating SimSE went above and beyond anecdotal experience and approached evaluation from a number of different angles through a family of studies designed to assess SimSE&rsquo;s effectiveness and guide its development. In this paper, we demonstrate the insights and lessons that can be gained when using such a multi-angled evaluation approach. Our hope is that, from this paper, educators will: (1) learn ideas about how to more comprehensively evaluate their own approaches, and (2)&nbsp;be provided with evidence about the educational effectiveness of SimSE. </p>\n    <p>&nbsp;</p>\n    <p><em>In Proceedings of the Twentieth Conference on Software Engineering Education and Training, Dublin, Ireland, July 2007 </em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/CSEET2007.pdf\" target=\"_top\"> CSEET2007.pdf </a> (213KB)</p>\n    <p>&nbsp;</p>\n  </blockquote>\n  <ul><li><strong>SimSE: A Software Engineering Simulation Environment for Software Process Education</strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Navarro</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract:</strong> The typical software engineering education lacks a practical treatment of the <em>processes</em> of software engineering&mdash;students are presented with relevant process theory in lectures, but have only limited opportunity to put these concepts into practice in an associated class project. Simulation is a powerful educational tool that is commonly used to teach processes that are infeasible to practice in the real world. The work described in this dissertation is based on the hypothesis that simulation can bring to software engineering education the same kinds of benefits that it has brought to other domains. In particular, we believe that software process education can be improved by allowing students to practice, through a simulator, the activity of managing different kinds of quasi-realistic software engineering processes. To investigate this hypothesis, we used a three-part approach: (1) design and build SimSE, a graphical, interactive, educational, customizable, game-based simulation environment for software processes, (2) develop a set of simulation models to be used in seeding the environment, (3) evaluate the usage of the environment, both in actual software engineering courses, and in a series of formal, out-of-class experiments to gain an understanding of its various educational aspects. Some of the educational aspects explored in these experiments included how SimSE compares to traditional teaching techniques, and which learning theories are employed by students who play SimSE. Our evaluations strongly suggest that SimSE is a useful and educationally effective approach to teaching software process concepts. Students who play SimSE tend to learn the intended concepts, and find it a relatively enjoyable experience. These statements apply to students of different genders, academic performance levels, and industrial experience backgrounds. However, in order for SimSE to be used in the most effective way possible, our experience has demonstrated that it is crucial that it be used complementary to other educational techniques and accompanied by an adequate amount of direction and guidance given to the student. Our evaluations also suggested a number of promising directions for future research that can potentially increase the effectiveness of SimSE and be applied to educational simulation environments in general. </p>\n    <p>&nbsp;</p>\n    <p><em> Doctoral Dissertation, Donald Bren School of Information and Computer Sciences, University of California, Irvine, 2006</em></p>\n    <p>&nbsp;</p>\n    <p> <a href=\"../papers/Dissertation.pdf\">Dissertation.pdf</a> (7.6MB)</p>\n    <p>&nbsp;</p>\n    <p>&nbsp;</p>\n  </blockquote>\n  <ul><li><strong>Teaching by Modeling instead of by Models</strong></li>\n  </ul>\n  <blockquote>\n    <p> Thomas Birkhoelzer, Emily Oh Navarro, and Andr&eacute; van der Hoek</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract:</strong> Teaching and training is one of the important applications of software engineering process simulation. Up until this point, however, it has only been used in the context of students running simulations of process models that were built by someone else. In this paper, we suggest a different approach: to use the modeling activity for teaching as well, rather than the simulation activity only. In particular, we pro-pose to assign students the task of building a new soft-ware process simulation model using an existing educational software process simulation environment, SimSE. First experiences from a feasibility project are reported.</p>\n    <p>&nbsp;</p>\n    <p><em> In Proceedings of the 6th International Workshop on Software Process Simulation and Modeling, St. Louis, MO, May 2005</em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/ProSim2005.pdf\"> ProSim2005.pdf </a> (42KB) </p>\n    <p>&nbsp;</p>\n    <p>&nbsp;</p>\n  </blockquote>\n  <ul><li><strong>Software Process Modeling for an Educational Software Engineering Simulation Game</strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro and Andr&eacute; van der Hoek</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract</strong>: SimSE is an educational software engineering simulation game that uses a unique software process modeling approach. This approach combines both predictive and prescriptive aspects to support the creation of dynamic, interactive, graphical models for software engineering process education. This paper describes the different constructs in a SimSE process model, introduces the associated model builder tool, describes how we built an initial model of a waterfall process, and discusses the underlying tradeoffs and issues involved in our approach. </p>\n    <p>&nbsp;</p>\n    <p> <em>In Software Process Improvement and Practice: </em>10 (3), pp. 311-325. 2004.</p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/SPIP2004.pdf\">SPIP2004.pdf </a> (284KB) </p>\n  </blockquote>\n  <p>&nbsp; </p>\n  <ul>\n    <li><strong> Design and Evaluation of an Educational Software Process Simulation Environment and Associated Model</strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro and Andr&eacute; van der Hoek</p>\n    <p>&nbsp;</p>\n    <p> <strong>Abstract</strong>: Simulation is an educational tool that is commonly used to teach processes that are infeasible to practice in the real world. Software process education is a domain that has not yet taken full advantage of the benefits of simulation. To address this, we have developed SimSE, an educational, interactive, graphical environment for building and simulating software engineering processes in a game-like setting. We detail the design of SimSE, present an initial simulation model of a waterfall process that we developed, and describe an experiment that we conducted to evaluate the educational potential of SimSE and its initial model.</p>\n    <p>&nbsp;</p>\n    <p><em>In Proceedings of the Eighteenth Conference on Software Engineering Education and Training, Ottawa, Canada , April, 2005</em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/CSEET2005-2.pdf\">CSEET2005-2.pdf </a> (238KB)</p>\n  </blockquote>\n  <p>&nbsp; </p>\n  <ul>\n    <li><strong>SimSE: An Interactive Simulation Game for Software Engineering Education</strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro and Andr&eacute; van der Hoek </p>\n    <p>&nbsp;</p>\n    <p><strong>Abstract:</strong> The typical software engineering education lacks a practical experience of the <em>process</em> of software engineering&mdash;students are presented with relevant process theory in lectures, but have limited opportunity to put these concepts into practice in an associated class project. SimSE is an educational, interactive, fully graphical computer game that simulates software engineering processes, and is designed specifically to train students in situations that require an understanding and handling of software process issues. In this paper we describe SimSE, including its educational goals, its design, and its implementation. </p>\n    <p>&nbsp;</p>\n    <p> <em>In Proceedings of the 7 th IASTED International Conference on Computers and Advanced Technology in Education, Kauai, Hawaii, August 2004 </em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/CATE2004.pdf\">CATE2004.pdf </a> (132KB) </p>\n  </blockquote>\n  <p>&nbsp; </p>\n  <ul>\n    <li><strong>Software Process Modeling for an Interactive, Graphical, Educational Software Engineering Simulation Game</strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro and Andr&eacute; van der Hoek </p>\n    <p>&nbsp;</p>\n    <p><strong> Abstract:</strong> SimSE is an educational software engineering simulation game that uses a unique software process modeling approach. This approach combines both predictive and prescriptive aspects to support the creation of dynamic, interactive, graphical models for software engineering process education. This paper describes the different constructs in a SimSE process model, the associated model builder tool, and discusses the underlying tradeoffs and issues involved in this approach. </p>\n    <p>&nbsp; </p>\n    <p><em>In Proceedings of the 5th International Workshop on Software Process Simulation and Modeling, Edinburgh, Scotland, UK, May 2004 </em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/ProSim2004.pdf\">ProSim2004.pdf </a> (111KB) </p>\n  </blockquote>\n  <p>&nbsp; </p>\n  <ul>\n    <li><strong>Teaching Software Engineering Using Simulation Games</strong></li>\n  </ul>\n  <blockquote>\n    <p> Emily Oh Navarro, Alex Baker, and Andr&eacute; van der Hoek </p>\n    <p>&nbsp;</p>\n    <p><strong>Abstract:</strong> A typical software engineering course fails to teach its students many of the skills needed in software development organizations. Because lectures and class projects alone cannot adequately teach about the software process, we have developed a pair of games in which the process is simulated, giving students an opportunity to practice it firsthand. Problems and Programmers is an educational software engineering card game and SimSE is an educational computer simulation of the software process. </p>\n    <p>&nbsp; </p>\n    <p><em>In Proceedings of the 2004 International Conference on Simulation in Education, San Diego, California, January 2003</em></p>\n    <p>&nbsp;</p>\n    <p><a href=\"../papers/ICSIE2004.pdf\">ICSIE2004.pdf </a> (168KB)</p>\n  </blockquote>\n  <blockquote>\n    <p>&nbsp;</p>\n  </blockquote>\n  <ul>\n    <li><strong>Towards Game-Based Simulation as a Method of Teaching Software Engineering</strong><br />\n        <br />\n    Emily Oh and Andr&eacute; van der Hoek <br />\n    <br />\n    <strong>Abstract:</strong> A typical software engineering course consists of a series of lectures along with a small associated class project. Although this may seem like a logical approach, practical, didactic, and timing reasons necessarily lead to a lack of an in-depth treatment of the critical issues involved in the overall process of software engineering. This paper intro-duces and lays out our plans for constructing SimSE, a graphical, interactive, educational software engineering simulation environment that teaches the software process in a practical manner without the constraints of an actual class project. We anticipate that the use of SimSE will enable students to form a concrete understanding of the software process by allowing its users to explore different approaches to managing the software process and giving them insight into the complex cause and effect relationships underlying the process. <br />\n    <br />\n    <em>In Proceedings of the 2002 Frontiers in Education Conference, Boston, MA, November, 2002</em><br />\n    <br />\n    <a href=\"../papers/FIE2002.pdf\">FIE2002.pdf</a> (21KB) </li>\n  </ul>\n  <p>&nbsp;</p>\n  <ul>\n    <li><strong>Teaching Software Engineering through Simulation</strong><br />\n        <br />\n    Emily Oh <br />\n    <br />\n    <strong>Abstract:</strong> The common software engineering education method of theory presented in lectures along with application of these theories in an associated class project is insufficient, on its own, to effectively communicate the complex, fundamental dynamics underlying real-world software engineering processes. This paper introduces and lays out plans for SimSE, a detailed, graphical, fully interactive educational software engineering simulation environment that teaches the software process in a practical manner without the time and scope constraints of an actual class project. Once completed, this tool will enable students to form a concrete understanding of the software process by allowing its users to explore different approaches to managing the software process and giving them insight into the complex cause and effect relationships underlying the process. <br />\n    <br />\n    <em>In Proceedings of the 2002 International Conference on Software Engineering Doctoral Symposium, Orlando, Florida, May 2002</em><br />\n    <br />\n    <a href=\"../papers/ICSEDS02.pdf\">ICSEDS02.pdf</a> (38KB) </li>\n  </ul>\n  <p>&nbsp;</p>\n  <ul>\n    <li><strong>Teaching Software Engineering through Simulation</strong><br />\n        <br />\n    Emily Oh and Andr&eacute; van der Hoek <br />\n    <br />\n    <em>In Proceedings of the 2001 Workshop on Education and Training (WET), Santa Barbara, CA, July 2001</em><br />\n    <br />\n    <a href=\"../papers/TOOLS01.pdf\">TOOLS01.pdf</a> (16KB) </li>\n  </ul>\n  <p>&nbsp;</p>\n  <ul>\n    <li><strong>Adapting Game Technology to Support Individual and Organizational Learning</strong><br />\n        <br />\n    Emily Oh and Andr&eacute; van der Hoek <br />\n    <br />\n    <strong>Abstract:</strong> It is well known that traditional educational techniques can be complemented by simulation to achieve a more effective learning experience. One would expect the same phenomenon to be true in software development. However, the simulation techniques used thus far have not been effective. This paper introduces a novel approach to simulation for software development education that is based on the adaptation of game technology. Specifically, we propose to build a simulation environment that interacts with its users much like games such as SimCity and The Sims. In providing direct, graphical feedback, we hypothesize that this approach allows individuals to develop an understanding of the software processes used in their organization, while organizations as a whole benefit from the ability to explore different approaches to their software development process. <br />\n    <br />\n    <em>In Proceedings of the 13th International Conference on Software Engineering and Knowledge Engineering, Buenos Aires, Argentina, June 2001</em><br />\n    <br />\n    <a href=\"../papers/SEKE2001.pdf\">SEKE2001.pdf</a> (66 KB) </li>\n  </ul>\n  <p>&nbsp;</p>\n  <ul>\n    <li><strong>Challenges in Using an Economic Cost Model for Software Engineering Simulation</strong><br />\n        <br />\n    Emily Oh and Andr&eacute; van der Hoek <br />\n    <br />\n    <strong>Abstract:</strong> The common software engineering education method of theory presented in lectures along with application of these theories in an associated class project is insufficient, on its own, to effectively communicate the complex, fundamental dynamics underlying real-world software engineering processes. We are constructing a new approach to software engineering education that is based on the use of an educational software engineering simulation environment. However, a major challenge in developing such an environment lies in creating an accurate model of the real world upon which the simulation is based. In order for the simulation to be a successful educational tool, this model must be based on an appropriate economic model, must consist of the correct &quot;fundamental laws&quot; of software engineering, and must encode them quantitatively into accurate mathematical relationships, thereby correctly embodying and portraying all of the various factors, dynamics, and cause-and-effect relationships present in the real-world software engineering process. <br />\n    <br />\n    <em>In Proceedings of the 3rd International Workshop on Economics-Driven Software Engineering Research, Toronto, Canada, May 2001 (reprinted in </em><em>Projects &amp; Profits, 4 (8), 43-50</em>)<br />\n    <br />\n    <a href=\"../papers/EDSER3.pdf\">EDSER3.pdf</a> (54 KB)</li>\n  </ul>\n  <p class=\"MsoNormal\"><font color=\"black\" face=\"Copperplate Gothic Light\" ,=\",\"><span \n\nstyle=\"FONT-FAMILY: Arial\"></span></font></p>\n  <p>&nbsp;</p>\n  </td>\n</tr>\n</table>\n<!-- #EndEditable -->\n<hr />\n<table width=\"100%\">\n<tr>\n<td><p class=\"style1\">SimSE is funded by  NSF grant number DUE-0618869.</p>\n  </td>\n<td align=\"right\" width=\"50%\"><p><em>SimSE, University of California, Irvine</em></p>\n  <p><em>Copyright &copy;2010</em></p></td>\n</tr>\n</table>\n</body>\n<!-- #EndTemplate --></html>\n", "encoding": "ascii"}