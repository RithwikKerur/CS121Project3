{"url": "https://www.ics.uci.edu/~stasio/fall04/outline268.html", "content": "<HTML xmlns:o xmlns:st1>\r\n\t<HEAD>\r\n\t\t<TITLE>ICS 180: Schedule and Handouts</TITLE><LINK rev=\"Made\" href=\"mailto:stasio@ics.uci.edu\"></HEAD>\r\n\t<BODY>\r\n\t\t<H2 align=\"left\"><FONT size=\"4\">ICS 268, Fall'04</FONT></H2>\r\n\t\t<H2 align=\"left\">Lecture Summaries, Homeworks, Solutions, Handouts\r\n\t\t</H2>\r\n\t\t<P align=\"left\">[+ a tentative schedule for what's to come]</P>\r\n\t\t<P><A href=\"http://www.ics.uci.edu/~stasio/fall04/ics268.html\">[back to course main \r\n\t\t\t\tpage]</A>\r\n\t\t\t<HR>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lectures \r\n\t\t\t\t1-2&nbsp;</B><B style=\"mso-bidi-font-weight: normal\"> <A href=\"http://www.ics.uci.edu/~stasio/fall04/lect1.pdf\">\r\n\t\t\t\t\t<EM>(lect1.pdf)</EM></A></B></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lectures&nbsp;3-4&nbsp;\r\n\t\t\t\t<A href=\"http://www.ics.uci.edu/~stasio/spring04/h1-primes.pdf\"><EM>(h1-primes.pdf)</EM></A>&nbsp; \r\n\t\t\t\t,&nbsp; <A href=\"http://www.ics.uci.edu/~stasio/spring04/h2-composites.pdf\"><EM>(h2-composites.pdf)</EM></A>&nbsp; \r\n\t\t\t\t,&nbsp; <A href=\"http://www1.cs.columbia.edu/%7Etal/4995/angluin-yale-tr243.pdf\"><EM><FONT color=\"purple\">\r\n\t\t\t\t\t\t\t(Dana Angluin's notes on computation and number theory.pdf</FONT></EM></A><EM><FONT color=\"purple\">)</FONT></EM>.\r\n\t\t\t</B>\r\n\t\t</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">We \r\n\t\t\tcovered some basic modular arithmetic in the \"primes\" handout, and the extended \r\n\t\t\tEuclidean algorithm for computing gcd and modular inverses from chapter 4 of \r\n\t\t\tDana's notes.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"></B><B style=\"mso-bidi-font-weight: normal\">Lecture&nbsp;5&nbsp;</B></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">We \r\n\t\t\tshowed that modular exponentation can be done efficiently (polynomial time), \r\n\t\t\tbut we posed the inverse of the exponentiation, namely the discrete logarithm \r\n\t\t\tproblem, as a problem for which no known efficient&nbsp;algorithm is \r\n\t\t\tknown.&nbsp; We looked at&nbsp;two trivial attacks against discrete \r\n\t\t\tlogarithm:&nbsp;exhaustive search and guessing, and concluded that the first \r\n\t\t\truns in exponential time while the second one has a negligible probability of \r\n\t\t\tsuccess.&nbsp; We saw Shank's discrete logarithm running in time O(\\sqrt(q)) \r\n\t\t\tand the index calculus methods which run in time about O(2^{|p|^{1/3}), and we \r\n\t\t\ttranslated these two algorithms into bounds on the size of p and q needed to \r\n\t\t\tachieve security for the discrete logarithm in practice.&nbsp; Finally, we \r\n\t\t\tstated the discrete logarihtm assumption.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">Reading:&nbsp; \r\n\t\t\tMost of&nbsp;this material is in Stinson,&nbsp;chapter 6, sections 6.1, 6.2 \r\n\t\t\t(esp 6.2.1, the other attacks are an optional reading), and 6.6.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">In \r\n\t\t\tthe next lecture we'll abstract the assumption that discrete logarithm is hard \r\n\t\t\tinto an assumption that \"exponentiation is a one-way function\".&nbsp; The best \r\n\t\t\tlecture notes which introduce one-way functions is <A href=\"http:yevlect2.pdf\"><STRONG>Yevgeni \r\n\t\t\t\t\tDodis's lecture notes #2.pdf</STRONG></A>.&nbsp; For now read up \r\n\t\t\tsections 1-7.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">[If \r\n\t\t\tyou are curious why&nbsp;we are skipping Stinson 6.3-5, here is a quick \r\n\t\t\toverview of that material:&nbsp;Chapter 6.3 gives another type of evidence that \r\n\t\t\tthe discrete logarithm is hard.&nbsp; Namely, it shows \r\n\t\t\tthat&nbsp;any&nbsp;attack logarithm which is \"generic\", must run in time at \r\n\t\t\tleast \\Omega(\\sqrt(q)).&nbsp; This shows that a type of a DL \r\n\t\t\tcomputing&nbsp;algorithm like the Shank's&nbsp;algorithm&nbsp;in \r\n\t\t\tfact&nbsp;cannot be improved.&nbsp; This is an optional but very recommended \r\n\t\t\treading.&nbsp; Sections 6.4 and 6.5 show that the discrete logarithm problem \r\n\t\t\tcan be posed in other groups than the Z_p^*.&nbsp; Section 6.4 describes the DL \r\n\t\t\tproblem in the extension field of Z_p, and section 6.5 descibes the DL problem \r\n\t\t\tover elliptic curves.&nbsp; Both are important, but not essential to the \r\n\t\t\tprogress of ideas in this class, so they&nbsp;can be left as an optional \r\n\t\t\treading.]</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lecture&nbsp;6</B></P>\r\n\t\t<P></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">We \r\n\t\t\thave&nbsp;defined a (weak) secure authentication and shown&nbsp;how to use \r\n\t\t\tone-way permutation (for example based on modular exponentiation) to build an \r\n\t\t\tauthentication protocol that satisfies this security property.&nbsp; One of the \r\n\t\t\tweaknesses of this authentication scheme considered in the previous lecture is \r\n\t\t\tthat it is stateful and that every verifier which might want to authenticate \r\n\t\t\tthe client needs a separate verification key.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">This \r\n\t\t\tmaterial is in section 11 of the above lecture notes.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lectures&nbsp;7-8&nbsp;</B></P>\r\n\t\t<P></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">We \r\n\t\t\tdefine the strong notion of security for the authentication scheme (a.k.a. \r\n\t\t\t\"identification scheme\").&nbsp; We show a public-key (and stateless) \r\n\t\t\tauthentication scheme&nbsp;which is based on&nbsp;modular exponentiation.&nbsp; \r\n\t\t\tWe introduce the concept of zero-knowledge proof and of the simulation proof \r\n\t\t\ttechnique, and we show that this identification scheme is based on a \r\n\t\t\tzero-knowledge proof of knowledge of discrete logarithm.&nbsp; This scheme is \r\n\t\t\tsimilar to the Fiat-Shamir identification scheme, and it forms a basis of the \r\n\t\t\tSchnorr Signature scheme [Schnorr, Crypto'89].&nbsp;&nbsp;We show that this \r\n\t\t\tscheme is secure&nbsp;under the discrete logarithm assumption, i.e. the \r\n\t\t\tassumption that&nbsp;modular exponentiation&nbsp;is a one-way function.&nbsp; \r\n\t\t\tIn its general form, this scheme&nbsp;actually&nbsp;works using any one-way \r\n\t\t\tfunction with&nbsp;certain \"homomorphic\" properties.&nbsp;</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lectures&nbsp;9-10</B></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">We \r\n\t\t\tintroduce preimage resistant, second-preimage resistant, and collision \r\n\t\t\tresistant hash functions.&nbsp; We introduce the random oracle model for hash \r\n\t\t\tfunctions, which implies all these properites.&nbsp; We show Merkle tree and \r\n\t\t\tMerkle-Damgard construction of hash function on infinite domain from a hash \r\n\t\t\tfunction that takes element from a small domain (such hash functions are called \r\n\t\t\t\"compression functions\"), and we argue that both constructions preserve all the \r\n\t\t\tneeded properties of the hash function.&nbsp; We define message authentication \r\n\t\t\tschemes (MACs), and we define a strong notion of security for MACs as \r\n\t\t\tresistance against chosen message attack (CMA).&nbsp; We show a secure MAC \r\n\t\t\tscheme based on a hash function, and argue that this scheme is CMA-secure as \r\n\t\t\tlong as the hash function can be modeled as a random oracle.&nbsp; We show also \r\n\t\t\ta number-theoretical hash scheme, by Pedersen [Crypto'91], which is collision \r\n\t\t\tresistant under the discrete logarithm assumption.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">The \r\n\t\t\tmaterial for these lectures is Stinson's chapter 4, sections 4.1 to 4.4, with \r\n\t\t\tsection 4.5 as a recommended optional reading.&nbsp; For a different \r\n\t\t\ttake,&nbsp;see <A href=\"http:malkin22.pdf\"><STRONG>Tal Malkin's lecture&nbsp;22.pdf</STRONG></A>\r\n\t\t\t&nbsp;and&nbsp;<A href=\"http:dodis11.pdf\"><STRONG>Yevgeni Dodis's lecture&nbsp;11.pdf</STRONG></A>.</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lecture&nbsp;11</B></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">We \r\n\t\t\tdefine&nbsp;signature schemes and various notions of their security.&nbsp; We \r\n\t\t\tshow the Schnorr Signature scheme based on the authentiaction protocol from \r\n\t\t\tlectures 7-8 above.&nbsp; We argue that it is existentially unforgeable under \r\n\t\t\tthe CMA attack under the discrete logarithm assumption and assuming the random \r\n\t\t\toracle model for a hash function used in this scheme.&nbsp; We show the \r\n\t\t\tstandard Digital Signature Standard (DSS) signature, which can be looked at as \r\n\t\t\ta variant of the Schnorr signature scheme (historically DSS was first, but \r\n\t\t\tSchnorr signature has better understood security).</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">\r\n\t\t\tSee Stinson's 7.1, 7.2, 7.4.1, 7.4.2.&nbsp; For the background reading \r\n\t\t\twith&nbsp;optional&nbsp;subjects&nbsp;like one-time signatues (which are also \r\n\t\t\tcovered in Stinson's chapter 7.5.1), see&nbsp;<A href=\"http:dodis12.pdf\"><STRONG>Yevgeni \r\n\t\t\t\t\tDodis's lecture&nbsp;12.pdf</STRONG></A>&nbsp;or <A href=\"http:malkin18.pdf\">\r\n\t\t\t\t<STRONG>Tal Malkin's lecture&nbsp;18.pdf</STRONG></A>,&nbsp;&nbsp; <A href=\"http:malkin19.pdf\">\r\n\t\t\t\t<STRONG>lecture&nbsp;19.pdf</STRONG></A>, and <A href=\"http:malkin21.pdf\"><STRONG>lecture&nbsp;21.pdf</STRONG></A>,</P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\"><B style=\"mso-bidi-font-weight: normal\">Lectures&nbsp;12-13</B></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">\r\n\t\tWe introduce the RSA permutation, examine its relation to factoring, and argue \r\n\t\twhy it is assumed&nbsp;to be a&nbsp;trapdoor permuation.&nbsp; We show Rabin's \r\n\t\tpermutation and argue that Rabin is a Trapdoor permutation if and only if \r\n\t\tfactoring RSA moduli is hard.&nbsp; We show several signature schemes based on \r\n\t\tRSA permutation, with varying degrees of security: plain RSA, padded RSA, and \r\n\t\tfull-domain hash RSA signature.&nbsp; Only the last scheme is known to be \r\n\t\texistentially unforgeable under the CMA attack assuming RSA is a trapdoor \r\n\t\tpermutation and assuming the random oracle model for the hash function.\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l0 level1 lfo1; tab-stops: list .5in\">\r\n\t\t\tStinson covers the RSA cryptosystem in chapter 5.&nbsp; So far we covered \r\n\t\t\tmaterial in Sections 5.1-5.3 and 5.7-5.8.&nbsp; Sections 5.4-5.6 are optional \r\n\t\t\treading.&nbsp; We will come back Section 5.9 when discussing RSA encryption.\r\n\t\t\t<HR>\r\n\t\t<P></P>\r\n\t\t<P></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l4 level1 lfo2; tab-stops: list .5in\"><STRONG>Homework \r\n\t\t\t\t1&nbsp;(due Tuesday, 10/5) </STRONG><A href=\"http://www.ics.uci.edu/~stasio/fall04/hmw1.pdf\">\r\n\t\t\t\t<EM><STRONG>(hmw1.pdf)</STRONG></EM></A>,&nbsp;<A href=\"http://www.ics.uci.edu/~stasio/fall04/sol1.pdf\"><EM><STRONG>(sol1.pdf)</STRONG></EM></A></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l4 level1 lfo2; tab-stops: list .5in\"><STRONG>Homework&nbsp;2&nbsp;(due \r\n\t\t\t\tThursday, 10/14) </STRONG><A href=\"http://www.ics.uci.edu/~stasio/fall04/hmw2.pdf\">\r\n\t\t\t\t<EM><STRONG>(hmw2.pdf)</STRONG></EM></A>,&nbsp;<A href=\"http://www.ics.uci.edu/~stasio/fall04/sol2.pdf\"><EM><STRONG>(sol2.pdf)</STRONG></EM></A></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l4 level1 lfo2; tab-stops: list .5in\"><STRONG>Homework&nbsp;3&nbsp;(due \r\n\t\t\t\tThursday, 10/21) </STRONG><A href=\"http://www.ics.uci.edu/~stasio/fall04/hmw3.pdf\">\r\n\t\t\t\t<EM><STRONG>(hmw3.pdf)</STRONG></EM></A>,&nbsp;<A href=\"http://www.ics.uci.edu/~stasio/fall04/sol3.pdf\"><EM><STRONG>(sol3.pdf)</STRONG></EM></A></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l4 level1 lfo2; tab-stops: list .5in\"><STRONG>Homework&nbsp;4&nbsp;(due \r\n\t\t\t\tThursday, 11/04) </STRONG><A href=\"http://www.ics.uci.edu/~stasio/fall04/hmw4.pdf\">\r\n\t\t\t\t<EM><STRONG>(hmw4.pdf)</STRONG></EM></A>,&nbsp;<A href=\"http://www.ics.uci.edu/~stasio/fall04/sol4.pdf\"><EM><STRONG>(sol4.pdf)</STRONG></EM></A></P>\r\n\t\t<P></P>\r\n\t\t<P class=\"MsoNormal\" style=\"mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-list: l4 level1 lfo2; tab-stops: list .5in\"><STRONG>Homework&nbsp;5&nbsp;(due \r\n\t\t\t\tafter the final week) </STRONG><A href=\"http://www.ics.uci.edu/~stasio/fall04/hmw5.pdf\">\r\n\t\t\t\t<EM><STRONG>(hmw5.pdf)</STRONG></EM></A></P>\r\n\t</BODY>\r\n</HTML>\r\n", "encoding": "ascii"}