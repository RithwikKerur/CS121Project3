{"url": "https://www.ics.uci.edu/~rickl/courses/cs-171/0-ihler-2016-fq/Projects/ConnectK/scripts/test_ids", "content": "#!/bin/bash\n\nmodule load java/1.8.0_20 python/3.5.1 gcc/5.4.0\n\n# usage: \n# remove the log, run a \"does it move\" test on milestone 5, & log it\n#    rm ati/M05.io.log; ati/test_io M05 | tee ati/M05.io.log\n#\n# Play three different board & rule configurations against both a random and a very simple minimax player\n#\n\n# \"do anything\" test:\ncfg1=\"-nogui -g:0 -h:3 -w:3 -k:3 -t:5000 -b:500\"\ncfg2=\"-nogui -g:1 -h:7 -w:6 -k:4 -t:4000 -b:500\"\ncfg3=\"-nogui -g:0 -h:9 -w:7 -k:5 -t:5000 -b:500\"\np1ortie=\"grep -c -e 'Winner is: 1' -e 'Winner is: 0'\"\np2ortie=\"grep -c -e 'Winner is: 2' -e 'Winner is: 0'\"\n\n#JAR=\"ConnectK_1.8.jar\"   # old, no timer version\nJAR=\"ConnectK_nolog.jar\"        # ATI fixes\n\nopRandom=\"py:ati/src/TestRandomAI.py\"\nopBasic=\"py:ati/src/TestBasicAI.py\"\n\n\n\necho \"Processing \" ${1} \" : \"\necho \"team, language, moves?, error\"\n\nfor dir in Submissions/${1}_*/${2}* ; do\n  found=''\n  gname=${dir#*/M0*/}; gname=${gname%%_*}\n  log=\"log/${gname}.${1}_ids.log\"\n  for ai in $dir/*/src/*AI.py ; do\n    [ -f \"$ai\" ] || continue\n    echo -n ${gname} \",  python, \"\n    found=\"py:${ai}\"\n  done\n  for ai in $dir/*/bin/*AI.class ; do\n    [ -f \"$ai\" ] || continue\n    echo -n ${gname} \", java, \"\n    found=\"${ai%.*}\"\n  done\n  #for ai in $dir/*/bin/*AI ; do\n  for ai in $dir/*/bin/*AJ ; do\n    [ -f \"$ai\" ] || continue\n    echo -n ${gname} \", cpp, \"\n    found=\"cpp:${ai}\"\n  done\n  if [ $found ] ; then \n    ## echo \"================= STARTING VS $found ====================\" \n    echo -n \"RANDOM, \"   # !! First command overwrites old log; after that, append\n    java -jar $JAR $cfg1 \"${found}\" $opRandom  2>&1| tee  $log | eval ${p1ortie} |tr '\\n' ' ' \n    echo -n \", \"\n    java -jar $JAR $cfg1 $opRandom \"${found}\" 2>&1| tee -a $log | eval $p2ortie |tr '\\n' ' ' \n    echo -n \", \"\n    \n    java -jar $JAR $cfg2 \"${found}\" $opRandom  2>&1| tee -a $log | eval $p1ortie |tr '\\n' ' ' \n    echo -n \", \"\n    java -jar $JAR $cfg2 $opRandom \"${found}\" 2>&1| tee -a $log | eval $p2ortie |tr '\\n' ' ' \n    echo -n \", \"\n    \n    java -jar $JAR $cfg3 \"${found}\" $opRandom  2>&1| tee -a $log | eval $p1ortie |tr '\\n' ' ' \n    echo -n \", \"\n    java -jar $JAR $cfg3 $opRandom \"${found}\" 2>&1| tee -a $log | eval $p2ortie |tr '\\n' ' ' \n    echo -n \", BASIC, \"\n\n    java -jar $JAR $cfg1 \"${found}\" $opBasic  2>&1| tee -a $log | eval ${p1ortie} |tr '\\n' ' ' \n    echo -n \", \"\n    java -jar $JAR $cfg1 $opBasic \"${found}\" 2>&1| tee -a $log | eval $p2ortie |tr '\\n' ' ' \n    echo -n \", \"\n    \n    java -jar $JAR $cfg2 \"${found}\" $opBasic  2>&1| tee -a $log | eval $p1ortie |tr '\\n' ' ' \n    echo -n \", \"\n    java -jar $JAR $cfg2 $opBasic \"${found}\" 2>&1| tee -a $log | eval $p2ortie |tr '\\n' ' ' \n    echo -n \", \"\n    \n    java -jar $JAR $cfg3 \"${found}\" $opBasic  2>&1| tee -a $log | eval $p1ortie |tr '\\n' ' ' \n    echo -n \", \"\n    java -jar $JAR $cfg3 $opBasic \"${found}\" 2>&1| tee -a $log | eval $p2ortie |tr '\\n' ' ' \n\n    echo  | tee -a $log\n    echo \"=======================================================================================\"  | tee -a $log\n    echo  | tee -a $log\n  else\n    gname=${dir#*/M0*/}; gname=${gname%%_*}\n    echo $gname \", missing, 0,0,0,0,0,0\" ; \n    echo  \n    echo \"=======================================================================================\" \n    echo  \n  fi\n  rm -f core* 1.txt\ndone\n\n", "encoding": "ascii"}