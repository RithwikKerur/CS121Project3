{"url": "https://www.ics.uci.edu/~alexv/multicore.html", "content": "<!DOCTYPE HTML SYSTEM \"html.dtd\">\n<HTML CHARSET=\"head\">\n<HEAD>   <TITLE>Multi-core software</TITLE>    </HEAD>\n\n<font color=\"cc9876\">\n<BODY><H2> Synchronization and Scheduling of Data-Parallel Programs for Multi-Core Processors\n</H2>\n</font>\n\n<p>\nMulti-core (parallel) processors have become ubiquitous. The use of such systems is key to science, engineering, finance, and other major areas of the economy. However, increased applications performance on such systems can only be achieved with advances in mapping such applications to multi-core machines. This task is made more difficult by the presence of complex memory organizations which is perhaps the key bottleneck to efficient execution. This research involves making the mapping of the program to the machine aware of the complexities of the memory-hierarchy in all phases of the compilation process to ensure a good fit between the application code and the actual machine and thereby guarantee much more effective utilization of the hardware (and thus efficient/fast execution) than was previously possible.\n</p>\n\n<p>\nThis research develops a new cache-hierarchy-aware compilation and runtime system (i.e., including compilation, scheduling, and static/dynamic processor mapping of parallel programs). These tasks have one thing in common: they all need accurate estimates of data element (iteration, task) computation and memory access times which are currently beyond the (cache-oblivious) state-of-the-art. This research aims to develop new techniques for iteration space partitioning, scheduling, and synchronization which capture the variability due to cache, memory, and conditional statement behavior and their interaction.\n</p>\n\n<body> </HTML>\n", "encoding": "ascii"}