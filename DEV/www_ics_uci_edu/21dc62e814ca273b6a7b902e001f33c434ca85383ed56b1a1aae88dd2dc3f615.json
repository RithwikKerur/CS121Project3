{"url": "https://www.ics.uci.edu/~skong2/lr_bilinear.html", "content": "<html>\n<head>\n<title>nonlinear, bilinear, and beyond - Shu Kong (Aimery) - UC Irvine - Computer Vision</title>\n<link rel=\"icon\" href=\"img/bilinear_sm.png\" type=\"img/jpg\">\n<style>\nh1 { padding : 0; margin : 0; }\nbody { padding : 0; font-family : Arial; font-size : 16px; background-color : #EFEFEF; } /* background-image : url('bg.png');}*/\n#container { width : 1000px; margin : 20px auto;  background-color : #fff; padding : 50px; border : 1px solid #ccc; }\n#me { border : 0 solid black; margin-bottom : 0;}\n#sidebar { margin-left : 25px; border : 0 solid black; float : right; margin-bottom : 0;}\n#content { display : block; margin-right : 260px;}\na { text-decoration : none; }\na:hover { text-decoration : underline; }\na:visited { color : blue; }\na.invisible { color : inherit; text-decoration : inherit; }\n.publogo { margin-right : 10px; height: 50px; width: 50px; float : left; border : 0;}\n.publication { clear : left; padding-bottom : 0px;}\n.publication p { height : 60px; }\n.codelogo { margin-right : 10px; float : left; border : 0;}\n.code { clear : left; padding-bottom : 10px; vertical-align :middle;}\n.code .download a { display : block; margin : 0 15px; float : left;}\n<!-- #simpsons { margin : 5px auto; text-align : center; color : #B7B7B7; } -->\n<!-- \t#erdos { color : #999; text-align : center; font-size : 12px; } -->\n</style>\n<script type=\"text/javascript\">\n\nvar _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-26193351-1']);\n\t_gaq.push(['_trackPageview']);\n(function() {\nvar ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\nga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\nvar s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n\n</script>\n</head>\n\n<body>\n<div id=\"container\">\n<div id=\"sidebar\">\n<figure>\n<img src=\"img/bilinear_sm.png\" id=\"me\"> \n<figcaption>nonlinear, bilinear, and beyond</figcaption>\n</figure>\n<br>\n</div>\n\n<div id=\"content\">\n<h1 align=\"center\">Low-rank Bilinear Pooling for Fine-grained Classification </h1>\n\n\n<p align=\"center\">\n          <a href=\"http://www.ics.uci.edu/~skong2/\" target=\"_blank\">Shu Kong</a>,\n          <a href=\"http://www.ics.uci.edu/~fowlkes/\" target=\"_blank\">Charless Fowlkes</a>\n</p>\n\n\n<p>\n<font color=\"red\">Last update: March 23, 2017.</font>\n</p>\n\n\n<div id=\"content\">\n<br><br>\n\t    <center>\n\t      <img src=\"http://www.ics.uci.edu/~skong2/img/focusHighlight_3vis.png\" alt=\"[birds]\" width=\"700\" />\n\t    </center>\n<br><br>\n</div>\n\n\nPooling second-order local feature statistics to form a high-dimensional\nbilinear feature has been shown to achieve state-of-the-art performance on a\nvariety of fine-grained classification tasks.  To address the computational\ndemands of high feature dimensionality, we propose to represent the covariance\nfeatures as a matrix and apply a low-rank bilinear classifier.  The resulting\nclassifier can be evaluated without explicitly computing the bilinear feature\nmap which allows for a large reduction in the compute time as well as\ndecreasing the effective number of parameters to be learned.\n\n\n\n<p>\nTo further compress the model, we propose classifier co-decomposition that\nfactorizes the collection of bilinear classifiers into a common factor and\ncompact per-class terms.  The co-decomposition idea can be deployed through two\nconvolutional layers and trained in an end-to-end architecture.  We suggest a\nsimple yet effective initialization that avoids explicitly first training and\nfactorizing the larger bilinear classifiers.  Through extensive experiments, we\nshow that our model achieves state-of-the-art performance on several public\ndatasets for fine-grained classification trained with only category labels.\nImportantly, our final model is an order of magnitude smaller than the recently\nproposed compact bilinear model, and three orders smaller\nthan the standard bilinear CNN model.\n\n\n<p>\n<b>keywords</b>: weakly supervised learning, fine-grained classification, bilinear model, bilinear classifier, low-rank, compact model, decomposition, tensorial data, second order statistics, covariance matrix, pooling, etc.\n\n\n<h2>Reference</h2>\n<ul>\n<li>\n<div class=\"publication\">\n<p> <b>S. Kong</b>, C. Fowlkes, \"<font color=#AF7817>Low-rank Bilinear Pooling for Fine-Grained Classification</font>\",\n<a href=\"http://cvpr2017.thecvf.com/\">CVPR</a>, 2017.\n<br>\n[<a href=\"lr_bilinear.html\">project page</a>] \n[<a href=\"https://arxiv.org/abs/1611.05109\">technical report</a>] \n[<a href=\"img/LRBP_abstract.pdf\">abstract</a>] \n[<a href=\"https://github.com/aimerykong/Low-Rank-Bilinear-Pooling\">demo</a>]\n[<a href=\"https://drive.google.com/open?id=0BxeylfSgpk1MOWt3U1U4WWdmSkk\">model</a>]\n[<a href=\"img/LRBP_poster_v0.4.pdf\">poster</a>] \n[<a href=\"img/fg_CV.pdf\">slides</a>] \n</p>\n</div>\n</li>\r\n</ul>\n\n<h2>Update checklist</h2>\n<ul>\n<li>\n<p> <del>creating github page;</del> [<a href=\"https://github.com/aimerykong/Low-Rank-Bilinear-Pooling\">available</a>]</p>\n</li>\n<li>\n<p> <del>quick training using caffe, including matlab files for initialization; </del> [<a href=\"https://github.com/aimerykong/Low-Rank-Bilinear-Pooling/tree/master/demo1_quickTrainCaffe\">available</a>]</p>\n</li>\n<li>\n<p> <del>hyperparameter study by low-rank and co-decomposition on the classifier parameters; </del>[<a href=\"https://github.com/aimerykong/Low-Rank-Bilinear-Pooling/tree/master/demo2_lowRank_coDecomposition\">available</a>]</p>\n</li>\n<li>\n<p> <del>three methods of visualization; </del>[<a href=\"https://github.com/aimerykong/Low-Rank-Bilinear-Pooling/tree/master/demo3_modelVisualization\">available</a>]</p>\n</li>\n<li>\n<p> fine-tuning the network using matconvnet; [TODO]</p>\n</li>\n<li>\n<p> others...</p>\n</li>\r\n</ul>\n\n<br clear=\"both\">\n</div>\n</div>\n\n\n\n</body>\n</html>\n", "encoding": "ascii"}