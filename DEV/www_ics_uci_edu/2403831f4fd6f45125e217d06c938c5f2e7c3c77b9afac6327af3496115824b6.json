{"url": "https://www.ics.uci.edu/~pattis/common/modules/courselibdoc/goody.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r\n<html><head><title>Python: module goody</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n</head><body bgcolor=\"#f0f0f8\">\r\n\r\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"heading\">\r\n<tr bgcolor=\"#7799ee\">\r\n<td valign=bottom>&nbsp;<br>\r\n<font color=\"#ffffff\" face=\"helvetica, arial\">&nbsp;<br><big><big><strong>goody</strong></big></big></font></td\r\n><td align=right valign=bottom\r\n><font color=\"#ffffff\" face=\"helvetica, arial\"><a href=\".\">index</a><br><a href=\"file:///C:/users/pattis/workspace/courselib/goody.py\">c:\\users\\pattis\\workspace\\courselib\\goody.py</a></font></td></tr></table>\r\n    <p><tt>#&nbsp;These&nbsp;names&nbsp;are&nbsp;meant&nbsp;to&nbsp;be&nbsp;imported&nbsp;like:<br>\r\n#&nbsp;&nbsp;&nbsp;from&nbsp;goody&nbsp;import&nbsp;irange<br>\r\n#&nbsp;or<br>\r\n#&nbsp;&nbsp;&nbsp;import&nbsp;goody<br>\r\n#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;which&nbsp;would&nbsp;be&nbsp;used&nbsp;as&nbsp;goody.irange</tt></p>\r\n<p>\r\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\r\n<tr bgcolor=\"#eeaa77\">\r\n<td colspan=3 valign=bottom>&nbsp;<br>\r\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Functions</strong></big></font></td></tr>\r\n    \r\n<tr><td bgcolor=\"#eeaa77\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\r\n<td width=\"100%\"><dl><dt><a name=\"-frange\"><strong>frange</strong></a>(*args)</dt><dd><tt>Returns&nbsp;a&nbsp;float&nbsp;range:&nbsp;e.g.,&nbsp;for&nbsp;i&nbsp;in&nbsp;range(0.1,&nbsp;1.0,&nbsp;0.1):&nbsp;print(i)<br>\r\n&nbsp;&nbsp;prints&nbsp;the&nbsp;numbers&nbsp;.1,&nbsp;.2,&nbsp;.3,&nbsp;...&nbsp;.9,&nbsp;1.:&nbsp;0.1&nbsp;through&nbsp;1.0&nbsp;inclusive<br>\r\nUse&nbsp;it&nbsp;like&nbsp;range/irange&nbsp;(with&nbsp;1,&nbsp;2,&nbsp;or&nbsp;3&nbsp;arguments).</tt></dd></dl>\r\n <dl><dt><a name=\"-irange\"><strong>irange</strong></a>(*args)</dt><dd><tt>Returns&nbsp;an&nbsp;inclusive&nbsp;range:&nbsp;e.g.,&nbsp;for&nbsp;i&nbsp;in&nbsp;range(1,10):&nbsp;print(i)<br>\r\n&nbsp;&nbsp;prints&nbsp;the&nbsp;numbers&nbsp;1&nbsp;through&nbsp;10&nbsp;inclusive<br>\r\nUse&nbsp;it&nbsp;like&nbsp;range&nbsp;(with&nbsp;1,&nbsp;2,&nbsp;or&nbsp;3&nbsp;arguments),&nbsp;but&nbsp;with&nbsp;irange&nbsp;the&nbsp;stop<br>\r\n&nbsp;&nbsp;value&nbsp;is&nbsp;in&nbsp;the&nbsp;range</tt></dd></dl>\r\n <dl><dt><a name=\"-leading\"><strong>leading</strong></a>(text, c<font color=\"#909090\">=' '</font>, extra<font color=\"#909090\">=0</font>)</dt><dd><tt>Returns&nbsp;a&nbsp;string&nbsp;of&nbsp;all&nbsp;c,&nbsp;whose&nbsp;length&nbsp;is&nbsp;the&nbsp;#&nbsp;of&nbsp;c's&nbsp;at&nbsp;the&nbsp;front&nbsp;of&nbsp;text<br>\r\n&nbsp;&nbsp;e.g.,&nbsp;length('xxxyy','x')&nbsp;returns&nbsp;'xxx'</tt></dd></dl>\r\n <dl><dt><a name=\"-read_file_values\"><strong>read_file_values</strong></a>(file, sep<font color=\"#909090\">=None</font>, conversions<font color=\"#909090\">=None</font>)</dt><dd><tt>Iterator&nbsp;for&nbsp;reading&nbsp;values&nbsp;sequentially&nbsp;from&nbsp;a&nbsp;file,&nbsp;regardless&nbsp;of<br>\r\n&nbsp;&nbsp;where&nbsp;they&nbsp;appear&nbsp;on&nbsp;lines.<br>\r\nIf&nbsp;conversion&nbsp;is&nbsp;None,&nbsp;the&nbsp;string&nbsp;token&nbsp;is&nbsp;returned;&nbsp;if&nbsp;it&nbsp;is&nbsp;a&nbsp;list<br>\r\n&nbsp;&nbsp;of&nbsp;conversion&nbsp;functions,&nbsp;then&nbsp;they&nbsp;they&nbsp;are&nbsp;applied&nbsp;(circularly)&nbsp;to<br>\r\n&nbsp;&nbsp;each&nbsp;read&nbsp;string.<br>\r\nExample&nbsp;<a href=\"#-read_file_values\">read_file_values</a>(file,conversions=[str,int,int]&nbsp;will&nbsp;read/return<br>\r\n&nbsp;&nbsp;a&nbsp;string,&nbsp;an&nbsp;int,&nbsp;an&nbsp;int,&nbsp;a&nbsp;string,&nbsp;an&nbsp;int,&nbsp;an&nbsp;int,&nbsp;a&nbsp;string,&nbsp;....</tt></dd></dl>\r\n <dl><dt><a name=\"-safe_open\"><strong>safe_open</strong></a>(prompt_text, mode, error_message, default<font color=\"#909090\">=''</font>)</dt><dd><tt>Prompts&nbsp;the&nbsp;user&nbsp;for&nbsp;a&nbsp;file&nbsp;(openable&nbsp;in&nbsp;mode)&nbsp;with&nbsp;and&nbsp;error&nbsp;message<br>\r\n&nbsp;&nbsp;to&nbsp;display&nbsp;if&nbsp;opening&nbsp;the&nbsp;file&nbsp;in&nbsp;that&nbsp;mode&nbsp;fails)<br>\r\nIf&nbsp;mode=='w',&nbsp;and&nbsp;the&nbsp;file&nbsp;exists,&nbsp;the&nbsp;user&nbsp;will&nbsp;be&nbsp;prompted&nbsp;whether&nbsp;to&nbsp;overwrite&nbsp;it<br>\r\nIf&nbsp;default&nbsp;is&nbsp;supplied,&nbsp;it&nbsp;will&nbsp;appear&nbsp;in&nbsp;the&nbsp;prompt&nbsp;and&nbsp;be&nbsp;the&nbsp;file<br>\r\n&nbsp;&nbsp;opened&nbsp;if&nbsp;the&nbsp;user&nbsp;just&nbsp;presses&nbsp;enter</tt></dd></dl>\r\n <dl><dt><a name=\"-type_as_str\"><strong>type_as_str</strong></a>(x)</dt><dd><tt>Returns&nbsp;the&nbsp;type&nbsp;of&nbsp;x&nbsp;as&nbsp;a&nbsp;nice&nbsp;string<br>\r\nFor&nbsp;example:&nbsp;type(a)&nbsp;returns&nbsp;\"&lt;class&nbsp;'xxxxxxxx'&gt;;&nbsp;this&nbsp;function&nbsp;extracts&nbsp;the<br>\r\n&nbsp;&nbsp;'xxxxxxx'&nbsp;part:&nbsp;the&nbsp;first&nbsp;'&nbsp;is&nbsp;at&nbsp;index&nbsp;8;&nbsp;the&nbsp;last&nbsp;'&nbsp;is&nbsp;at&nbsp;index&nbsp;-2</tt></dd></dl>\r\n</td></tr></table>\r\n</body></html>", "encoding": "ascii"}