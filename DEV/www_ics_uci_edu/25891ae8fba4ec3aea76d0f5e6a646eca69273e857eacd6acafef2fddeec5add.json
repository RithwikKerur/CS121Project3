{"url": "https://www.ics.uci.edu/~eppstein/pubs/1992.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\n1992\n</h2>\nNote that a paper may appear in listings for multiple years\ndue to multiple publication (of tech. report, conference, and journal versions).\n<p>\n<ul>\n<li><b>Fast optimal parallel algorithms for maximal matching in sparse graphs</b>.<br>\nH. Asuri, <a href=\"/~dillenco/\">M. Dillencourt</a>, D. Eppstein, \n<a href=\"//www.ics.uci.edu/~lueker/\">\nG. Lueker</a>, and M. Molodowitch.<br>\nTech. Rep. 92-01, ICS, UCI, 1992.\n<p>\nWe later discovered that the same results were published\nin a SPAA paper by Greg Shannon.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Fast optimal parallel algorithms for maximal matching in sparse graphs\">BibTeX</a>)\n<p>\n<li><b>Sets of points with many halving lines</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-92-86.pdf\">Tech. Rep. 92-86</a>, ICS, UCI, 1992.\n<p>\nI used genetic algorithms to search for small configurations of points\nbisected by lines in many combinatorially distinct ways.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Sets of points with many halving lines\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sets-of-points-with-many-halving-lines.html\">Citations</a>)\n<p>\n<li><b>Finding minimum area <i>k</i>-gons</b>.<br>\nD. Eppstein, \n<a href=\"//www.cs.ruu.nl/people/markov/\">\nM. Overmars</a>,\n<a href=\"//page.mi.fu-berlin.de/rote/\">G. Rote</a>, and \n<a href=\"//www.opt.math.tu-graz.ac.at/woe/\">\nG. Woeginger</a>.<br>\n<a href=\"EppOveRot-DCG-92.pdf\"><i>Disc. Comp. Geom.</i> 7 (1): 45&ndash;58, 1992</a>.\n<p>\nUses dynamic programming to choose sets of <i>k</i>\npoints optimizing various criteria on the quality of their convex hull\n(in particular area).  The time complexity (cubic in <i>n</i>)\nwas later improved to quadratic in\nmy paper\n\"<a href=\"p-kgon.html\">New algorithms for minimum area <i>k</i>-gons</a>\",\nwhich however continues to use the same dynamic program as a subroutine.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Finding minimum area $k$-gons\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Finding-minimum-area-k-gons.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92finding.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=149124\">ACM DL</a>)\n<p>\n<li><b>Simultaneous strong separations of\nprobabilistic and unambiguous complexity classes</b>.<br>\nD. Eppstein,\n<a href=\"//www.cs.rochester.edu/u/lane/\">\nL. Hemachandra</a>, J. Tisdall, and B. Yener.<br>\n<i>Int. Conf. Computing and Information,</i> Toronto,\nNorth-Holland, 1989, pp. 65&ndash;70.<br>\nTech. Rep. 335, Dept. Comp. Sci., U. Rochester, 1990.<br>\n<a href=\"EppHemTis-MST-92.pdf\"><i>Mathematical Systems Theory</i> 25 (1): 23&ndash;36, 1992</a>.\n<p>\nStructural complexity theory.\nConstructs oracles in which BPP (a probabilistic complexity class)\nand UP (the class of problems with a unique \"witness\")\ncontain languages that in a very strong sense are not contained in the\nother class.\nThe conference version used the title\n\"Probabilistic and unambiguous computation are incomparable\".\n<p>(BibTeX: <a href=\"/~eppstein/bibs/eppstein.html#Probabilistic and unambiguous computation are incomparable\">ICCI</a>,\n<a href=\"/~eppstein/bibs/eppstein.html#Simultaneous strong separations of probabilistic and unambiguous complexity classes\">MST</a> &ndash;\nCitations:\n<a href=\"//fano.ics.uci.edu/cites/Document/Probabilistic-and-unambiguous-computation-are-incomparable.html\">ICCI</a>,\n<a href=\"//fano.ics.uci.edu/cites/Document/Simultaneous-strong-separations-of-probabilistic-and-unambiguous-complexity-classes.html\">MST</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92simultaneous.html\">CiteSeer</a>)\n<p>\n<li><b>Maintenance of a minimum spanning forest in a dynamic plane graph</b>.<br>\nD. Eppstein, \n<a href=\"//www.info.uniroma2.it/~italiano/\">G.F. Italiano</a>, \n<a href=\"//www.cs.brown.edu/people/rt/home.html\">R. Tamassia</a>, \n<a href=\"//www.cs.Princeton.EDU/~ret/\">R.E. Tarjan</a>,\nJ. Westbrook,\nand M. Yung.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=320177\">\n<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1990, pp. 1&ndash;11</a>.<br>\n<i>J. Algorithms</i> 13 (1): 33&ndash;54, 1992\n(special issue for 1st Symp. Discrete Algorithms).<br>\nCorrigendum, <i>J. Algorithms</i> 15: 173, 1993.\n<p>\nThe complement of a\n<a href=\"mst.html\">minimum spanning tree</a> is a maximum spanning tree in\nthe dual graph.  By applying this fact we can use a modified form of\nSleator and Tarjan's dynamic tree data structure to update the MST in\nlogarithmic time per update.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Maintenance of a minimum spanning forest in a dynamic planar graph\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Maintenance-of-a-minimum-spanning-forest-in-a-dynamic-planar-graph.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92maintenance.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=139668\">ACM DL</a>)\n<p>\n<li><b>The farthest point Delaunay triangulation minimizes angles</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-90-45.pdf\">Tech. Rep. 90-45</a>, ICS, UCI, 1990.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(98)00031-5\">\n<i>Comp. Geom. Theory &amp; Applications</i> 1: 143&ndash;148, 1992</a>.\n<p>\nGiven a collection of points in convex position,\nthe sharpest angle determined by any triple can be found\nas a corner of a triangle\nin the farthest point Delaunay triangulation.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#The farthest point Delaunay triangulation minimizes angles\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/The-farthest-point-Delaunay-triangulation-minimizes-angles.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein90farthest.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=158945\">ACM DL</a>)\n<p>\n<li><b>Parallel recognition of series parallel graphs</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-IC-92.pdf\"><i>Information &amp; Computation</i> 98: 41&ndash;55, 1992</a>.\n<p>\nCharacterizes two-terminal series graphs in terms of a\ntree-like structure in their ear decompositions.\nUses this characterization to construct\nparallel algorithms that recognize these graphs and\nconstruct their series-parallel decompositions.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Parallel recognition of series parallel graphs\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Parallel-recognition-of-series-parallel-graphs.html\">Citations</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~iandc/References/eppstein1992:41.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92parallel.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=162582\">ACM DL</a>)\n<p>\n<li><b>Finding the <i>k</i> smallest spanning trees</b>.<br>\nD. Eppstein.<br>\n<i>2nd Scand. Worksh. Algorithm Theory,</i> Bergen, Norway, 1990.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 447, 1990, pp. 38&ndash;47.<br>\n<a href=\"Epp-BIT-92.pdf\"><i>BIT</i> 32: 237&ndash;248, 1992</a>\n(special issue for 2nd Scand. Worksh. Algorithm Theory).\n<p>\nBy removing edges not involved in some solution,\nand contracting edges involved in all solutions,\nwe reduce the problem to one in a graph with O(<i>k</i>)\nedges and vertices.  This simplification step\ntransforms any time bound involving <i>m</i> or <i>n</i>\nto one involving min(<i>m,</i> <i>k</i>) or min(<i>n,</i> <i>k</i>)\nrespectively.  This paper also introduces the geometric\nversion of the <i>k</i> smallest spanning trees problem\n(the graph version was long known) which it solves using\norder (<i>k</i>+1) Voronoi diagrams.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Finding the $k$ smallest spanning trees\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Finding-the-k-smallest-spanning-trees.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=671927\">ACM DL (SWAT)</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=174321\">ACM DL (BIT)</a>)\n<p>\n<li><b>Sparse dynamic programming</b>.<br>\nD. Eppstein,\n<a href=\"//www.scs.gatech.edu/people/zvi-galil\">Z. Galil</a>,\n<a href=\"//hpdma2.math.unipa.it/giancarl/source.html\">R. Giancarlo</a>,\nand <a href=\"//www.info.uniroma2.it/~italiano/\">G.F. Italiano</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=320238\">\n<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1990, pp. 513&ndash;522</a>.<br>\n\"Sparse dynamic programming I: linear cost functions\", <i>J. ACM</i>\n39: 519&ndash;545, 1992</a>.<br>\n\"Sparse dynamic programming II: convex and concave cost functions\", <i>J. ACM</i> 39: 546&ndash;567, 1992</a>.\n<p>\nConsiders sequence alignment and RNA structure problems\nin which the solution is constructed by piecing together\nsome initial set of fragments (e.g. short sequences that match exactly).\nThe method is to consider a planar point set formed by\nthe fragment positions in the two input sequences,\nand use plane sweep to construct a cellular decomposition of the plane\nsimilar to the rectilinear Voronoi diagram.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Sparse dynamic programming\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sparse-dynamic-programming.html\">Citations to conference version</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sparse-dynamic-programming-I-linear-cost-functions.html\">Citations to SDP I</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sparse-dynamic-programming-II-convex-and-concave-cost-functions.html\">Citations to SDP II</a>)\n<p>\n<li><b>Polynomial-size non-obtuse triangulation of polygons</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=109686\">\n<i>7th ACM Symp. Comp. Geom.,</i> North Conway, New Hampshire, 1991, pp. 342&ndash;350</a>.<br>\n<a href=\"BerEpp-IJCGA-92.pdf\"><i>Int. J. Comp. Geom. &amp; Appl.</i> 2: 241&ndash;255, 1992</a>\n(special issue for 7th Symp. Comput. Geom.).\n<p>\nAny simple polygon can be triangulated with quadratically many nonobtuse\ntriangles.  Mostly subsumed by recent results of Bern et al described in\n\"<a href=\"p-cpack.html\">Faster circle packing</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Polynomial size non-obtuse triangulation of polygons\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Polynomial-size-non-obtuse-triangulation-of-polygons.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern92polynomialsize.html\">CiteSeer</a>)\n<p>\n<li><b>Connectivity, graph minors, and subgraph multiplicity</b>.<br>\nD. Eppstein.<br>\nTech. Rep. 92-06, ICS, UCI, 1992.<br>\n<a href=\"Epp-JGT-93.pdf\"><i>J. Graph Th.</i> 17: 409&ndash;416, 1993</a>.\n<p>\nIt was known that planar graphs have O(<i>n</i>) subgraphs isomorphic\nto K<sub>3</sub> or K<sub>4</sub>. That is, K<sub>3</sub> and\nK<sub>4</sub> have linear subgraph multiplicity.\nThis paper shows that the graphs with linear subgraph multiplicity in\nthe planar graphs are exactly the 3-connected planar graphs.\nAlso, the graphs with linear subgraph multiplicity in the outerplanar\ngraphs are exactly the 2-connected outerplanar graphs.\n<p>\nMore generally, let F be a minor-closed family, and let x be the\nsmallest number such that some complete bipartite graph K<sub>x,y</sub>\nis a forbidden minor for F. Then the x-connected graphs have linear\nsubgraph multiplicity for F, and there exists an\n(x&nbsp;&minus;&nbsp;1)-connected graph (namely\nK<sub>x&nbsp;&minus;&nbsp;1,x&nbsp;&minus;&nbsp;1</sub>) that does not\nhave linear subgraph multiplicity.\nWhen x&nbsp;&le;&nbsp;3 or when x&nbsp;=&nbsp;4 and the minimal\nforbidden minors for F are triangle-free, then the graphs with linear\nsubgraph multiplicity for F are exactly the x-connected graphs.\n<p>\nPlease refer only to the journal version, and not the earlier technical\nreport: the technical report had a bug that was repaired in the journal\nversion.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Connectivity, graph minors, and subgraph multiplicity\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Connectivity-graph-minors-and-subgraph-multiplicity.html\">Citations</a>)\n<p>\n<li><b>Edge insertion for optimal triangulations</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\n<a href=\"//www.cs.duke.edu/~edels/\">H. Edelsbrunner</a>,\nD. Eppstein, \n<a href=\"//endo.sandia.gov/~samitch/index.html\">\nS. Mitchell</a>, and\n<a href=\"//www.comp.nus.edu.sg/~tants/\">T.S. Tan</a>.<br>\n<i>1st Latin Amer. Symp. Theoretical Informatics,</i> Sao Paulo, 1992.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 583, 1992, pp. 46&ndash;60.<br>\nTech. Rep. EDC UILU-ENG-92-1702, Univ. Illinois, Urbana-Champaign, 1992.<br>\n<a href=\"//www.comp.nus.edu.sg/~tants/Paper/eis.ps.gz\"><i>Disc.\n&amp; Comp. Geom.</i> 10: 47&ndash;65, 1993</a>.\n<p>\nOne standard way of constructing Delaunay triangulations\nis by iterated local improvement, in which each step\nflips the diagonal of some quadrilateral.\nFor many other optimal triangulation problems, flipping is\ninsufficient, but the problems can instead be solved\nby a more general local improvement step in which\na new edge is added to the triangulation, cutting through\nseveral triangles, and the region it cuts through\nis retriangulated on both sides.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Edge insertion for optimal triangulation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Edge-insertion-for-optimal-triangulation.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern92edge.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=689852\">ACM DL</a>)\n<p>\n<li><b>Dynamic three-dimensional linear programming</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-91-53.pdf\">Tech. Rep. 91-53</a>, ICS, UCI, 1991.<br>\n<i>32nd IEEE Symp. Foundations of Comp. Sci.,</i>\nSan Juan, Puerto Rico, 1991, pp. 488&ndash;494.<br>\n<i>ORSA J. Computing</i> 4: 360&ndash;368, 1992\n(special issue on computational geometry).\n<p>\nUses Dobkin-Kirkpatrick hierarchies to perform\n<a href=\"geom-lp.html\">linear programming</a>\nqueries in the intersection of several convex polyhedra.\nBy maintaining a collection of halfspaces as several subsets,\nrepresented by polyhedra, this leads to algorithms for a dynamic\nlinear program in which updates change the set of constraints.\nThe fully dynamic results have largely been subsumed\nby Agarwal and Matou&#353;ek, but this paper also includes\npolylog time results for semi-online problems,\nand uses them to give a fast randomized algorithm for the planar\n2-center problem (later improved by various authors, most recently\nin \"<a href=\"p-2c.html\">Faster Construction of Planar Two-Centers</a>\",\nwhich re-uses the data structures described here).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic three-dimensional linear programming\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-three-dimensional-linear-programming.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92dynamic.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=123359\">ACM DL</a>)\n<p>\n<li><b>Approximating the minimum weight Steiner triangulation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-91-55.pdf\">Tech. Rep. 91-55</a>, ICS, UCI, 1991.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=139415\"><i>3rd ACM-SIAM Symp. Discrete Algorithms,</i> Orlando, 1992, pp. 48&ndash;57</a>.<br>\n<a href=\"Epp-DCG-94.pdf\"><i>Disc. Comp. Geom.</i> 11: 163&ndash;191, 1994</a>.\n<p>\n<a href=\"geom-qt.html\">Quadtree</a> based\n<a href=\"geom-tri.html\">triangulation</a> gives a large but constant factor\n<a href=\"geom-approx.html\">approximation</a>\nto the minimum weight triangulation of a point set or\nconvex polygon, allowing extra Steiner points to be added as vertices.\nIncludes proofs of several bounds on triangulation weight relative to\nthe <a href=\"mst.html\">minimum spanning tree</a> or non-Steiner\ntriangulation, and a conjecture\nthat for convex polygons the only points that need to be added are on\nthe polygon boundary.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Approximating the minimum weight Steiner triangulation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Approximating-the-minimum-weight-Steiner-triangulation.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92approximating.html\">CiteSeer</a>)\n<p>\n<li><b>New algorithms for minimum area <i>k</i>-gons</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-91-59.pdf\">Tech. Rep. 91-59</a>, ICS, UCI, 1991.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=139422\"><i>3rd ACM-SIAM Symp. Discrete Algorithms,</i> Orlando, 1992, pp. 83&ndash;86.</a>\n<p>\nShows that the minimum area polygon containing <i>k</i> of <i>n</i>\npoints must be near a line determined by two points,\nand uses this observation to find the polygon quickly.\nMerged with\n\"<a href=\"p-inn.html\">Iterated nearest neighbors and finding minimal\npolytopes</a>\" in the journal version.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#New algorithms for minimum area $k$-gons\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/New-algorithms-for-minimum-area-k-gons.html\">Citations</a>)\n<p>\n<li><b>New algorithms for minimum measure simplices and one-dimensional\nweighted Voronoi diagrams</b>.<br>\nD. Eppstein and \n<a href=\"//compgeom.cs.uiuc.edu/~jeffe/\">\nJ. Erickson</a>.<br>\n<a href=\"tr.html\">Tech. Rep. 92-55</a>, ICS, UCI, 1992.\n<p>\nLooks at space complexity of finding minimum simplices &ndash; solves the problem in\nO(<i>n</i><sup>2</sup>) space and O(<i>n<sup>d</sup></i>) time\n(matching the best known time bounds)\nor in linear space at the expense of an additional log in time.\nAlso finds one-dimensional multiplicatively weighted Voronoi diagrams in\nlinear time for sorted inputs (O(<i>n</i> log <i>n</i>) was known).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#New algorithms for minimum measure simplices and one-dimensional weighted Voronoi diagrams\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/New-algorithms-for-minimum-measure-simplices-and-one-dimensional-weighted-Voronoi-diagrams.html\">Citations</a> &ndash;\n<a href=\"//compgeom.cs.uiuc.edu/~jeffe/pubs/simplex.html\">Jeff's pub list entry</a>)\n<p>\n<li><b>Iterated nearest neighbors and finding minimal polytopes</b>.<br>\nD. Eppstein and \n<a href=\"//compgeom.cs.uiuc.edu/~jeffe/\">J. Erickson</a>.<br>\nTech. Rep. 92-71, ICS, UCI, 1992.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=313612\">\n<i>4th ACM-SIAM Symp. Discrete Algorithms,</i> Austin, 1993, pp. 64&ndash;73</a>.<br>\n<a href=\"//compgeom.cs.uiuc.edu/~jeffe/pubs/pdf/small.pdf\"><i>Disc. Comp. Geom.</i> 11: 321&ndash;350, 1994</a>.\n<p>\nShowed that for various optimization criteria, the\noptimal polygon containing <i>k</i> of <i>n</i>\npoints must be near one of the points, hence one can transform\ntime bounds involving several factors of <i>n</i>\nto bounds linear in <i>n</i> but polynomial in <i>k.</i>\nUsed as a subroutine are data structures for finding several\n<a href=\"geom-nn.html\">nearest neighbors</a> in rectilinear metric spaces, and\nalgorithms for finding the\n<a href=\"geom-deep.html\">deepest point in an arrangement</a> of cubes or\nspheres.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Iterated nearest neighbors and finding minimal polytopes\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Iterated-nearest-neighbors-and-finding-minimal-polytopes.html\">Citations</a> &ndash;\n<a href=\"//compgeom.cs.uiuc.edu/~jeffe/pubs/small.html\">Jeff's pub list entry</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/erickson94iterated.html\">CiteSeer</a>)\n<p>\n<li><b>Tree-weighted neighbors and geometric <i>k</i> smallest spanning trees</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-92-77.pdf\">Tech. Rep. 92-77</a>, ICS, UCI, 1992.<br>\n<i>Int. J. Comp. Geom. &amp; Appl.</i> 4: 229&ndash;238, 1994.\n<p>\n\"<a href=\"p-kmst.html\">Finding the <i>k</i> smallest spanning trees</a>\"\nused higher order Voronoi diagrams to reduce the geometric\n<a href=\"kbest.html\"><i>k</i> smallest</a>\n<a href=\"mst.html\">spanning tree</a> problem to the graph problem.\nHere I instead use nearest neighbors for a modified\ndistance function where the bottleneck shortest path length\nis subtracted from the true distance between points.\nThe result improves the planar time bounds and extends\nmore easily to higher dimensions.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Tree-weighted neighbors and geometric $k$ smallest spanning trees\">BibTeX</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92treeweighted.html\">CiteSeer</a>)\n\n<p>\n<li><b>Offline algorithms for dynamic minimum spanning tree problems</b>.<br>\nD. Eppstein.<br>\n<i>2nd Worksh. Algorithms and Data Structures,</i> Ottawa, Canada, 1991.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 519, 1991, pp. 392&ndash;399.<br>\n<a href=\"Epp-TR-92-04.pdf\">Tech. Rep. 92-04</a>, ICS, UCI, 1992.<br>\n<a href=\"//doi.org/10.1006/jagm.1994.1033\">\n<i>J. Algorithms</i> 17: 237&ndash;250, 1994</a>.\n<p>\nGiven a sequence of edge insertions and deletions in a graph,\nfinds the corresponding sequence of minimum spanning tree changes,\nin logarithmic time per update.\nSimilarly solves the planar geometric version of the problem\n(using a novel \"mixed MST\" formulation in which part of the input\nis a graph and part is a point set) in time\nO(log<sup>2</sup> <i>n</i>) for the Euclidean metric and\nO(log <i>n</i> log log <i>n</i>) for the rectilinear metric.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Offline algorithms for dynamic minimum spanning tree problems\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Offline-algorithms-for-dynamic-minimum-spanning-tree-problems.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein94offline.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=185278\">ACM DL (JA)</a>)\n<p>\n<li><b>Dynamic Euclidean minimum spanning trees and extrema of binary functions</b>.<br>\nD. Eppstein.<br>\n<a href=\"tr.html\">Tech. Rep. 92-05</a>, ICS, UCI, 1992.<br>\n<a href=\"tr.html\">Tech. Rep. 92-88</a>, ICS, UCI, 1992.<br>\n<a href=\"Epp-DCG-95.pdf\"><i>Disc. Comp. Geom.</i> 13: 111&ndash;122, 1995</a>.\n<p>\nShows that bichromatic nearest neighbors can be maintained under point\ninsertion and deletion essentially as quickly as known solutions to the\npost office problem, and that the\n<a href=\"mst.html\">minimum spanning tree</a> can be\nmaintained in the same time except for an additive O(sqrt <i>n</i>) needed for\nsolving the corresponding graph problem.\nTR 92-88's title was actually \"Fully dynamic maintenance of Euclidean\nminimum spanning trees and maxima of decomposable functions\".\nTR 92-05's title left out the part about maxima; that version gave a slower\nalgorithm superseded by the result in 92-88.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic Euclidean minimum spanning trees and extrema of binary functions\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-Euclidean-minimum-spanning-trees-and-extrema-of-binary-functions.html\">Citations</a> &ndash;\n<a href=\"/~eppstein/projects/pairs/\">Closest pair project page</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95dynamic.html\">CiteSeer</a>)\n<p>\n<li><b>Dynamic algorithms for half-space reporting, proximity problems, and\ngeometric minimum spanning trees</b>.<br>\n<a href=\"//www.cs.duke.edu/~pankaj/\">P.K. Agarwal</a>,\nD. Eppstein, and\n<a href=\"//www.ms.mff.cuni.cz/acad/kam/matousek/\">J. Matou&#353;ek</a>.<br>\n<a href=\"AgaEppMat-FOCS-92.pdf\"><i>33rd IEEE Symp. Foundations of\nComp. Sci.,</i> Pittsburgh, 1992, pp. 80&ndash;89</a>.\n<p>\nThis conference paper merged my results from\n\"<a href=\"p-dynmst.html\">Dynamic Euclidean minimum\nspanning trees</a>\" with results of my co-authors on nearest neighbors\nand halfspace range searching.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic algorithms for half-space reporting, proximity problems, and geometric minimum spanning trees\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-algorithms-for-half-space-reporting-proximity-problems-and-geometric-minimum-spanning-trees.html\">Citations</a>)\n<p>\n<li><b>Asymptotic speed-ups in constructive solid geometry</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-92-87.pdf\">Tech. Rep. 92-87</a>, ICS, UCI, 1992.<br>\n<i>Algorithmica</i> 13: 462&ndash;471, 1995.\n<p>\nFinds boundary representations of CSG objects.\nUses techniques from dynamic graph algorithms,\nincluding a tree partitioning technique of Frederickson\nand a new data structure for maintaining the value\nof a Boolean expression with changing variables\nin time O(log <i>n</i> / log log <i>n</i>) per update.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Asymptotic speed-ups in constructive solid geometry\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Asymptotic-speed-ups-in-constructive-solid-geometry.html\">Citations</a>)\n<p>\n<li><b>Triangulating polygons without large angles</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\n<a href=\"//www.cs.Princeton.EDU/~dpd/\">D. Dobkin</a>,\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=142722\">\n<i>8th ACM Symp. Comp. Geom.,</i> Berlin, 1992, pp. 222&ndash;231</a>.<br>\n<a href=\"BerDobEpp-IJCGA-95.ps.gz\"><i>Int. J. Comp. Geom. &amp; Appl.</i> 5: 171&ndash;192, 1995</a>\n(special issue for 8th Symp. Comput. Geom.)\n<p>\nFollows up \"<a href=\"p-nonobtuse.html\">Polynomial size non-obtuse\ntriangulation of polygons</a>\";\nimproves the number of triangles by relaxing the requirements on their angles.\nAgain mostly subsumed by results of Bern et al described in\n\"<a href=\"p-cpack.html\">Faster circle packing</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Triangulating polygons without large angles\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Triangulating-polygons-without-large-angles.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern95triangulating.html\">CiteSeer</a>)\n<p>\n<li><b>Mesh generation and optimal triangulation</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\nTech. Rep. CSL-92-1, Xerox PARC, 1992.<br>\n<i>Computing in Euclidean Geometry,</i>\nD.-Z. Du and F.K. Hwang, eds.,\nWorld Scientific, 1992, pp. 23&ndash;90.<br>\n<a href=\"BerEpp-CEG-95.pdf\">Revised\nversion in <i>Computing in Euclidean Geometry,</i> 2nd ed.,\nD.-Z. Du and F.K. Hwang, eds.,\nWorld Scientific, 1995, pp. 47&ndash;123</a>.\n<p>\nConsiders both heuristics and theoretical algorithms\nfor finding good triangulations and tetrahedralizations\nfor surface interpolation and unstructured finite element meshes.\nNote that the online copy here omits the figures;\nalso online is this paper's\n<a href=\"//www.ics.uci.edu/~eppstein/bibs/meshgen.bib\">bibliography</a>.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Mesh generation and optimal triangulation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Mesh-generation-and-optimal-triangulation.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern92mesh.html\">CiteSeer</a>)\n<p>\n<li><b>Sparsification&mdash;A technique for speeding up dynamic graph algorithms</b>.<br>\nD. Eppstein,\n<a href=\"//www.scs.gatech.edu/people/zvi-galil\">Z. Galil</a>, \n<a href=\"//www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and A. Nissenzweig.<br>\n<i>33rd IEEE Symp. Foundations of Comp. Sci.,</i> Pittsburgh, 1992, pp. 60&ndash;69.<br>\nTech. Rep. RC 19272 (83907), IBM, 1993.<br>\nTech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"//doi.org/10.1145/265910.265914\"><i>J. ACM</i> 44 (5): 669&ndash;696, 1997</a>.\n<p>\nUses a divide and conquer on the edge set of a graph, together with the\nidea of replacing subgraphs by sparser certificates, to make various\ndynamic algorithms as fast on dense graphs as they are on sparse graphs.\nApplications include random generation of spanning trees\nas well as finding the <i>k</i>\n<a href=\"mst.html\">minimum weight spanning trees</a>\nfor a given parameter <i>k.</i>\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Sparsification &ndash;- A technique for speeding up dynamic graph algorithms\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sparsification-A-technique-for-speeding-up-dynamic-graph-algorithms.html\">Citations</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~dmjones/FOCS/References/eppsteingin1992:60.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=265914\">ACM DL</a>)\n<p>\n<li><b>The diameter of nearest neighbor graphs</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-92-76.pdf\">Tech. Rep. 92-76</a>, ICS, UCI, 1992.\n<p>\nAny connected nearest neighbor forest\nwith diameter <i>D</i> has O(<i>D</i><sup>6</sup>) vertices.  This was\nlater further\nimproved to O(<i>D</i><sup>5</sup>) and merged with results of Paterson\nand Yao into \"<a href=\"p-nn.html\">On nearest neighbor graphs</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#The diameter of nearest neighbor graphs\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/The-diameter-of-nearest-neighbor-graphs.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92diameter.html\">CiteSeer</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"year.html\">Years</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}