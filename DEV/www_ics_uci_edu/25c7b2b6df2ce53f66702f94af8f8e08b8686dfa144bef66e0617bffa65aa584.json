{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/api/heap-def_8h.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n  <!-- Page title -->\n  <title>VLFeat - Documentation > C API</title>\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"doxygen.css\"></link>\n  <!-- Scripts-->\n  <script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li><a href=\"../overview/tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"../overview/frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"../overview/covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"../overview/hog.html\">HOG features</a>\n</li>\n<li><a href=\"../overview/sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"../overview/dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"../overview/liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"../overview/mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"../overview/imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"../overview/encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"../overview/gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"../overview/kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"../overview/aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"../overview/quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"../overview/slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"../overview/svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"../overview/kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"../overview/plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"../overview/utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"../overview/ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"../overview/hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li class='active'><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n</li>\n</ul></li>\n</ul>\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"../doc.html\">Documentation</a></span><span class='separator'>></span><span class='page'><a href=\"index.html\">C API</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n      <!-- <pagestyle href=\"%pathto:root;api/tabs.css\"/> -->\n      <div class=\"doxygen\">\n<div id=\"top\">\n<div id=\"top\">\n<!-- Generated by Doxygen 1.8.7 -->\n  <div id=\"navrow1\" class=\"tabs\">\n    <ul class=\"tablist\">\n      <li><a href=\"index.html\"><span>Main&#160;Page</span></a></li>\n      <li><a href=\"pages.html\"><span>Related&#160;Pages</span></a></li>\n      <li><a href=\"annotated.html\"><span>Data&#160;Structures</span></a></li>\n      <li class=\"current\"><a href=\"files.html\"><span>Files</span></a></li>\n    </ul>\n  </div>\n  <div id=\"navrow2\" class=\"tabs2\">\n    <ul class=\"tablist\">\n      <li><a href=\"files.html\"><span>File&#160;List</span></a></li>\n      <li><a href=\"globals.html\"><span>Globals</span></a></li>\n    </ul>\n  </div>\n<div id=\"nav-path\" class=\"navpath\">\n  <ul>\n<li class=\"navelem\"><a class=\"el\" href=\"dir_8dd540b382164c224dfa1eb6e8a3add6.html\">vl</a></li>  </ul>\n</div>\n</div><!-- top -->\n<div class=\"header\">\n  <div class=\"summary\">\n<a href=\"#define-members\">Macros</a> &#124;\n<a href=\"#func-members\">Functions</a>  </div>\n  <div class=\"headertitle\">\n<div class=\"title\">heap-def.h File Reference</div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n\n<p>Heap preprocessor metaprogram.  \n<a href=\"#details\">More...</a></p>\n<div class=\"textblock\"><code>#include &quot;<a class=\"el\" href=\"host_8h.html\">host.h</a>&quot;</code><br />\n<code>#include &lt;assert.h&gt;</code><br />\n</div><table class=\"memberdecls\">\n<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"define-members\"></a>\nMacros</h2></td></tr>\n<tr class=\"memitem:ac2b59b9373be3df851dac7c594924a92\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">#define&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;&#160;&#160;<a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a>*</td></tr>\n<tr class=\"separator:ac2b59b9373be3df851dac7c594924a92\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ae0d8f7e617493c4a73696983e1c360b6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">#define&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#ae0d8f7e617493c4a73696983e1c360b6\">VL_HEAP_prefix</a>&#160;&#160;&#160;HeapObject</td></tr>\n<tr class=\"separator:ae0d8f7e617493c4a73696983e1c360b6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a809b241c547ba76275bd10575086c3b2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">#define&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a>&#160;&#160;&#160;HeapType</td></tr>\n<tr class=\"separator:a809b241c547ba76275bd10575086c3b2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac2b59b9373be3df851dac7c594924a92\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">#define&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;&#160;&#160;HeapType*</td></tr>\n<tr class=\"separator:ac2b59b9373be3df851dac7c594924a92\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac2b59b9373be3df851dac7c594924a92\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">#define&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;&#160;&#160;HeapType const*</td></tr>\n<tr class=\"separator:ac2b59b9373be3df851dac7c594924a92\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table><table class=\"memberdecls\">\n<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"></a>\nFunctions</h2></td></tr>\n<tr class=\"memitem:a7256f361601ba43113c862d9477f1d4b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#a7256f361601ba43113c862d9477f1d4b\">vl_heap_parent</a> (<a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> index)</td></tr>\n<tr class=\"memdesc:a7256f361601ba43113c862d9477f1d4b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get index of parent node.  <a href=\"#a7256f361601ba43113c862d9477f1d4b\">More...</a><br /></td></tr>\n<tr class=\"separator:a7256f361601ba43113c862d9477f1d4b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a95b7f92afacd889da252d5a77fde5d05\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#a95b7f92afacd889da252d5a77fde5d05\">vl_heap_left_child</a> (<a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> index)</td></tr>\n<tr class=\"memdesc:a95b7f92afacd889da252d5a77fde5d05\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get index of left child.  <a href=\"#a95b7f92afacd889da252d5a77fde5d05\">More...</a><br /></td></tr>\n<tr class=\"separator:a95b7f92afacd889da252d5a77fde5d05\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aacfa305e511251faa8cfb8b7114a31f7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#aacfa305e511251faa8cfb8b7114a31f7\">vl_heap_right_child</a> (<a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> index)</td></tr>\n<tr class=\"memdesc:aacfa305e511251faa8cfb8b7114a31f7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get index of right child.  <a href=\"#aacfa305e511251faa8cfb8b7114a31f7\">More...</a><br /></td></tr>\n<tr class=\"separator:aacfa305e511251faa8cfb8b7114a31f7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af926f2b2ea17e5adcf6ab144d87f96e2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#af926f2b2ea17e5adcf6ab144d87f96e2\">VL_HEAP_cmp</a> (VL_HEAP_array_const array, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> indexA, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> indexB)</td></tr>\n<tr class=\"memdesc:af926f2b2ea17e5adcf6ab144d87f96e2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Compare two heap elements.  <a href=\"#af926f2b2ea17e5adcf6ab144d87f96e2\">More...</a><br /></td></tr>\n<tr class=\"separator:af926f2b2ea17e5adcf6ab144d87f96e2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a23f32c850484c8824785a17e9d93272b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#a23f32c850484c8824785a17e9d93272b\">VL_HEAP_swap</a> (<a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a> array, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> indexA, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> indexB)</td></tr>\n<tr class=\"memdesc:a23f32c850484c8824785a17e9d93272b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Swap two heap elements.  <a href=\"#a23f32c850484c8824785a17e9d93272b\">More...</a><br /></td></tr>\n<tr class=\"separator:a23f32c850484c8824785a17e9d93272b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a8c4d40e0b2309f0d897a8b1e9a55d726\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#a8c4d40e0b2309f0d897a8b1e9a55d726\">VL_HEAP_up</a> (<a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a> array, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> heapSize, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> index)</td></tr>\n<tr class=\"memdesc:a8c4d40e0b2309f0d897a8b1e9a55d726\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Heap up operation.  <a href=\"#a8c4d40e0b2309f0d897a8b1e9a55d726\">More...</a><br /></td></tr>\n<tr class=\"separator:a8c4d40e0b2309f0d897a8b1e9a55d726\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:affd0336086a1762e0ac2cace28c9656a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#affd0336086a1762e0ac2cace28c9656a\">VL_HEAP_down</a> (<a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a> array, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> index)</td></tr>\n<tr class=\"memdesc:affd0336086a1762e0ac2cace28c9656a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Heap down operation.  <a href=\"#affd0336086a1762e0ac2cace28c9656a\">More...</a><br /></td></tr>\n<tr class=\"separator:affd0336086a1762e0ac2cace28c9656a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ab8d30a74d7d51d3ed4c9f3e35ef6c638\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#ab8d30a74d7d51d3ed4c9f3e35ef6c638\">VL_HEAP_push</a> (<a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a> array, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> *heapSize)</td></tr>\n<tr class=\"memdesc:ab8d30a74d7d51d3ed4c9f3e35ef6c638\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Heap push operation.  <a href=\"#ab8d30a74d7d51d3ed4c9f3e35ef6c638\">More...</a><br /></td></tr>\n<tr class=\"separator:ab8d30a74d7d51d3ed4c9f3e35ef6c638\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ac9e07a24d045fbc08853213bc84be5ea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#ac9e07a24d045fbc08853213bc84be5ea\">VL_HEAP_pop</a> (<a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a> array, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> *heapSize)</td></tr>\n<tr class=\"memdesc:ac9e07a24d045fbc08853213bc84be5ea\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Heap pop operation.  <a href=\"#ac9e07a24d045fbc08853213bc84be5ea\">More...</a><br /></td></tr>\n<tr class=\"separator:ac9e07a24d045fbc08853213bc84be5ea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a6718e132e6bfabc177ca2f5115dd6452\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"heap-def_8h.html#a6718e132e6bfabc177ca2f5115dd6452\">VL_HEAP_update</a> (<a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a> array, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> heapSize, <a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> index)</td></tr>\n<tr class=\"memdesc:a6718e132e6bfabc177ca2f5115dd6452\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Heap update operation.  <a href=\"#a6718e132e6bfabc177ca2f5115dd6452\">More...</a><br /></td></tr>\n<tr class=\"separator:a6718e132e6bfabc177ca2f5115dd6452\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n<div class=\"textblock\"><dl class=\"section author\"><dt>Author</dt><dd>Andrea Vedaldi</dd></dl>\n<p>A heap organizes an array of objects in a priority queue. This module is a template metaprogram that defines heap operations on array of generic objects, or even generic object containers.</p>\n<ul>\n<li><a class=\"el\" href=\"heap-def_8h.html#heap-def-overview\">Overview</a><ul>\n<li><a class=\"el\" href=\"heap-def_8h.html#heap-def-overview-general\">General usage</a></li>\n</ul>\n</li>\n<li><a class=\"el\" href=\"heap-def_8h.html#heap-def-tech\">Technical details</a></li>\n</ul>\n<h1><a class=\"anchor\" id=\"heap-def-overview\"></a>\nOverview</h1>\n<p>To use <a class=\"el\" href=\"heap-def_8h.html\">heap-def.h</a> one must specify at least a prefix and the data type for the heap elements:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_prefix  my_heap</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_type    float</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#include &lt;vl/heap-def.h&gt;</span></div>\n</div><!-- fragment --><p>This code fragment defines a number of functions prefixed by <a class=\"el\" href=\"heap-def_8h.html#ae0d8f7e617493c4a73696983e1c360b6\">VL_HEAP_prefix</a>, such as <code>my_heap_push</code> (<a class=\"el\" href=\"heap-def_8h.html#ab8d30a74d7d51d3ed4c9f3e35ef6c638\" title=\"Heap push operation. \">VL_HEAP_push</a>) and <code>my_heap_pop</code> (<a class=\"el\" href=\"heap-def_8h.html#ac9e07a24d045fbc08853213bc84be5ea\" title=\"Heap pop operation. \">VL_HEAP_pop</a>), that implement the heap operations. These functions operate on an array that has type <a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>. By default, this is defined to be:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_array VL_HEAP_type*</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_array_const VL_HEAP_type const*</span></div>\n</div><!-- fragment --><p>The array itself is accessed uniquely by means of two functions:</p>\n<ul>\n<li><a class=\"el\" href=\"heap-def_8h.html#af926f2b2ea17e5adcf6ab144d87f96e2\" title=\"Compare two heap elements. \">VL_HEAP_cmp</a>, that compares two array elements. The default implementation assumes that <a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a> is numeric.</li>\n<li><a class=\"el\" href=\"heap-def_8h.html#a23f32c850484c8824785a17e9d93272b\" title=\"Swap two heap elements. \">VL_HEAP_swap</a>, that swaps two array elements. The default implementation assumes that <a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a> can be copied by the <code>=</code> operator.</li>\n</ul>\n<p>The heap state is a integer <code>numElements</code> (of type <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\" title=\"Unsigned integer holding the size of a memory block. \">vl_size</a>) counting the number of elements of the array that are currently part of the heap and the content of the first <code>numElements</code> elements of the array. The portion of the array that constitutes the heap satisfies a certain invariant property (heap property, <a class=\"el\" href=\"heap-def_8h.html#heap-def-tech\">Technical details</a>). From a user viewpoint, the most important consequence is that the first element of the array (the one of index 0) is also the smallest (according to <a class=\"el\" href=\"heap-def_8h.html#af926f2b2ea17e5adcf6ab144d87f96e2\" title=\"Compare two heap elements. \">VL_HEAP_cmp</a>).</p>\n<p>Elements are added to the heap by <a class=\"el\" href=\"heap-def_8h.html#ab8d30a74d7d51d3ed4c9f3e35ef6c638\" title=\"Heap push operation. \">VL_HEAP_push</a> and removed from the heap by <a class=\"el\" href=\"heap-def_8h.html#ac9e07a24d045fbc08853213bc84be5ea\" title=\"Heap pop operation. \">VL_HEAP_pop</a>. A push operation adds to the heap the array element immediately after the last element already in the heap (i.e. the element of index <code>numElements</code>) and increases the number of heap elements <code>numElements</code>. Elements in the heap are swapped as required in order to maintain the heap consistency. Similarly, a pop operation removes the first (smaller) element from the heap and decreases the number of heap elements <code>numElements</code>.</p>\n<p>The values of nodes currently in the heap can be updated by <a class=\"el\" href=\"heap-def_8h.html#a6718e132e6bfabc177ca2f5115dd6452\" title=\"Heap update operation. \">VL_HEAP_update</a>. Notice however that using this function requires knowing the index of the element that needs to be updated up to the swapping operations that the heap performs to maintain consistency. Typically, this requires redefining <a class=\"el\" href=\"heap-def_8h.html#a23f32c850484c8824785a17e9d93272b\" title=\"Swap two heap elements. \">VL_HEAP_swap</a> to keep track of such changes (<a class=\"el\" href=\"heap-def_8h.html#heap-def-overview-general\">General usage</a>).</p>\n<h2><a class=\"anchor\" id=\"heap-def-overview-general\"></a>\nGeneral usage</h2>\n<p>The heap container may be mapped to any type by reimplementing <a class=\"el\" href=\"heap-def_8h.html#af926f2b2ea17e5adcf6ab144d87f96e2\" title=\"Compare two heap elements. \">VL_HEAP_cmp</a> and <a class=\"el\" href=\"heap-def_8h.html#a23f32c850484c8824785a17e9d93272b\" title=\"Swap two heap elements. \">VL_HEAP_swap</a> explicitly. For instance the following code redefines <a class=\"el\" href=\"heap-def_8h.html#af926f2b2ea17e5adcf6ab144d87f96e2\" title=\"Compare two heap elements. \">VL_HEAP_cmp</a> to deal with the case in which the heap is an array of structures:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span>_S { <span class=\"keywordtype\">int</span> x ; } S ;</div>\n<div class=\"line\"><span class=\"keywordtype\">int</span> s_cmp (S <span class=\"keyword\">const</span> * v, <a class=\"code\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> a, <a class=\"code\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> b) {</div>\n<div class=\"line\">  <span class=\"keywordflow\">return</span> v[a].x - v[b].x ;</div>\n<div class=\"line\">}</div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_prefix  s_heap</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_type    S</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_cmp     s_cmp</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#include &lt;vl/heap-def.h&gt;</span></div>\n</div><!-- fragment --><p>In the following example, the heap itself is an arbitrary structure:</p>\n<div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span>_H { <span class=\"keywordtype\">int</span>* array ; } H ;</div>\n<div class=\"line\"><span class=\"keywordtype\">int</span> h_cmp (H <span class=\"keyword\">const</span> * h, <a class=\"code\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> a, <a class=\"code\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> b) {</div>\n<div class=\"line\">  <span class=\"keywordflow\">return</span> h-&gt;array[a] - h-&gt;array[b] ;</div>\n<div class=\"line\">}</div>\n<div class=\"line\"><span class=\"keywordtype\">int</span> h_swap (H * h, <a class=\"code\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> a, <a class=\"code\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> b) {</div>\n<div class=\"line\">  <span class=\"keywordtype\">int</span> t = h-&gt;array[a] ;</div>\n<div class=\"line\">  h-&gt;array[a] = h-&gt;array[b] ;</div>\n<div class=\"line\">  h-&gt;array[b] = t ;</div>\n<div class=\"line\">}</div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_prefix  h_heap</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_swap    h_swap</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#define VL_HEAP_cmp     h_cmp</span></div>\n<div class=\"line\"><span class=\"preprocessor\">#include &lt;vl/heap-def.h&gt;</span></div>\n</div><!-- fragment --><h1><a class=\"anchor\" id=\"heap-def-tech\"></a>\nTechnical details</h1>\n<p>The heap is organised as a binary tree with the property (<em>heap property</em>) that any node is not larger than any of its children. In particular, the root is the smallest node.</p>\n<p><a class=\"el\" href=\"heap-def_8h.html\">heap-def.h</a> uses the standard binary tree representation as a linear array. Tree nodes are mapped to array elements as follows: <code>array[0]</code> corresponds to the root, <code>array[1]</code> and <code>array[2]</code> to the root left and right children and so on. In this way, the tree structure is fully specified by the total number of nodes <code>N</code>.</p>\n<p>Assuming that the heap has <code>N</code> nodes (from <code>array[0]</code> to <code>array[N-1]</code>), adding the node <code>array[N]</code> to the heap is done by a <em>push down</em> operation: if the node <code>array[N]</code> is smaller than its parent (violating the heap property) it is pushed down by swapping it with the parent, and so on recursively.</p>\n<p>Removing the smallest element <code>array[0]</code> with an heap of <code>N</code> nodes is done by swapping <code>array[0]</code> with <code>array[N-1]</code>. If then <code>array[0]</code> is larger than any of its children, it is swapped with the smallest of the two and so on recursively (<em>push up</em> operation).</p>\n<p>Restoring the heap property after an element <code>array[i]</code> has been modified can be done by a push up or push down operation on that node. </p>\n</div><h2 class=\"groupheader\">Macro Definition Documentation</h2>\n<a class=\"anchor\" id=\"ac2b59b9373be3df851dac7c594924a92\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">#define VL_HEAP_array&#160;&#160;&#160;<a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a>*</td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<p>Data type of the heap container</p>\n<p>Const data type of the heap container </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"ac2b59b9373be3df851dac7c594924a92\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">#define VL_HEAP_array&#160;&#160;&#160;HeapType*</td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<p>Data type of the heap container</p>\n<p>Const data type of the heap container </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"ac2b59b9373be3df851dac7c594924a92\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">#define VL_HEAP_array&#160;&#160;&#160;HeapType const*</td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<p>Data type of the heap container</p>\n<p>Const data type of the heap container </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"ae0d8f7e617493c4a73696983e1c360b6\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">#define VL_HEAP_prefix&#160;&#160;&#160;HeapObject</td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<p>Prefix of the heap functions </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a809b241c547ba76275bd10575086c3b2\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">#define VL_HEAP_type&#160;&#160;&#160;HeapType</td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<p>Data type of the heap elements </p>\n\n</div>\n</div>\n<h2 class=\"groupheader\">Function Documentation</h2>\n<a class=\"anchor\" id=\"af926f2b2ea17e5adcf6ab144d87f96e2\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"heap-def_8h.html#a809b241c547ba76275bd10575086c3b2\">VL_HEAP_type</a> VL_HEAP_cmp </td>\n          <td>(</td>\n          <td class=\"paramtype\">VL_HEAP_array_const&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>indexA</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>indexB</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>heap array. </td></tr>\n    <tr><td class=\"paramname\">indexA</td><td>index of the first element <code>A</code> to compare. </td></tr>\n    <tr><td class=\"paramname\">indexB</td><td>index of the second element <code>B</code> to comapre. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>a negative number if <code>A&lt;B</code>, 0 if <code>A==B</code>, and a positive number if if <code>A&gt;B</code>. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"affd0336086a1762e0ac2cace28c9656a\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">void VL_HEAP_down </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>index</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>pointer to the heap node array. </td></tr>\n    <tr><td class=\"paramname\">index</td><td>index of the node to push up. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a95b7f92afacd889da252d5a77fde5d05\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> vl_heap_left_child </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>index</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">index</td><td>a node index. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>index of the left child. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a7256f361601ba43113c862d9477f1d4b\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> vl_heap_parent </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>index</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">index</td><td>a node index. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>index of the parent node. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"ac9e07a24d045fbc08853213bc84be5ea\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> VL_HEAP_pop </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> *&#160;</td>\n          <td class=\"paramname\"><em>heapSize</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>pointer to the heap array. </td></tr>\n    <tr><td class=\"paramname\">heapSize</td><td>(in/out) size of the heap. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>index of the popped element.</dd></dl>\n<p>The function extracts from the heap the element of index 0 (the smallest element) and decreases <code>heapSize</code>.</p>\n<p>The element extracted is moved as the first element after the heap end (thus it has index <code>heapSize</code>). For convenience, this index is returned by the function.</p>\n<p>Popping from an empty heap is undefined. </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"ab8d30a74d7d51d3ed4c9f3e35ef6c638\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">void VL_HEAP_push </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> *&#160;</td>\n          <td class=\"paramname\"><em>heapSize</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>pointer to the heap array. </td></tr>\n    <tr><td class=\"paramname\">heapSize</td><td>(in/out) size of the heap.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>The function adds to the heap the element of index <code>heapSize</code> and increments <code>heapSize</code>. </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"aacfa305e511251faa8cfb8b7114a31f7\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a> vl_heap_right_child </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>index</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">index</td><td>a node index. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>index of the right child. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a23f32c850484c8824785a17e9d93272b\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">void VL_HEAP_swap </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>indexA</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>indexB</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>array of nodes. </td></tr>\n    <tr><td class=\"paramname\">array</td><td>heap array. </td></tr>\n    <tr><td class=\"paramname\">indexA</td><td>index of the first node to swap. </td></tr>\n    <tr><td class=\"paramname\">indexB</td><td>index of the second node to swap.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>The function swaps the two heap elements <em>a</em> and @ b. The function uses a temporary element and the copy operator, which must be well defined for the heap elements. </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a8c4d40e0b2309f0d897a8b1e9a55d726\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">void VL_HEAP_up </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>heapSize</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>index</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>pointer to the heap array. </td></tr>\n    <tr><td class=\"paramname\">heapSize</td><td>size of the heap. </td></tr>\n    <tr><td class=\"paramname\">index</td><td>index of the node to push up. </td></tr>\n  </table>\n  </dd>\n</dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a6718e132e6bfabc177ca2f5115dd6452\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n<table class=\"mlabels\">\n  <tr>\n  <td class=\"mlabels-left\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">void VL_HEAP_update </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"heap-def_8h.html#ac2b59b9373be3df851dac7c594924a92\">VL_HEAP_array</a>&#160;</td>\n          <td class=\"paramname\"><em>array</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>heapSize</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#ac13bd3cc913e1da576e189a3ec8d66fc\">vl_uindex</a>&#160;</td>\n          <td class=\"paramname\"><em>index</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n  </td>\n  <td class=\"mlabels-right\">\n<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n  </tr>\n</table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">array</td><td>pointer to the heap array. </td></tr>\n    <tr><td class=\"paramname\">heapSize</td><td>size of the heap. </td></tr>\n    <tr><td class=\"paramname\">index</td><td>index of the node to update.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>The function updates the heap to account for a change to the element of index <code>index</code> in the heap.</p>\n<p>Notice that using this function requires knowing the index of the heap index of element that was changed. Since the heap swaps elements in the array, this is in general different from the index that that element had originally. </p>\n\n</div>\n</div>\n</div><!-- contents -->\n        <!-- Doc Here -->\n      </div>\n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n", "encoding": "ascii"}