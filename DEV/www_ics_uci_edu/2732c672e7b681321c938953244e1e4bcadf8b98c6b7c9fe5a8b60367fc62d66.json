{"url": "https://www.ics.uci.edu/~eppstein/gina/graphics.html", "content": "<HTML><HEAD>\n<TITLE>Geometry in Action: Graphics</TITLE>\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\"\nhref=\"http://www.ics.uci.edu/~eppstein/gina/gina.rss\" />\n</HEAD><BODY BGCOLOR=\"#FFFFFF\" TEXT=\"#000000\">\n<!--#config timefmt=\"%d %h %Y, %T %Z\" -->\n<DIV ALIGN=CENTER>\n<H1>\n<IMG src=\"gina.gif\" ALT=\"Geometry in Action\">\n</H1>\n</DIV>\n<HR><P>\n<H2>Graphics</H2>\n\nThis area is quite closely connected with computational geometry; for\ninstance ACM TOG often publishes computational geometry papers.\nGeometric research topics in graphics include data structures for ray\ntracing, clipping, and radiosity; hidden surface\nelimination algorithms; automatic simplification for distant objects;\nmorphing; clustering for color quantization; converting triangulated\nsurfaces to strips of triangles (some graphics engines\ntake inputs in this form to save bandwidth); and construction of\nlow-discrepancy point sets (for oversampling to eliminate Moire effects\nin ray tracing).  Specialized applications of graphics\nin which other geometric ideas are needed include\n<A HREF=\"arch.html\">architecture</A>,\n<A HREF=\"vreal.html\">virtual reality</A>, and\n<A HREF=\"vidgames.html\">video game programming</A>.\nThis area is also related to <A HREF=\"meshgen.html\">mesh generation</A>\nin several ways: both fields use triangulation algorithms to partition \ncomplex surfaces into simpler pieces, and radiosity calculations in\ngraphics are essentially a special case of the finite element method.\n<P><UL>\n<LI><A HREF=\"http://siggraph.org/\">ACM Special Interest Group on\nGraphics (SIGGRAPH)</A>.\n<P>\n<LI><A HREF=\"http://info.acm.org/pubs/tog/\">ACM Transactions on Graphics</A>.\n<P>\n<LI><A HREF=\"http://www.afit.af.mil/ENGgraphics/annobib/annobib.objrep.html\">Annotated bibliography on object representation schemes for 3d graphics</A>, H.-G. Park, Air Force Inst. Tech.\n<P>\n<LI><A HREF=\"http://liinwww.ira.uka.de/bibliography/Graphics/index.html\">Bibliographies on Computer Graphics</A>, Alf-Christian Achilles, U. Karlsruhe.\n<P>\n<LI><A HREF=\"DeyEdelsbrunnerGuha.ps.Z\">Computational Topology</A>.\nSurvey paper by Dey, Edelsbrunner, and Guha, presented at the conference\n\"Computational Geometry -- Ten Years After\".  Includes descriptions of\napplications in image processing, cartography, graphics, solid modeling,\nmesh generation, and molecular modeling.\n<P>\n<LI><A HREF=\"http://mambo.ucsc.edu/psl/cg.html\">Computer Graphics\ndirectory</A>, Perceptual Science Lab, UC Santa Cruz.\n<P>\n<LI><A HREF=\"http://plunk.org/~grantham/public/actc/\">Converting\nsets of triangles with shared edges into triangle strips</A>,\nBrad Grantham.\n<P>\n<LI><A HREF=\"http://www.afit.af.mil/ENGgraphics/annobib/writeups/garg86.hgp.html\">Displaying a Voxel-Based Object Via Linear Octrees</A>, Gargantini et al., Proc.\nSPIE 1986.\n<P>\n<LI><A HREF=\"http://www.mri.uchicago.edu/~rg/Radiosity/aspect.html\">Dynamic\nScene Radiosity</A>.\nRobert Grzeszczuk, U. Chicago, maintains a triangulated mesh\ndynamically, keeping track of the topological changes in\nthe pattern of shadow crossings in an image.\n<P>\n<LI><A HREF=\"http://isgwww.cs.uni-magdeburg.de/~deussen/stip.pdf\">Floating\nPoints</A>.  Deussen, Hiller, van Overveld, and Strothotte use Voronoi\ndiagrams to place stipple points for\n<A HREF=\"http://www.red3d.com/cwr/npr/\">non-photorealistic rendering</A>.\n<P>\n<LI><A HREF=\"http://www-ercim.inria.fr/publication/Ercim_News/enw25/pellegrini.html\">From\ncomputational geometry to computational physics</A>, M. Pellegrini,\nERCIM News, Apr. 1996.\nMarco describes his recent work on algorithms for form\nfactors, radiosity, and electrostatics, using integral geometry and\nMonte Carlo methods in place\nof the traditional finite element meshing approach.\n<P>\n<LI><A HREF=\"http://info.mcc.ac.uk/CGU/ITTI/Geom/geometry_announce.html\">Geometry for computer graphics</A>.  Teaching materials from the ITTI Gravigs\nProject.\n<P>\n<LI><A HREF=\"http://www.ics.uci.edu/~eppstein/vorpic.html\">Mosaic / stained glass graphic effect</A>.  One gets interesting\nvisual effects by taking a random sample of pixels from a bitmap image,\ncomputing the Voronoi diagram of the sample, and filling each cell\nwith the corresponding sample's color.  This appears to be what\nPhotoshop does in its \"Pixelate->Crystalize\" filter;\nit can be thought of as a form of piecewise constant function interpolation.\n<P>\n<li><a href=\"http://www.imagetomosaic.com/\">MosaicExpress and Mosa&iuml;que 2000</a> PC software for designing and building tile mosaics, based\non square, hexagonal, triangular, and other tilings of the plane.\n<p>\n<LI><A HREF=\"http://www.cis.upenn.edu/~jnimerof/home.html\">Jeffry\nNimeroff</A> works with both the Computer and Information\nScience and Architecture depts. at U. Penn., on illumination\nalgorithms for architectural computer graphics.\n<P>\n<LI><A HREF=\"http://www.programmersheaven.com/zone10/\">Programmer's\nHeaven computer graphics programming links</A>.\n<P>\n<LI><A HREF=\"http://www.anglia.ac.uk/~trochford/puertra4/index.html\">PUERTRA</A>, software for modeling Islamic geometric art.\n<P>\n<LI><A HREF=\"http://city.lcs.mit.edu/city/city.html\">Seth Teller</A>\nof MIT is constructing a database\nof buildings in Cambridge Mass.  Related algorithmic questions\ninclude methods for combining image data from different\nsources into a single 3d model, and data structures for fast rendering\nof the resulting graphics.\n<P>\n<LI><A HREF=\"http://www.dca.fee.unicamp.br/~sib2001/\">SIGRAPI 2001</A>,\n14th Brazilian Symposium on Computer Graphics and Image Processing,\nSanta Catarina, 15-18 October 2001.\nLists computational geometry as one of the possible submission topics.\n<P>\n<LI><A HREF=\"http://www.cs.sunysb.edu/~evans/stripe.html\">Stripe</A>\ntool for converting polygonal models into triangle strips, for fast\noutput to graphics hardware.\n<P>\n<LI><A HREF=\"http://www.seas.gwu.edu/student/rohrer/morph.html\">3d\nGeometric Morphing</A>, R. Rohrer, George Washington U.\n<P>\n<li><a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=3602702.WKU.\">US \nPatent 3602702</a> covers the quadtree subdivision of a viewing plane to perform hidden surface removal in computer graphics.\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=4694404.WKU.\">Patent 4694404</a> covers the use of octrees to implement a nearer-object-first\npainting order.\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5123084.WKU.\">Patent 5123084</a> describes a similar nearest-first octree graphics method.\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5222201.WKU.\">Patent\n5222201</a> also concerns octree graphics methods, and describes\na heuristic for speeding up the conversion of objects into octree\nrepresentations.\n<p>\n<li><a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=3889107.WKU.\">US\nPatent 3889107</a> covers the use of binary space partitions for hidden\nsurface removal, shadow calculation, and collision detection.\n<p>\n<li><a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5129051.WKU.\">US\nPatent 5129051</a> covers a slab method of performing trapezoidal\ndecomposition and its application to scan-line conversion in computer graphics\n(<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=4791582.WKU.\">Patent\n4791582</a>).\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5276783.WKU.\">Patent 5276783</a> is also on slab-based trapezoidalization.\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5020002.WKU.\">Patent\n5020002</a> is harder to\ndecode; it seems to be describing an ear-cutting trapezoidalization method.\n<P>\n<li><a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5268998.WKU.\">US Patent 5268998</a> seems to cover graphical display of objects in non-Euclidean or higher dimensional geometries.\n<p>\n<li>US Patents\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5317681.WKU.\">5317681</a> and\n<a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5428717.WKU.\">5428717</a> cover methods for finding convex hulls of\npolyhedra based on flipping reflex edges, along with an animated version\nof this procedure that creates a smooth morph of the polyhedron to its hull.\n<P>\n<li><a href=\"http://164.195.100.11/netacgi/nph-Parser?p=1&u=/netahtml/search-adv.htm&r=1&f=G&l=50&d=PALL&S1=5574835.WKU.\">US\nPatent 5574835</a> describes a method of performing visibility checking\nof polygons by intersecting bounding boxes.\n<p>\n</UL><HR><P>\nPart of\n<A HREF=\"http://www.ics.uci.edu/~eppstein/geom.html\">Geometry in Action</A>,\na collection of applications of computational geometry.<BR>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/\">David Eppstein</A>,\n<A HREF=\"http://www.ics.uci.edu/~theory/\">Theory Group</A>,\n<A HREF=\"http://www.ics.uci.edu/\">ICS</A>,\n<A HREF=\"http://www.uci.edu/\">UC Irvine</A>.<P>\n<SMALL>Semi-automatically\n<A HREF=\"http://www.ics.uci.edu/~eppstein/pubs/filter.html\">filtered</A>\nfrom a common source file.</SMALL>\n</BODY></HTML>\n", "encoding": "ascii"}