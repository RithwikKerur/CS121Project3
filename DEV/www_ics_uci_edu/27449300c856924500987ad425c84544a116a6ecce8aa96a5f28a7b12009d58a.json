{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0040.html", "content": "<!-- received=\"Wed Jun 05 11:57:00 1996 PDT\" -->\n<!-- sent=\"Wed, 5 Jun 1996 14:56:22 -0400\" -->\n<!-- name=\"David G. Durand\" -->\n<!-- email=\"dgd@cs.bu.edu\" -->\n<!-- subject=\"Versioning Thoughts (in HTML)\" -->\n<!-- id=\"ade263472d0210048f11@[128.195.21.209]\" -->\n<!-- inreplyto=\"\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Versioning Thoughts (in HTML)</title>\n<h1>Versioning Thoughts (in HTML)</h1>\n<b>David G. Durand</b> (<a href=\"mailto:dgd@cs.bu.edu\"><i>dgd@cs.bu.edu</i></a>)<br>\n<i>Wed, 5 Jun 1996 14:56:22 -0400</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#40\">[ date ]</a><a href=\"thread.html#40\">[ thread ]</a><a href=\"subject.html#40\">[ subject ]</a><a href=\"author.html#40\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0041.html\">Andre van der Hoek: \"More versioning thoughts.\"</a>\n<li> <b>Previous message:</b> <a href=\"0039.html\">Jim Whitehead: \"Re: Versions and configurations\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0042.html\">Christopher Seiwald: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0042.html\">Christopher Seiwald: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0044.html\">David J. Fiander: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0045.html\">David G. Durand: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0050.html\">Larry Masinter: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0057.html\">David J. Fiander: \"Re: Versioning Thoughts (in HTML)\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nThe following is a sort of little \"position paper\" on versioning in the\nWWW. It's in HTML and its longish so you can also look at:\n\n    <a href=\"http://cs-www.bu.edu/students/grads/dgd/HTML_versions.html\">http://cs-www.bu.edu/students/grads/dgd/HTML_versions.html</a>\n\n{Ed: I have included the HTML source directly into the mail message\nfor the Hypermail archive. - Jim}\n\n&lt;H1&gt;Versioning and HTTP&lt;/H1&gt;\n\n&lt;P&gt;This note includes a number of points that reflect a somewhat different \nperspective about how and why versioning should be integrated into the WWW. \nAt a few places, I will argue that less-restrictive assumptions be made to \naccomodate variant styles of versioning, and at a few other places, I will \nargue that more precise recommendations be prmoulgated to enhance \nmeaningful interoperability.\n\n&lt;p&gt;My personal agenda is that I'm interested in version control as a way to \nrelax concurrency to allow write-anytime collaboration. I'm also \ninterested in automatic merge tools that will let users manage such \ncollaboration, and finding fundamental models of versioning that capture \nthe widest range of possible editing behaviours, as a basis for \nimplementing generalized systems. I am personally convinced that this is \nbest done by tracking user operations, (typically editing operations) and \nconstructing versions as sets of non-interfering edits. This makes merging \nand distribution easy, at the expense of making the notion of version \ntrees only one of a variety of styles.\n\n&lt;h2&gt;Versions in URLs&lt;/h2&gt;\n\n&lt;p&gt;Accordingly, I believe that version identifiers should be opaque to \nediting systems, and managed by servers.  The paper on \"VTML\" that Fabio \nVitali and I wrote (referenced in the page for this group) identify a few \nkey notions for version management on the web.\n\n&lt;ul&gt;\n\n&lt;li&gt;A server must be able to \nserve up a \"current version\" of a document, as well as to serve up a \nparticular version on demand.  The default version is server-determined and \nis supplied when several versions of a document exist, and no version \nparameter is specified on the request.\n\n&lt;li&gt;An application should be able to determine what the version parameter \nof an URL is, to enable user decisions about whether to follow a link into \nthe \"current version\" of a document, or into a particular version specified \nin the link, or even a specific version specified by the user.  &lt;/ul&gt;\n\n&lt;p&gt;These features allow the option of browsers that present a single \nup-to-date view of web sites, while still being able to reflect changes in \ndocuments that have been made after a link was created.  It could also \nenable intelligent bookmark management (which is, in principle, just a \nspecial case of link anchor management).  I have no objection to the \n&lt;tt&gt;;version=&lt;/tt&gt; syntax proposed so far.\n\n&lt;h2&gt;HTTP issues&lt;/h2&gt;\n&lt;p&gt;The use of HTTP headers to specify version information is acceptable, if \nthey are not too restricted in their semantics.  As I don't have access to \na postscript printer right now, I must react to the direction of the \ndiscussion without being able to read \nthe details of Jim's proposal, so pardon any &lt;i&gt;faux pas&lt;/i&gt; I may \ninadvertently commit.\n\n&lt;p&gt;Use of versioning operation should not depend on operations such as LOCK and \nUNLOCK. I at least, am taking great pains to avoid the logical or \npractical necessity for such operations by making the free creation of \nvariant versions (and their later merging, if desired) as easy as possible. \nI'd like it if we can find a specification for lock and Unlock such that a \nserver like the one I am implementing will be able to work with editors \nthat expect LOCK and UNLOCK.\n\n&lt;p&gt;The semantics should not assume that there is a single predecessor \nversion, or that if there are multiple predecessors, one of them is the \n\"main\" one.  The semantics should not assume that every derived version \neven has a meaningful predecessor version.  In my model, a user might want \nto designate a new \"top-level version\" for the result of a complicated \nmerge involving many manual decisions about which changes to keep and how \nconflicts are to be resolved.\n\n&lt;p&gt;It should be a server decision as to what version identifier should be \nassigned to a document revision when it is submitted.  This follows from \nthe opaqueness of version parameters in URLs.  It should be a server \ndecision (not mandated by the protocol) whether to accept a new revision.  \nIt should also be a server decision whether or not the \"current version\" is \nchanged when a version is submitted.  Setting the current version should \nalso be an available operation, subject to server-specific access and \nconfiguration policy.  I don't object to servers deciding to enforce a \nparticular notion of consistency by refusing updates, but I don't want the \nprotocol to require that from my server.\n\n&lt;h2&gt;Edit tracking&lt;/h2&gt;\n&lt;p&gt;I'd like to see something like VTML in place to allow detailed version \ninformation to be propagated to intelligent clients if they want it. Fabio Vitali \nand I are already modifying VTML to remove some pointless \nHTML-dependencies from it, and make it look more like a byte-stream \nrevision system. I think that there is enough practical need to manage \nHTML documents, however, that adressing version control of HTML \nspecifically would still be worthwhile.\n\n&lt;p&gt;I'd like to discuss notions such as VTML as part of the overall \napproach to versioning on the web, thus creating a tripartite front for \nproper support: &lt;tt&gt;Content-type:&lt;/tt&gt;, HTTP protocol, and URL format. \nThese correspond to the fundamental versioning notions of naming, access \ncontrol, and differencing.\n\n----------------------------------------------+----------------------------\n  David Durand                 <a href=\"mailto:dgd@cs.bu.edu\">dgd@cs.bu.edu</a>  | david@dynamicDiagrams.com\n  Boston University Computer Science          | Dynamic Diagrams\n  <a href=\"http://cs-www.bu.edu:80/students/grads/dgd/\">http://cs-www.bu.edu:80/students/grads/dgd/</a> | http://dynamicDiagrams.com/\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0041.html\">Andre van der Hoek: \"More versioning thoughts.\"</a>\n<li> <b>Previous message:</b> <a href=\"0039.html\">Jim Whitehead: \"Re: Versions and configurations\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0042.html\">Christopher Seiwald: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0042.html\">Christopher Seiwald: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0044.html\">David J. Fiander: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0045.html\">David G. Durand: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0050.html\">Larry Masinter: \"Re: Versioning Thoughts (in HTML)\"</a>\n<li> <b>Maybe reply:</b> <a href=\"0057.html\">David J. Fiander: \"Re: Versioning Thoughts (in HTML)\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}