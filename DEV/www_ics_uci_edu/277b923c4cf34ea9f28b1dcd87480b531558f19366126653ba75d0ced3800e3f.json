{"url": "https://www.ics.uci.edu/~eppstein/pubs/geom-lp.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nLow-dimensional linear programming and LP-type problems\n</h2>\n<ul>\n<li><b>Dynamic three-dimensional linear programming</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-91-53.pdf\">Tech. Rep. 91-53</a>, ICS, UCI, 1991.<br>\n<i>32nd IEEE Symp. Foundations of Comp. Sci.,</i>\nSan Juan, Puerto Rico, 1991, pp. 488&ndash;494.<br>\n<i>ORSA J. Computing</i> 4: 360&ndash;368, 1992\n(special issue on computational geometry).\n<p>\nUses Dobkin-Kirkpatrick hierarchies to perform\n<a href=\"geom-lp.html\">linear programming</a>\nqueries in the intersection of several convex polyhedra.\nBy maintaining a collection of halfspaces as several subsets,\nrepresented by polyhedra, this leads to algorithms for a dynamic\nlinear program in which updates change the set of constraints.\nThe fully dynamic results have largely been subsumed\nby Agarwal and Matou&#353;ek, but this paper also includes\npolylog time results for semi-online problems,\nand uses them to give a fast randomized algorithm for the planar\n2-center problem (later improved by various authors, most recently\nin \"<a href=\"p-2c.html\">Faster Construction of Planar Two-Centers</a>\",\nwhich re-uses the data structures described here).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic three-dimensional linear programming\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-three-dimensional-linear-programming.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92dynamic.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=123359\">ACM DL</a>)\n<p>\n<li><b>Approximating center points with iterated Radon points</b>.<br>\n<a href=\"//www.almaden.ibm.com/u/kclarkson/\">\nK. Clarkson</a>, D. Eppstein, \n<a href=\"//www.cs.cmu.edu/afs/cs.cmu.edu/user/glmiller/public/www/home.html\">G.L. Miller</a>,\n<a href=\"//www-users.cs.umn.edu/~carl/\">C. Sturtivant</a>, and \n<a href=\"//www-sal.cs.uiuc.edu/~steng/\">S.-H. Teng</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=161004\"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 91&ndash;98</a>.<br>\n<a href=\"//kenclarkson.org/center/p.pdf\"><i>Int. J. Comp. Geom. &amp; Appl.</i> 6 (3): 357&ndash;377, 1996</a>.\n<p>\nGiven a collection of <i>n</i> sites,\na center point is a point (not necessarily a site)\nsuch that no hyperplane through the centerpoint\npartitions the collection into a very small and a very large subset.\nCenter points have been used by Teng and others\nas a key step in the construction of geometric separators.\nOne can find a point with this property by choosing\na random sample of the collection and applying\n<a href=\"geom-lp.html\">linear programming</a>,\nbut the complexity of that method grows exponentially with the dimension.\nThis paper proposes an alternate method that\nproduces lower quality approximations (in terms of the size\nof the worst hyperplane partition) but takes time\npolynomial in both <i>n</i> and <i>d.</i>\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Approximating center points with iterated Radon points\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Approximating-center-points-with-iterated-Radon-points.html\">Citations</a>)\n<p>\n<li><b>The centroid of points with approximate weights</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nD. Eppstein, \n<a href=\"//robotics.stanford.edu/users/guibas/bio.html\">L. J. Guibas</a>,\nJ. Hershberger, \n<a href=\"//www.cs.ucsb.edu/~suri/\">S. Suri</a>, and \n<a href=\"//www.wwnet.net/~janc/\">J. Wolter</a>.<br>\n<a href=\"BerEppGui-ESA-95.ps.gz\"><i>3rd Eur. Symp. Algorithms,</i>\nCorfu, 1995</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 979, 1995, pp. 460&ndash;472.\n<p>\nGiven a set of points with weights that are not known precisely,\nbut are known to fall within some range, considers the possible\nweighted centroids arising from different choices of weights\nin each range.  The combinatorics of this problem are closely\nconnected with those of\n<a href=\"geom-zono.html\">zonotopes</a>.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#The centroid of points with approximate weights\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/The-centroid-of-points-with-approximate-weights.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern95centroid.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=739636\">ACM DL</a>)\n<p>\n<p>\n<li><b>Choosing subsets with maximum weighted average</b>.<br>\nD. Eppstein and \n<a href=\"//www.ics.uci.edu/~dan/\">\nD. S. Hirschberg</a>.<br>\n<a href=\"EppHir-TR-95-12.pdf\">Tech. Rep. 95-12, ICS, UCI, 1995</a>.<br>\n<a href=\"ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/eppstein.ps.gz\">\n<i>5th MSI Worksh. on Computational Geometry</i>, 1995, pp. 7&ndash;8</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0849\"><i>J. Algorithms</i> 24: 177&ndash;193, 1997</a>.\n<p>\nUses geometric optimization techniques to find, among <i>n</i> weighted values,\nthe <i>k</i> to drop so as to maximize the weighted average of the remaining values.\nThe feasibility test for the corresponding decision problem involves\n<i>k</i>-sets in a dual line arrangement.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Choosing subsets with maximum weighted average\">BibTeX</a> &ndash;\n<a href=\"EppHir-Algs-97.pdf\">Full paper</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95choosing.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=258407\">ACM DL</a>)\n<p>\n<li><b>Optimal point placement for mesh smoothing</b>.<br>\n<a href=\"//www.cs.utexas.edu/users/amenta/\">N. Amenta</a>,\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314383\">\n<i>8th ACM-SIAM Symp. Discrete\nAlgorithms,</i> New Orleans, 1997, pp. 528&ndash;537</a>.<br>\n<a href=\"//www.siam.org/meetings/archives/an97/ms8.htm\">Symp.\nComputational Geometry Approaches to Mesh Generation</a>,\nSIAM 45th Anniversary Mtg., Stanford, 1997.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809081\">arXiv:cs.CG/9809081</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1998.0984\">\n<i>J. Algorithms</i> 30: 302&ndash;322, 1999 (special issue for SODA 1997)</a>.\n<p>\nWe study <a href=\"geom-tri.html\">finite element mesh</a> smoothing\nproblems in which we\nmove vertex locations to optimize the shapes of nearby\ntriangles.  Many such problems can be solved in linear time using\n<a href=\"geom-lp.html\">generalized linear programming</a>; we also give\nefficient\nalgorithms for some non-LP-type mesh smoothing problems.\nOne lemma may be of independent interest: the locus of points in R<sup>d</sup>\nfrom which a d-1 dimensional convex set subtends a given solid angle\nis convex.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Optimal point placement for mesh smoothing\">BibTeX</a> &ndash;\n<a href=\"AmeBerEpp-SODA-97.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Optimal-point-placement-for-mesh-smoothing.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/amenta97optimal.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=309437\">ACM DL</a>)\n<p>\n<li><b>Setting parameters by example</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.DS/9907001\">arXiv:cs.DS/9907001</a>.<br>\n<a href=\"//www.computer.org/proceedings/focs/0409/04090309abs.htm\"><i>40th\nIEEE Symp. Foundations of Comp. Sci.</i>, 1999, pp. 309&ndash;318</a>.<br>\n<a href=\"//doi.org/10.1137/S0097539700370084\">\n<i>SIAM J. Computing</i> 32 (3): 643&ndash;653, 2003</a>.\n<p>\nWe introduce a class of \"inverse parametric optimization\"\nproblems, in which one is given both a parametric optimization problem\nand a desired optimal solution; the task is to determine parameter\nvalues that lead to the given solution.  We use\n<a href=\"geom-lp.html\">low-dimensional linear programming</a>\nand geometric sampling techniques to solve\nsuch problems for\n<a href=\"mst.html\">minimum spanning trees</a>,\n<a href=\"graph-path.html\">shortest paths</a>, and\nother optimal subgraph problems, and discuss applications in\nmulticast routing, vehicle path planning, resource allocation, and board\ngame programming.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Setting parameters by\nexample\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Setting-parameters-by-example.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=796502\">ACM DL (FOCS)</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=639091\">ACM DL (SJC)</a>)\n<p>\n<li><b>Optimal M&ouml;bius transformations for information visualization\nand meshing</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.CG/0101006\">arXiv:cs.CG/0101006</a>.<br>\n<a href=\"BerEpp-WADS-01-omt.pdf\"><i>7th Worksh. Algorithms and Data\nStructures,</i> Providence, Rhode\nIsland, 2001</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 2125, 2001, pp. 14&ndash;25.\n<p>\nWe give linear-time\n<a href=\"geom-lp.html\">quasiconvex programming</a>\nalgorithms for finding a M&ouml;bius transformation of a\n<a href=\"geom-circle.html\">set of spheres</a>\nin a unit ball or on the\nsurface of a unit sphere that maximizes the minimum size of a\ntransformed sphere. We can also use similar methods to maximize the\nminimum distance among a set of pairs of input points. We apply these\nresults to vertex separation and symmetry display in spherical\n<a href=\"gdraw.html\">graph drawing</a>, viewpoint selection in\n<a href=\"geom-hyperbolic.html\">hyperbolic</a> browsing, and element size\ncontrol in conformal structured\n<a href=\"geom-tri.html\">mesh generation</a>.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Optimal M&ouml;bius transformations for information visualization and meshing\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Optimal-Moebius-transformations-for-information-visualization-and-meshing.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern01optimal.html\">CiteSeer</a> &ndash;\n<a href=\"BerEpp-WADS-01-omt-slides.pdf\">WADS talk slides</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=673338\">ACM DL</a>)\n<p>\n<li><b>Optimization over zonotopes and training support vector machines</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0105017\">arXiv:cs.CG/0105017</a>.<br>\n<a href=\"BerEpp-WADS-01-svm.ps.gz\"><i>7th Worksh. Algorithms and Data\nStructures,</i> Providence, Rhode\nIsland, 2001</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 2125, 2001, pp. 111&ndash;121.\n<p>\nWe use the\n<a href=\"geom-lp.html\">ellipsoid method</a>\nto develop (theoretically) efficient algorithms\nfor optimizing linear functions on intersections of\n<a href=\"geom-zono.html\">zonotopes</a>,\nand show how to apply this to train soft-margin support vector classifiers.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Optimization over zonotopes and training support vector machines\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Optimization-over-zonotopes-and-training-support-vector-machines.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern01optimization.html\">CiteSeer</a> &ndash;\n<a href=\"BerEpp-WADS-01-svm-slides.pdf\">WADS talk slides</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=673340\">ACM DL</a>)\n<p>\n<li><b>Optimized color gamuts for tiled displays</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0212007\">arXiv:cs.CG/0212007</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=777834\">\n<i>19th ACM Symp. Comp. Geom.,</i> San Diego, 2003, pp. 274&ndash;281</a>.\n<p>\nWe consider the problem of finding a large color space that can be\ngenerated by all units in multi-projector tiled display systems. Viewing\nthe problem geometrically as one of finding a large parallelepiped\nwithin the intersection of multiple parallelepipeds, and using\ncolorimetric principles to define a volume-based objective function for\ncomparing feasible solutions, we develop an algorithm for finding the\noptimal gamut in time O(n<sup>3</sup>), where n denotes the number of\nprojectors in the system. We also discuss more efficient\n<a href=\"geom-lp.html\">quasiconvex programming</a> algorithms for\nalternative objective functions based on\nmaximizing the quality of the color space extrema.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Optimized color gamuts for tiled displays\">BibTeX</a> &ndash;\n<a href=\"BerEpp-SCG-03-talk.pdf\">SCG talk slides</a>)\n<p>\n<li><b>Quasiconvex analysis of backtracking algorithms</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0304018\">arXiv:cs.DS/0304018</a>.<br>\n<i>15th ACM-SIAM Symp. Discrete Algorithms,</i>\nNew Orleans, 2004, pp. 781&ndash;790.<br>\n<a href=\"//doi.org/10.1145/1198513.1198515\"><i>ACM Trans. Algorithms</i> 2 (4): 492&ndash;509 (special issue for SODA 2004), 2006</a>.\n<p>\nWe consider a class of multivariate recurrences frequently arising\nin the worst case analysis of Davis-Putnam-style\n<a href=\"exponential.html\">exponential time\nbacktracking algorithms</a> for NP-hard problems. We describe a\ntechnique for proving asymptotic upper bounds on these recurrences,\nby using a suitable weight function to reduce the problem to that of\nsolving univariate linear recurrences; show how to use <a\nhref=\"geom-lp.html\">quasiconvex programming</a> to determine the weight\nfunction yielding the smallest\nupper bound; and prove that the resulting upper bounds are within a\npolynomial factor of the true asymptotics of the recurrence. We\ndevelop and implement a multiple-gradient descent algorithm for the\nresulting quasiconvex programs, using a real-number arithmetic\npackage for guaranteed accuracy of the computed worst case time\nbounds. \n<p>\nThe journal version uses the longer title \"Quasiconvex analysis of\nmultivariate recurrence equations for backtracking algorithms\".\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Quasiconvex analysis of backtracking algorithms\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-04-qaba.pdf\">SODA talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Quasiconvex-analysis-of-backtracking-algorithms.html\">Citations</a>)\n<p>\n<li><b>Quasiconvex programming</b>.<br>\nD. Eppstein.<br>\nInvited talk at DIMACS Worksh. on Geometric Optimization, New Brunswick,\nNJ, 2003.<br>\nPlenary talk at <a href=\"//www.ii.uib.no/algo2004/\">ALGO 2004</a>,\nBergen, Norway, 2004.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0412046\">arXiv:cs.CG/0412046</a>.<br>\n<i>Combinatorial and Computational Geometry</i>, Goodman, Pach, and\nWelzl, eds., MSRI Publications 52, 2005, pp. 287&ndash;331.\n<p>\nDefines <i>quasiconvex programming</i>, a form of generalized linear\nprogramming in which one seeks the point minimizing the pointwise\nmaximum of a collection of quasiconvex functions.\nSurveys algorithms for solving quasiconvex programs either numerically\nor via generalizations of the dual simplex method from linear\nprogramming, and describe varied applications of this geometric\noptimization technique in meshing, scientific computation, information\nvisualization, automated algorithm analysis, and robust statistics.\n<p>\n(<a href=\"Epp-DIMACS-03-QCP.pdf\">DIMACS talk slides</a> &ndash;\n<a href=\"Epp-ALG-04.pdf\">ALGO talk slides</a>)\n<p>\n<li><b>Hyperbolic geometry, M&ouml;bius transformations, and geometric optimization</b>.<br>\nD. Eppstein.<br>\n<a href=\"//www.msri.org/publications/ln/msri/2003/introdcgeom/eppstein/2/index.html\">Invited\ntalk at MSRI Introductory Worksh. Discrete &amp; Computational Geometry</a>,\nBerkeley, CA, 2003.\n<p>\nDescribes extensions of computational geometry algorithms to <a href=\"geom-hyperbolic.html\">hyperbolic\ngeometry</a>, including an output-sensitive 3d Delaunay triangulation\nalgorithm of Boissonat et al. and\nmy own research on\n<a href=\"p-omt.html\">optimal M&ouml;bius transformation</a>.\n<p>\n(<a href=\"//fano.ics.uci.edu/cites/Document/Hyperbolic-geometry-Moebius-transformations-and-geometric-optimization.html\">Citations</a>)\n<p>\n<li><b>Minimum dilation stars.</b><br>\nD. Eppstein and\n<a href=\"//kwortman.ecs.fullerton.edu/\">K. Wortman</a>.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0412025\">arXiv:cs.CG/0412025</a>.<br>\n<i>21st ACM Symp. Comp. Geom.,</i> Pisa, 2005, pp. 321&ndash;326.<br>\n<a href=\"//doi.org/10.1016/j.comgeo.2006.05.007\"><i>Comp. Geom. Theory &amp; Applications</i> 37 (1): 27&ndash;37, 2007</a>.\n<p>\nWe show how to test the dilation of a star, embedded in a Euclidean\nspace of bounded dimension, in time O(n&nbsp;log&nbsp;n),\nand how to find the star center that has the minimum dilation for\na given set of leaf points in randomized expected time\nO(n&nbsp;log&nbsp;n).\nFor two-dimensional points, we can find the minimum dilation center,\nconstrained to be one of the input points, in time\nO(n&nbsp;2<sup>&alpha;(n)</sup>&nbsp;log<sup>2</sup>n).\nThe unconstrained center placement algorithm involves\n<a href=\"geom-lp.html\">quasiconvex programming</a>, and is used\nas a subroutine in the constrained center placement algorithm.\n<p>\n(<a href=\"EppWor-SoCG-05.pdf\">SoCG05 talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Minimum-dilation-stars.html\">Citations</a> &ndash;\n<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Minimum dilation stars\">BibTeX</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"geom.html\">Geometry</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}