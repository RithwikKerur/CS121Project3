{"url": "https://www.ics.uci.edu/~theory/269/040130.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, 23 Jan 2004</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width= \n\"521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a> \n\n<h1>ICS 269, Winter 2004: Theory Seminar</h1>\n\n<hr>\n<h2>30 Jan 2004:<br>\nSplit flows and elusive outliers: solving two problems in modern computing\n<br>\nAmic Chaudhary, UCI\n</h2>\n<p>\nThe world of computing is witnessing simultaneous explosions in data\nand connectivity.  We need computer systems that meet the challenges\nof this evolving world while exploiting the benefits inherent in it.\nIn this talk we shall look at two case studies of constructing\nalgorithms for such systems.\n\n<p>\nA simple technique harnesses the large connectivity of modern\nnetworks\nto provide not only fault tolerance, but also information security\n--- insisting that all flow (or, communication) is split through edge\ndisjoint paths.  The question is: How does the amount of possible\nflow\nchange under the splitting constraint?  Or, more particularly, can we\nsolve, in this scenario, the admission control type, or route (path)\ncoloring type, or any other type of problems that have been studied\nfor regular flows?  In the first case study, we shall present results\nand algorithms that answer some of these questions.\n\n<p>\nIn the second case study, we shall present an implementation for very\nfast detection of outliers from large data sets in high dimensional\nspace.  Detecting outliers is important in catching network\nintrusions and other fraud, in detecting bio-terrorist attacks, and,\nin our particular application, finding unique objects in astronomical\ndatabases. We shall show that a simple twist to the ubiquitous k-d\ntree leads to a method that makes no assumption about an underlying\nprobability model, but when compared to state-of-the-art\nimplementations of data mining algorithms that do make such\nassumptions, performs just as well.\n\n</body>\n</html>\n", "encoding": "ascii"}