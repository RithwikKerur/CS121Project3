{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/make/dll.mak", "content": "# file: dll.mak\n# description: Build VLFeat DLL\n# author: Andrea Vedaldi\n\n# Copyright (C) 2013-14 Andrea Vedaldi.\n# Copyright (C) 2007-12 Andrea Vedaldi and Brian Fulkerson.\n# All rights reserved.\n#\n# This file is part of the VLFeat library and is made available under\n# the terms of the BSD license (see the COPYING file).\n\nall: dll-all\nclean: dll-clean\narchclean: dll-archclean\ndistclean: dll-distclean\ninfo: dll-info\n\n# --------------------------------------------------------------------\n#                                                        Configuration\n# --------------------------------------------------------------------\n\n# LINK_DLL_CLFAGS and LINK_DLL_LDFLAGS are the compiler options needed\n# to link to the VLFeat DLL. DLL_CLFAGS and DLL_LDFLAGS the options to\n# build the DLL.\n\nDLL_NAME = vl\n\nLINK_DLL_CFLAGS = \\\n$(if $(DISABLE_THREADS),-DVL_DISABLE_THREADS) \\\n$(if $(DISABLE_OPENMP),-DVL_DISABLE_OPENMP) \\\n$(if $(DISABLE_SSE2),-DVL_DISABLE_SSE2) \\\n$(if $(DISABLE_AVX),-DVL_DISABLE_AVX) \\\n-I$(VLDIR)\n\nLINK_DLL_LDFLAGS =\\\n-L$(BINDIR) -lvl\n\nDLL_CFLAGS = \\\n$(STD_CFLAGS) \\\n-fvisibility=hidden -fPIC -DVL_BUILD_DLL \\\n$(LINK_DLL_CFLAGS) \\\n$(call if-like,%_sse2,$*, $(if $(DISABLE_SSE2),,-msse2)) \\\n$(call if-like,%_avx,$*, $(if $(DISABLE_AVX),,-mavx)) \\\n$(if $(DISABLE_THREADS),,-pthread) \\\n$(if $(DISABLE_OPENMP),,-fopenmp)\n\nDLL_LDFLAGS = \\\n$(STD_LDFLAGS) \\\n-lm \\\n$(if $(DISABLE_THREADS),,-lpthread) \\\n$(if $(DISABLE_OPENMP),,-fopenmp)\n\nBINDIR = bin/$(ARCH)\n\n# Mac OS X on Intel 32 bit processor\nifeq ($(ARCH),maci)\nDLL_SUFFIX := dylib\nDLL_LDFLAGS += -m32\nendif\n\n# Mac OS X on Intel 64 bit processor\nifeq ($(ARCH),maci64)\nDLL_SUFFIX := dylib\nDLL_LDFLAGS += -m64\nendif\n\n# Linux-32\nifeq ($(ARCH),glnx86)\nDLL_SUFFIX := so\nDLL_LDFLAGS += -m32\nendif\n\n# Linux-64\nifeq ($(ARCH),glnxa64)\nDLL_SUFFIX := so\nDLL_LDFLAGS += -m64\nendif\n\n# --------------------------------------------------------------------\n#                                                                Build\n# --------------------------------------------------------------------\n\n# On Mac OS X the library install_name is prefixed with @loader_path/.\n# At run time this causes the loader to search for a local copy of the\n# library for any binary which is linked against it. The install_name\n# can be modified later by install_name_tool.\n\ndll_tgt := $(BINDIR)/lib$(DLL_NAME).$(DLL_SUFFIX)\ndll_src := $(wildcard $(VLDIR)/vl/*.c)\ndll_hdr := $(wildcard $(VLDIR)/vl/*.h)\ndll_obj := $(addprefix $(BINDIR)/objs/, $(notdir $(dll_src:.c=.o)))\ndll_dep := $(dll_obj:.o=.d)\n\narch_bins += $(dll_tgt)\ncomm_bins +=\ndeps += $(dll_dep)\n\n.PHONY: dll\n.PHONY: dll-all, dll-clean, dll-archclean, dll-distclean\n.PHONY: dll-info\nno_dep_targets += dll-dir dll-clean dll-archclean dll-distclean\nno_dep_targets += dll-info\n\ndll-all: dll\ndll: $(dll_tgt)\n\n# generate the dll-dir target\n$(eval $(call gendir, dll, $(BINDIR) $(BINDIR)/objs))\n\n$(BINDIR)/objs/%.o : $(VLDIR)/vl/%.c $(dll-dir)\n\t$(call C,CC)                                            \\\n\t     -c -o \"$(@)\"                                       \\\n\t     $(DLL_CFLAGS) \"$(<)\"\n\n$(BINDIR)/objs/%.d : $(VLDIR)/vl/%.c $(dll-dir)\n\t$(call C,CC)\t\t\t\t\t\t\\\n\t     -MM\t\t\t\t\t\t\\\n\t     -MF \"$(@)\"\t\t\t\t\t\t\\\n\t     -MT '$(BINDIR)/objs/$*.o $(BINDIR)/objs/$*.d'      \\\n\t     $(DLL_CFLAGS) \"$(<)\"\n\n$(BINDIR)/lib$(DLL_NAME).dylib : $(dll_obj)\n\t$(call C,CC)\t\t\t\t\t\t\\\n\t  -dynamiclib\t\t\t\t\t\t\\\n\t  -undefined suppress\t\t\t\t\t\\\n\t  -flat_namespace\t\t\t\t\t\\\n\t  -install_name @loader_path/lib$(DLL_NAME).dylib\t\\\n\t  -compatibility_version $(VER)\t\t\t\t\\\n\t  -current_version $(VER)\t\t\t\t\\\n\t  -isysroot $(SDKROOT)\t\t\t\t\t\\\n\t  $(DLL_LDFLAGS)\t\t\t\t\t\\\n\t  $(^)\t\t\t\t\t\t\t\\\n\t  -o \"$(@)\"\n\n$(BINDIR)/lib$(DLL_NAME).so : $(dll_obj)\n\t$(call C,CC) -shared                                    \\\n\t    $(^)                                                \\\n\t    $(DLL_LDFLAGS)\t                                \\\n\t    -o \"$(@)\"\n\ndll-clean:\n\trm -f $(dll_dep) $(dll_obj)\n\ndll-archclean: dll-clean\n\trm -rf $(BINDIR)\n\ndll-distclean:\n\trm -rf bin\n\ndll-info:\n\t$(call echo-title,VLFeat core library)\n\t$(call dump-var,dll_hdr)\n\t$(call dump-var,dll_src)\n\t$(call dump-var,dll_obj)\n\t$(call dump-var,dll_dep)\n\t$(call echo-var,BINDIR)\n\t$(call echo-var,DLL_NAME)\n\t$(call echo-var,LINK_DLL_CFLAGS)\n\t$(call echo-var,LINK_DLL_LDFLAGS)\n\t$(call echo-var,DLL_CFLAGS)\n\t$(call echo-var,DLL_LDFLAGS)\n\t$(call echo-var,DLL_SUFFIX)\n\t$(call echo-var,LIBTOOL)\n\t@echo\n\n# Local variables:\n# mode: Makefile\n# End:\n", "encoding": "ascii"}