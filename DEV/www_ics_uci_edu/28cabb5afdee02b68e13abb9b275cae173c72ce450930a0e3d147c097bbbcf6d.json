{"url": "https://www.ics.uci.edu/~theory/269/140523a.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, May 23, 2013</title>\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script type=\"text/javascript\"\n  src=\"http://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Spring 2014: Theory Seminar</a><br>\nICS Building, Room 243, 1pm\n\n<hr />\nMay 23, 2013:</h2>\n<h1>\nThe complexity of order type isomorphism\n</h1>\n<h2>\nMichael Bannister\n</h2>\n\n<p>\nThe order type of a point set in $R^d$ maps each\n$(d{+}1)$-tuple of points to its orientation (e.g., clockwise or\ncounterclockwise in $R^2$). Two point sets $X$ and $Y$ have the same\norder type if there exists a mapping $f$ from $X$ to $Y$ for which every\n$(d{+}1)$-tuple $(a_1,a_2,\\ldots,a_{d+1})$ of $X$ and the corresponding\ntuple $(f(a_1),f(a_2),\\ldots,f(a_{d+1}))$ in $Y$ have the same\norientation. In this paper we investigate the complexity of determining\nwhether two point sets have the same order type. We provide an $O(n^d)$\nalgorithm for this task, thereby improving upon the\n$O(n^{\\lfloor{3d/2}\\rfloor})$ algorithm of Goodman and Pollack (1983).\nThe algorithm uses only order type queries and also works for abstract\norder types (or acyclic oriented matroids). Our algorithm is optimal,\nboth in the abstract setting and for realizable points sets if the\nalgorithm only uses order type queries.\n</p>\n\n(From <a href=\"http://arxiv.org/abs/1311.0928\">a paper at SODA 2014</a>\nby Greg Aloupis, John Iacono, Stefan Langerman, and &Ouml;zg&ouml;r\n&Ouml;zkan.)\n\n</body>\n</html>\n\n", "encoding": "ascii"}