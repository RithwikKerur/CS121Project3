{"url": "https://www.ics.uci.edu/~ejw/authoring/collection/dt/Minutes990216.txt", "content": "WebDAV Advanced Collections Conference Call - 2/16/99\n\nAttending: Judy Slein, Jim Davis, Geoff Clemm, Jim W, Tyson\n\nACTION ITEMS\n\nJudy: Spec changes\nJudy: Update issues list\nJudy: Submit revised spec to Internet-Drafts on Friday 2/19\nJudy: Send mail to the list soliciting comments on the spec - say it's nearing completion\nJudy: Solicit a few reviewers to do thorough review of the spec\nJudy, Geoff, Jim D: Work on language for references in the middle of URLs (by e-mail)\n\nLOGISTICS\n\nNo more design team meetings till after IETF\n\nwww.apps.ietf.org has what information is available on Application Area agenda for IETF\n\nJim has requested a BOF for versioning.\nIf he gets it, the 2 hour WebDAV slot can be devoted to general WebDAV, collections, and\naccess control.  Otherwise, a mini-BOF for versioning will be part of the WebDAV meeting.\n\nCount on at least 30 minutes for collections.  Maybe an hour.\n\nLOCK\n\nNothing came up in the versioning workshop to affect us.\n\nCOPY\n\nJudy: Could we consider (for both COPY and LOCK) having the semantics for an individual\nreferences stay consistent with the general rules for direct and redirect references (apply\nto the target for direct references, get a 302 response for redirect).  Just make \nexceptions for operations on collections.  This would give intuitive results that work for\ndown-level clients for individual references.\n\nJim W and Geoff: No, we need to keep the semantics the same between operations on\nindividual references and operations on collections that contain references.  It gets too\ncomplicated for people to understand otherwise.  It would also force us to have an \nadditional header.\n(It would be useful to record in the rationale that there is this option.  It would be\na backup position in case we get push-back on our decision.)\n\nJudy would like to put the summary table from her e-mail on COPY of 2/10 in an appendix\nto the spec.  It may be useful for people to see in one place the semantic patterns\nand exceptions.\nJim W: Note that whenever you duplicate information in this way, there is an opportunity for\ninconsistency in the spec.\nFor now, Judy will try to keep design rationale in the spec.  We can always separate it out\nlater if the spec seems to be getting too long.  In any case, we want to have all of our\nrationale available together in one document.\n\nKeep the semantics of PROPFIND as it is, the same for individual references and for \ncollections that contain references: in both cases, redirect references get a 302 response.\n\nHow do we reconcile our semantics of COPY / MOVE with the WebDAV spec?  We say that MOVE\nis logically equivalent to COPY with No-Passthrough + DELETE.  It's ok to say this because\nthe No-Passthrough header is new with referencing.\n\nREVIEW OPEN ISSUES\n\nIssue 14: How to include reftype, reftarget, and location in Multi-Status responses\n\nThe options are:\nJust include those elements directly inside the response element\nDefine a new header element and put them in it\nPut them in a prop element\n \nJim W prefers putting them in either a header block or a prop block.  This would provide\na framework for future extensions.  It also helps a human trying to parse the response.\nGeoff prefers not to force people to make an ontological choice here (header vs property).\nProposal: Use a prop block.\nJudy: a header block makes more sense given that we are trying to simulate the response to\nan operation on an individual reference within a Multi-Status response.\n\nAgreed: We'll follow a general policy of modeling both headers and properties as prop \nelements except in the case of transient headers, which will be treated as headers.  So all\nof reftype, reftarget, and location will occur inside a prop element when returned in a\nMulti-Status response.\n\nNew Issue: Can reftarget be a relative URL?\n\nCan reftarget be a relative url? If so, relative to what? (relative to base URL of the\ncollection that contains the reference, but there is no canonical URL that is the one.\nrelative to the URL that was used to get at the collection resource.)\n\nWhy do we need reftarget to be relative? It saves the server from having to fix up the value\nof reftarget in case it points inside the same subtree where the reference is located, and\nyou move the subtree.\nAlternatively, we use absolute url's and have the server fix them up. \n\nThe server might not always be able to do the fixup.  It might not always be easy to tell\nwhether an absolute URL points to something that is being moved, for example in a chain of\nreferences that might go off server and then come back.\nThen let the server just make a best effort to fix them up.\n\nThere may be interoperability problems with using relative URLs?\n\nHow common is it for a reference to point within the same tree? Quite common, even for a\nreference to point within the same collection.  We have the scenario where an article is\nincluded twice within the same set of course readings, once early in the course and once\nlater on.\n\nIf reftarget is relative, the client has the burden of figuring out the value of the \nabsolute URL.\n\nGeoff believes that people will insist on having relative references.\n\nDisagreement about whether real servers will be willing to fix up reftarget if we require\nits value to be absolute.\n\nJim W still has reservations about allowing reftarget to be relative.\n\nAgreed:\nDAV:reftarget property MAY be relative\nRef-Target header MAY be relative\nLocation header MUST be absolute (The HTTP spec gives us this.)\n\nOpen Issue: How to determine the base for a relative URL in reftarget.  We need to check\nthe URL spec and make sure we get this right.\n\n\nHIERARCHY\n\nIs left-to-right parsing equivalent to right-to-left?  Geoff thinks not.  The examples\nhe cites are tar files and gzips, where he believes left-to-right parsing will not work.\n\nWe need a way of writing this up that is *not* in terms of parsing a URL.\n\nJudy, Geoff, and Jim D will try to sort this out via e-mail.\n\nJohn Stracke just sent mail about non-collection resources in the middle of URLs.  Look at\nit off-line.  It cites the example of a cgi script that lets you put slash-separated\nsegments after the script name.", "encoding": "ascii"}