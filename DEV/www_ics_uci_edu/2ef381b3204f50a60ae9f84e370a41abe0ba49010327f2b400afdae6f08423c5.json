{"url": "https://www.ics.uci.edu/~sysarch/projects/snippets.html", "content": "<html>\n<head>\n<title>\nOpenCV.js\n</title>\n<link rel=\"stylesheet\" href=\"http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.3.0/styles/default.min.css\">\n<script src=\"http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.3.0/highlight.min.js\"></script>\n\n</head>\n\n<body>\nThe following two code snippets show how erode implementation in C++ compares to its equivalent OpenCV.js implementation.\n<div id= \"ccode\" style=\"width:700px; isplay:inline-block;\">\n    <pre> <code class=\"c++\">\n      void cpp_erode(){\n\n       Mat image, dst;\n       image = imread(\"image.jpg\", CV_LOAD_IMAGE_COLOR);\n\n       // Create a structuring element\n       int erosion_size = 6;\n       Mat element = getStructuringElement(cv::MORPH_RECT,\n                          cv::Size(2*erosion_size+1, 2 * erosion_size + 1),\n                          cv::Point(erosion_size, erosion_size));\n\n       // Apply erosion or dilation on the image\n       erode(image,dst,element);\n\n       namedWindow(\"Display window\", CV_WINDOW_AUTOSIZE);\n       imshow(\"Display window\", image );\n\n       namedWindow(\"Result window\", CV_WINDOW_AUTOSIZE);\n       imshow(\"Result window\", dst);\n    }\n    </code> </pre>\n</div>\n<div id = \"jscode\" style=\"width:700px;isplay:inline-block;\">\n    <pre> <code class=\"js\">\n      function js_erode(){\n        var src = CV.matFromArray(getInput(), CV.8UC4);\n        var dst = new CV.Mat();\n        CV.cvtColor(src, src,\n            CV.ColorConversionCodes.COLOR_RGBA2RGB.value, 0);\n\n        // Create a structuring element\n        var erosion_type = CV.MorphShapes.MORPH_RECT.value;\n\n        var erosion_size = new CV.Size(2*Control.erosion_size+1,\n                                   2*Control.erosion_size+1);\n\n        var element = CV.getStructuringElement(erosion_type, erosion_size);\n\n        // Apply erosion or dilation on the image\n        CV.erode(src, dst, element) ;\n        show_image(dst, \"canvas2\");\n\n        // Clean up\n        src.delete();\n        dst.delete();\n        erosion_size.delete();\n    }\n    </code> </pre>\n</div>\n\n\n<script>\nwindow.onload = function() {\n    var aCodes = document.getElementsByTagName('pre');\n    for (var i=0; i < aCodes.length; i++) {\n        hljs.highlightBlock(aCodes[i]);\n    }\n};\n</script>\n\n</body>\n\n</html>\n", "encoding": "ascii"}