{"url": "https://www.ics.uci.edu/~theory/269/180608.html", "content": "<!DOCTYPE html>\n<html>\n<head>\n<title>Theory Seminar, June 8, 2018</title>\n<link rel=\"stylesheet\" href=\"../stylesheet.css\" type=\"text/css\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"\nalt=\"Center for Algorithms and Theory of Computation\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Spring 2018: Theory Seminar</a><br>\nBren Hall, Room 1423, 1pm</h2>\n<hr />\n<h2>Friday, June 8, 2018:</h2>\n<h1> On the Hardness of a Pursuit Game in Graphs\n</h1>\n<h2>Nil Mamano, UCI</h2> \n<p>\nAbstract: Consider a game where an intruder is hiding in a node in an\nundirected graph. At each iteration, you are allowed to inspect k nodes of\nthe graph to see if the intruder is in one of them. If the intruder is not\ncaught, it moves to an adjacent node. The intruder wins if he can escape\nforever. We consider the question of, given a graph and a number k (where k\nis the number of nodes that you can inspect at each iteration) whether an\noptimal intruder can escape forever. We review some of the known results for\nthe special cases of k=1 and when G is a tree, and then show that the general\ncase is NP-hard.\n\n<p>\nJoint work with Juan Jose Besa, Siddharth Gupta, Elham Havvaee, Timothy U.\nJohnson, Jordan Jorgensen, Tung Mai, Pedro Matias, and Martha Osegueda\n</body></html>\n\n", "encoding": "ascii"}