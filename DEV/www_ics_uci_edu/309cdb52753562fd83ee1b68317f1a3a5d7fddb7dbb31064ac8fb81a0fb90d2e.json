{"url": "https://www.ics.uci.edu/~pattis/common/handouts/macclion/clion.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\r\n<html>\r\n\r\n<head>\r\n  <title>CLion IDE: Downloading, Installing, and Testing</title>\r\n</head>\r\n\r\n<body BGCOLOR=\"white\">\r\n\r\n<center>\r\n<h1>CLion IDE: Downloading, Installing, and Testing</h1>\r\n<p>\r\n</center>\r\n<hr align=\"left\" width=\"100%\">\r\n<p>\r\n<b>Download/Install/Test the CLion IDE</b>\r\n<p>\r\n<b>CLion</b> is an Integrated Development Environment (IDE) that uses the\r\n  <b>Clang C++</b> compiler to develop/test C++ programs.\r\n It occupies about .6 GB on disk.\r\n<p>\r\nBefore installing CLion in this handout, you should have already downloaded and\r\n  installed the <a href=\"clang.html\" targe=\"_new\">Clang C++</a> compiler\r\n  (if you haven't, go back and do so).\r\n<p>\r\nYou may want to print these instructions before proceeding, so that you can\r\n  refer to them while downloading and installing CLion.\r\nOr, just keep this document in your browser.\r\nYou should read each step completely, before performing the action that it\r\n  describes.\r\n<p>\r\nThis document shows the installation of CLion version 2016.2.2; I installed\r\n  this version originally, but I am now using verson 2016.3.1.\r\nYou should install the latest version to be compatible with how CLion is\r\n  used in this document.\r\n<p>\r\n<hr align=\"left\" width=\"100%\">\r\n\r\n\r\n<h2>JetBrain's CLion:</h2>\r\n<p>\r\n<h3>Section 0) Registering For a Free Copy of CLion</h3>\r\n<p>\r\nIn this section you will register for a free copy of CLion online.\r\n<p>\r\n<ol>\r\n<li>Click\r\n    <a href=\"https://www.jetbrains.com/shop/eform/students\" target=\"_new\">\r\n      Student License</a>.<p>\r\n    When run, the following <b>JetBrains Products for Learning</b>\r\n      screen should appear.\r\n    Fill it in as shown, but with <b>your Name and Email address</b> (not mine).\r\n    <p>\r\n    <img src=\"images/clion/CLion License.jpg\">\r\n    <p>\r\n    Click the <b>APPLY FOR FREE PRODUCTS</b> button.\r\n    <p>\r\n\r\n    The following screen <b>may</b> appear.\r\n    <p>\r\n    <img src=\"images/clion/CLion Not Robot.jpg\">\r\n    <p>\r\n    If it appears, click the checkbox.\r\n    <p>\r\n     A <b>Thank You!</b> screen will appear, indicating that\r\n      <b>Jet Brains</b> is sending you a <b>Confirm Request</b> email.\r\n    <p>\r\n\r\n<li>You should receive an email from JetBrains (likely within 5-10 minues)\r\n      containing the following text:\r\n     <blockquote><b>\r\nHi,\r\n<p>\r\nYou've received this email because your email address was<br>\r\nused for registering/updating a JetBrains Educational Pack.\r\n<p>\r\nPlease follow this link to confirm your intention:\r\n<p>\r\n<u><font color=\"#0000FF\">Confirm Request</font></u>\r\n<p>\r\nYours truly,<br>\r\nJetBrains Team<br>\r\n<u><font color=\"#0000FF\">https://www.jetbrains.com</font></u><br>\r\nThe Drive to Develop</b></blockquote>\r\n<p>\r\n\r\n<li>Click the <b>Confirm Request</b> link.\r\n    A <b>Congrats! You've been approved!</b> screen will appear,\r\n      indicating that <b>Jet Brains</b> is sending you an\r\n      <b>Activate Educational License</b> email.\r\n<p>\r\n\r\n<li>You should receive an email from JetBrains (likely within 5-10 minues)\r\n      containing the following text:\r\n     <blockquote><b>\r\nDear &lt;Your first name&gt;\r\n<p>\r\nCongratulations! Your JetBrains Student License is confirmed.\r\n<p>\r\nTo activate your license, use the following link:<br>\r\n<u><font color=\"#0000FF\">Activate Educational License</font></u>\r\n<p>\r\nAfter accepting the License Agreement, you will be asked<br>\r\nto sign up for a Student JetBrains Account. You will use<br>\r\nthis account to sign in to JetBrains product(s) whenever<br>\r\nyou use them.\r\n<p>\r\nHappy coding!\r\n<p>\r\nYours truly,<br>\r\nJetBrains Sales Team<br>\r\n<u><font color=\"#0000FF\">https://www.jetbrains.com</font></u>\r\n</b></blockquote>\r\n<p>\r\n\r\n<li>Click the <b>Activate Educational License</b> link.\r\n    A <b>TOOLBOX SUBSCRIPTION LICENSE AGREEMENT FOR EDUCATION</b> screen will\r\n      appear.\r\n<p>\r\n\r\n<li>Click the <b>I Accept</b> button.\r\n    <p>\r\n    The following <b>JetBrains Products for Learning</b> screen should appear.\r\n    <p>\r\n    <img src=\"images/clion/CLion Name Password.jpg\">\r\n    <p>\r\n\r\n<li>Enter your <b>User Name</b> and <b>Password</b>\r\n      (and <b>Repeat Password</b>), click the <b>I have read...</b> checkbox,\r\n      and click the <b>Submit</b> button.\r\n    Write this information in a location for future reference.\r\n    <p>\r\n\r\n    The following <b>JetBrains Product Pack for Students</b> screen should\r\n      appear (I have blacked-out my <b>License ID</b>).\r\n    <p>\r\n    <img src=\"images/clion/CLion License ID.jpg\">\r\n    <p>\r\n    Write down the <b>License ID</b> for future reference.\r\n    <p>    \r\n\r\n<li>Note that anyone (even without a university email address) can download a\r\n      <a href=\"https://www.jetbrains.com/clion/\" target=\"_new\">\r\n      Free 30 Day Trial</a> version of CLion.\r\n\r\n<p>\r\n</ol>\r\n\r\n<h3>Section 1) Downloading/Installing CLion</h3>\r\n<p>\r\nIn this section you will download and begin installing CLion for use with the\r\n   Clang C++ compiler.\r\n<p>\r\n<ol>\r\n<li>Click\r\n    <a href=\"https://www.jetbrains.com/clion/download/#section=windows-version\" target=\"_new\">\r\n      CLion</a>.<p>\r\n    When run, the following <b>Download CLion</b>\r\n      screen should appear (ensure the Oval surrounds\r\n      the operating system you are on).\r\n    <p>\r\n    <img src=\"images/clion/CLion Download.pn\">\r\n    <p>\r\n    Click the <b>Download</b> button to \r\n    download the executable file named <b>CLion-2016.2.2.dmg</b>, which when run\r\n      will install the 64-bit version of CLion.\r\n    Its icon will appear on your screen as follows. \r\n       <p>\r\n       <img src=\"images/clion/Executable.png\">\r\n       <p>\r\n    Save this file for future use, in case you need to reinstall it\r\n      (or just leave it in the downloads folder).\r\n<p>\r\n\r\n<li>Double-click the <b>CLion-2016.2.2.dmg</b> file.\r\n    <p>\r\n    When run, the following <b>CLion</b> pop-up window should appear on your\r\n      screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Dragto.png\">\r\n    <p>\r\n\r\n<li>Drag the <b>CL</b> icon on the right into the <b>Application</b> window on\r\n      the right.\r\n    <p>\r\n    When run, the following <b>Copy</b> pop-up window should appear on your\r\n       screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Copyto Applications.png\">\r\n    <p>\r\n    In a few seconds, the progress bar should complete and the window should\r\n      disappear\r\n    Terminate the <b>CLion</b> window that remains.\r\n    <p>\r\n\r\n<li>Use the finder to go to the <b>Applications</b> window, and drag the\r\n      <b>CLion.app</b> entry on the Dock (the bar of icons that sits at the\r\n      bottom or side of your screen).\r\n    Doing so provides easy access to the <b>CLion</b> application.\r\n</ol>\r\n<p>\r\n\r\n<hr align=\"left\" width=\"33%\">\r\n<h3>Section 2) Initializing/Testing CLion with Clang C++</h3>\r\n<p>\r\nIn this section you will finish installing CLion and then create, build, and\r\n   run a trivial CLion project/program (including editing it and seeing how\r\n   syntax errors are reported).\r\nIt will also discuss some useful features in the CLion IDE.\r\n<p>\r\n<ol>\r\n<li>Click the <b>CLion</b> icon on the Dock.\r\n    <p>\r\n    The following pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Verify.png\">\r\n    <p>\r\n\r\n<li>Click the <b>Open</b> button.\r\n    The following <b>Complete Installation</b> pop-up window should appear on\r\n      your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup Complete Installation.png\">\r\n    <p>\r\n\r\n<li>Click the <b>OK</b> button.\r\n    <p>\r\n    The following <b>CLion Privacy Policy Agreement</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup Privacy Policy Agreement.png\">\r\n    <p>\r\n\r\n<li>Click the <b>Accept</b> button on this window.\r\n    <p>\r\n    The following <b>CLion License Activation</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup License Activation.png\">\r\n    <p>\r\n\r\n<li>Enter your <b>Username or email</b> and <b>Password</b>, and then click\r\n      <b>Activate</b> button.\r\n    <p>\r\n    The following <b>Customize CLion UI Themes</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize UI theme.png\">\r\n    <p>\r\n    Ensure the <b>Default</b> radio button is pressed.\r\n<p>    \r\n\r\n<li>Click the <b>Next: Toolchains</b> button on this window.\r\n    <p>\r\n    The following <b>Customize CLion</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize Toolchain.png\">\r\n    <p>\r\n\r\n<li>Click the <b>Next: Default plugins</b> button on this window.\r\n    <p>\r\n    The following <b>Customize CLion</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize Default plugins.jpg\">\r\n<p>\r\n\r\n<li>Click the <b>Next: Featured plugins</b> button on this window.\r\n    <p>\r\n    The following <b>Customize CLion</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize Featured plugins.jpg\">\r\n    <p>\r\n\r\n<li>Click the <b>Start using CLion</b> button on this window.\r\n    <p>\r\n    The following splash should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Splash.png\">\r\n    <p>\r\n    Eventually CLion loads and the following <b>Welcome to CLion</b>\r\n       pop-up window should appear on your screen (updated to the\r\n       version you downloaded; this screen appears only the first\r\n       time you start CLion).\r\n    <p>\r\n    <img src=\"images/clion/CLion Welcome.png\">\r\n    <p>\r\n\r\n<li>Click the <b>New Project</b> button on this window.\r\n    <p>\r\n    The following <b>New Project</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion New CMake Project.png\">\r\n    <p>\r\n    In the <b>Location</b> textbox, at the end of the path, replace\r\n      <b>untititled</b> with <b>trivialtest</b>; leave the <b>C++ Executable</b>\r\n      and <b>C++11</b> selected.\r\n<p>\r\n\r\n<li>Click the <b>OK</b> button on this window.\r\n    <p>\r\n    If a <b>Tip of the Day</b> pop-up window appears, click it <b>Close</b>\r\n      button.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Trivialtest.png\">\r\n    <p>\r\n    Note that the right pane lists the tabs <b>CMakeLists.txt</b>\r\n      (which contains the project's <b>make</b> code) and <b>main.cpp</b>\r\n      (which is shown and contains a trivial C++ program).\r\n    <p>\r\n    In this window, I right-clicked in the gray area between the project and\r\n      the <b>driver.cpp</b> panes and selected <b>Show Line Numbers</b>.\r\n    <p>\r\n    <img src=\"images/clion/CLion ShowLineNumbers.png\">\r\n    <p>\r\n    It useful to click the triangle to the left of <b>trivialtest</b> in the\r\n      Project/left pane.\r\n    <p>\r\n    <img src=\"images/clion/CLion Trivialtest disclosed.png\">\r\n    <p>\r\n    Every project will contain a <b>cmake-build-debug</b> folder, which will\r\n      ultimately contain the compiled code (executable) for the project.\r\n    Later, we will see how to put data files in that folder; the executable\r\n      uses that folder by default for reading/writing files.\r\n    <p>\r\n\r\n<!---\r\nDon't need to set CMAKE_CXX_COMPOER or CMAKE_C_COMPILER\r\n\r\n<li>Depress the <b>CLion</b> tab (to the right of the Apple logo on th top\r\n      menu) and select <b>Preference</b> as shown in the\r\n       following illustraton.\r\n    <p>\r\n    <img src=\"images/clion/CLion Get to settings.png\">\r\n    <p>\r\n    The following <b>Preferences</b>\r\n      window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Settings.jpg\">\r\n    <p>\r\n\r\n<li>Undisclose the <b>Appearance & Behavior</b> item, disclose\r\n      the <b>Build, Execution, Deployment</b> item, and select\r\n      <b>CMake</b>.\r\n    <p>\r\n    The following <b>Preferences</b>\r\n      window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Settings CMake.jpg\">\r\n    <p>\r\n    Copy and paste the text<br>\r\n      <b>-D CMAKE_CXX_COMPILER=/cygdrive/c/cygwin64/bin/clang++ -D CMAKE_C_COMPILER=/cygdrive/c/cygwin64/bin/clang</b><br>\r\n      into the <b>CMake Options</b> textbox.\r\n    These CMake switches tells CLion that we will be using the Clang C++/C\r\n      compilers.\r\n    <p>\r\n    The number #1 mistake that students make when creating\r\n      <b>their own projects</b> is <b>forgetting to enter these CMake\r\n      switches</b> heer or entering the wrong information.\r\n    When having problems, always double check the CMake Settings.\r\n    In projects that I supply, these switches will be correctly set in the\r\n      <b>CMakeList.txt</b> file.\r\n<p>\r\n\r\n<li>Click the <b>OK</b> button on this window.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reCMaking.jpg\">\r\n    <p>\r\n    It hows CLion checking whether the CMake switches you entered are legal.\r\n    <p>\r\n    If you want to examine the <b>CMakeLists.txt</b> file, click on it (in\r\n      the right pane).\r\n    It will update the right pane to\r\n    <p>\r\n    <img src=\"images/clion/CLion CMakeLists.jpg\">\r\n    <p>\r\n    If you do this, click on <b>main.cpp</b> (in the right pane), to return to\r\n      the C++ program.\r\n<p>\r\n--->\r\n<li>Click the <img src=\"images/clion/buildicon.jpg\"> (Build icon) on this\r\n      window.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Built.png\">\r\n    <p>\r\n    The results of the build appear in the <b>Message Build</b> pane.\r\n    This <b>trivialtest</b> C++ program has now been compiled and linked\r\n      successfully;\r\n      either could have dispayed errors in the <b>Message Build</b> pane, which\r\n      would have to be corrected before the program could be run.\r\n    <p>\r\n    <!--\r\n    Because building was successful, the Run icon (\r\n      <img src=\"images/clion/buildicon.jpg\">) turned from Gray to Green\r\n    -->\r\n<p>\r\n   \r\n<li>Click the <img src=\"images/clion/runicon.jpg\"> (Run icon) on this\r\n      window.\r\n    <p>\r\n    The following <b>Edit Configuration</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Configuration.png\">\r\n    <p>\r\n    For the <b>Target</b> dropdown, select <b>trivialtest</b> as shown.\r\n    The <b>Executable</b> dropdown will change to <b>trivialtest</b> \r\n      automatically.\r\n\r\n<li>Click the <img src=\"images/clion/CLion Run Button.png\"> (<b>Run</b> button)\r\n      on this window.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Run.png\">\r\n    <p>\r\n    The results of running the program print in the <b>Run</b> pane.\r\n<p>\r\n\r\n<li>To edit rebuild, and rerun the program, change the output string to\r\n      <b>\"Goodbye, World!\"</b> and then click the\r\n      <img src=\"images/clion/runicon.jpg\"> (Run icon) again.\r\n    CLion will rebuild the project (which contains no errors; you will briefly\r\n      see the Message Build pane as shown above), and then rerun it.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reRun.png\">\r\n    <p>\r\n    The results of rerunning the program appear in the <b>Run</b> pane.\r\n<p>\r\n\r\n<li>If we create a syntax error (remove the <b>;</b> at the\r\n      end of the <b>cout</b> line), CLion will highlight <b>endl</b> (the last\r\n      token before the error), show a red squiggle under the error, and put a\r\n      purple an underline at the right end of that column in the\r\n      <b>main.cpp</b> pane (by hovering over it, an error message appears);\r\n      CLion will also put a white <b>!</b> surrounded by a red circle at the\r\n      end of the top line in the <b>main.cpp</b> pane.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reRun syntax error 1.png\">\r\n    <p>\r\n    To try to rebuild and rerun this code (it will fail), click the\r\n      <img src=\"images/clion/runicon.jpg\"> (Run icon) again.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reRun syntax error 2.png\">\r\n    <p>\r\n    The failed results of attempting to rebuild the program appear in the\r\n      <b>Messages Build</b> pane; here I have repositioned the\r\n      separation between the <b>mail.cpp</b> and <b>Message Build</b> panes\r\n      to show the entire program and all the errors allow all errors to appear.\r\n</ol>\r\nWe will now continue by learning how to download a CLion project and run it.\r\nDuring the quarter, you will be asked to do this for all programming\r\n  assignments and many quizzes.\r\n<p>\r\n\r\n<hr align=\"left\" width=\"33%\">\r\n<h3>Section 3) Testing Downloadable CLion Projects with the Course Libraries</h3>\r\n<p>\r\nIn this section you will learn more about CLion, by downloading the course\r\n  libraries and then downloading/building/running a CLion project that contains\r\n  various programs that use these libraries.\r\n<p>\r\n<ol>\r\n<li>Create a new shortcut and place it on your desktop in an easy to see\r\n      position.\r\n<ol type =\"A\">\r\n   <li>In a <b>Terminal</b> window, copy/paste the following command\r\n         <b>defaults write com.apple.finder AppleShowAllFiles YES</b> and\r\n         then execute it; terminate the <b>Terminal</b> window.\r\n       To undo this command, copy/paste/execute\r\n         <b>defaults write com.apple.finder AppleShowAllFiles NO</b>.\r\n   <li>Using the <b>Finder</b>,\r\n       make an alias to the folder\r\n         <b>Macintosh HD/Users/yourname/ClionProjects</b>\r\n         and rename the alias <b>ClionProjects</b>.\r\n</ol>\r\n<p>\r\n\r\n<li>Download and unzip the file <a href=\"libraries.zip\">template</a>;\r\n    Copy its three folders (<b>courselib</b>, <b>gtestlib</b>, and\r\n      <b>test_all_data_types</b>) into the folder <b>ClionProjects</b>\r\n      shortcuts; it should already contain the <b>trivialtest</b> folder,\r\n      created by the operations above.\r\n    <p>\r\n    Generally, whenever you download CLion projects, you will unzip them and \r\n      then copy their folders into the folder that <b>ClionProjects</b>\r\n      shortcuts.\r\n<p>\r\n  \r\n<li>Click the <b>File</b> tab near the upper-left corner of the CLion toolbar;\r\n      then click the <b>Open</b> option in the pull-down menu.\r\n    <p>\r\n    The following  pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Open.png\">\r\n    <p>\r\n    You may need to scroll this window to select the <b>CLionProjects</b> folder\r\n      to make it appear as shown above.\r\n    The <b>Users</b> folder should contain a folder with your name\r\n      (<b>richardepattis</b> for me); it should contain a folder with the\r\n      <b>ClionProjects</b> folder; it should contain the four folders\r\n      <b>courselib</b>, <b>gtestlib</b>, <b>test_all_data_types</b>,\r\n      and <b>trivialtest</b>.\r\n    <p>\r\n    Click on the <b>test_all_data_types</b> folder, so that it is highlighted.\r\n<p>\r\n\r\n<li>Click the <b>OK</b> button on this window.\r\n    <p>\r\n    The following <b>Open Project</b> window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion This Window.png\">\r\n    <p>\r\n\r\n<li>Click the <b>This Window</b> button on this window.\r\n    (clicking <b>New Window</b> creates a second project window, which\r\n      is sometimes useful)\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion TADT.png\">\r\n    <p>\r\n<!---\r\n    In this window, I right-clicked in the gray area between the project and\r\n      the <b>driver.cpp</b> panes and select <b>Show Line Numbers</b>.\r\n    <p>\r\n    <img src=\"images/clion/CLion ShowLineNumbers.jpg\">\r\n    <p>\r\n--->\r\n\r\n<li>Scroll downward, select lines 30-35, and press <b>command-/</b>,\r\n      which uncomments the chosen lines.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion driver_set.png\">\r\n    <p>\r\n    If you press <b>command-/</b></b> again, it will comment the lines; so\r\n      this command really means <b>toggle-comment</b> on the selected lines.\r\n    Before continuing ensure lines 30-35 are uncommented.\r\n<p>\r\n\r\n<li>Click the <img src=\"images/clion/runicon.jpg\"> (Run icon) on this\r\n      window.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion driver_set run.png\">\r\n    <p>\r\n    First it will show the <b>Message Build</b> pane; it should be successful,\r\n      so it should next show the <b>Run</b> pane.\r\n    <p>\r\n    Experiment with this driver by entering commands (and their arguments, when\r\n      prompted) to better understand the <b>set</b> data type.\r\n    You can enter the <b>q</b> command to terminate the driver, or you can\r\n      click the <img src=\"images/clion/stopicon.jpg\"> (Stop icon) on the\r\n      left of the <b>Run</b> pane to terminate the driver.\r\n    After terminating the driver, click the\r\n      <img src=\"images/clion/closeicon.jpg\"> (Close icon) left of the\r\n      <b>Run</b> pane to close/remove the Run pane.\r\n    <p>\r\n    I suggest that you try terminating the driver with a <b>q</b> command; then,\r\n      rerun the program and terminate it with the Stop icon.\r\n<p>\r\n\r\n<li>We briefly noted the <b>cmake-build-debug</b> folder; now we will examine\r\n      it in more detail, but via an Finder window, not via CLion.\r\n    Click on the <b>ClionProjects</b> shortcut to open a Finder window,\r\n      then double-click its <b>test_all_data_types</b> folder, and finally\r\n      double-click its <b>cmake-build-debug</b> folder.\r\n    <p>\r\n    The following Finder window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Finder cmake-build-debug.png\">\r\n    <p>\r\n    Whenever you create a project, a <b>cmake-build-debug</b> folder will\r\n      appear in its project folder.\r\n    We have built two projects in this handout: <b>test_all_data_types</b>\r\n      and <b>trivialtest</b>; each has its own <b>cmake-build-debug</b> folder.\r\n    <p>\r\n\r\n\r\n<li>Double-click the file <b>test_all_data_types</b> to run this program\r\n      in Windows, outside of CLion.\r\n    The following <b>Terminal</b> window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion TerminalRun.png\">\r\n    <p>\r\n    Experiment with this driver by entering commands (and their arguments, when\r\n      prompted); it runs as it did in the CLion Run Pane.\r\n    Note that when you enter the <b>q</b> command the program terminates and the\r\n      <b>Terminal</b> window stops.\r\n    For example, if you find the <b>trivialtest.exe</b> file and run it by\r\n      double-clicking this file, its MS-DOS windo will run and then immediately\r\n      disappear.\r\n    <p>\r\n    For a program that <b>produces lots of output</b> it is often faster to\r\n        run the program in a <b>Terminal</b> window, rather than in CLion.\r\n<p>\r\n\r\n<li>Find the <b>input files</b> folder in the <b>test_all_data_types</b> folder\r\n      and copy all of its <b>.txt</b> data files into the\r\n      <b>cmake-build-debug</b> folder that contains the\r\n      <b>test_all_data_types</b> file.\r\n    <p>\r\n    Then, run the program (either in the CLion Run pane or a <b>Terminal</b>\r\n      window; try doing it in both places) and\r\n      issue the <b>lf</b> command (load from file); when prompted for the file\r\n      name, just press the <b>Enter</b> key to choose the default\r\n      (<b>loadset.txt</b>).\r\n    <p>\r\n    When running using the CLion Run pane, the following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion lf command.png\">\r\n    <p>\r\n    <b>IMPORTANT</b>: If a program reads data files, the root folder for the\r\n         specifying the files is the folder in which the executable file\r\n         appears.\r\n       It is simplest to copy all the data files into this folder.\r\n       An alternative would be to leave the files in the <b>input files</b>\r\n         folder, copy the entire folder, and then refer to these file names like\r\n         <b>input files/loadset.txt</b>.\r\n<p>\r\n\r\n<li>A typical project folder may have more than one <b>.cpp</b> file with a\r\n     main function (as <b>test_all_data_types</b> has).\r\n    Only one of these <b>.cpp</b> files can have its main function uncommented,\r\n      otherwise the build will fail.\r\n    When working on project, it is typical to \r\n    <p>\r\n    <ol type=\"a\">\r\n      <li>Comment-out code in one <b>.cpp</b> file.\r\n      <li>Uncomment code in another <b>.cpp</b> file.\r\n      <li>Rebuild/Rerun the newly uncommented <b>.cpp</b> file.\r\n    </ol>\r\n    <p>\r\n    In the <b>test_all_data_types</b> project folder, the <b>driver.cpp</b>\r\n      file has many main functions: we uncommented one (in step 6) to allow us\r\n      to run the Set driver.\r\n    If more than one main function is uncommented, attempting to build the code\r\n      will result in the compiler specifying a <b>redefinition of 'main'</b>\r\n      error.\r\n    <p>\r\n    The <b>test_all_data_types</b> project folder also contains many <b>.cpp</b>\r\n      files (their names all start with <b>test</b>) that each contain one main\r\n      function (each is a <b>Googletest</b> for one data type).\r\n    If more than one file contains a main function, attempting to build the\r\n      code will result in the linker specifying a\r\n      <b>multiple definition of 'main'</b> error.\r\n    <p>\r\n    To switch this project from running the Set driver to the Set Googletest\r\n    <ol type=\"a\">\r\n      <li>Comment-out lines 30-35 in the <b>driver.cpp</b> file: select them\r\n            and type the <b>command-/</b> command to toggle the commenting\r\n            on the selected lines (comment them).\r\n      <li>Scroll down the Project Pane (on the left) and double-click the\r\n            <b>test_set.cpp</b> file so that it appears as an editor tab.\r\n      <li>Type the <b>command-a</b> command to select <b>all</b> the lines in\r\n            this file.\r\n      <li>Type the <b>command-/</b> command to toggle the commenting on the\r\n            selected lines (uncomment them).\r\n    </ol>\r\n    <p>\r\n    Click the <img src=\"images/clion/runicon.jpg\"> (Run icon).\r\n    When prompted enter the three lines of information shown.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion test_set run.png\">\r\n    <p>\r\n    The bottom should show\r\n    <p>\r\n    <img src=\"images/clion/CLion test_set bottom.png\">\r\n    <p>\r\n</ol>\r\n<p>\r\nWe are now at the end of this handout.\r\nYou will not need to repeat the first two sections during the course, but you\r\n  will frequently download project folders and use them as demonstrated in\r\n  section 3.\r\n\r\n</body>\r\n</html>\r\n\r\n", "encoding": "ascii"}