{"url": "https://www.ics.uci.edu/~eppstein/261/s13-hw6.txt", "content": "CS 261, Spring 2013, Homework 6, Due Thursday, May 23\n\n1. (a) Find four strings whose compressed trie forms a complete binary\ntree with four leaves.\n\n(b) Is it possible for the suffix tree of a string to form a complete\nbinary tree with four leaves? If yes, provide an example; if no, explain\nwhy not.\n\n\n2. Let n be any integer, and let string s (including its string termination symbol $) have n symbols in it: exactly n-1 copies of the symbol \"a\" followed by the $. For instance, for n=5 the string s would be aaaa$. How many leaves does the suffix tree of s have, as a function of n? How many non-leaf nodes does it have?\n\n\n3. Suppose you are given a string s, over a given alphabet, and have\nconstructed the suffix tree for s. Describe a linear-time algorithm for\nusing the suffix tree to construct a string of minimum length over the\nsame alphabet that is not a contiguous substring of s.\n\nE.g., if the alphabet is {A,T,C,G} and s is AATACAGTTCTGCCGGA, then s\ncontains all 16 different length-two strings, but it is missing some\nlength-three strings, such as AAA, and your algorithm should output one\nof the missing strings.\n", "encoding": "ascii"}