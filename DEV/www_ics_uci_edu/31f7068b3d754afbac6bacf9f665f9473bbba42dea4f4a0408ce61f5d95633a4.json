{"url": "https://www.ics.uci.edu/~kay/courses/h22/hw/hw4.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\">\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\">\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Friday, January 24, 2003 4:48 PM\">\n<TITLE>Fourth Homework</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERDATA\" CONTENT=\"D7E503AA\">\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"CS 2, CS2, assignment, performance measurement\">\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"An assignment involving measuring and analyzing the performance of alternative search algorithms for ICS H22, an honors second-quarter course in computer science in Information and Computer Science, UC Irvine.\">\n<META HTTP-EQUIV=\"COPYRIGHT\" CONTENT=\"Copyright &#169; 2000, 2003 by David G. Kay.  All rights reserved.\">\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<A NAME=\"_top\"></A>\n<P>\n<IMG SRC=\"Fourth_Homework_files/Sidebar_123.gif\" WIDTH=575 HEIGHT=77>\n<BR>\n<FONT FACE=\"AGaramond\" SIZE=4> &#160; <A NAME=\"_14_26\"></A></FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4>This assignment is due on Friday, January\n31. <B> </B></FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4><B>(a)</B> If you don&#39;t have much experience\ncoding dynamically allocated, linked structures, you might want to postpone\nthis part of the assignment until after Tuesday&#39;s lecture, proceeding\nstraight on to part <B>(b)</B> now.</FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4>In the Goodrich and Tamassia book, you should\nlook closely at problems R-4.1 through R-4.7 and know how to do them.  We&#39;re\nnot going to ask you to write down and turn in the answers, but do be sure\nyou know what&#39;s going on here; something similar might show up on an\nexam.</FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4>Likewise, you should understand the concepts\nbehind P-4.3 through P-4.7.  Again, we aren&#39;t asking you to turn anything\nin for this (so you can spend your time on the rest of this assignment)\nand for now we&#39;re not expecting you to be able to do these perfectly\nfrom memory, but you should understand the concepts and be able to apply\nthem given some hints, reference points, or context.</FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4><B>(b)</B>  Look at Alex Thornton&#39;s Project\n#3 from ICS 22, available on the web at </FONT><FONT FACE=\"Courier New\"><A HREF=\"http://www.ics.uci.edu/~thornton/ics22/LabManual/Scenes/\">http://www.ics.uci.edu/~thornton/ics22/LabManual/Scenes/</A></FONT><FONT FACE=\"AGaramond\" SIZE=4>\n. </FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4><B>(b.1)</B>  Code the problem as specified.\n First, download the file that contains the skeleton of the program; the\nJava files for the classes you will write (MenuItem, Menu, Order, Table,\nand Restaurant) contain good advice and detailed specifications of the methods\nyou&#39;ll need to code.</FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4><B>(b.2)</B>  Here are a few questions about\nthis problem and its implementation.  Answer them briefly in a Word (or\nplain text) document:</FONT></P>\n<OL TYPE=\"i\">\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>The Menu and Order classes allow you to assume\nthat they will never contain more than 1000 items.  Why?  What would you\nhave to do differently if you weren&#39;t allowed to make those assumptions?</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>What parts of your program (which fields and\nmethods in which classes) would have to change if restaurants were allowed\nto add and remove tables (dynamically, during the time they&#39;re serving)?</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>There are three multiple-valued structures\nin this program:  the collection of Tables in the Restaurant, the collection\nof MenuItems in an order, and the collection of MenuItems on the Restaurant&#39;s\nMenu.  Probably you implemented all of them as unordered arrays.  Which\none of them is the best candidate to be implemented in one of the other\nmultiple-valued structures we have discussed (ordered array, linked list,\nbinary search tree, hash table)?  Which alternative would you choose, and\nwhy?  (There may be no single, obvious, compelling answer to this.  Just\nthink of how the restaurant&#39;s business might change over time, or how\nthe technology used might change, and think about which re-implementation\nmight plausibly provide the greatest benefit.)</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>(extra credit)  What&#39;s the pun behind\nChez Quis, the name of the restaurant in Alex&#39;s example? Can you come\nup with a funnier one?</FONT></LI>\n</OL>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4><B>What to turn in:</B>  </FONT></P>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4>For part <B>(b)</B>, turn in via Checkmate:</FONT></P>\n<UL>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>your five Java files</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>your test files, both the code files and the\n&quot;restaurant info&quot; files</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>a Word document describing how to run your\ntest cases</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>a Word document answering the questions posed\nabove</FONT></LI>\n</UL>\n<BR><BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=1>Written by David G. Kay, Winter 2003 to build\non &quot;Scenes from an Italian Restaurant,&quot; an ICS 22 lab by Alex\nThornton.</FONT></P>\n<BR CLEAR=ALL>\n<P>\n</P>\n<HR>\n<P>\n<address>\n<FONT FACE=\"Palatino\"><A HREF=\"http://www.ics.uci.edu/~kay/\">David G. Kay</A>,\n<I>406B Computer Science\n<BR>\n</I><A HREF=\"http://www.uci.edu/\">University of California, Irvine</A>\n<BR>\n</FONT><FONT FACE=\"AGaramond\">Irvine, CA  92697-3425</FONT><FONT FACE=\"Palatino\">\n --  </FONT><FONT FACE=\"AGaramond\"><B>(949) 824-5072</B></FONT><FONT FACE=\"Palatino\">\n --  Fax </FONT><FONT FACE=\"AGaramond\"><B>(949) 824-4056</B></FONT><FONT FACE=\"Palatino\">\n --  Email  <a href=mailto:kay@uci.edu>\n</FONT><FONT FACE=\"Courier\"><TT><A HREF=\"mailto:kay@uci.edu\">kay@uci.edu</A></a>\n<BR>\n</address>\n</TT></FONT></P>\n<P>\n<FONT FACE=\"Palatino\" SIZE=1>Friday, January 24, 2003 -- 4:48 PM</FONT></P>\n</BODY>\n</HTML>\n", "encoding": "ascii"}