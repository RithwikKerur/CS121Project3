{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0052.html", "content": "<!-- received=\"Fri Jun 07 01:52:00 1996 PDT\" -->\n<!-- sent=\"Fri, 7 Jun 1996 03:51:23 -0500\" -->\n<!-- name=\"Fabio Vitali\" -->\n<!-- email=\"vitali@cis.njit.edu\" -->\n<!-- subject=\"Re: Version identifier in URL\" -->\n<!-- id=\"ade263b33a021004a849@[128.195.21.209]\" -->\n<!-- inreplyto=\"Version identifier in URL\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Version identifier in URL</title>\n<h1>Re: Version identifier in URL</h1>\n<b>Fabio Vitali</b> (<a href=\"mailto:vitali@cis.njit.edu\"><i>vitali@cis.njit.edu</i></a>)<br>\n<i>Fri, 7 Jun 1996 03:51:23 -0500</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#52\">[ date ]</a><a href=\"thread.html#52\">[ thread ]</a><a href=\"subject.html#52\">[ subject ]</a><a href=\"author.html#52\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0053.html\">Fabio Vitali: \"Idle remarks\"</a>\n<li> <b>Previous message:</b> <a href=\"0051.html\">Larry Masinter: \"Re: High-level capabilities\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0002.html\">Jim Whitehead: \"Version identifier in URL\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0059.html\">David J. Fiander: \"Re: Version identifier in URL\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nHi.\n\nSince I was feeling like I needed some thrills in this boring evening, I\nhave decided to risk my life and belongings contributing to the already\nheated discussion on URL decoration for versions.\n\nLet me summarize my understanding of the proposals that have been made:\n\n1) <a href=\"http://host/path/resource\">http://host/path/resource</a>,x\nproposed by Pettengill and Arango and discussed because of problems with\nthe \",\" character, being allowed in URLs. Christopher Seiwal though prefers\nit over \";\".\n\n2) <a href=\"http://host/path/resource;v=x\">http://host/path/resource;v=x</a>\nproposed by Jim Whitehead and dissolved into schema n. 3 for clear\nsimilarities and for being less expressive than that one.\n\n3) <a href=\"http://host/path/resource;version=x\">http://host/path/resource;version=x</a>\nproposed by MKS (David Fiander), seconded by Jim Whitehead and strongly\nobjected to by Daniel Connolly.\n\n4) &lt;A HREF=\"<a href=\"http://host/path/resource\">http://host/path/resource</a>\" version=x&gt;\nproposed by Robert Pettengi and criticized by David Fiander for requiring a\nmodification in the HTML DTD. Daniel Connolly likes it though.\n\n5) GET /path/resource HTTP/1.0\n   Content-version: x\n\nproposed by Kenji Takahashi and generally criticized for requiring\nversioning-aware clients and for being impossible to specify in an anchor.\n\n6) <a href=\"http://host/path/resource/x\">http://host/path/resource/x</a>\nalso proposed by Kenji Takahashi, never really discussed but used by\nChristopher Seiwal for several examples.\n\n7) SET_CONFIG tables-no-frames HTTP/?.?\n   followed by simple GETs\nproposed by Keith Dawson and generally criticized for being stateful.\n\n8) <a href=\"http://host/path/resource?version=x\">http://host/path/resource?version=x</a>\nproposed by Larry Masinter as a provocation and surprisingly resisting\nwidespread attacks having been reproposed by Daniel Connolly.\n\nWell, then, I would like to throw in my 5 italian liras (~0.3 US cents) to\nthe discussion. Basically, of the three proposals still alive -- 3, 6 and 8\n-- I don't like 3 and 8, and like 6 very much.\n\nMaybe we agree that versions are usually organized in a more or less\nhierarchical structure, the configuration. By this I don't mean that the\nspace is a strict tree, i.e. that every leaf can only be reached by\nspecifying one and only one path, but that there is a non-ambiguous \"path\"\nto specify the resource that goes from the most general to the most\nspecific. For instance, file.c in the french version of the macintosh\nversion of the second release of product X. The path may not be unique,\nbecause the same file, non containing any language or platform related\ncode, may also appear in the chinese version of the Windows version.\nThe configuration hierarchy may be trivial (e.g. version 3.4 of file.html),\nbut still is a hierarchy.\n\n<a href=\"http://www.w3.org/pub/WWW/Addressing/URL/uri-spec.html\">http://www.w3.org/pub/WWW/Addressing/URL/uri-spec.html</a> has this to say\nabout hierarchies:\n\n&gt;The slash (\"/\", ASCII 2F hex) character is reserved for the delimiting of\n&gt;substrings whose relationship is hierarchical.\n\nThe fact that the slash is used basically as a way to specify the path of a\nfile within the file system accessed by the server is NOT a valid reason\nfor limiting its use to this purpose. Indeed:\n\n&gt;The similarity to unix and other disk operating system filename\n&gt;conventions should be taken as purely coincidental, and should not be\n&gt;taken to indicate that URIs should be interpreted as file names.\n\nNow it seems to me that this is the best way to go for specifying version\nnumbers for versioned entities.\n\n- The slash is already reserved for hierarchies. Hierarchies of different\norigin can be piled by juxtaposing the path name. This can't be said for\nthe other proposed schemas:\n        <a href=\"ftp://host/dir/file;A;version=x\">ftp://host/dir/file;A;version=x</a>\nor\n        <a href=\"wais://host/database/c/A;B;version=x\">wais://host/database/c/A;B;version=x</a>\nwhile being outside of the scope of a discussion on HTTP, look pretty silly\nanyway and would make the ftp or wais access to these resources impossible\nor completely different.\n\nI don't particularly like either schema 8, and it's clear the reason::\n        <a href=\"http://host/cgi-bin/tool.pl?version=x?a=b\">http://host/cgi-bin/tool.pl?version=x?a=b</a>\n\nOn the other hand,\n        <a href=\"http://host/dir/projectX/1.5/Macintosh/French/file.c\">http://host/dir/projectX/1.5/Macintosh/French/file.c</a>\n        <a href=\"http://host/dir/projectX/file.c/1.5/Macintosh/French\">http://host/dir/projectX/file.c/1.5/Macintosh/French</a>\n        <a href=\"http://host/dir/projectX/French/Macintosh/1.5/file.c\">http://host/dir/projectX/French/Macintosh/1.5/file.c</a>\n        <a href=\"http://host/dir/projectX/French/Macintosh/1.5/file.c/george\">http://host/dir/projectX/French/Macintosh/1.5/file.c/george</a>\n        <a href=\"http://host/dir/projectX/French/Macintosh/1.5.file.c/draft/2.1\">http://host/dir/projectX/French/Macintosh/1.5.file.c/draft/2.1</a>\n\nare all non ambiguous and may well refer to exactly the same resource. Hey,\nI think it is even possible to simply use the file system for them! And the\nschema would also gracefully accept simple hierarchies:\n\n        <a href=\"http://host/dir/file.html/3.4\">http://host/dir/file.html/3.4</a>\n\nand even:\n\n        <a href=\"http://host/cgi-bin/x/tool.pl?a=b\">http://host/cgi-bin/x/tool.pl?a=b</a>\n        <a href=\"http://host/cgi-bin/tool.pl/x?a=b\">http://host/cgi-bin/tool.pl/x?a=b</a>\n\nSince the file system is opaque at the URL level, it is the server that\ndetermines which part of the URL is the actual path name of the resource,\nand which is the specification of the version.\n\nBasically, we are simply making use of an established concept: that the\nspecification of version 3.4 of document \"foobar\" is \"in some sense\" more\nspecific than the specification of document \"foobar\" itself (which could be\neither 'the default version of document \"foobar\"' or, as in VTML, 'all the\nversions of document \"foobar\" put together').\n\nFinally, I find slashes easier to read than adding yet another decoration.\nSuppose I want to access  anchor \"chapter1\" of the document described by\nauthor=\"bill\" and name=\"foo\" as retrieved by version Y of the search engine\n\"application\". For instance, what would be the right syntax in this case?\n\n        <a href=\"http://host/cgi-bin/application;version=Y?author=bill+name=foo#chapter1\">http://host/cgi-bin/application;version=Y?author=bill+name=foo#chapter1</a>\n        <a href=\"http://host/cgi-bin/application?author=bill+name=foo;version=Y#chapter1\">http://host/cgi-bin/application?author=bill+name=foo;version=Y#chapter1</a>\n        <a href=\"http://host/cgi-bin/application?author=bill+name=foo#chapter1;version=1\">http://host/cgi-bin/application?author=bill+name=foo#chapter1;version=1</a>\n\nCompare to the simple:\n        <a href=\"http://host/cgi-bin/application/Y?author=bill+name=foo#chapter1\">http://host/cgi-bin/application/Y?author=bill+name=foo#chapter1</a>\n\nDrawbacks:\n- Well, it is not clear by simply reading the URL which is the name of the\nfile and which is the specification of the version. This can actually be a\nmerit from the URI point of view.\n- I don't know if there exists a file system in which a file and a\ndirectory can have exactly the same name, and are distinguished by the fact\nthat one is a directory and the other is a file. I mean, if it were\npossible for a directory to have both a file and a directory called\nfile.html, then the URL:\n        <a href=\"http://host/dir/file.html/1.5\">http://host/dir/file.html/1.5</a>\nwould be ambiguous. If there is such a perverted file system, I will\nwithdraw my points and leave to become a goatherd in Sardinia (Italy).\n\nComments?\n\nFabio Vitali\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0053.html\">Fabio Vitali: \"Idle remarks\"</a>\n<li> <b>Previous message:</b> <a href=\"0051.html\">Larry Masinter: \"Re: High-level capabilities\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0002.html\">Jim Whitehead: \"Version identifier in URL\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0059.html\">David J. Fiander: \"Re: Version identifier in URL\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}