{"url": "https://www.ics.uci.edu/~eppstein/projects/pairs/", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>Closest Pairs</title>\n</head>\n<body text=\"#000000\" bgcolor=\"#FFFFFF\">\n<h1><a href=\"http://www.ics.uci.edu/~eppstein/projects/\">Research\nProjects:</a> Closest Pairs</h1>\n\nI have been working for some time on data structures for\nmaintaining closest pairs of objects, as objects are dynamically\ninserted or deleted. Here \"objects\" might be any of a number of\nthings (points in a vector space; clusters of points; DNA\nsequences; ridges, valleys, and other features of the roof of a\nbuilding...) and \"closest\" may have its usual geometric meaning or\nmay be determined by some arbitrary function of the objects. \n\n<p>My methods generally assume the existence of another data\nstructure, for finding the closest object in a dynamic set to a\ngiven query object. This can be solved in general in O(<i>n</i>)\ndistance computations per query (just keep a list of all objects,\nand try them all) but for objects arising in computational geometry\nbetter solutions are possible (k-D trees for points, more\ncomplicated range search data structures for other geometric\nobjects).</p>\n\n<h2><a href=\"Methods/\">Methods and Summary of Results</a></h2>\n\n<h2><a href=\"Applications/\">Applications</a></h2>\n\n<h2><a href=\"Papers/\">Papers</a></h2>\n\n<h2><a href=\"Talks/\">Talks and Talk Slides</a></h2>\n\n<h2><a href=\"Source/\">Source Code</a></h2>\n\n<h2><a href=\"Data/\">Experimental Data</a></h2>\n\n<h2><a href=\"links.html\">Links to Related Web Sites</a></h2>\n\n<hr>\n<a href=\"/~eppstein/\">David Eppstein, <a href=\"/\">Information\n&amp; Computer Science</a>, <a href=\"http://www.uci.edu/\">UC\nIrvine</a>, <!--#flastmod file=\"index.html\" -->.</a>\n</body>\n</html>\n\n", "encoding": "ascii"}