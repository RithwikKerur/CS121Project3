{"url": "https://www.ics.uci.edu/~taylor/classes/117/design.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r<HTML>\r<HEAD>\r   <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\r   <META NAME=\"GENERATOR\" CONTENT=\"Mozilla/4.07 (Macintosh; I; PPC) [Netscape]\">\r   <TITLE>Deliverable 3: Design</TITLE>\r</HEAD>\r<BODY BGCOLOR=\"#FFFFF0\">\r\r<CENTER>\r<H2> Informatics 117: Project in Software System Design</H2>\r</CENTER>\r\r<CENTER>\r<H3> Winter Quarter 2009</H3>\r</CENTER>\r\r<CENTER>\r<H1> Architecture and Module Specifications</H1></CENTER>\r\r<H3>\rDue Date</H3>\rFebruary 12, 2009.\r<HR>\r<h3>Overview</h3>\r<P>Develop a\rdesign that fully satisfies the requirements for your\rapplication. This deliverable  consists of two elements:\ra design specification (consisting of an architecture\rand module specifications) and an integration test plan.\r<P>Your document must specify the correspondence between the\rrequirements elements and your design. You may show this\rcorrespondence any way you feel is appropriate (e.g., make notations\rthroughout your document or using a table that cross-references\rparagraph numbers).\r\r<P>Developing the software design will undoubtedly reveal inadequacies\rin previous documents. Please note these problems and what was done to\rresolve them.\r\r<P>Don't forget to include your meeting minutes and performance appraisals\rwith your document; refer to the syllabus for the complete check-list of\rwhat has to be turned in. As before, make sure that you post your design\rdocuments and your meeting minutes to your team web page.\r\r<HR>\r<H3> Deliverable Objectives/Quality</H3>\rKeep in mind that key objectives of a design document include:\r<UL>\r<LI> Develop a coherent representation of software that will satisfy the requirements</LI>\r<LI> Identify inadequacies in requirements</LI>\r<LI> Decompose the system into sub-systems that provide related sets of services</LI>\r<LI> Establish a framework for sub-system control and communication</LI>\r<LI> Specify modules that can be assigned as coding responsibilities</LI>\r<LI> Document design decisions and rationale</LI>\r<LI> Provide a reference tool readable by developers, testers, and maintainers</LI>\r<LI> Provide a basis for integration and testing</LI>\r</UL>\r\rIn addition, keep in mind that a design document should exhibit the\rfollowing qualities:\r<UL>\r<LI> Complete: everything that is essential is described</LI>\r<LI> Unambiguous: expressed in a well-defined notation</LI>\r<LI> Consistent: no mismatched interfaces</LI>\r<LI> Modifiable: this document will change just like all the others</LI>\r<LI> Confirmable/testable: you can tell when you've met the\rdesign</LI>\r</UL>\r\r<HR>\r<H3> Document Contents</H3>\r\r<H4> Introduction</H4>\rExpand your previous introduction to discuss your specific approaches to the\rdesign of the system and the organization of this document. This\rdescription is essentially just an updated version of the introduction\ryou included in your previous deliverable.\r\r<H4> Understanding</H4>\rExpand the understanding section of your previous document. Include brief descriptions\rof  actions you took to understand each technology studied during\rthis phase. If you make changes to this section, add text describing why the\rchange was necessary, and why it more accurately reflects your new understanding.\rThis section need not be different if your understanding hasn't changed.\r\r<H4> Project Plan</H4>\rThis will be an iterative expansion of your previous submission. Update\ryour project plan to show what you have accomplished  so\rfar.  Reassess the project risks as necessary. Expand your task network or work\rbreakdown structure to include the effort expended to complete this\rtask, as necessary. Based on the work you have done, revise your estimates on\rhow much your team can accomplish and deliver.\r\r<P>If you make changes, add text describing why the change was\rnecessary or why it will improve the ability of your team to accomplish\rthe work you have proposed.\r\r<H4> Design Specification</H4>\r\r<UL>\r<LI> Architecture Overview</LI>\r   <UL>\r   <LI> Architectural Style<BR>\r     What style of architecture did you adopt? Provide a reference to a\r   defining document.   </LI>\r   <LI> System Architecture Overview<BR>\r     This is the place for your \"one great diagram\" that shows how your\r   system is built. You might want to use more than one diagram, to show,\r   e.g., some different abstractions of the design (such as a data flow view,\r   a layers of abstraction view, an object view, or an OS process view) &ndash; multiple\r     diagrams are fine.</LI>\r   <LI> Subsystem Narrative<BR>\r     What each subsystem means   </LI>\r   <LI> Major limitations on the current design (if any)</LI>\r   <LI><br>\r   </LI>\r   </UL>\r\r<LI>\rModules/Objects Specification</LI>\r<UL>\r   <LI> List of Modules/Objects within your system</LI>\r   <LI> For each module/object, provide a Module Specification</LI>\r     <UL>\r      <LI> Name</LI>\r      <LI> Definition/Purpose - what it is/does</LI>\r      <LI> Narrative/Comment - how it works</LI>\r      <LI> What are the interfaces or APIs? Visibility?<BR>\r      </LI>\r       <LI> Data - What state does it keep (if any)?</LI>\r      <LI> Access - Who has access to the module/object/data?</LI>\r      <LI>Requires &ndash; What modules does this module depend upon?</LI>\r      <LI> Constraints - what constraints are there for this object/module? (e.g.\r        must start first, must be registered with ..., must ....)</LI>\r      <LI>anything else necessary to fully describe the module</LI>\r     </UL>\r   <LI>Diagrams you could consider using in providing this specification: UML\r     class diagrams, event sequence (trace) charts, state transition diagrams,\r     package diagrams, ...</LI>\r  </UL>\r</UL>\r\r<H4> Integration Test Plan</H4>\r<p>\rA test plan capable of demonstrating that the\rdesign meets the  requirements. Test\rcases should cover each module/object  interaction\rspecified. The test cases can be grouped with the design\rentity to which they apply, otherwise a cross reference listing of some\rsort should be provided.\r<UL>\r   <LI> For each test</LI>\r      <UL>\r      <LI> Test ID</LI>\r      <LI> Purpose of Test</LI>\r      <LI> Item(s) being tested</LI>\r      <LI> Input specification</LI>\r      <LI> Output specification</LI>\r         <UL>\r         <LI> Expected Results or Test Oracle Mechanism</LI>\r         </UL>\r      <LI> Test environmental needs or special test procedures</LI>\r      </UL>\r</UL>\r\r<H4> Initial Demonstration Plan</H4>\rWhat and how will you demonstrate? \r\r<H4> Tracking and Control Mechanisms</H4>\r<p>\r<em>Configuration Managemen</em>t: how will your modules/objects be managed?\r<UL>\r   <LI> SVN? CVS?</LI>\r   <LI>file structure, sub-directories, Makefiles, etc.</LI>\r   <LI> where is your persistent data going to live?</LI>\r</UL>\r\r<p>\r<em>Requirements Cross Reference</em>: what modules/objects satisfy what requirements?\r<UL>\r   <LI> a table mapping requirement to module/object</LI>\r</UL>\r\r<H4> Modifications to Prior Documents</H4>\r\r<H5> Requirements</H5>\rIf any requirements changed make them explicit. Highlight why the requirement\rwas changed/added/deleted and by whom (customer, developer, etc.).  If your\rrequirements have not changed, then so state.\r\r<H4> Glossary</H4>\rDefine any &quot;irregular&quot; terms used in the specifications above.  This portion\rof the document may be written as an extension to the glossary submitted\rwith the requirements, or may be a separate document that only defines\rterms local to the design activity.\r\r<H4> Additional Documentation</H4>\r\rThis section is reserved for any additional documentation developed\rduring this phase of the project. Specifically, if during the course of\rdeveloping the architecture your understanding of the various\rtechnologies involved in the project changed, or you discovered items\rthat were not documented but which are important, include that\rinformation here. Also list here the major background sources that you used during\rthis phase or any that you plan to use during the remainder of the\rproject. This includes references to similar systems and/or\rprocedures.\r\r<hr>\r<h3>Design Presentations.</h3>\rSee the syllabus for dates. Each team should prepare a 15 minute presentation. \r\r<p>\rYour presentation should include\rthe following:\r<UL>\r   <LI> Some context for your project (very brief!);</LI>\r   <LI> Current state of your project plan and comparison to the previous version\r     of the plan;</LI>\r   <LI> Highlights of your design including</LI>\r      <UL>\r      <LI> an overview of your architecture (this should comprise the bulk\r\t of your presentation) &ndash; the &quot;one great diagram&quot;</LI>\r      <LI> one or more key module/object specifications;</LI>\r      </UL>\r   <LI> [As needed] Modifications to your requirements that arose as a result\r     of your design process;</LI>\r   <LI> Overview of your integration test plan. </LI>\r</UL> \r       <hr><h3>&nbsp;</h3>\r</BODY>\r</HTML>\r", "encoding": "ascii"}