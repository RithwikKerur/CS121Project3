{"url": "https://www.ics.uci.edu/~swjun/courses/2019S-CS295/syllabus.htm", "content": "<html>\r\n<head>\r\n<meta charset=\"utf-8\" />\r\n<!--<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />-->\r\n<meta name=\"viewport\" content=\"width=480\">\r\n<meta http-equiv=\"CACHE-CONTROL\" content=\"NO-CACHE\" />\r\n<meta http-equiv=\"PRAGMA\" content=\"NO-CACHE\" />\r\n<title>2019 Spring - CS295: Modern Systems</title>\r\n<link href=\"../../posts/poststyle.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n</head>\r\n<body>\r\n<div id=container>\r\n<div id=top-bar>\r\n<h1>CS295: Modern Systems</h1>\r\n<h2>2019 Spring</h2>\r\n</div>\r\n<img src=../../res/divider.png width=15%>\r\n<div id=content-div>\r\n\r\n<h3>Overview</h3>\r\nLecturer: Sang-Woo Jun<br>\r\nTime: MWF 10:00--10:50<br>\r\n<s>Location: ICS 180</s>\r\nNew location: PSCB 230\r\n<br><br>\r\nFor a while now, computer systems have not been clean abstractions of homogeneous processors talking to uniform memory.\r\nSystems of today are complex, with intelligent cache hierarchies, heterogeneous processors, storage and network that act as first-class system components, and computation accelerators such as General-Purspose Graphic Processing Units (GPGPU) and Field-Programmable Gate-Arrays (FPGA), often organized into warehouse-scale datacenters and/or an elastically allocated cloud infrastructure.\r\nThere is great performance and power-efficiency to be gained with understanding of this complexity.\r\n<br><br>\r\nThis course is a high-level introduction into modern system design, with a focus on modern processor/memory hierarchies, Non-Volatile Memory (NVM) class memories, and especially reconfigurable hardware acceleration using FPGAs.\r\nWe will experience how simple knowledge about the machine's memory hierarchy and processor capabilities can improve software performance by orders of magnitude, and the use of FPGA accelerators can improve the performance and power efficiency of many applications.\r\n<br><br>\r\nWe will use physics simulation and machine learning applications as examples, and use real machines and real data to observe the effects of these modern technologies.\r\nWe will regularly see speedup of x1000 with the right understanding of the underlying architecture.\r\n\r\n<h3>Topics Covered</h3>\r\n\r\nIncomplete list of topics.\r\nTopics covered is subject to change according to feedback from students.\r\n\r\n<br>\r\n<ul>\r\n<li> Processor Architecture\r\n\t<ul>\r\n\t\t<li> Cache architecture, cache prefetcher, SIMD operations and AVX, Non-Uniform Memory Access (NUMA), cache-oblivious algorithms\r\n\t\t<li> Bonus: Transactional memory, Secure enclaves\r\n\t</ul>\r\n<li> Modern Storage\r\n\t<ul>\r\n\t\t<li> Non-Volatile Memory, libaio, RAID, flash-optimized file systems, NVMe-over-Fabric (NVMe-oF), processing in memory\r\n\t\t<li> Bonus: Storage-class memory (MRAM, STRAM, X-Point, etc), persistent operating systems and databases\r\n\t</ul>\r\n<li> Accelerators\r\n\t<ul>\r\n\t\t<li> FPGA-based reconfigurable hardware acceleration, how FPGAs and GPUs compare\r\n\t\t<li> Bonus: Architectures and microarchitectures for accelerators (RISC-V, Intel OPAE, Catapult, etc)\r\n\t</ul>\r\n<li> Novel appliances (Google Tensorflow Processing Unit, etc)\r\n<li> And more! Subject to interest.\r\n\r\n</ul>\r\n\r\n<h3> Grading </h3>\r\nGrading will be done based on a small number of labs\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}