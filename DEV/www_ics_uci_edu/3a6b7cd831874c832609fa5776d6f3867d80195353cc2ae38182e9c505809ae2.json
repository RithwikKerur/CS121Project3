{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0014.html", "content": "<!-- received=\"Wed May 29 15:30:00 1996 PDT\" -->\n<!-- sent=\"Wed, 29 May 1996 18:30:10 -0400\" -->\n<!-- name=\"Daniel W. Connolly\" -->\n<!-- email=\"connolly@beach.w3.org\" -->\n<!-- subject=\"Re: Version identifier in URL\" -->\n<!-- id=\"ade2526e1102100499ca@[128.195.21.209]\" -->\n<!-- inreplyto=\"Version identifier in URL\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Version identifier in URL</title>\n<h1>Re: Version identifier in URL</h1>\n<b>Daniel W. Connolly</b> (<a href=\"mailto:connolly@beach.w3.org\"><i>connolly@beach.w3.org</i></a>)<br>\n<i>Wed, 29 May 1996 18:30:10 -0400</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#14\">[ date ]</a><a href=\"thread.html#14\">[ thread ]</a><a href=\"subject.html#14\">[ subject ]</a><a href=\"author.html#14\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0015.html\">Daniel W. Connolly: \"Re: Version identifier in URL\"</a>\n<li> <b>Previous message:</b> <a href=\"0013.html\">Larry Masinter: \"Re: Versions and configurations\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0002.html\">Jim Whitehead: \"Version identifier in URL\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0015.html\">Daniel W. Connolly: \"Re: Version identifier in URL\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nIn message &lt;2.2.32.19960529070838.00710f78@pop-server.austin.sar.slb.com&gt;, \"Rob\nert C. Pettengill\" writes:\n&gt;\n&gt;It isn't clear to me that it is necessary to standardize the syntax of\n&gt;version identifiers across all servers.\n\nNot necessary, and terribly ill-advised.\n\n&gt;The proposal in <a href=\"http://www.w3.org/pub/WWW/MarkUp/Resource/Specification\">http://www.w3.org/pub/WWW/MarkUp/Resource/Specification</a>\n&gt;seems to be pretty heavy weight.\n\nFair criticism. Shorthand syntaxes can be developed.\n\n&gt;  I can't simply have a URL to a specific\n&gt;document in the \"version space\", I need to define a resource and then\n&gt;provide a URL to that resource which seems more than a little awkward.\n\nNo? I think you can.\n\nThe point is: you can't tell the relationship between address A1\nand address A2 just by looking at their syntax: you need explicit\ninformation that says one is a version of the other. The Resource\nelement is one such syntax.\n\n&gt;Why not allow link attributes to be specified in the anchor, e.g.\n&gt;&lt;A HREF=\"mumble/foo\" VERSION=\"x\"&gt;?\n\nThat might be a reasonable short-hand, as long as we're clear on\nhow it expands into a full &lt;resource&gt; description; i.e. if\nthe above markup is found in a document at A1, then we have:\n\n        link(A1, mumble/foo, version-specific)\nand\n        meta(mumble/foo, version, x)\n\ni.e.\n        &lt;resource href=\"mumble/foo\"&gt;\n                &lt;meta name=version content=x&gt;\n                &lt;link rev=version-specific href=\"A1\"&gt;\n        &lt;/resource&gt;\n\n\n&gt;It might be worthwhile discussing the requirements for versioned links\n&gt;before discussing the syntax.  Some questions that occur to me are:\n&gt;\n&gt;Is the versioning model constrained to be single threaded?  (i.e. unique\n&gt;answers to the queries below)\n&gt;\n&gt;Fetch the version previous to URL(x).\n&gt;Fetch the version subsequent to URL(x).\n\nThese are a matter of finding the address p and s such that:\n        link(x, p, preceeds)\n        link(s, x, preceeds)\n\nThen GET p and s. A convention for finding those addresses might\nbe handy. But the convention can't be just a syntactic manipulation.\n\n&gt;Fetch the version of URL(x) current at time t.\n\nThat's trickier. It's a matter of finding c such that:\n\n        meta(c, last-modified, t1)\n        link(c, r1, preceeds)\n        meta(r1, last-modified, t2)\n        link(c, r2, preceeds)\n                ...\n        link(c, rn, preceeds)\n        link(rn, x, preceeds)\n\n\nsuch that t1 &lt;= t &lt;= t2.\n\n&gt;Fetch the version of URL(x) current as of the creation time of URL(y)\n&gt;Fetch the most recent version of URL(y)\n\nOne way to this sort of thing in general is:\n        * Each response regarding a versioned resource has a\n        link to its full version history in an HTTP header:\n\n                Link: rel=revision-history href=/foo/bar/history\n\n        * To find a certain revision of x, Client does GET (or HEAD)\n        for x, and follows revision-history link\n\n        * content of target revision-history gives links to each\n        revision, along with information about last-modified dates.\n\n        * client searches revision history to satisfy query\n\nAnother approach is to move some of the processing to the server.\nThen it's a question of what queries to support, and how to\nexpress them. URL forms syntax? Hmmm...\n\n\nDan\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0015.html\">Daniel W. Connolly: \"Re: Version identifier in URL\"</a>\n<li> <b>Previous message:</b> <a href=\"0013.html\">Larry Masinter: \"Re: Versions and configurations\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0002.html\">Jim Whitehead: \"Version identifier in URL\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0015.html\">Daniel W. Connolly: \"Re: Version identifier in URL\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}