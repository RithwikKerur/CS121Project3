{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node287.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Conditional Compilation</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Conditional Compilation\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html5714 HREF=\"node288.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html5712 HREF=\"node268.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html5706 HREF=\"node286.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html5716 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html5715 HREF=\"node288.html\"> C-Prolog Compatibility Package</A>\r\n<B>Up:</B> <A NAME=tex2html5713 HREF=\"node268.html\"> Libraries</A>\r\n<B> Previous:</B> <A NAME=tex2html5707 HREF=\"node286.html\"> Perfmeter</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION002280000000000000000> Conditional Compilation</A></H1>\r\n<P>\r\n<A NAME=chapifdef>&#160;</A>\r\n<A NAME=6666>&#160;</A>\r\n<P>\r\nThis library, when loaded with\r\n<blockquote> <PRE>:- lib(ifdef).\r\n</PRE>\r\n</blockquote>\r\nmakes it possible to use primitives for conditional compilation\r\nin Prolog source files.\r\nAfter loading the library, the predicate <b> ifdef/1</b>\r\n<A NAME=6670>&#160;</A>\r\nbecomes global.\r\n<P>\r\nThe compiler will then recognise conditional compilation directives\r\nwhich have the form\r\n<blockquote> <PRE>:- ifdef Condition1.\r\n&lt;compile if Condition1 is true&gt;\r\n:- elseif Condition2.\r\n&lt;compile if Condition2 is true&gt;\r\n..\r\n:- else.                % or :- else(Goal), Goal is ignored\r\n&lt;compile if none of the above conditions holds&gt;\r\n:- endif.               % or :- endif(Goal), Goal is ignored\r\n</PRE>\r\n</blockquote>\r\nThe <b> elseif</b> and <b> else</b> parts can be omitted.\r\n<P>\r\nNote that this mechanism is implemented using the predicate\r\n<b> compile_term/1</b> and so all procedures that are conditionally\r\ncompiled have no associated source file, and so\r\n<blockquote> <PRE>get_flag(Proc, source_file, File).\r\n</PRE>\r\n</blockquote>\r\nwill fail.\r\nNote also that if several streams are opened to the file being\r\ncompiled, the result of the compilation may not be correct.\r\n<P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}