{"url": "https://www.ics.uci.edu/~theory/269/960119.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, 19 Jan 1996</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" align= \n\"bottom\" alt=\"ICS Theory Group\"></a> \n\n<h1>ICS 269, Winter 1996: Theory Seminar</h1>\n\n<hr>\n<h2>19 January 1996:<br>\nScheduling with Conflicts,<br>\nand Applications to Traffic Signal Control<br>\nVitus Leung, ICS, UC Irvine</h2>\n\nIn this paper, we consider the scheduling of jobs that may be\ncompeting for mutually exclusive resources. We model the conflicts\nbetween jobs with a <i>conflict graph</i>, so that all concurrently\nrunning jobs must form an independent set in the graph. We believe\nthat this model is natural and general enough to have applications\nin a variety of settings; however, we are motivated by the\nfollowing two specific applications: traffic intersection control\nand session scheduling in high speed local area networks with\nspatial reuse. In both of these applications, guaranteeing the best\nturnaround time to any job entering the system is important. Our\nresults focus on two special classes of graphs motivated by our\napplications: bipartite graphs and interval graphs. Although the\nalgorithms for bipartite and intervals graphs are quite different,\nthe bounds they achieve are the same: we prove that for any\nsequence of jobs in which the maximum completion time of a job in\nthe optimal schedule is bounded by <i>A</i>, the algorithm can\ncomplete every job in time O(<i>n</i>^3 <i>A</i>^2). <i>n</i> is\nthe number of nodes in the conflict graph. We also show that the\nbest competitive ratio achievable by any online algorithm for the\nmaximum completion time on interval or bipartite graphs is\nOmega(<i>n</i>). \n\n<p>(Practice talk for Vitus' SODA '96 presentation; joint work with\nSandy Irani. <a href=\"http://www.ics.uci.edu/~vitus/scatsc.ps.Z\">\nFull paper available</a>.)</p>\n\n<p></p>\n</body>\n</html>\n\n", "encoding": "ascii"}