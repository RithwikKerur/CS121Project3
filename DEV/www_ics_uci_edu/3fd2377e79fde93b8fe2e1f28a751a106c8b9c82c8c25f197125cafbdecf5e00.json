{"url": "https://www.ics.uci.edu/~neno/vita/vita.html", "content": "<HTML><HEAD>\n<TITLE>Vita: Nenad Medvidovic</TITLE>\n</HEAD><BODY>\n<h1><i>Curriculum Vitae</i></h1>\n<H1>Nenad Medvidovic</H1>\n\n<ADDRESS>\nDepartment of Information and Computer Science<BR>\nUniversity of California, Irvine<BR>\nIrvine, CA  92697-3425<BR>\nU.S.A.\n</ADDRESS>\n<DL COMPACT>\n<DT>tel:<DD> +1(714)824-3100\n<DT>fax:<DD> +1(714)824-1715\n<DT>em:<DD> <A HREF=\"mailto:neno@ics.uci.edu\">neno@ics.uci.edu</A> \n<DT>uri:<DD> <A HREF=\"http://www.ics.uci.edu/~neno/\">\n             http://www.ics.uci.edu/~neno/</A>\n</DL>\n<HR>\n\n<H2>EDUCATION</H2>\n\n<DL>\n<DT> <STRONG>Doctor of Philosophy</STRONG> (12/98)\n<DD> <A HREF=\"http://www.uci.edu/\">\n     University of California, Irvine</A><BR>\n     <A HREF=\"http://www.ics.uci.edu/\">\n     Department of Information and Computer Science</A><BR>\n     <A HREF=\"http://www.ics.uci.edu/~taylor/software/soft.html\">\n     Software Research Group</A><BR>\n     Advisor: <A HREF=\"http://www.ics.uci.edu/~taylor/\">\n     Dr. Richard N. Taylor</A><BR>\n     Dissertation: \n     <A HREF = \"http://www.ics.uci.edu/~neno/dissertation/versions.html\">\n     Architecture-Based Specification-Time Software Evolution</A>\n     <P>\n\n<DT> <STRONG>Master of Science</STRONG> (6/95, Cumulative GPA: 4.00)\n<DD> <A HREF=\"http://www.uci.edu/\">\n     University of California, Irvine</A><BR>\n     <A HREF=\"http://www.ics.uci.edu/\">\n     Department of Information and Computer Science</A><BR>\n     Major Emphasis: \n     <A HREF=\"http://www.ics.uci.edu/~taylor/software/soft.html\">\n     Software</A> <P>\n\n<DT> <STRONG>Bachelor of Science</STRONG>, <i>Summa Cum Laude</i> \n                                           (8/92, Cumulative GPA: 4.00)\n<DD> <A HREF=\"http://www.asu.edu\">\n     Arizona State University</A><BR>\n     Major: <A HREF=\"http://www.eas.asu.edu:80/~csedept/\">\n     Computer Science</A><BR>\n</DL>\n\n<HR>\n<H2>PROFESSIONAL EXPERIENCE</H2>\n\n<DL>\n<DT> 9/94 - present\n<DD> <STRONG>Graduate Student Researcher</STRONG>,\n     <A HREF=\"http://www.ics.uci.edu/pub/arch/\">Software Architecture\n     Group</A><BR>\n     University of California, Irvine<BR>\n<P>\n<DT> 9/93 - 8/94\n<DD> <STRONG>Teaching Assistant</STRONG><BR>\n     <DL>\n     <DT><DD><A HREF=\"http://www.editor.uci.edu/~editor/97-98/ics/ics.3.html\">\n     ICS 52</a> - Systematic Software Construction<BR> \n     <DT><DD><A HREF=\"http://www.editor.uci.edu/~editor/97-98/ics/ics.3.html\">\n     ICS 121</a> - Introduction to Software Engineering<BR>\n     <DT><DD><A HREF=\"http://www.editor.uci.edu/~editor/97-98/ics/ics.3.html\">\n     ICS 141</a> - Programming Languages<BR>\n     </DL>\n     University of California, Irvine<BR>\n<P>\n<DT> 6/93 - 8/93\n<DD> <STRONG>Research Assistant</STRONG>, Software Engineering Group<BR> \n     Arizona State University<BR>\n<P>\n<DT> 8/92 - 8/93\n<DD> <STRONG>Teaching Assistant</STRONG><BR>\n     <DL>\n     <DT><DD><a href=\"http://www.eas.asu.edu:80/~csedept/academic/syllabi/syl460.html\">CSE 460/598</a> - Software Project Management and Development I\n     </DL>\n     Arizona State University<BR>\n</DL>\n\n<HR>\n<H2>PUBLICATIONS</H2>\n\n<H3>Refereed Journal Articles</H3>\n<DL COMPACT>\n<DT> [1]\n<DD>  Richard N. Taylor, Nenad Medvidovic, Kenneth M. Anderson, E. James\n      Whitehead, Jr., Jason E. Robbins, Kari A. Nies, Peyman Oreizy, and\n      Deborah L. Dubrow. \n      <A HREF=\"http://www.ics.uci.edu/pub/arch/papers/copyright-IEEE.html\"> \n      \"<b>A Component- and Message-Based Architectural Style for GUI \n      Software.</b>\"</A> \n      <i>IEEE Transactions on Software Engineering</i>, vol. 22, no.\n      6, pages 390-406 (June 1996). (A significant revision and \n      extension of the ICSE17 paper below.)\n<P>\n<DT> [2]\n<DD>  Nenad Medvidovic and Richard N. Taylor.  \n      <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/C2-IEE97.ps\">\n      \"<b>Exploiting Architectural Style to Develop a Family of \n      Applications.</b>\"</a>  \n      <a href=\"http://www.iee.org.uk/publish/journals/profjrnl/ieeproc.html\">\n      <i>IEE Proceedings Software Engineering</i></a>, \n      vol. 144, no. 5-6, pages 237-248 (October-December 1997). \n</DL>\n\n<BR>\n<H3>Refereed Conference Publications</H3>\n\n<DL COMPACT>\n<DT> [1]\n<DD> J. Blevins, D. Dubrow, N. Eickelmann, R. Grinter, N. Medvidovic, \n     R. Reimer, J. Shaw, C. Turner, and G. Wong. \n     \"<b>Report on the Software Project Management Technical Research \n     Review.</b>\" \n     In <i>Proceedings of the California Software Symposium (CSS'95)</i>, \n     pages 127-145, Irvine, CA, March 30, 1995.\n<P>\n<DT> [2]\n<DD> Richard N. Taylor, Nenad Medvidovic, Kenneth M. Anderson, E. James \n     Whitehead Jr. and Jason E. Robbins.\n     <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/C2-ICSE17.fm.ps\">\n     \"<b>A Component- and Message-Based Architectural Style for GUI\n     Software.</b>\"</A> \n     In <i>Proceedings of the Seventeenth International Conference on \n     Software Engineering (ICSE17)</i>, pages 295-304, Seattle, WA, \n     April 23-30, 1995.\n<P>\n<DT> [3]\n<DD>Nenad Medvidovic, Richard N. Taylor, and E. James Whitehead, Jr. \n    <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/ADL-CSS96-MTW.ps\">\n    \"<b>Formal Modeling of Software Architectures at Multiple Levels of \n    Abstraction.</b>\"</A>   \n    In <i>Proceedings of the California Software Symposium (CSS'96)</I>, \n    pages 28-40, Los Angeles, CA, April 17, 1996.\n<P>\n<DT> [4]\n<DD> Nenad Medvidovic, Peyman Oreizy, Jason E. Robbins, and Richard N.\n     Taylor.  \n     <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/ADL-FSE96.ps\">\n     \"<b>Using Object-Oriented Typing to Support Architectural Design \n     in the C2 Style.</b>\"</A>  \n     In <i>Proceedings of the Fourth ACM SIGSOFT Symposium on the \n     Foundations of Software Engineering (FSE4)</i>, pages 24-32, \n     San Francisco, CA, October 16-18, 1996.  Also available as \n     Technical Report UCI-ICS-96-6.\n<P>\n<DT> [5]\n<DD> Nenad Medvidovic, Peyman Oreizy, and Richard N. Taylor. \n     <a href=\"ftp://www.ics.uci.edu/pub/arch/papers/C2-SSR97.ps\">\n     \"<b>Reuse of Off-the-Shelf Components in C2-Style Architectures.</b>\"</a>\n     In <i>Proceedings of the 1997 Symposium on Software Reusability \n     (SSR'97)</i>, pages 190-198, Boston, MA, May 17-19, 1997.  \n     Also in <i>Proceedings of the 1997 International Conference on \n     Software Engineering (ICSE'97)</i>, pages 692-700, Boston, MA, \n     May 17-23, 1997. \n<P>\n<DT> [6]\n<DD> Nenad Medvidovic and Richard N. Taylor. \n     <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/ADL-FSE97.ps\">\n     \"<b>A Framework for Classifying and Comparing Architecture Description\n     Languages.</b>\"</a>  \n     In <i>Proceedings of the \n     Sixth European Software Engineering Conference together with \n     the Fifth ACM SIGSOFT Symposium on the Foundations of Software \n     Engineering</i>, pages 60-76, Zurich, Switzerland, September \n     22-25, 1997.    \n<P>\n<DT> [7]\n<DD> Nenad Medvidovic and David S. Rosenblum. \n     <A HREF=\"http://www.ics.uci.edu/~neno/dsl/versions.html\"> \n     \"<b>Domains of Concern in Software Architectures and Architecture \n     Description Languages.</b>\"</a>\n     In <i>Proceedings of the USENIX Conference on Domain-Specific \n     Languages</i>, pages 199-212,\n     Santa Barbara, CA, October 15-17, 1997. \n<P>\n\n<DT> [8]\n<DD> Jason E. Robbins, Nenad Medvidovic, David F. Redmiles, and \n     David S. Rosenblum. \n     <a href=\"http://www.ics.uci.edu/~neno/papers/ICSE98-UML.ps\">\n     \"<b>Integrating Architecture Description Languages with a \n     Standard Design Method.</b>\"</a> \n     In <i>Proceedings of the\n     20th International Conference on Software Engineering \n     (ICSE'98)</i></a>,  pages 209-218,\n     Kyoto, Japan, April 19-25, 1998.\n     Also available as Technical Report, UCI-ICS-97-35.\n<P>\n<DT> [9]\n<DD> Peyman Oreizy, Nenad Medvidovic, and Richard N. Taylor.\n     <a href=\"http://www.ics.uci.edu/~peymano/papers/ICSE98.ps\">\n     \"<B>Architecture-Based Runtime Software Evolution.</b>\"</a>\n     In <i>Proceedings of the\n     20th International Conference on Software Engineering \n     (ICSE'98)</i></a>, pages 177-186, \n     Kyoto, Japan, April 19-25, 1998.\n     Also available as Technical Report, UCI-ICS-97-39.\n<P>\n<DT> [10]\n<DD> Nenad Medvidovic, Eric M. Dashofy, and Richard N. Taylor.\n     <a href=\"http://www.ics.uci.edu/~neno/papers/CSS98.ps\">\n     \"<b>Employing Off-the-Shelf Connector Technologies in C2-Style\n      Architectures.</b>\"</a>\n     In <i>Proceedings of the California Software Symposium \n     (CSS'98)</i>, pages 21-30, Irvine, CA, October 23, 1998.\n<P>\n<DT> [11]\n<DD> Nenad Medvidovic and David S. Rosenblum. \n     <a href=\"http://www.ics.uci.edu/~neno/papers/WICSA99.ps\">\n     \"<b>Assessing the Suitability of a Standard Design Method for \n      Modeling Software Architectures.</b>\"</a> \n     To appear in <i>Proceedings of the First Working IFIP\n     Conference on Software Architecture (WICSA1)</i>, San Antonio,\n     TX, February 22-24, 1999.\n     Also available as Technical Report, UCI-ICS-98-02.\n<P>\n<DT> [12]\n<DD> Nenad Medvidovic, David S. Rosenblum, and Richard N. Taylor. \n     <a href = \"http://www.ics.uci.edu/~neno/papers/ICSE99.ps\">\n     \"<b>A Language and Environment for Architecture-Based Software\n      Development and Evolution.</b>\"</a>\n     To appear in <i>Proceedings of the 21st International Conference\n     on Software Engineering (ICSE'99)</i>, Los Angeles, CA, May\n     16-22, 1999. \n<P>\n<DT> [13]\n<DD> Eric M. Dashofy, Nenad Medvidovic, and Richard N. Taylor.\n     \"<b>Using Off-the-Shelf Middleware to Implement Connectors in \n      Distributed Software Architectures.</b>\"\n     To appear in <i>Proceedings of the 21st International Conference\n     on Software Engineering (ICSE'99)</i>, Los Angeles, CA, May\n     16-22, 1999. \n</DL>\n<BR>\n<H3>Refereed Workshop Publications</H3>\n<DL COMPACT>\n<DT> [1]\n<DD> E. James Whitehead, Jr., Jason E. Robbins, Nenad Medvidovic, and \n     Richard N. Taylor. \n     <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/C2-ICSE17-SAWS.ps\">\n     \"<b>Software Architecture: Foundation of a Software Component\n     Marketplace.</b>\"</A>  \n     In David Garlan, ed., <i>Proceedings of the First International \n     Workshop on Architectures for Software Systems</i>, pages 276-282, \n     Seattle, WA, April 24-25, 1995.\n<P>\n<DT> [2]\n<DD> Nenad Medvidovic. \n     <a href=\"ftp://www.ics.uci.edu/pub/arch/papers/ADL-ISAW96.ps\">\n     \"<b>ADLs and Dynamic Architecture Changes.</b>\"</A>  \n     In Alexander L. Wolf, ed., <i>Proceedings of the Second \n     International Software Architecture Workshop (ISAW-2)</i>, \n     pages 24-27, San Francisco, CA, October 14-15, 1996.\n<P>\n<DT> [3]\n<DD> Nenad Medvidovic and Richard N. Taylor. \n    <a href=\"ftp://www.ics.uci.edu/pub/arch/papers/C2-ARES96.ps\">\n    \"<b>Reusing Off-the-Shelf Components to Develop a Family of \n    Applications in the C2 Architectural Style.</b>\"</a>  \n    In <i>Proceedings of the\n    <a href=\"http://www.dit.upm.es/~ares/workshop/proceedi.htm\">\n    International Workshop on Development and \n    Evolution of Software Architectures for Product Families</a></i>, \n    Las Navas del Marqu\u00e9s, \u00c1vila, Spain, November 18-19, 1996.\n<P>\n<DT> [4]\n<DD> Peyman Oreizy, Nenad Medvidovic, Richard N. Taylor, and David S.\n     Rosenblum.  \n     <a href=\"http://www.ics.uci.edu/~neno/papers/CORBA-OMG.ps\">\n     \"<b>Software Architecture and Component Technologies: Bridging \n      the Gap.</b>\"</a>\n     In <i>Proceedings of the \n     <a href=\"http://www.objs.com/workshops/ws9801/index.html\">\n     Workshop on Compositional Software Architectures</i></a>,\n     Monterey, CA, January 6-8, 1998.\n<P>\n<DT> [5]\n<DD> Richard N. Taylor, Nenad Medvidovic, and Peyman Oreizy.\n     \"<b>Architectural Implications of Common Operator Interfaces.</b>\"\n     In <i>Proceedings of the \n     <a href=\"http://sunset.usc.edu/GSAW/GSAW98.html\">\n     Ground Systems Architectures Workshop (GSAW 98)</a></i>, \n     El Segundo, CA, February 25-27, 1998.\n<P>\n<DT> [6]\n<DD> Nenad Medvidovic, Richard N. Taylor, and David S. Rosenblum. \n     <a href=\"http://www.ics.uci.edu/~neno/papers/IWPSE.ps\">\n     \"<b>An Architecture-Based Approach to Software Evolution.</b>\"</a>\n     In <i>Proceedings of the International Workshop on the Principles of\n     Software Evolution</i>, pages 11-15, Kyoto, Japan, April 20-21, 1998.\n\n<P>\n<DT> [7]\n<DD> Nenad Medvidovic and Richard N. Taylor. \n     <a href=\"http://www.ics.uci.edu/~neno/papers/ISAW3.ps\">\n     \"<b>Separating Fact from Fiction in Software Architecture.</b>\"</a>\n     In <i>Proceedings of the Third International Software\n     Architecture Workshop (ISAW-3)</i>, pages 105-108, Orlando, FL,\n     November 1-2, 1998.\n</DL>\n<BR>\n<H3>Non-Refereed Publications</H3>\n\n<DL COMPACT>\n<DT> [1]\n<DD> Jason E. Robbins, E. James Whitehead Jr., Nenad Medvidovic, and \n     Richard N. Taylor. \n     \"<b>A Software Architecture Design Environment for Chiron-2 Style \n     Architectures.</b>\" \n     Arcadia Technical Report UCI-95-01, University of California, \n     Irvine, January 1995.\n<P>\n<DT> [2]\n<DD> Nenad Medvidovic. \n    <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/TR-UCI-ICS-95-24.ps\">\n    \"<b>Formal Definition of the Chiron-2 Software Architectural \n    Style.</b>\"</A> \n    Technical Report UCI-ICS-95-24, Department of Information and \n    Computer Science, University of California, Irvine, August 1995. \n<P>\n<DT> [3]\n<DD> Nenad Medvidovic and Richard N. Taylor. \n    <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/TR-UCI-ICS-96-28.fm.ps\">\n    \"<b>Reuse of Off-the-Shelf Constraint Solvers in C2-Style \n    Architectures.</b>\"</A>  \n    Technical Report UCI-ICS-96-28, Department of Information and \n    Computer Science, University of California, Irvine, July 1996.\n<P>\n<DT> [4]\n<DD> Nenad Medvidovic.\n     <A HREF=\"ftp://www.ics.uci.edu/pub/arch/papers/TR-UCI-ICS-97-02.ps.gz\">\n     \"<B>A Classification and Comparison Framework for Software\n     Architecture Description Languages.</B>\"</A>  \n     Technical Report UCI-ICS-97-02, Department of Information and \n     Computer Science, University of California, Irvine, February 1997.\n<P>\n<DT> [5]\n<DD> Nenad Medvidovic, David S. Rosenblum, and Richard N. Taylor. \n     <a href=\"http://www.ics.uci.edu/~neno/papers/TR-98-14.ps\">\n     \"<B>A Type Theory for Software Architectures.</b>\"</a>\n     Technical Report, UCI-ICS-98-14, Department of Information and\n     Computer Science, University of California, Irvine, April 1998.\n<P>\n<DT> [6]\n<DD> Peyman Oreizy, Michael M. Gorlick, Richard N. Taylor, Dennis\n     Heimbigner, Gregory Johnson, Nenad Medvidovic, Alex Quilici,\n     David S. Rosenblum, and Alexander L. Wolf.\n     \"<B>Self-Adaptive Software.</b>\"\n     Technical Report, UCI-ICS-98-27, Department of Information and\n     Computer Science, University of California, Irvine, August 1998.\n     \n</DL>\n\n<HR>\n<H2>FORMAL PRESENTATIONS</H2>\n<DL COMPACT>\n<DT> [1] \n<DD> \"<b>A Component- and Message-Based Architectural Style for GUI\n     Software.</b>\" \n     Technology Presentation Track, 17th International Conference on\n     Software Engineering (ICSE17), Seattle, WA, April 1995.\n<P>\n<DT> [2]\n<DD> \"<b>Chiron-2: A Component- and Message-Based Architectural Style\n     for GUI Software.</b>\"\n     Bay Area Roundtable (BART), Palo Alto, CA, June 1995.  <P>\n<DT> [3]\n<DD> \"<b>Chiron-2: A Component- and Message-Based Architectural Style\n     for GUI Software.</b>\"\n     Sun Microsystems Laboratories, Palo Alto, CA, June 1995.\n<P>\n<DT> [4]\n<DD> \"<b>Formal Modeling of Software Architectures at Multiple Levels \n     of Abstraction.</b>\" \n     California Software Symposium, Los Angeles, CA, April 1996.\n<P>\n<DT> [5]\n<DD> \"<b>What's New with C2?</b>\"\n     Arcadia Research Meeting, Portland, OR, August 1996.\n<P>\n<DT> [6]\n<DD> \"<b>ADLs and Dynamic Architecture Changes.</b>\"\n     Second International Software Architecture Workshop (ISAW-2),\n     San Francisco, CA, October 1996.\n<P>\n<DT> [7]\n<DD> \"<b>Using Object-Oriented Typing to Support Architectural Design \n     in the C2 Style.</b>\" \n     Fourth ACM SIGSOFT Symposium on the Foundations of Software\n     Engineering (FSE4), San Francisco, CA, October 1996.\n<P>\n<DT> [8]\n<DD> \"<b>Reusing Off-the-Shelf Components to Develop a Family of \n     Applications in the C2 Architectural Style.</b>\"\n     International Workshop on Development and Evolution of Software \n     Architectures for Product Families, Las Navas del Marqu\u00e9s,\n     \u00c1vila, Spain, November 1996.\n<P>\n<DT> [9]\n<DD> \"<b>A Classification and Comparison Framework for Software\n     Architecture Description Languages.</b>\"\n     Second EDCS Architecture/Generation Workshop, Santa Fe, NM, April\n     1997.\n<P>\n<DT> [10]\n<DD> \"<b>Reuse of Off-the-Shelf Components in C2-Style \n     Architectures.</b>\"\n     1997 Symposium on Software Reusability (SSR'97) and 1997 \n     International Conference on Software Engineering (ICSE'97), \n     joint session on <i>Software Reuse</i>, Boston, MA, May 1997.\n<P>\n<DT> [11]\n<DD> \"<b>A Framework for Classifying and Comparing Architecture \n     Description Languages.</b>\"\n     Sixth European Software Engineering Conference together with \n     the Fifth ACM SIGSOFT Symposium on the Foundations of Software\n     Engineering, Zurich, Switzerland, September 1997.\n<P>\n<DT> [12]\n<DD> \"<b>Domains of Concern in Software Architectures and Architecture \n     Description Languages.</b>\"\n     USENIX Conference on Domain-Specific Languages, Santa Barbara,\n     CA, October 1997.\n<P>\n<DT> [13]\n<DD> \"<b>A Style-Based Approach to the Design and Evolution of \n     Adaptable Software.</b>\"\n     University of Texas, Austin, TX, November 1997.\n<P>\n<DT> [14]     \n<DD> \"<b>An Architecture-Based Approach to Software Evolution.</b>\"\n     International Workshop on the Principles of\n     Software Evolution, Kyoto, Japan, April 1998.\n<P>\n<DT> [15]     \n<DD> \"<b>Employing Off-the-Shelf Connector Technologies in C2-Style \n      Architectures.</b>\"\n     California Software Symposium (CSS'98), Irvine, CA, October 23, \n     1998.\n</DL>\n\n<HR>\n<H2>PROFESSIONAL ACTIVITIES</H2>\n<h3>Reviewer</h3>\n<UL>\n<LI> 1996 Conference on User Interface Software and Technology\n     (UIST'96)\n<LI> 1997 International Conference on Software Engineering (ICSE'97)\n<LI> IEEE Transactions on Software Engineering, 1997, 1998\n<LI> IEE Proceedings Software Engineering, 1998\n<LI> ACM Transactions on Software Engineering and Methodology, 1998\n</UL>\n\n<HR>\n<H2>PROFESSIONAL ASSOCIATIONS</H2>\n<UL>\n<LI> Association for Computing Machinery (ACM)\n<LI> ACM Special Interest Group on Software Engineering (SIGSOFT)\n</UL>\n\n<HR>\n<H2>HONORS, AWARDS, FELLOWSHIPS</H2>\n\n<DL COMPACT>\n<DT>1989-92 <DD> Dean's Honor List\n<DT>1990-92 <DD> Arizona Regents International Student Scholarship\n<DT>1990-93 <DD> Golden Key National Honor Society\n<DT>1991-93 <DD> UPE National Honor Society for the computing sciences\n<DT>1992 <DD>   <DD> Moeur Award, Arizona State University (top student in the graduating class)\n<DT>1993-94 <DD> ICS Departmental Fellowship\n</DL>\n\n<HR>\n<H2>RESEARCH INTERESTS</H2>\n\nMy research interests are in the field of software engineering. A\ncommon theme, and long-term goal, of my research is \n<i>development and evolution of adaptable, large-scale software \nsystems</i>. Practitioners have traditionally faced many problems with\nachieving support for reuse, \ninterchange, reconfiguration, extension, and scaling of software\nmodules and/or systems when \nusing existing development approaches. These problems are often the\nresult of poor \nunderstanding of a system's overall architecture, unintended\ndependencies among its modules, \ndecisions that are made too early in the development process, and so\nforth. Existing techniques \nthat are intended to remedy these problems (e.g., separation of\nconcerns or isolation of change) \nare only partially adequate in the case of development with\npre-existing, large, multi-lingual \ncomponents that originate from multiple sources. \n<P>\n\nThe main hypothesis of my research is that an explicit architectural\nfocus can remedy many of \nthese difficulties and enable flexible construction and evolution of\nlarge systems. I have therefore \ncentered on software architectures as a key to developing techniques,\ntools, and methodologies \nfor engineering flexible, large-scale software. Architectures present\na high-level view of a system, \nenabling developers to abstract away the unnecessary details and focus\non the \"big picture.\" \nAnother key is their explicit treatment of software connectors, which\nseparate communication \nissues from computation in a system. However, existing architecture\nresearch has thus far largely \nfailed to take advantage of this potential for adaptability for two\nreasons: \n<UL>\n<LI>Connectors are often not treated explicitly or, when they are, they\nare too rigid and do not \naccommodate modification of their attached components easily; and \n<LI>The architecture community has to date chosen to focus on issues other\nthan flexible design \nand evolution: formalism, analysis, and system generation. \n</UL>\n<P>\n\nMy research presents an architecture-based approach to achieving\nsoftware adaptability. It \nexpands the traditional notions of evolution (e.g., modularity,\ntyping) for use in architectures, and \nintroduces explicit, flexible connectors. I have designed an\narchitecture description language \n(ADL) that encompasses these concepts; I am currently implementing its\nsupporting toolset. \nWhile I have thus far exploited the benefits of a particular\narchitectural style, C2, I intend to \ndemonstrate that many of the results are style- and\ndomain-independent. \n<P>\n\nThis research is also closely related to two other areas:\n<i>component-based software development</i> and <i>software reuse</i>. \nEngineering large-scale software\nsystems is fundamentally \ndifferent from programming in the small. A programming language\nstatement becomes \ninadequate as the unit of development. Instead, <i>components</i> must become\nsoftware building \nblocks. Component-based development of software has become an area of\nintense research, \nresulting in several component interoperability models, e.g., CORBA\nand ActiveX, and wide \nadoption of certain software design methodologies, such as\nobject-oriented (OO) design. \nSoftware architecture researchers have by and large also adopted a\ncomponent-centered view of \nsoftware development and evolution. \n<P>\n\nIn the context of the C2 project, I have participated in the\ndevelopment of an OO class \nframework used for prototyping and implementing C2 components and\nconnectors, as well as a \nnumber of example applications that used the framework. This\nexperience has sensitized me to the \nfact that adopting a component-based approach is, by itself, not\nenough. Repeatedly engineering \ncomponents from scratch is likely to become prohibitively expensive;\nit also fails to exploit the \ngreatest potential benefit of component-based development: reuse.\nArchitectural styles have the \npotential for controlling the scope of OTS reuse and providing\nstructure for it. Styles typically \nreflect and leverage key properties of an application domain and\nrecurring patterns of application \ndesign within that domain. To adequately support reuse, a style must\nalso provide a balance, \nwhere its rules are strong enough to make reuse tractable but broad\nenough to enable integration \nof legacy components. I have thus far conducted or participated in a\nseries of exercises intended to \ninvestigate reuse issues in the context of the C2 style. Drawing from\nthis experience, I intend to \nfurther study what properties are likely to make a given style well\nsuited for supporting OTS \nreuse. \n<P>\n\nAs part of my longer-term research plans, I also intend to continue\ninvestigating several other \nquestions that remain unanswered. A subset of these is given below. \n<UL>\n<LI>What techniques can be employed effectively for refining an\narchitecture across levels of \nabstraction and for mapping that architecture to an implementation? \n<LI>What is the role of ADLs in architecture-based runtime software\nevolution? What ADL \nprimitives are needed to support such evolution? \n<LI>What are the issues in runtime insertion, removal, and replacement of\nconnectors? This \nproblem is further compounded by the potentially complex mappings of\nan architecture to its \nimplementation. A single connector at the architectural level may be\ndistributed across several \nimplemented modules. Extracting such a connector in the implementation\nand removing or \nreplacing it is a difficult and still open research problem. \n<LI>What is the role of architectures and ADLs in the construction of\napplication families? \n<LI>How can explicit architectural models aid component discovery and\nextraction, and the \nconstruction of component adaptors and wrappers? \n</UL>\n<P>\n\nFinally, I intend to further pursue the work I have begun on\nunderstanding the nature of \nsoftware architectures and ADLs and clarifying their roles in the\nsoftware engineering lifecycle. \nDespite much ongoing research in architectures and ADLs, consensus is\nlacking on several \nfundamental issues, including: \n<UL>\n<LI>What problems can software architectures adequately address?\n<LI>How can those problems be resolved most effectively?\n<LI>What role should ADLs play in addressing those problems? and\n<LI>What is the relationship between requirements, which are in the\nproblem domain, and \narchitecture, which is in the solution domain? A related question is,\nwhat is the exact \nrelationship between architecture and design?\n</UL>\n<P>\n\n</DL>\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/~neno/\">Nenad Medvidovic</A>\n<A HREF=\"mailto:neno@ics.uci.edu\">&lt;neno@ics.uci.edu&gt;</A> \n</ADDRESS> \nLast modified: 01 Dec 1997 \n</BODY>\n</HTML>\n", "encoding": "ISO-8859-1"}