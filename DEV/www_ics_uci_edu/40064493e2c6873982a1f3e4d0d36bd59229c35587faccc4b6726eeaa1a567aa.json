{"url": "https://www.ics.uci.edu/~eppstein/280e/hw1.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>Exponential Algorithms: Homework 1</title>\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n\n<h1><a href=\"./\">ICS 280, Fall 2000:\nExponential Algorithms</a><br>\nHomework Assignment 1\n</h1>\n\n<ol type=a>\n<li>Think of a problem in NP. Describe carefully the input, the possible\nsolutions, and why it is easy to check whether a solution is correct.\nSpecific application-type problems preferred to abstract theory-type\nones.  If you're feeling uninspired, try <a\nhref=\"http://www.nada.kth.se/~viggo/problemlist/compendium.html\">the\ncompendium of NP optimization problems</a> or some of the puzzles\nfrom my page of\n<a href=\"http://www.ics.uci.edu/~eppstein/cgt/hard.html\">complexity\ntheory for games and puzzles</a>.\n\n<p>It's ok if your problem does not meet the strict definition of being\nin NP, as long as it has the same form: a yes/no problem such that a yes\nanswer means that there is some kind of solution which can be quickly\nchecked for correctness, even though it might be difficult to find the\nsolution.</p>\n\n<li>Describe how to translate instances of your problem into instances\nof one of the problems described in class: constraint satisfaction,\nmaximum independent set, or traveling salesman.\n\n<p>(Note that this is the opposite direction of translation from what you\nwould use to prove your problem NP-complete.)</p>\n\n<li>What is (are) the natural measure(s) of problem size for your problem?\nWhat size instances does your translation produce, as a function of the\ninput size?  If the constraint satisfaction (or maximum independent set) problem takes time c^n\nto solve, how much time would it take to solve your original problem\nusing this translation and a CSP (or MIS) algorithm?\n</ol>\n\n<h3>Sample answers:</h3>\n\n<ol type=a>\n<li>Finding <a href=\"/~eppstein/ca/\">moving patterns in Conway's Game of\nLife</a>.\n\n<p>Input: numbers W,L,S,P.<br>\nOutput: \"yes\" if there exists a pattern that repeats itself\nP generations after the start, shifted over by S steps, and\nthat fits within a W*L rectangle.</p>\n\n<p>To check a solution, simply compute the evolution of the pattern for\nP steps, and compare the result with a shifted copy of the original\npattern.  (This problem is not actually in NP, because the input size is\nso small that even writing down a solution is exponential in\nthe input size.)</p>\n\n<li>We translate to an instance of CSP.\n\n<p>Form a binary variable for each pair (c,t), where c is a cell in the W*L\nrectangle and t is a time step from 0 to P-1.  Form a constraint for\neach such variable, saying that the variable should match the result of\nevolving the nine neighboring cells in time step (t-1), or (if t=0)\nthat it should match the result of evolving the nine cells\nsurrounding the point S steps away from its position in step P-1.  Also add\none more constraint, that at least one cell is nonempty.</p>\n\n<li>The natural measures are simply the numbers W, L, and P.\nThe translated CSP has W*L*P variables, so the time would be\nc^{W*L*P}.\n</ol>\n\n<h3>Due <a href=\"mailto:eppstein@ics.uci.edu\">by email</a>\nMonday, Oct. 9, 11:59PM.</h3>\n\nPlease <b>do not send MS Word</b> or other proprietary formats.\nPlain text, TeX, HTML, or PDF are all acceptable.\n</body>\n</html>\n\n", "encoding": "ascii"}