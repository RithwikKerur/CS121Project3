{"url": "https://www.ics.uci.edu/~ejw/authoring/paloalto/minutes.html", "content": "<HTML>\n<HEAD>\n<TITLE>WEBDAV Palo Alto Meeting Minutes</TITLE>\n</HEAD>\n<BODY>\n\n<CENTER>\n<H1>Minutes</H1>\n\n<H2>Technical Meeting of the Working Group on Distributed\nAuthoring and Versioning on the World Wide Web</H2>\n\n<H2>Xerox PARC, Palo Alto, California</H2>\n\n<H3>November 14-15, 1996</H3>\n</CENTER>\n\n<HR>\n\n<H2>INTRODUCTION</H2>\n\n<P>\nThe working group on Distributed Authoring and Versioning on the World\nWide Web (WEBDAV) held a meeting at Xerox PARC on November 14-15,\n1996, in Palo Alto, California. There were 28 attendees from the\nfollowing organizations: America Online, AmerInd, Canon Info. Sys.,\nContinuus, Dept. of Veterans Affairs, Microsoft, Mortice Kern Systems,\nNetscape, Novell, NTT, Pure Atria, Saros/Filenet, SoftQuad, U.C.\nIrvine, Web Tools Int'l, World Wide Web Consortium, and Xerox. The\nworking group thanks Larry Masinter, Xerox PARC for providing food and\nmeeting space as the host of this meeting. Further thanks go to Keith\nDawson, Pure Atria, for his meeting notes.\n</P>\n\n<P>\nIn the following message, a dash \"-\" denotes a meeting date, an\nasterisk \"*\" represents an item of consensus, and and equals \"=\"\ndenotes an action item.\n\n<P><B>UPCOMING MEETINGS</B>\n\n<P>\n- The next meeting of the working group will be at the WEBDAV BOF\nat the San Jose IETF meeting. The WEBDAV BOF is currently scheduled\nfor Wednesday, December 11, 1996, from 9:30 to 11:30AM.\n\n<P>\n- The following meeting will be held at U.C. Irvine, in late January 1997.\nThe WG agreed upon the dates January 23-24, but due to a UCI\nscheduling conflict (the\n<A HREF=\"http://www.ics.uci.edu/IRUS/cospi.html\">\nConference on Software Process Improvement, CoSPI</A>),\nthese dates are not open.  The new meeting date is January 27-28, 1997.\n\n<P>\n- The W3C Symposium, Distributed Authoring:\nPresent and Future, will be held at the Sunnyvale Hilton Inn, December\n4-5, 1996. For more details, consult:\nhttp://www.w3.org/pub/WWW/Authoring961001/Call.html.\n\n<H2>DAY 1 (Thursday, November 14)</H2>\n\n<P>\nThe meeting began with a presentation by Kenji Ota, NTT on the NTT\nversioning draft. This was followed by a presentation by Yaron Goland,\nMicrosoft, on the major design issues facing this group, as reflected\nin v0.2 of the Goland/Whitehead draft.\n\n<P>\nTwo issues were primarily considered for the remainder of the day,\nPOST vs. methods, and attributes.\n\n<P><B>POST vs. METHODS:</B>\n\n<P>\nThe discussion on POST vs. methods centered on whether the DAV\nfunctionality should be specified by creating a special purpose MIME\ntype which is then sent to a server using the HTTP POST method, or\nwhether new HTTP methods should be created for this. In the POST\napproach, the MIME type would specify the functionality (e.g.,\napplication/copy), whereas the method approach would use a new method\n(e.g., COPY). Within the methods approach, there were two choices for\nwhere to place request parameters: a) in new, method-specific headers,\nor b) in the body of the request message.\n\n<P>\n* The group reached rough consensus that new DAV functionality\nshould be specified with new HTTP methods, with request parameters in\nthe message body. However, this was subject to the caveat that\nexisting HTTP/1.1 headers should be used where appropriate and\nconsistent with existing meaning and usage. Also, this design choice\nwas not meant to preclude the definition of new headers, if they are\nthe best design choice.\n\n<P><B>ATTRIBUTES:</B>\n\n<P>\nDiscussion of attributes spanned two days. Despite several hours\nof discussion, the working group did not reach consensus on attribute\nfunctionality. Key design issues for attributes are:\n\n<UL>\n<LI>naming (e.g. URL munging?)\n<LI>search/lookup\n<LI>attribute discovery\n<LI>one round-trip lookup of an attribute's value o is an attribute's\nvalue a resource, a pointer to a resource, or part of a resource?\n<LI>should attributes be versioned individually, or with the resource they\ndescribe?\n</UL>\n\n<P>\nOne common thread of discussion centered around how much indirection\nshould be provided when looking up attributes. One position held that\none round trip lookup of an attribute's value was necessary for\nefficiency, which argues for a lookup directly returning the\nattribute's value. Others held that, for generality, attributes could\nhold a URL, which would point to the resource containing the\nattribute's value. Yet another proposal suggested that a resource\nwould contain a LINK header pointing to an \"attributes\" resource,\nwhich groups all attribute/value pairs. A URL munge on the URL of the\n\"attributes\" resource (e.g., http://foo.bar.com/attrs?Author) would\nreturn the value of the attribute (this approach was called, \"a\nlicense to munge,\" since the server provides the URL and thus\nguarantees that it can be munged, much like imagemap URLs, without\nconcern for collision with other valid URLs).\n\n<P>However, there were some points of commonality amid the discussion. \n\n<P>\n* Trying to develop a set of core attributes, such as the Dublin\nCore, was considered to be a bad idea. Instead, a means should be\nprovided for using existing attribute sets, and for discovering which\nattribute sets are being used to describe a resource.\n\n<P>\n* The LDAP search syntax (RFC 1959) is worth investigating for use\nas an attribute search syntax.\n\n<P>\n= Due to the lack of consensus, the group decided to solicit\ndrafts describing attribute functionality for the Web. The deadline\nfor submission of attribute drafts to the working group list is Nov.\n26. Authors of drafts are encouraged to submit their drafts as\nInternet Drafts so they may be considered at the San Jose IETF\nmeeting.\n\n<P><B>NETSCAPE DRAFT</B>\n\n<P>\nDuring the day, Jim Cunningham and Asad Faizi circulated paper copies\nto all attendees of their draft on how to perform distributed\nauthoring and versioning functionality, titled \"Distributed Authoring\nand Versioning Protocol.\" The draft circulated was version 0.1. The\ndraft describes how to implement the Distributed Authoring and\nVersioning requirements using methods. It is currently unclear how\nopen Netscape will be concerning this draft. Asad Faizi will be\nworking with Yaron Goland, Jim Whitehead, and Del Jensen to develop\nsubsequent working group drafts.\n\n<H2>DAY 2 (Friday, November 15)</h2>\n\n<P>\nThe second day began with a discussion of the sponsorship and\nactivities of this working group.\n\n<P>* The group unanimously decided to pursue a path of joint IETF and\nW3C sponsorship.\n\n<P>\n= Jim Whitehead agreed to revise and submit the WG\nCharter to the IETF Application Area Directors in hopes that the\nWEBDAV group could be an official IETF working group by the San Jose\nIETF meeting.\n\n<P>\n* The group agreed that all current drafts of the working group\nshould be submitted as Internet Drafts by the IETF deadline, November\n26.\n\n<P>\n= The group continued to feel that further development and\nrefinement of the scenarios document was worthwhile, as a sanity check\non our final specification, as a good way for people to understand our\nwork, and to understand the rationale for our requirements. The\nworking group was instructed to provide feedback to Ora Lassila\n<lassila@w3.org> on the scenarios document. Ora should submit the\nscenarios document by the Nov. 26 IETF deadline.\n\n<P>\n= The group agreed that merging the Distributed Authoring (Whitehead)\nand the Versioning (Durand, Vitali) requirements documents was a good\nidea. This way the group will produce one DAV spec., and one DAV\nrequirements document. Durand, Vitali, and Whitehead will work on\nproducing this merged document.\n\n<P><B>CONTAINERS</B>\n\n<P>\nThe following issues concerning containers were discussed: \n\n<P>\nShould a container just be a resource with no special semantics, or should a container resource have special container-specific semantics (e.g. recursion through hierarchy levels). The group tended to think that container-specific semantics would be the most useful, but also more complicated.\n\n<P>\nIt was discovered that there are situations where it is useful to\nstate whether you are operating on a resource as a resource, or on a\nresource as a container. For example, if a container is a collection\nof pointers to resources, then making a copy of the container is\nsimilar to making a number of symbolic links (soft links) in a\nfilesystem. However, copying a container with container semantics\ncould cause a recursive copy of all the elements of the container,\nmaking duplicates of all resources (hard links). This led to a\ndiscussion of where the \"switch\" should be placed to specify what kind\nof semantics are desired (opaque resource vs. container resource). It\nwas noted that filesystems have dealt with this issue. o The WebMap\nspecification was discussed as a potential format for container\nresources. Unfortunately, the latest WebMap specification was not\navailable for thoughful consideration by the working group prior to\nthe meeting.\n\n<P>\n= Like attributes, the working group is encouraged to submit drafts on containers to the working group by the November 26, IETF deadline. \n\n<P><B>VERSIONING</B>\n\n<P>\nThere was a long discussion on versioning. Members of the working\ngroup expressed frustration that the v0.2 Goland/Whitehead draft did\nnot specify versioning capability in sufficient detail to evaluate it.\nSome issues:\n\n<P>\nThe terms, \"checkout\" and \"checkin\" as defined in the v0.2 spec.\noverload the commonly understood meaning for these terms. It was\nagreed that some other term (e.g., edit notification) would be used. o\nSince different versioning systems have different definitions of the\nmeaning of checkout and checkin (e.g., for checkout: edit notification\nplus write lock (RCS, SCCS) or edit notification only, no lock (CVS)),\nthe server should be able to implement whatever versioning style it\nwishes, and the client must adapt to it. This raises the issue of how\nto specify the checkout style used on a server in a manner the client\ncan understand.\n\n<P>There seem to be two main points of difference\nbetween versioning styles: write lock vs. no lock, and object create\non checkout or checkin. All versioning styles appear to record the\nowner of the checkout (i.e., a notification of intention to edit).  o\nThere was some discussion concerning whether versions of a resource\nwere resources, or were representations of a resource. The group\ntended towards thinking that versions of a resource were themselves\nresources. Delta storage mechanisms are not a major concern for this\ngroup since they can be considered a server implementation issue.\n\n<P>There was one important point of consensus: \n\n<P>\n* All versions of a resource should be addressable (i.e., have a unique URL) \n\n<P><B>RELATIONS</B>\n\n<P>\nThere was a short discussion of the relationship model in the v0.2\nspec. The group agreed that adding peer fields to LINK style\nrelationships was worth investigating further. There was some concern\nthat replicating the URL in the (rtoken, URL) peer pairs was not space\nefficient.\n\n<P><B>REPRESENTATION/MANIPULATION</B>\n\n<P>\nThere was a discussion about the interaction between variants of a\nresource, and versions of a resource. The group came to the conclusion\nthat containers, content negotiation and versions are all orthogonal.\n\n<P>\n* The group came to the consensus that variants can be versioned. \n\n<P> * There was also some discussion of whether method parameters\ncould be subject to content negotiation. HTTP does not allow the\nAccept* request headers to be used for selection of the target of an\naction (method); they can only be used for selection of the content of\nthe response message after the action is taken. As a result, the group\ncame to consensus that no use of content negotiation should be allowed\non the parameters of a method invocation.\n\n<P>\nThere was also some discussion about the utility of allowing\nremote editing of content negotiation information. However, this was\nagreed to be pushed off into the next round of DAV activity.\n\n<P><B>RELATED DISCUSSION</B>\n\n<P>\nOver lunch, Carl-Uno Manros discussed the work he is doing on the PWG,\nInternet Printing Project (ipp).  Carl-Uno summarized the direction\nbeing taken by this working group, and their desire to utilize HTTP\nas their transfer protocol.\n\n<P>\nAt the end of the day, Mike Spreitzer led a discussion on four\nissues, which helped establish the boundaries of what should be\nconsidered by the WebDAV working group:\n\n<UL>\n<LI> Database: A more direct mapping of database concepts into\nthe DAV protocol. Consensus: out of scope.\n\n<LI>Proxy: Should DAV capabilities can accessible from proxies and the\norigin server, or only the origin server. Consensus: minimal proxy\nsupport, most operations must go to origin server.\n\n<LI>Disconnected operation: To what degree should the DAV protocol\nconsider disconnected editing and operation. Consensus: much\ndisconnected operation is already possible, and more can be enabled by\nallowing for queuing of requests, but the DAV group will assume that\nsuch queueing only takes place within the client and not within\nexternal proxies.\n\n<LI>Distributed filesystem: it might be a good idea to consider the\nrelated work on distributed filesystems. Some related systems are:\nCoda, CMU; Ficus, UCLA; and Bayou, PARC.\n</UL>\n\n<P>*** Meeting Adjourned ***\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.uci.edu/\">\nUniversity of California, Irvine</A><BR>\n<A HREF=\"http://www.ics.uci.edu/~ejw/\">\nJim Whitehead &lt;ejw@ics.uci.edu&gt;</A><BR>\n<A HREF=\"http://www.ics.uci.edu/\">\nDepartment of Information and Computer Science</A><BR>\n247 ICS2 #3425<BR>\n<A HREF=\"http://www.irvineco.com/\">\nIrvine</A>, CA  92697-3425<BR>\n</ADDRESS>\n\n</BODY>\n</HTML>", "encoding": "ascii"}