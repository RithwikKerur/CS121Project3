{"url": "https://www.ics.uci.edu/~irus/wisen/twist99/presentations/hewitt/hewitt-qna.html", "content": "<!doctype html public \"-//w3c//dtd html 4.0 transitional//en\">\n<html>\n<head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n   <meta name=\"Author\" content=\"Jim Whitehead\">\n   <meta name=\"GENERATOR\" content=\"Mozilla/4.51 [en] (Win98; U) [Netscape]\">\n   <title>TWIST'99 - Carl Hewitt - Q &amp; A</title>\n</head>\n<body>\n<b><font size=+2>TWIST'99 - Carl Hewitt</font></b>\n<br>Post-presentation questions and answers.\n<p>Motto of the talk: \"Unrecorded life is not worth living.\"\n<p><b>Q:</b> \"What does an XHandle look like?\"\n<br><b>Carl Hewitt:</b> It's an XML string with URLs embedded in it. They\nlook like XML.\n<p><b>Rohit Khare:</b> Lengthy question, including lots of introduction\nand explanation of the issue. Basically it boils down to \"Why HTTP?\"\n<br><b>Carl Hewitt:</b> Other models do not work. One of the biggest problems\nis 'type theory'. It doesn't scale. It's a nice bit of logic, but it doesn't\nmap onto the scruffy web.You need a performance/behavior model as opposed\nto mathematical abstraction.\"\n<p><b>Larry Masinter:</b> HTTP-NG is dead. I believe it's dead because\nit was \"in the way\" of a major commercial battle, DCOM vs RMI vs CORBA.\n<br><b>Carl Hewitt:</b> We work for the DoD [Department of Defense]. It's\na different part of ecology. They have their own reasons and might not\nwant it compatible.\n<br><b>Larry Masiner:</b> You're saying your sponsors know how to stay\nout of crossfires? :-)<b></b>\n<p><b>Larry Masinter:</b> What does this model have to do with naming?\n<br><b>Carl Hewitt:</b> What is a name? I think you have to be able to\nexplain a name to a 2-year-old. They can point, if not reduce names to\nsymbolic strings. If you hold to a strictly lexical view, you'll lose out\nto the future world of video-all-the-time.\n<p><b>Mark Day:</b> Fine with me. I agree. But how does that connect to\nthe web?\n<br><b>Carl Hewitt:</b> Sooner or later everything comes to the web.\n<p><b>Mark Day:</b> What does XHandle have to do with a 2-year-old [who\nis] pointing?\n<br><b>Carl Hewitt:</b> There will be more technology layers above XHandle,\ne. g. voice recognition. The 2-year-old simply speaks to the machine.\n<p><b>Esther Dyson:</b> Want Mommy!\n<p><b>Larry Masinter:</b> somewhere in there is a symbolic agent that kicks\noff the resolution process. Unlike Tim's [Berners-Lee] vision, we <i>do</i>\nsee URLs, we don't link step by step to every domain. URLs offer random\naccess.\n<br><b>Carl Hewitt:</b> The S-word is tricky, namely symbol. [It's] hard\nto distinguish between symbol and digital [object]. [I] plead guilty to\ndigital.\n<br><b>Mark Day:</b> This is a rathole...\n<br><b>Larry Masinter:</b> A deep one...\n<p><b>Esther Dyson:</b> You're talking about 1) video and 2) bootstrapping\nup with the DNS as the universal glue. Everything can talk to everything\nif there are enough translators -- the challenges are in those implementations.\nAn API so you can talk to it -- it's an N^N problem.\n<br><b>Carl Hewitt:</b> XHandle is a way of abstracting and programming\nnames. The insight of DO is that their notion of interface and querying\nunique names for bundles of functionality (interfaces) -- so rather than\npre-categorizing into a taxonomy, let the web run through it in realtime.\n\"Can you show me my first birthday party\"? You make it out of rich functionality,\nnot a type representation.\n<p><b>Robert Morgan:</b> XML somehow takes markup to magic. Why is this\ndifferent from RMI? Is it that XML is data, rather than some object system?\n<br><b>Carl Hewitt:</b> It's better to talk about implementations rather\nthan objects. There are some technical ifferences on page 20. Rather than\nproxies and stubs, pretending that everything is local. In XModel, even\nlocal computing imagines that it's out on the great wide Web. Also, there's\nsomething called \"marshalling\" in all this. 'I have a machine pointer address,\nand I need to return a handle to it' . Rather than creating a new stub\nhe can call back to, we send XML content, with XHandles in it. Every web\nclient is going to turn into a webserver.\n<p><b>Carl Hewitt</b> turns to Carl Ellison, sitting in the audience, and\nasks: What do YOU think of this?\n<br><b>Carl Ellison:</b> I'm not feeling comfortable working on this level\nof abstraction. I need concrete examples to work on. The 2-year-old gave\nme some idea, but not enough.\n<br><b>Carl Hewitt:</b> Yes. That's fair.\n<p><b>Larry Masinter:</b> This is a really complex space, and if you push\ndown the complexity in one place, it pops up somewhere else. It seems elusive\nbecause you've pushed around a lot, but it's not clear it works yet.\n<br><b>Carl Hewitt:</b> I'm not convinced either. By the IETF model --\nrough consensus and runnng code -- we're 0 for 2.\n<p><b>Q:</b> Routing and switching needs to understand XHandle?\n<br><b>Carl Hewitt:</b> Yes.\n<p><b>Q (Henrik Rood?):</b> Aren't we putting too many cycles (work) into\nthe routers?\n<br><b>Carl Hewitt:</b> They'll push back, but it's not as much as with\nthe active networks model.\n<br>&nbsp;\n</body>\n</html>\n", "encoding": "ascii"}