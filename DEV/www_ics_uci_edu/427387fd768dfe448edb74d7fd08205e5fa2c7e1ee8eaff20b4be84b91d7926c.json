{"url": "https://www.ics.uci.edu/~eppstein/pubs/a-gilbert.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nPublications with\n<a href=\"//sandbox.parc.xerox.com/gilbert/\">\nJohn Gilbert\n</a>\n</h2>\n<ul>\n<li><b>Provably good mesh generation</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nD. Eppstein, and \n<a href=\"//sandbox.parc.xerox.com/gilbert/\">\nJ. Gilbert</a>.<br>\n<i>31st IEEE Symp. Foundations of Comp. Sci.,</i>\nSt. Louis, Missouri, 1990, pp. 231&ndash;241.<br>\n<i>J. Comp. Sys. Sci.</i> 48: 384&ndash;409, 1994 (special issue for 31st FOCS).\n<p>\nIn this paper, we construct triangulations of point sets and polygons by\nusing quadtrees to add extra vertices to the input. As a result we can\nguarantee that all triangles have angles bounded\naway from zero, using a number of triangles within a constant of\noptimal; this was the first paper to provide simultaneous bounds on mesh\nelement quality and mesh complexity of this form, and therefore the\nfirst to provide finite element mesh generation algorithms that\nguarantee both the robustness of the algorithm against unexpected input\ngeometries and the quality of its output.\n<p>\nIn the same paper we also use quadtrees to triangulate planar point sets\nso that all angles are non-obtuse, using linearly many triangles, and to\ntriangulate higher dimensional point sets with no small solid angles and\na number of simplices within a constant of optimal.  Also, we can\naugment any higher dimensional point set so the Delaunay triangulation\nhas linear complexity.\n<p>\nIn later follow-up work, I showed that the same\ntechnique can also be used to find a triangulation whose edges have <a\nhref=\"p-mwst.html\">total length within a constant factor of\noptimal</a>. Bern, Mitchell, and Ruppert\nshowed that alternative methods can be used to triangulate any polygon\nwithout obtuse angles; see \"<a href=\"p-cpack.html\">Faster circle packing\nwith application to nonobtuse triangulation</a>\" for an algorithmic\nimprovement to their technique. Additionally, with Bern, Chew, and\nRuppert, we showed that <a href-\"p=dihedral.html\">any point set in\nhigher dimensions can be triangulated with nonobtuse simplices</a>.\nBern and I surveyed these and related results in our paper \"<a\nhref=\"p-meshgen.html\">Mesh generation and optimal triangulation</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Provably good mesh generation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Provably-good-mesh-generation.html\">Citations</a> &ndash;\n<a href=\"BerEppGil-JCSS-94.pdf\">Preliminary copy of journal version</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~dmjones/FOCS/References/berneg1990:231.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern90provably.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=183122\">ACM DL (JCSS)</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"auth.html\">Co-authors</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}