{"url": "https://www.ics.uci.edu/~jacobson/ics23/CourseSchedule.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n    \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n\n<head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n   <meta name=\"GENERATOR\" content=\"Mozilla/4.79 (Macintosh; U; PPC) [Netscape]\">\n   <title>ICS 23 Spring 2012 Course Schedule</title>\n   <link rel=\"stylesheet\" href=\"course.css\" type=\"text/css\">\n</head>\n\n<body>\n\n<div class=title>\n<center>\n<h2>ICS 23 Spring 2012<br>\nCourse Schedule</h2>\n</center>\n\n<center>\n<h3>Fundamental Data Structures<br>\nNorman Jacobson, Instructor</h3>\n</center>\n</div>\n\n<p>Readings in the Goodrich-Tamassia text are indicated in brackets after the lecture topic to which they correspond.  (You will find the chapter, and, where applicable, the section numbers of the pages to read.  For instance, [8] means read chapter 8; [4.3-4.5] means read chapter 4, sections 3 through 5, including any subsections of those sections.) Note that some topics we cover are not in the text. (No book we&#146;ve found matches this course exactly.)</p>\n\n<p>Entries <i>in italics</i> are Web pages that animate the algorithm indicated. <i>Most appear to work best, and some work only, in Internet Explorer.</i></p>\n\n<p>We will stick as closely as practical to this schedule, announcing in lecture any needed changes.</p>\n\n<font size = -1>\n<center>\n<table border cellpadding=5 width=\"580\" >\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center><b>Week</b></center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\n<center><b>Topics and Readings</b></center>\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>1</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\n      Introduction to the course\n<br>Review of single-dimension arrays [3.1.1-3.1.3]\n<br>Multi-dimension arrays [3.1.5]\n<br>Review of linked lists, ArrayList, stacks & queues [3.2-3.4; 5.1-5.2; 6]\n<br>Priority queues; representing priority queues with lists [8.1-8.2]\n<br>Review of recursion [3.5] \n<br>Review of proof methods and other useful math [A; 4.1]\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>2</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\n      Generalized lists \n<br>Algorithm Analysis [4.2-4.3]\n<br>&nbsp;&nbsp;Elementary analysis of algorithms; recurrence relations\n<br>&nbsp;&nbsp;Analysis of time used by an algorithm: O, omega and theta notation\n<br>Trees \n<br>&nbsp;&nbsp;General trees: properties and terminology [7.1-7.2]\n<br>&nbsp;&nbsp;Binary Trees [7.3]\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Properties, traversals &amp; implementations\n<br>&nbsp;&nbsp;&nbsp;&nbsp;(Re)constructing a tree from &#147;linear&#148; data\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>3</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\nSome Applications of Trees\n<br>&nbsp;&nbsp;&nbsp;&nbsp; heaps; representing priority queues with heaps [8.3]\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Decision trees\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Game trees\n<br>Binary search trees\n<br>&nbsp; &nbsp;Properties; adding and deleting nodes; traversal [10.1]\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>4</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\n&nbsp; &nbsp;Balancing Binary Search Trees; AVL Trees [10.2]\n<br>&nbsp; &nbsp;&nbsp; &nbsp;<a href=\"http://www.strille.net/works/media_technology_projects/avl-tree_2001/\"><i>http://www.strille.net/works/media_technology_projects/avl-tree_2001/</i></a>\n<br>&nbsp; &nbsp;&nbsp; &nbsp;<a href=\"http://www.site.uottawa.ca/~stan/csi2514/applets/avl/BT.html\">www.site.uottawa.ca/~stan/csi2514/applets/avl/BT.html</a></i>\n<br>Graphs\n<br>&nbsp;&nbsp;Terminology & Representations [13.1-13.2]\n<br>&nbsp;&nbsp;Traversals, Topological ordering, DAGs, Weighted [13.3-13.4]\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>5</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\n<b>Midterm</b> Tuesday, May 1 \n<br>Graphs, continued\n<br>&nbsp;&nbsp;Shortest Path [13.5]\n<br>&nbsp;&nbsp;Minimum Cost Spanning Trees [13.6]\n<br>&nbsp;&nbsp;Introduction to P, NP, NP-complete, and (un)decidable problems\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>6</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\nSorting\n<br> &nbsp;&nbsp;Sorting in n<sup>2</sup> time\n<br> &nbsp;&nbsp;&nbsp;&nbsp;Insertion sort\n<br> &nbsp;&nbsp;&nbsp;&nbsp;\"Outmoded\" sorts (Selection sort, Shell sort, ...)\n<br> &nbsp;&nbsp;Sorting in n log n time\n<br> &nbsp;&nbsp;&nbsp;&nbsp;TreeSort \n<br> &nbsp;&nbsp;&nbsp;&nbsp;Heapsort [8.3.5]\n<br>&nbsp;&nbsp;Divide and conquer methods: Mergesort & Quicksort [11.1-11.2]\n<br>&nbsp;&nbsp;Lower bound for direct key comparison sorting [11.3]\n<br>&nbsp;&nbsp;Linear time sorting: radix, ProxmapSort, ChainSort\n<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://www.ics.uci.edu/~jacobson/ics23/ProxmapHandout\">Proxmap handout</a>\n<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://www.ics.uci.edu/~jacobson/ics23/ChainListHandout\">ChainList handout</a>\n<br>&nbsp;&nbsp;&nbsp;&nbsp;ProxmapSearch as a consequence of ProxmapSort\n<br>&nbsp;&nbsp;&nbsp;&nbsp;ChainSearch as a consequence of ChainSort\n<br>&nbsp;&nbsp;Comparing sorts\n<i><br>&nbsp; &nbsp;&nbsp; &nbsp;<a href=\"http://www.sorting-algorithms.com/\">www.sorting-algorithms.com/</a>\n<br>&nbsp; &nbsp;&nbsp; &nbsp;<a href=\"http://cg.scs.carleton.ca/~morin/misc/sortalg/\">cg.scs.carleton.ca/~morin/misc/sortalg/</a>\n<br>&nbsp; &nbsp;&nbsp; &nbsp;<a href=\"http://maven.smith.edu/~thiebaut/java/sort/demo.html\">maven.smith.edu/~thiebaut/java/sort/demo.html</a></i>\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>7</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\nSearching\n<br>&nbsp;&nbsp;Review of searching unordered & ordered lists [9.3.1]\n<br>&nbsp;&nbsp;Skip lists [9.4]\n<i><br>&nbsp; &nbsp;&nbsp; &nbsp;<a href=\"http://iamwww.unibe.ch/~wenger/DA/SkipList/\">iamwww.unibe.ch/~wenger/DA/SkipList/</a></i>\n<br>&nbsp;&nbsp;Hashing [9.1-9.2]\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Review of division hashing & separate chaining\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Multiplicative hashing; random and uniform hash functions\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Overview of open addressing techniques\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Space & time results\n<br>&nbsp;&nbsp;Bucket searches & ChainSearch [see ChainList handout, above]\n<br>&nbsp;&nbsp;General issues\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>8</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\nSorting on External Media\n<br>&nbsp;&nbsp;Adapting memory-based sorts to disk\n<br>&nbsp;&nbsp;Mergesort & sorting on sequential media [14.4]\n<br>&nbsp;&nbsp;Pros and cons of applying memory-based sorts\n<br>Searching on External Media\n<br>&nbsp;&nbsp;Basic disk structure\n<br>&nbsp;&nbsp;Random access\n<br>&nbsp;&nbsp;Naive approaches\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>9</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\nSearching on External Media, continued\n<br>&nbsp;&nbsp;B-trees & B+ trees [14.3]\n<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://www.ics.uci.edu/~jacobson/ics23/BTreeDeletionHandout.pdf\"><i>B-Tree deletion handout</i></a>\n<br>Memory management [14.1]\n<br>&nbsp;&nbsp;Dynamic memory allocation \n<br>&nbsp;&nbsp;&nbsp;&nbsp;First fit\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Best fit\n<br><i>Memorial Day holiday, Monday, May 28: first floor labs closed</i>\n\n</td>\n</tr>\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center>10</center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\nMemory management, continued\n<br>&nbsp;&nbsp;Garbage Collection\n<br>&nbsp;&nbsp;Managing disk space\n<br>&nbsp;&nbsp;Standish&#146;s algorithm\n<br>Union/find algorithm [11.4]\n<br>Review for Final\n</td>\n</tr>\n\n<tr>\n<td width=\"11%\" valign=\"TOP\">\n<center><b>Final Exam</b></center>\n</td>\n<td width=\"89%\" valign=\"TOP\">\n<b>Thursday, June 14, 4:00 - 6:00 pm, in DBH 1100</b>\n</td>\n</tr>\n</table>\n\n</body>\n</html>\n", "encoding": "ascii"}