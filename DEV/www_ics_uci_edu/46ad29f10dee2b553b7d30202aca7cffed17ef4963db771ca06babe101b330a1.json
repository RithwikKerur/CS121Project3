{"url": "https://www.ics.uci.edu/~kay/courses/i141/hw/asst3.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<TITLE>Information Retrieval Assignments</TITLE>\n<link href=\"http://www.ics.uci.edu/~kay/courses/31/mainstyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<p><FONT size=\"2\"  >INFX 141 / CS 121</FONT><FONT size=\"2\"  > &bull; DAVID G. KAY &bull; UC IRVINE &bull; WINTER 2015</FONT></p>\n<p><FONT   SIZE=6>Assignment #3<br /><B>Crawling</B></FONT>\n</p>\n<!-- <p>[Still subject to clarifying changes]</p>-->\n<p><b>Goal:</b> \n  Using the specified library and program skeleton, write a program to crawl the domain <code>www.ics.uci.edu</code> in order to answer a series of questions specified below.\n</p>\n<p><b>Crawling library:</b> <code><a href=\"http://code.google.com/p/crawler4j/\">http://code.google.com/p/crawler4j/</a></code> or \n\t\t\t<code><a href=\"https://github.com/Mondego/crawler4py\">https://github.com/Mondego/crawler4py</a></code></p>\n<p><b>Project skeleton:</b> <code><a href=\"http://www.ics.uci.edu/~kay/courses/i141/hw/Assignment3.zip\">http://www.ics.uci.edu/~kay/courses/i141/hw/Assignment3.zip</a></code></p>\n\n<p><b>General specifications</b>:\n<ul>\n<li>\nThis assignment may be done individually or in groups of 2 or 3. \nFor each size group, the expectations are the same; solo workers save time by not having to talk to anyone while group workers can split the work with the addition of communications costs.  All group members receive the same score (except possibly as modified by the TA in the interview phase; see below).</li>\n<li>You may use <i>text processing code</i> that you or any classmate wrote for the previous assignment. You may not use <i>crawler code</i> written by non-group-member classmates. Use code found over the Internet at your own peril\u2014it may not do exactly what the assignment requires. If you do end up using code you find on the Internet, you must disclose the origin of the code. As stated in the collaboration guidelines, concealing the origin of a piece of code is plagiarism. \n</li>\n<li>Use Piazza for general questions whose answers can benefit everybody.\n</li>\n<li>You may use Java, Python, or Scheme/Racket for this assignment.  As before, Java is the\nsafest choice because the assignment is written with Java in mind and the skeleton is in Java.  This time there are some resources provided in Python; you'd still have to translate the skeleton. The Python resources, being newer, may be less robust (meaning you should allow extra time in case of snags).\nBut there may be extra credit for identifying and documenting specific bugs in the Python resources.\n</li>\n<li>Your task is to fill in the one method in the skeleton according to its specification.  You may create additional methods and classes where necessary, provided the interface is the same.\n</li></ul></p>\n<p><b>More specific specifications:</b><ul>\n<li><i>(Very important for getting credit)</i>\nSet the name of your crawler's User Agent to this precise string: <code>UCI Inf141-CS121 crawler <i>StudentID(s)</i></code>, where the last part is the eight-digit student ID of each team member, separated by one space.\n</li>\n<li>Start with the seed <code>http://www.ics.uci.edu</code> and crawl from there.  Crawl only the domain <code>ics.uci.edu</code> and all of its subdomains (<code><i>anything</i>.ics.uci.edu</code>).\n</li>\n<li><i>(Very important for politeness)</i> Wait at least 300ms between page requests to the same subdomain.\n</li>\n<li>We will verify execution by checking the server logs of some pages in the domain.  These servers are in any correctly-written crawler path.\nIf we don't find log entries for your student ID, that means that your crawler didn't perform correctly or you didn't set its name correctly.  If we can't\nverify that your crawler did run successfully, we will assume that it didn't.\n</li>\n<li>\nAt points, this assignment may be underspecified (i.e., not fully describe what to do in every situation).\nIn those cases, post your questions on Piazza or check with the TA.  For minor issues, make your own assumptions and document them.\n</li></ul></p>\n<p><b>Questions:</b>\n<ol '1'>\n<li>\nHow much time did it take to crawl the entire domain?\n</li>\n<li>\nHow many unique pages did you find in the entire domain? (Uniqueness is established by the URL, not the page's content.)\n</li>\n<li>\nHow many subdomains did you find? Submit the list of subdomains ordered alphabetically and the number of unique pages detected in each subdomain. The file should be called <code>Subdomains.txt</code>, and its content should be lines containing the URL, a comma, a space, and the number.\n</li>\n<li>\nWhat is the longest page in terms of number of words? (Don't count HTML markup  as words.)\n</li>\n<li>\nWhat are the 500 most common words in this domain? (Ignore English stop words, which can be found, for example, at <a href=\"http://www.ranks.nl/stopwords\"><code>http://www.ranks.nl/stopwords</code></a>.) Submit the list of common words ordered by frequency (and alphabetically for words with the same frequency) in a file called <code>CommonWords.txt</code>.\n</li>\n</ol>\n<p><b>Submitting your assignment:</b>\nYour will submit your work via Checkmate. For groups of two or three, <em>just one of you</em> should submit all parts of the assignment; the names of all group members must appear near the top of every submitted file.\n<p>First, submit a single zip file that matches the structure of the project skeleton and contains your code in the <code>src</code> folder.  Second, submit a plain text file called  <code>Answers</code><code>.txt</code> with your answers to questions 1, 2, and 4. Third, submit the \n  <code>Subdomains.txt</code> file described above. Fourth, submit the <code>CommonWords.txt</code> file described above. Fifth, if there is anything else you wish to communicate to the TA, such as implementation assumptions made, this should be placed into an additional <code>README.txt</code> file included in your source code zip file.\n\n<p>&nbsp;</p>\n<p><b>Evaluation criteria:</b>\nYour assignment will be graded on the following three criteria.\n<ol 1><li>\nCorrectness:\n(a) Did you crawl the domain correctly? We will verify that in our servers\u2019 logs.\n(b) Does your crawler pass our tests of the crawl method?\n(c) Are your answers to the questions reasonable?\n(Note that correct answers are not valid without evidence of correct crawling.\nAnswers by different crawlers will vary due to a number of factors. \u201cCorrectness\u201d of answers will be based on how reasonable they are.)\n</li><li>\nStyle/documentation/aesthetics:\nIs the program clearly documented and well written?\n</li><li>Understanding:\nYou will have an in-person meeting with the TA where you will be asked\nquestions about your crawler\u2019s implementation.\nAll members of the group are expected to demonstrate solid\nunderstanding of the crawler. In cases where understanding is\nclearly lacking, the scores will reflect that.\n</li></ol>\n<HR />\n<FONT  ><A HREF=\"http://www.ics.uci.edu/~kay/\">David G. Kay</A>, <a href=mailto:kay@uci.edu>kay@uci.edu</A> </FONT><span><br />\n<font size=\"2\"  >\n<!-- #BeginDate format:fcAm1a -->Wednesday, February 4, 2015 12:42 PM<!-- #EndDate -->\n</font></span>\n</BODY>\n</HTML>\n", "encoding": "utf-8"}