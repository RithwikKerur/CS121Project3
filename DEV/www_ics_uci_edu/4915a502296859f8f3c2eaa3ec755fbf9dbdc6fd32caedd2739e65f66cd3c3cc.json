{"url": "https://www.ics.uci.edu/~thornton/ics184/LabManual/Assignment1/", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC\n \"-//W3C//DTD XHTML 1.1//EN\"\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\n<link rel=\"stylesheet\" href=\"../../course2.css\" type=\"text/css\" />\n\n<title>ICS 184 / EECS 116 Summer 2006, Assignment #1</title>\n</head>\n<body>\n\n<div class=\"navbar\">\n\n<p>\nICS 184 / EECS 116 Summer 2006 |\n<a href=\"../../index.html\">News</a> |\n<a href=\"../../CourseReference.html\">Course Reference</a> |\n<a href=\"../../Schedule.html\">Schedule</a> |\n<a href=\"../../LabManual\">Lab Manual</a> |\n<a href=\"../../LabManual/UsingNewsgroup.html\">ics.184 newsgroup</a> |\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\n</p>\n\n<hr />\n\n</div>\n\n<div class=\"header\">\n\n<p>ICS 184 / EECS 116 Summer 2006<br />\n   Assignment #1</p>\n\n</div>\n\n<div class=\"section\">\n\n<p class=\"center\"><b>Due date and time:</b> <i>Wednesday, July 12, 11:59pm</i></p>\n\n<hr />\n\n<p class=\"title\">Introduction</p>\n\n<p>A <i>database</i> is simply defined as a collection of information relevant to some person, some program, or some organization.  The collection can be as straightforward as a homogeneous list of employees and their job titles, or as complex as the complete set of interrelated information maintained by a bank about its customers, employees, assets, and investments.</p>\n\n<p>In applications of a realistic scale, merely understanding the application's data requirements can be a challenge.  The other half of the battle, turning these requirements into a software system that manages the data, is even more difficult if done from scratch.  Fortunately, there are well-understood techniques for performing what's called <i>data modeling</i>, a conceptualization of what data needs to be stored, and how data relates to other data.  Furthermore, there are existing software systems called <i>database management systems</i> that are adept at storing and manipulating data modeled using such techniques.  The existence of data modeling techniques and database management systems greatly reduces the work required to build an application that requires a database.</p>\n\n<p>There are multiple data modeling techniques in use, but by far the most prevalent is called the <i>relational model</i>, which we've been discussing in lecture.  In the relational model, data is organized into <i>relations</i> with one or more <i>attributes</i>, with each relation being a set of <i>tuples</i>, and each tuple containing a unique grouping of values for the attributes.  For example, a database for a hospital might contain a relation called <i>patient</i>, with attributes like <i>patient_id</i>, <i>name</i>, <i>address</i>, and <i>admitted_date</i>.  Each tuple in the relation would contain information about a particular patient.  Two tuples could have the same value for some of the attributes &mdash; such as two patients with the same name and/or address &mdash; but not for all of them.</p>\n\n<p>Relational databases excel at managing the interrelationships between data in different relations.  In our hospital example, a relation called <i>visit</i> might consist of attributes like <i>patient_id</i> and <i>doctor_id</i>, along with other information such as <i>reason</i> and <i>visit_date</i>.  The presence of the <i>patient_id</i> and <i>doctor_id</i> attributes relates information about each instance of a patient visiting a doctor with identifying information about the patient and the doctor, without requiring that identifying information to be duplicated in the <i>visit</i> relation.  Later this quarter, we'll explore issues, such as duplication of information, that arise in the design of a relational database.</p>\n\n<p>For this assignment, I'd like you to get some practice formulating queries for a relational database that has already been designed.  I'm asking you to use relational algebra to formulate your queries, so that you can focus on the task of selecting just the right information, joining together related data from multiple relations when necessary, without worrying about the syntactic and semantic details of programmatic query languages like SQL, which can sometimes be unintuitive.  Subsequent assignments will encourage you to explore other parts of the broader task of data management, such as expressing and testing queries and data definitions programmatically using SQL, modeling data for the purposes of designing a database, and connecting to a database from another program.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">The database</p>\n\n<p>For this assignment, we'll work with a database underlying the operations of a hypothetical company that manages multiple automobile dealerships throughout the United States.\n\n<p>The following are the data requirements of our enterprise.</p>\n\n<ul>\n  <li>A <i>car</i> is described by a vehicle identification number (VIN), make (e.g., Toyota), model (e.g., Prius), year, mileage, and two prices: the <i>asking price</i> (how much the dealership would like to sell the car for) and the <i>invoice price</i> (how much the dealership paid for the car).  This information is maintained for every car currently in any dealership's inventory, and also for every car that has ever been sold by one of the dealerships.</li>\n  <li>A <i>dealership</i> is a single location where the company sells cars.  The company manages many dealerships, each one being described by a unique dealership ID, a name (e.g., Irvine Toyota Sales), street address, city, and state.</li>\n  <li>The company employs a number of salespeople.  Each salesperson is assigned a unique salesperson ID.</li>\n  <li>Salespeople work at one or more dealerships each month, and are paid a monthly <i>base salary</i> at each, regardless of how many cars they sell.  Additionally, they are paid a commission on each car they sell.</li>\n  <li>Information is maintained about all salespeople who ever worked for any dealership.</li>\n  <li>The following information is kept about each customer: Social Security Number (necessary for the purposes of performing a credit check), name, street address, city, and state.</li>\n  <li>Salespeople are arranged in a strict hierarchy, with each salesperson reporting to a \"managing salesperson.\"</li>\n  <li>It is necessary to keep track of the inventory of cars currently available at each dealership.  Of course, a particular car can only be in the inventory of one dealership at any given time.</li>\n  <li>A long-term record of all car sales is maintained.  For each sale, the company tracks what car was bought, what customer bought it, what salesperson sold it, what dealership it was sold by, what price it was sold for, and what date it was sold.  (It is assumed that no car will ever be sold by the company more than once, though this is a possibility in a real car dealership.)</li>\n</ul>\n\n<p>Keeping in mind the data requirements described above, the database has been designed to consist of the following relations, with the attributes making up the primary key of each relation underlined.  Spend some time looking over these definitions, and make sure you understand why the primary key was chosen as it was.  (For example, why is <i>social_security_number</i> not included in the primary key of <i>sale</i>?)</p>\n\n<blockquote>\n  <i>car</i>(<i><u>vin</u></i>, <i>make</i>, <i>model</i>, <i>year</i>, <i>mileage</i>, <i>asking_price</i>, <i>invoice_price</i>)<br />\n  <i>dealership</i>(<i><u>dealership_id</u></i>, <i>dealership_name</i>, <i>dealership_street_address</i>, <i>dealership_city</i>, <i>dealership_state</i>)<br />\n  <i>salesperson</i>(<i><u>salesperson_id</u></i>, <i>salesperson_name</i>)<br />\n  <i>customer</i>(<i><u>social_security_number</u></i>, <i>customer_name</i>, <i>customer_street_address</i>, <i>customer_city</i>, <i>customer_state</i>)<br />\n  <i>reports_to</i>(<i><u>salesperson_id</u></i>, <i>managing_salesperson_id</i>)<br />\n  <i>works_at</i>(<i><u>salesperson_id</u></i>, <i><u>dealership_id</u></i>, <i><u>month_worked</u></i>, <i>base_salary_for_month</i>)<br />\n  <i>inventory</i>(<i><u>vin</u></i>, <i>dealership_id</i>)<br />\n  <i>sale</i>(<i><u>vin</u></i>, <i>social_security_number</i>, <i>salesperson_id</i>, <i>dealership_id</i>, <i>sale_price</i>, <i>sale_date</i>)<br />\n</blockquote>\n\n<p>The domain of the <i>month_worked</i> attribute of the <i>works_at</i> relation is unique months, such as March 2006 or September 2008.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">The queries</p>\n\n<p>Write a relational algebra expression for each of the following queries, which are intended to operate on a database designed as described in the previous section of this assignment.  For each query, any legal relational algebra expression that yields the correct result is acceptable.</p>\n\n<ol>\n  <li>Find the names of all salespeople who have ever worked for the company at any dealership.</li>\n  <li>Find the names of all salespeople who are managed by a salesperson named \"Joe Jones\".</li>\n  <li>List the VIN, make, model, year, and mileage of all cars in the inventory of the dealership named \"Irvine Toyota Sales\".</li>\n  <li>List the VIN, year, and mileage of all Toyota Camrys in the inventory of the dealership named \"Irvine Toyota Sales\".  (Note that a Toyota Camry is indicated by the make being \"Toyota\" and the model being \"Camry\".)</li>\n  <li>Find the name and Social Security Number of all customers who bought a car at a dealership located in a state other than the state in which they live.</li>\n  <li>Find the names of all salespeople who do not have a manager.</li>\n  <li>Find the name of the salesperson that made the largest base salary working at the dealership named \"Irvine Toyota Sales\" during January 2006.</li>\n  <li>Find the salesperson ID and name of all salespeople who have worked at each one of the company's dealerships at some point in time.</li>\n  <li>List the name, salesperson ID, and total sales amount for each salesperson who has ever sold at least one car.  The total sales amount for a salesperson is the sum of the sale prices of all cars ever sold by that salesperson.</li>\n  <li>Find the name and salesperson ID of the salesperson who sold the most cars for the company at dealerships located in California between March 1, 2006 and March 31, 2006.</li>\n  <li>Calculate the payroll for the month of March 2006.\n    <ul>\n      <li>The payroll consists of the name, salesperson ID, and gross pay for each salesperson who worked that month.</li>\n      <li>The gross pay is calculated as the base salary at each dealership employing the salesperson that month, along with the total commission for the salesperson that month.</li>\n      <li>The total commission for a salesperson in a month is calculated as 7% of the profit made on all cars sold by the salesperson that month.</li>\n      <li>The profit made on a car is the difference between the sale price and the invoice price of the car.  (Assume, for simplicity, that cars are never sold for less than the invoice price.)</li>\n    </ul>\n  </li>\n</ol>\n\n<p>You are permitted to use the assignment operation to create temporary relations for the purposes of simplifying your queries, but it is not required.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Deliverables</p>\n\n<p>Write all of your queries in a single file in a Microsoft Word (.doc), Rich Text Format (.rtf), or PDF document.  Please be sure to use the appropriate Greek characters and mathematical symbols, rather than making up your own equivalents; this will help us greatly in grading the assignment, especially since there are multiple correct solutions to most of these problems.  Submit the one file containing your queries and nothing else.</p>\n\n<p>Follow <a href=\"../SubmittingAssignments.html\">this link</a> for a discussion of how to submit your assignment.  Be aware that I'll be holding you to all of the rules specified in that document, including the one that says that you're responsible for submitting the version of the assignment that you want graded.  We won't regrade your assignment simply because you submitted the wrong version by accident.</p>\n\n</div>\n\n<div class=\"history\">\n\n<hr />\n\n<ul class=\"nomarker\">\n  <li>Some minor fixes and updates applied by Alex Thornton, Spring 2006.</li>\n  <li>Originally written by Alex Thornton, Winter 2006.</li>\n</ul>\n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}