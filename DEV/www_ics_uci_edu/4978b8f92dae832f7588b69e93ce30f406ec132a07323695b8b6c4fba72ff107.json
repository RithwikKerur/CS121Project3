{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/make/octave.mak", "content": "# file: octave.mak\n# description: Build MEX files for GNU Octave\n# author: Andrea Vedaldi\n\n# Copyright (C) 2007-12 Andrea Vedaldi and Brian Fulkerson.\n# All rights reserved.\n#\n# This file is part of the VLFeat library and is made available under\n# the terms of the BSD license (see the COPYING file).\n\n# Octave support is experimental. Currently, the MEX files compile\n# successfully but a number of bugs and subtle MATLAB\n# imcompatibilities make VLFeat not fully functional.\n#\n# Octave support is enabled if $(MKOCTFILE) is executable. Therefore\n# setting MKOCTFILE to the empty string disables Octave support.\n\nOCTAVE ?= octave\nMKOCTFILE ?=\nOCTAVE_ENABLE ?= $(strip $(shell type -P $(MKOCTFILE) 2>&1 >/dev/null && \\\n                   $(MKOCTFILE) -p OCTAVE_LIBS 2>&1 | \\\n                   grep octave))\n\n# if expand to empty string, set to empty string for use with ifdef\nifeq ($(OCTAVE_ENABLE),)\nOCTAVE_ENABLE=\nendif\n\nifdef OCTAVE_ENABLE\nall: octave-mex-all\nclean: octave-mex-clean\narchclean: octave-mex-archclean\ndistclean: octave-mex-distclean\nendif\n\ninfo: octave-mex-info\n\nOCTAVE_MEX_SUFFIX := mex\nOCTAVE_MEX_BINDIR := toolbox/mex/octave/$(MEX_SUFFIX)\nOCTAVE_MEX_CFLAGS = $(LINK_DLL_CFLAGS) -Itoolbox\nOCTAVE_MEX_LDFLAGS = $(LINK_DLL_LDFLAGS) -lm\n\n# Mac OS X on Intel 32 bit processor\nifeq ($(ARCH),maci)\nendif\n\n# Mac OS X on Intel 64 bit processor\nifeq ($(ARCH),maci64)\nendif\n\n# Linux on 32 bit processor\nifeq ($(ARCH),glnx86)\nOCTAVE_MEX_FLAGS += -Wl,--rpath,\\\\\\$$ORIGIN/\nendif\n\n# Linux on 64 bit processorm\nifeq ($(ARCH),glnxa64)\nOCTAVE_MEX_FLAGS += -Wl,--rpath,\\\\\\$$ORIGIN/\nendif\n\n# --------------------------------------------------------------------\n#                                                                Build\n# --------------------------------------------------------------------\n\n.PHONY: octave-all, octave-mex-all, octave-mex-dir, octave-info\n.PHONY: octave-clean octave-archclean octave-distclean\nno_dep_targets += octave-info\nno_dep_targets += octave-clean octave-archclean octave-distclean\n\noctave_mex_src := $(shell find $(VLDIR)/toolbox -name \"*.c\")\noctave_mex_tgt := $(addprefix $(OCTAVE_MEX_BINDIR)/,\\\n                  $(notdir $(mex_src:.c=.$(OCTAVE_MEX_SUFFIX)) ) )\noctave_mex_dep := $(octave_mex_tgt:.$(OCTAVE_MEX_SUFFIX)=.d)\noctave_mex_dll := $(OCTAVE_MEX_BINDIR)/lib$(DLL_NAME).$(DLL_SUFFIX)\n\nifdef OCTAVE_ENABLE\narch_bins += $(octave_mex_tgt) $(octave_mex_dll)\ncomm_bins +=\ndeps += $(octave_mex_dep)\nendif\n\nvpath vl_%.c $(shell find $(VLDIR)/toolbox -type d)\n\noctave-mex-all: $(octave_mex_tgt) matlab-noprefix\n\n# generate octave-mex-dir target\n$(eval $(call gendir, octave-mex, $(OCTAVE_MEX_BINDIR)))\n\n$(OCTAVE_MEX_BINDIR)/%.d : %.c $(octave-mex-dir)\n\t$(call C,MKOCTFILE) \\\n\t    $(OCTAVE_MEX_CFLAGS) -M \"$(<)\"\n\t@mv \"$(<:.c=.d)\" $(OCTAVE_MEX_BINDIR)\n\n$(octave_mex_dll) : $(dll_tgt)\n\tcp -v \"$(<)\" \"$(@)\"\n\n$(OCTAVE_MEX_BINDIR)/%.$(OCTAVE_MEX_SUFFIX) %.o : %.c $(octave-mex-dir) $(octave_mex_dll)\n\tCFLAGS=\"$(STD_CFLAGS)\" \\\n\tLDFLAGS=\"$(STD_LDFLAGS)\" \\\n\t $(MKOCTFILE) \\\n\t    --mex -v \\\n\t    --output \"$(@)\" \\\n\t    $(OCTAVE_MEX_CFLAGS) \"$(<)\" \\\n\t    $(OCTAVE_MEX_LDFLAGS)\n\t@rm -f \"$(<:.c=.o)\"\n\noctave-mex-info:\n\t$(call echo-title,Octave support)\n\t$(if $(OCTAVE_ENABLE),\\\n\t  @echo \"OCTAVE support enabled (MKOCTFILE found)\",\\\n\t  @echo \"OCTAVE support disabled (MKOCTFILE not found)\")\n\t$(call dump-var,octave_mex_src)\n\t$(call dump-var,octave_mex_tgt)\n\t$(call dump-var,octave_mex_dep)\n\t$(call echo-var,OCTAVE)\n\t$(call echo-var,MKOCTFILE)\n\t$(call echo-var,OCTAVE_MEX_BINDIR)\n\t$(call echo-var,OCTAVE_MEX_CFLAGS)\n\t$(call echo-var,OCTAVE_MEX_LDFLAGS)\n\t@echo\n\noctave-mex-clean:\n\trm -f $(octave_mex_dep)\n\noctave-mex-archclean: octave-clean\n\trm -f $(octave_mex_tgt)\n\noctave-mex-distclean: octave-archclean\n\trm -rf toolbox/mex/octave\n\n# Emacs:\n# Local variables:\n# mode: Makefile\n# End:\n", "encoding": "ascii"}