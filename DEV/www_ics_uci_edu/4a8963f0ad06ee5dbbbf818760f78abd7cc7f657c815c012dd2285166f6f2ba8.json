{"url": "https://www.ics.uci.edu/~eppstein/junkyard/lattice-voronoi.html", "content": "<HR><PRE>\n<B>Newsgroups:</B>     sci.math.research\n<B>From:</B>           <A HREF=\"mailto:greg@dent.uchicago.edu\">greg@dent.uchicago.edu</A> (Greg Kuperberg)\n<B>Subject:</B>        Re: Computing the classical voronoi diagram\n<B>Date:</B>           Wed, 5 May 1993 21:37:30 GMT\n<B>Organization:</B>   Dept. of Mathematics\n</PRE><HR><PRE>\n&gt;I am looking for a fast (hopefully C) program to compute the \"classical\"\n&gt;voronoi diagram associated to a quadratic form.\n\nThis is a complicated problem.\n\n&gt;I am really only interested in the two-dimensional case at present.\n\nAh!  That changes everything.  The Voronoi cell is going to be a\nhexagon in the general case and a parellelogram in special cases.  If\nyour lattice is just ordinary Z^2 and distance is given by a quadratic\nform, i.e. a 2 x 2 symmetric, positive definite real matrix, the\nfollowing algorithm outputs the four or six Voronoi neighbors of the\norigin, after doing a series of changes of basis.  It is then a matter\nof simple linear algebra to find equations for the six sides.\n\nLet Q = (a b) be your quadratic form, and let P = (1 -1) and N = (1  0)\n        (b c)                                     (0  1)         (0 -1)\n\nbe matrices that will be used for change of basis.  Recall that Q is\npositive definite iff a,c, and the determinant, ac-b^2 are positive.\nThe determinant will not change throughout the computation.\n\nThe algorithm\n-------------\nIn each step of the algorithm, update a,b, and c as necessary to\nreflect changes in Q.\n\n1. If b&lt;0, replace Q &lt;-- N Q N.\n2. While a<U>&lt;</U>b, replace Q &lt;-- P^T Q P.\n3. While c<U>&lt;</U>b, replace Q &lt;-- P Q P^T.\n4. If Q changed in step 2 or 3, go back to step 2.\n5. (+-1,0) and (0,+-1) are Voronoi neighbors, and so are (1,-1) and (-1,1)\nprovided that b &gt; 0.\n\nGeometric interpretation of the algorithm\n-----------------------------------------\nThe set of positive def. quadratic forms with a given determinant,\nsay determinant 1, (equivalently the set of ellipses centered at the\norigin with area pi) is a hyperbolic plane.  The set for which the\nVoronoi cells of the lattice Z^2 are parallelograms is a collection\nof geodesics that divide the hyperbolic plane into a tiling by\nideal triangles.  You can find a continuous path from any quadratic\nform to any other in the same ideal triangle without degeneration\nof the sides of the Voronoi region, which means that the origin has\nthe same Voronoi neighbors for all quadratic forms in the same triangle.\n\nThe goal of the algorithm is to find which ideal triangle contains a\ngiven quadratic form.  Each ideal triangle divides the hyperbolic plane\ninto three complementary regions.  Therefore the adjacency graph of the\ntriangles is an infinite tree in which every vertex has three\nneighbors.  The algorithm is a binary search using the fact that the\nequation b = 0 determines an edge in the triangle tiling, and the fact\nthat an integral change of basis induces an isometry of the tiling.\nStep 1 reflects the hyperbolic plane if the quadratic form Q is on the\nwrong side of the geodesic b=0.  Step 2 checks if Q lies in one of the\ntriangles which is a left descendant of the \"root\" triangle T adjacent\nto b=0, while step 3 does the same for the right descendants.  By the\ntime you get to step 4, Q lies in T itself.\n\nPossible acceleration of the algorithm\n--------------------------------------\nIn step 2, for example, you replace Q by P^T Q P repeatedly by a <U>&lt;</U> b.\nThis has the effect of replacing b by b-a; a does not change.  You know\nahead of time that you are going to do this n = floor(b/a) times.  So\nyou can replace Q by (P^n)^T Q P^n and move to step 3.  P^n = (1 -n)\n                                                              (0  1)\n</PRE>\n", "encoding": "ascii"}