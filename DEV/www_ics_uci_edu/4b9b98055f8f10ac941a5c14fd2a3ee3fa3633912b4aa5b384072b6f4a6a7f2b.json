{"url": "https://www.ics.uci.edu/~smyth/courses/stats5/onlineslides/RCode_for_Feb6th_Lecture/STAT5_ClusterAnalysis2017.R", "content": "#iris data are in the R package. The data are stored in two formats: 2D matrix or 3D array\r\n\r\n#\"iris\" is a data matrix with 150 rows and five columns\r\nattributes(iris)\r\n\r\n#\"iris3\" is 3D array\r\nattributes(iris3)\r\n\r\n\r\n############# slide 8: print the data\r\n#show the data matrix for each type\r\niris[1:50,1:4] #setosa\r\niris[51:100,1:4] #versicolor\r\niris[101:150,1:4] #virginica\r\n\r\n#alternativelly, you can use iris3\r\niris3[,,1]\r\niris3[,,2]\r\niris3[,,3]\r\n\r\n############## slide 9: visualize the iris data\r\n#plot the data matrix into an image using the \"image\" function\r\nimage(t(iris[,4:1]),col=rainbow(12))\r\n#the \"image\" function draws a data matrix from bottom to up\r\n\r\n\r\n############## slides 18\r\n#### cluster analysis using the R function \"kmeans\"\r\nobj=kmeans(data.frame(iris[,-5]),centers=3)\r\nkmeans(data.frame(iris[,-5]),centers=3, trace=T)\r\n\r\n\r\n#slide 19\r\n#draw the scatter plot for the first 9 iterations\r\ndistxy=function(x,y) { return(sum( (x-y)^2)) }\r\nmydata=iris[,-5]\r\n#mydata=scale(mydata)\r\nn=dim(mydata)[1]\r\nK=3\r\ndistance=matrix(0, n, K)\r\n#initialize\r\nset.seed(1)\r\ncluster01=rmultinom(n, size=1, prob=c(0.3,0.3,0.4) )\r\ncluster01.new=rmultinom(n, size=1, prob=c(0.3,0.3,0.4) )\r\ncluster123=apply(cluster01.new, 2, which.max)\r\n\r\npar(mfrow=c(3,3))\r\ni=0\r\n\r\n### check whethere there are changes on cluster assignments\r\nwhile( sum(cluster01!=cluster01.new) )\r\n{\r\n i=i+1\r\n if(i<=9)\r\n{\r\n plot(mydata[,3],mydata[,4], type=\"n\",xlab=\"Petal L\",ylab=\"Petal W\",\r\n main=paste(\"Iteration=\", i))\r\n for(k in 1:K)\r\n  points(mydata[cluster123==k,3], mydata[cluster123==k,4],col=k)\r\n}\r\n\r\n ###### update the centroids ###########\r\n centroids=as.matrix(cluster01.new)%*%as.matrix(mydata)/rowSums(cluster01.new)\r\n ##to avoid switch label\r\n centroids=centroids[order(centroids[,1]),]\r\n cluster01=cluster01.new\r\n\r\n for(k in 1:K)\r\n  distance[,k]=apply(mydata, 1, distxy, centroids[k,])\r\n\r\n ###### assign each observation to its nearest centroid ##########\r\n cluster123=apply(distance, 1, which.min)\r\n #convert the assignment to dummy variables\r\n cluster01.new=matrix(0, K, n)\r\n for(k in 1:K)\r\n  cluster01.new[k,cluster123==k]=1\r\n\r\n print(i)\r\n print(table(cluster123))\r\n}\r\n\r\n\r\n############# slides 23, 24\r\n#### cluster analysis using the R function \"hclust\"\r\nobj=hclust(dist(iris[,-5]))\r\nplot(obj, labels=c(rep(1:3,each=50)))\r\n\r\nobj=hclust(dist(iris[,-5]), method=\"centroid\")\r\nplot(obj, labels=c(rep(1:3,each=50)))\r\n\r\n\r\n", "encoding": "ascii"}