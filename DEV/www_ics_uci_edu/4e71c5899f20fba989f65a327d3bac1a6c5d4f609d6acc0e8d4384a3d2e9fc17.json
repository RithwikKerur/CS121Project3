{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/process/endeavors_abstract.html", "content": "<HTML>\n<!-- $Id: endeavors_abstract.html,v 1.1 1996/08/03 00:01:00 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"http://www.ics.uci.edu/Arcadia/Endeavors/docs/EndeavorsPaper.ps.Z\">\n\"<b>Endeavors: A Process System Integration Infrastructure</b>\"</A>,\nby Gregory Alan Bolcer and Richard N. Taylor <i>to appear</i> in\n<i> Proceedings of the Fourth International Confernce on the Software\nProcess,</i> Brighton, England, December 1996.\n\n<H2> Abstract </H2>\n\nAbstract -- As software projects evolve, possibly differing in size, \ncomplexity, scope, and purpose, the development processes that support \nthe project must evolve to reflect these changes. For a distributed \nproject, maintaining proper communications, coordinating \nbetween project stakeholders, and maintaining managerial control \nbecome increasingly important and, unfortunately, increasingly difficult. \nThe Endeavors system is an open, distributed process modeling and \nexecution infrastructure that addresses communication, coordination, \nand control issues. Complex processes may require (a) distribution of \npeople and processes, (b) event-based and intermediate-format integration \nof external tools, (c) a low entry barrier through ease-of-use and \nincremental adoption, (d) ability to customize and reuse objects, tools, \nand policies, and (e) dynamic change of runtime processes, objects, and \nbehaviors. Endeavors' solution architecture achieves these goals through \napplication of five key design strategies: (1) maintaining multiple \nobject model layers, (2) implementing the architecture as a set of \nhighly componentized, lightweight, transportable, concurrent elements, \n(3) providing customization capabilities for each layer of the object model, \n(4) using a reflexive object model to support dynamic change, and (5) allowing \ndynamic loading and changing of objects including loading of executable \nhandlers, new object types, and extensions. We discuss these goals and \ndesign strategies, describe the architecture, and describe the current \nstatus of the project and its relevance to its own development.\n\n<P>\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Mon Feb 27 11:35:22 1995\n</ADDRESS>\n</BODY></HTML>\n", "encoding": "ascii"}