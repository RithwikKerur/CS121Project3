{"url": "https://www.ics.uci.edu/~eppstein/ca/lifelike.html", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n    <title>Gliders and Wolfram's Classification</title>\n    <style type=\"text/css\">\n        body { \n            color: black;\n            margin: 15pt;\n            background: white url(b35s236c6g.gif);\n        }\n        span { \n            background-color: white;\n        }\n        ul li {\n\t    margin-top: 10pt;\n\t    }\n\ttable {\n\t    margin-left: auto;\n\t    margin-right: auto;\n\t    background: white;\n\t    border: 1px solid black;\n\t    padding: 5px;\n\t}\n\tdiv {\n\t    text-align: right;\n\t    font-size: small;\n\t}\n    </style>\n  </head>\n\n  <body>\n    <h1><span>Lifelike Rules and Pattern Notation</span></h1>\n\n    <p><span>Conway's Game of Life is defined as follows: each cell\n    of a two-dimensional grid is considered to be either \"live\" or\n    \"dead\". At each step of the automaton's evolution, each cell\n    counts the number of its live neighbors in the eight\n    surrounding cells of the grid. A dead cell becomes live (is\n    \"born\") if it has exactly three live neighbors, and a live cell\n    stays live (\"survives\") if it has either two or three live\n    neighbors; in all other cases the cell becomes dead. This\n    process is performed simultaneously for all cells of the grid,\n    forming a single \"generation\" of a life pattern. Over the\n    course of many generations, a pattern may die out completely\n    (in which case it stays dead permanently), it may repeat its\n    initial configuration after some number of generations (in\n    which case it continues to repeat with the same period\n    indefinitely), or exhibit more complex behaviors.</span></p>\n\n    <p><span>We are interested in understanding rules that, like\n    Life, have a transition rule defined by counting the live cells\n    among the eight cells surrounding each cell. Sometimes these\n    are called \"semitotalistic\" rules. We define a rule by a string\n    <tt>Bxx/Syy</tt> where the xx's and yy's are replaced by digits\n    indicating the numbers of live neighbors leading to a birth or\n    survival respectively. In this system, Life is denoted <tt>\n    B3/S23</tt>.</span></p>\n\n    <p><span>Each of the patterns depicted on this site is linked\n    to a file in \"RLE\" (run-length-encoded) format, suitable for\n    input to many cellular automaton simulation packages. The\n    format begins with a line describing the x and y dimensions of\n    the pattern, and the rule in which the pattern should be run.\n    The next lines contain sequences of the characters <tt>b</tt>,\n    <tt>o</tt>, and <tt>$</tt>. The <tt>b</tt> character stands for\n    a dead cell, and the <tt>o</tt> character stands for a live\n    one. The <tt>$</tt> character means to end one line of the\n    pattern and start a new line. Any of these characters can be\n    preceded by a number; this tells the simulator to act as if it\n    had seen that many copies of the character, so e.g. <tt>3o</tt>\n    makes a row of three live cells while <tt>3$</tt> starts a new\n    line after leaving two blank (completely dead) lines. The file\n    is ended by an exclamation mark character. For instance, the <a\n    href=\"replicators/\">replicator</a> in the <a href= \n    \"replicators/b36s23.html\">HighLife rule (B36/S23)</a> looks\n    like this:</span></p>\n\n    <div style=\"text-align:center;\">\n      <img src=\"replicators/b36s23.gif\" width=\"23\" height=\"23\" alt=\n      \"HighLife 2c/12 replicator\" />\n    </div>\n\n    <p><span>This turns into the following RLE-encoded\n    file:</span></p>\n\n<pre style=\"margin-left:1cm;\"><span>\nx = 5, y = 5, rule = B36/S23\nbb3o$bobbo$o3bo$obbo$3o!\n</span>\n</pre>\n\n    <hr />\n\n    <div>\n      <small><a href=\"/~eppstein/ca/\">Cellular automata</a> , <a\n      href=\"/~eppstein/\">D. Eppstein</a></small>\n    </div>\n  </body>\n</html>\n\n", "encoding": "ascii"}