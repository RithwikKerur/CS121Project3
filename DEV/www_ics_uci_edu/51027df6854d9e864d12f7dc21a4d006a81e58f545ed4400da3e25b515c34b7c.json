{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/api/dev.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n  <!-- Page title -->\n  <title>VLFeat - Documentation > C API</title>\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"doxygen.css\"></link>\n  <!-- Scripts-->\n  <script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li><a href=\"../overview/tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"../overview/frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"../overview/covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"../overview/hog.html\">HOG features</a>\n</li>\n<li><a href=\"../overview/sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"../overview/dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"../overview/liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"../overview/mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"../overview/imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"../overview/encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"../overview/gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"../overview/kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"../overview/aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"../overview/quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"../overview/slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"../overview/svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"../overview/kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"../overview/plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"../overview/utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"../overview/ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"../overview/hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li class='active'><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n</li>\n</ul></li>\n</ul>\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"../doc.html\">Documentation</a></span><span class='separator'>></span><span class='page'><a href=\"index.html\">C API</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n      <!-- <pagestyle href=\"%pathto:root;api/tabs.css\"/> -->\n      <div class=\"doxygen\">\n<div id=\"top\">\n<div id=\"top\">\n<!-- Generated by Doxygen 1.8.7 -->\n  <div id=\"navrow1\" class=\"tabs\">\n    <ul class=\"tablist\">\n      <li><a href=\"index.html\"><span>Main&#160;Page</span></a></li>\n      <li class=\"current\"><a href=\"pages.html\"><span>Related&#160;Pages</span></a></li>\n      <li><a href=\"annotated.html\"><span>Data&#160;Structures</span></a></li>\n      <li><a href=\"files.html\"><span>Files</span></a></li>\n    </ul>\n  </div>\n<div id=\"nav-path\" class=\"navpath\">\n  <ul>\n<li class=\"navelem\"><a class=\"el\" href=\"index.html\">Vision Lab Features Library (VLFeat)</a></li>  </ul>\n</div>\n</div><!-- top -->\n<div class=\"header\">\n  <div class=\"headertitle\">\n<div class=\"title\">Developing the library </div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n<div class=\"toc\"><h3>Table of Contents</h3>\n<ul><li class=\"level1\"><a href=\"#dev-copy\">Copyright</a></li>\n<li class=\"level1\"><a href=\"#dev-style\">Coding style</a><ul><li class=\"level2\"><a href=\"#dev-style-matlab\">MATLAB coding style</a></li>\n</ul>\n</li>\n<li class=\"level1\"><a href=\"#dev-doc\">Documenting the code</a><ul><li class=\"level2\"><a href=\"#devl-doc-modules\">Documenting the library modules</a></li>\n<li class=\"level2\"><a href=\"#devl-doc-functions\">Documenting functions</a></li>\n<li class=\"level2\"><a href=\"#devl-doc-structures\">Documenting structures</a></li>\n<li class=\"level2\"><a href=\"#devl-doc-bib\">Bibliographic references</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"textblock\"><p>This page contains information useful to the developer of VLFeat.</p>\n<h1><a class=\"anchor\" id=\"dev-copy\"></a>\nCopyright</h1>\n<p>A short copyright notice is added at the beginning of each file. For example:</p>\n<pre>\nCopyright (C) 2013 Milan Sulc\nCopyright (C) 2012 Daniele Perrone.\nCopyright (C) 2011-13 Andrea Vedaldi.\nAll rights reserved.</pre><pre>This file is part of the VLFeat library and is made available under\nthe terms of the BSD license (see the COPYING file).\n</pre><p>The copyright of each file is assigned to the authors of the file. Every author making a substantial contribution to a file should note its copyright by adding a line to the copyright list with the year of the modification. Year ranges are acceptable. Lines are never deleted, only appended, or potentially modified to list more years.</p>\n<h1><a class=\"anchor\" id=\"dev-style\"></a>\nCoding style</h1>\n<ul>\n<li>\n<p class=\"startli\"><b>Look at existing code before you start.</b> The general rule is: try to match the style of the existing code as much as possible.</p>\n<p class=\"endli\"></p>\n</li>\n<li>\n<p class=\"startli\"><b>No white spaces at the end of lines.</b> White spaces introduce invisible changes in the code that are however picked up by control version systems such as Git.</p>\n<p class=\"endli\"></p>\n</li>\n<li>\n<p class=\"startli\"><b>Descriptive variable names.</b> Most variable names start with a lower case letter and are capitalized, e.g., <code>numElements</code>. Only the following abbreviations are considered acceptable: <code>num</code>. The <code>dimension</code> of a vector is the number of elements it contains (for other objects that could be a <code>size</code>, a <code>length</code>, or a <code>numElements</code>). For multi-dimensional arrays, <code>dimensions</code> could indicate the array with each of the <code>numDimensions</code> dimensions.</p>\n<p class=\"endli\"></p>\n</li>\n<li>\n<p class=\"startli\"><b>Short variable names.</b> For indexes in short for loops it is fine to use short index names such as <code>i</code>, <code>j</code>, and <code>k</code>. For example: </p><pre>\nfor (i = 0 ; i &lt; numEntries ; ++i) values[i] ++ ;\n</pre><p> is considered acceptable.</p>\n<p class=\"endli\"></p>\n</li>\n<li>\n<b>Function arguments.</b> VLFeat functions that operate on an object (member functions) should be passed the object address as first argument; this argument should be called <code>self</code>. For example: <pre>\n   void vl_object_do_something(VlObject *self) ;\n</pre> Multi-dimensional arrays should be specified first by their address, and then by their dimensions. For example <pre>\n  void vl_use_array (float * array, vl_size numColumns, vl_size numRows) ; // good\n  void vl_use_array (vl_size numColumns, vl_size numRows, float * array) ; // bad\n</pre> Arguments that are used as outputs should be specified first (closer to the left-hand side of an expression). For example <pre>\n void vl_sum_numbers (float * output, float input1, float input2) ; // good\n void vl_sum_numbers (float input1, float input2, float * output) ; // bad\n</pre> These rules can be combined. For example <pre>\n void vl_object_sum_to_array (VlObject * self, float * outArray,\n        vl_size numColumns, vl_size numRows, float * inArray) ; // good\n</pre> Note that in this case no dimension for <code>inArray</code> is specified as it is assumed that <code>numColumns</code> and <code>numRows</code> are the dimensions of both arrays.  </li>\n</ul>\n<h2><a class=\"anchor\" id=\"dev-style-matlab\"></a>\nMATLAB coding style</h2>\n<ul>\n<li>\n<b>Help messages.</b> Each <code></code>.m file should include a standard help comment block (accessible from MATLAB <code>help()</code> command). The first line of the block has a space, the name of the function, 4 spaces, and a brief command description. The body of the help message is indented with 4 spaces. For example <div class=\"fragment\"><div class=\"line\">% VL_FUNCTION    An example <span class=\"keyword\">function</span></div>\n<div class=\"line\">%    VL_FUNCTION() does nothing.</div>\n</div><!-- fragment --> The content HELP message itself should follow MATLAB default style. For example, rather than giving a list of formal input and output arguments as often done, one simply shows how to use the function, explaining along the way the different ways the function can be called and the format of the parameters.  </li>\n</ul>\n<h1><a class=\"anchor\" id=\"dev-doc\"></a>\nDocumenting the code</h1>\n<p>The VLFeat C library code contains its own in documentation <a href=\"http://www.stack.nl/~dimitri/doxygen/\">Doxygen</a> format. The documentation consists in generic pages, such as the <a class=\"el\" href=\"index.html\">index</a> and the page you are reading, and documentations for each library module, usually corresponding to a certain header file.</p>\n<ul>\n<li><b>Inline comments.</b> Inline Doxygen comments are discouraged except in the documentation of data members of structures. They start with a capital letter and end with a period. For example: <div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">struct </span>VlExampleStructure {</div>\n<div class=\"line\">  <span class=\"keywordtype\">int</span> aMember ; /\\*\\*&lt; A useful data member.</div>\n<div class=\"line\">}</div>\n</div><!-- fragment --></li>\n<li><b>Brief comments.</b> Brief Doxygen comments starts by a capital and end with a period. The documentation of all functions start with a brief comment.</li>\n</ul>\n<h2><a class=\"anchor\" id=\"devl-doc-modules\"></a>\nDocumenting the library modules</h2>\n<p>A library module groups a number of data types and functions that implement a certain functionality of VLFeat. The documentation of a library module is generally organized as follows:</p>\n<ol type=\"1\">\n<li>A page introducing the module and including a getting started section (3.g. <a class=\"el\" href=\"svm.html#svm-starting\">Getting started</a>) containing a short tutorial to quickly familiarize the user with the module (e.g. <a class=\"el\" href=\"svm.html\">Support Vector Machines (SVM)</a>).</li>\n<li>One or more pages of detailed technical background discussing the algorithms implemented. These sections are used not just as part of the C API, but also as documentation for other APIs such as MATLAB (e.g. <a class=\"el\" href=\"svm-fundamentals.html\">SVM fundamentals</a>).</li>\n<li>One or more pages with the structure and function documentation (e.g. <a class=\"el\" href=\"svm_8h.html\">svm.h</a>).</li>\n</ol>\n<p>More in detail, consider a module called <em>Example Module</em>. Then one would typically have:</p>\n<ul>\n<li>\n<p class=\"startli\">A header or declaration file <code>example-module.h</code>. Such a file has an heading of the type:</p>\n<pre class=\"fragment\"></pre><p>This comment block contains a file directive, causing the file to be included in the documentation, a brief directive, specifying a short description of what the file is, and a list of authors. A (non-Doxygen) comment block with a short the copyright notice follows. The brief directive should include a <code>@ref</code> directive to point to the main documentation page describing the module, if there is one. </p>\n<p class=\"endli\"></p>\n</li>\n<li>\n<p class=\"startli\">An implementation or definition file <code>example-module.c</code>. This file has an heading of the type:</p>\n<pre class=\"fragment\"></pre><p class=\"endli\">This is similar to the declaration file, except for the content of the brief comment.  </p>\n</li>\n</ul>\n<h2><a class=\"anchor\" id=\"devl-doc-functions\"></a>\nDocumenting functions</h2>\n<h2><a class=\"anchor\" id=\"devl-doc-structures\"></a>\nDocumenting structures</h2>\n<h2><a class=\"anchor\" id=\"devl-doc-structures\"></a>\nDocumenting structures</h2>\n<p>As seen in <a class=\"el\" href=\"objects.html\">Objects</a>, VLFeat treats certain structures with an object-like semantics. Usually, a module defines exactly one such objects. In this case, the object member functions should be grouped (by using Doxygen grouping functionality) as</p>\n<ul>\n<li><b>Construct and destroy</b> for the <code>vl_object_new</code>, <code>vl_object_delete</code> and similar member functions.</li>\n<li><b>Set parameters</b> for setter functions.</li>\n<li><b>Retrieve parameters and data</b> for getter functions.</li>\n<li><b>Process data</b> for functions processing data.</li>\n</ul>\n<h2><a class=\"anchor\" id=\"devl-doc-bib\"></a>\nBibliographic references</h2>\n<p>Since version 0.9.14, the VLFeat C library documentation makes use of a proper bibliographic reference in BibTeX format (see the file <code>docsrc/vlfeat.bib</code>). Doxygen uses this file when it sees instances of the <code>@cite xyz </code> command. Here <code>xyz</code> is a BibTeX key. For example, <code>vlfeat.bib</code> file contains the entry:</p>\n<pre>\n@inproceedings{martin97the-det-curve,\n  Author = {A. Martin and G. Doddington and T. Kamm and M. Ordowski and M. Przybocki},\n  Booktitle = {Proc. Conf. on Speech Communication and Technology},\n  Title = {The {DET} curve in assessment of detection task performance},\n  Year = {1997}}\n</pre><p>For example, the Doxygen directive <code>@cite martin97the-det-curve </code> generates the output <a class=\"el\" href=\"citelist.html#CITEREF_martin97the-det-curve\">[18]</a> , which is a link to the corresponding entry in the bibliography. </p>\n</div></div><!-- contents -->\n        <!-- Doc Here -->\n      </div>\n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n", "encoding": "ascii"}