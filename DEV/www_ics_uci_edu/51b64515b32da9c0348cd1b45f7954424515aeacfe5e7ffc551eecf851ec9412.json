{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node150.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Introduction</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Introduction\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html4048 HREF=\"node151.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4046 HREF=\"node149.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4040 HREF=\"node149.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4050 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4049 HREF=\"node151.html\"> Using the macros</A>\r\n<B>Up:</B> <A NAME=tex2html4047 HREF=\"node149.html\">  ECLiPSe\r\n  Macros</A>\r\n<B> Previous:</B> <A NAME=tex2html4041 HREF=\"node149.html\">  ECLiPSe\r\n  Macros</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION001210000000000000000> Introduction</A></H1>\r\n<P>\r\n<A NAME=2335>&#160;</A>\r\n<A NAME=2336>&#160;</A>\r\n<A NAME=tex2html509 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  provides a very general mechanism to perform macro expansion\r\nof Prolog terms.\r\nMacro expansion can be performed in two situations:\r\n<DL ><DT><b> read macros</b>\r\n<DD> <BR>\r\n<P>\r\n<A NAME=2339>&#160;</A>\r\n<A NAME=2340>&#160;</A>\r\nthey are applied just after a Prolog term has been read by the <A NAME=tex2html512 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n<P>\r\nparser, i.e. during compilation or in a read predicate\r\n<DT><b> write macros</b>\r\n<DD> <BR>\r\n<P>\r\n<A NAME=2342>&#160;</A>\r\n<A NAME=2343>&#160;</A>\r\nthey are applied just before a Prolog term is printed by one of the\r\noutput predicates\r\n<P>\r\n </DL>\r\n<P>\r\nMacros are attached to classes of terms specified by their functors\r\nor by their type.\r\nMacros obey the module system's visibility rules.\r\nThey may be either locally (default) or globally visible.\r\nThe macro expansion is performed by a user-defined Prolog predicate.\r\n<P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}