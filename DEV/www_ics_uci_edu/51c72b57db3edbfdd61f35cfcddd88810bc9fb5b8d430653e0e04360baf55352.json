{"url": "https://www.ics.uci.edu/~amrm/slides/compiler/compiler/sld013.htm", "content": "\n<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->\n\n<HTML>\n<HEAD>\n\n<meta name=\"GENERATOR\" content=\"Microsoft Internet Assistant for Microsoft PowerPoint 97\">\n <TITLE>Memory Footprint Analysis</TITLE> \n</HEAD>\n\n<BODY     >\n\n<CENTER>\n<TABLE WIDTH=100%> \n     <TR> <TD WIDTH=100% ALIGN=CENTER>\n         <IMG SRC=\"img013.gif\" usemap=\"#Objmap\" WIDTH=640 HEIGHT=480 BORDER=0>\n     </TD> </TR>\n     <TR> <TD WIDTH=100% ALIGN=CENTER>\n         <A HREF=\"sld001.htm\"><IMG SRC=\"first.gif\" BORDER=0 ALT=\"First\"></A>\n         <A HREF=\"sld012.htm\"><IMG SRC=\"prev.gif\" BORDER=0 ALT=\"Previous\"></A>\n         <A HREF=\"sld014.htm\"><IMG SRC=\"next.gif\" BORDER=0 ALT=\"Next\"></A>\n         <A HREF=\"sld024.htm\"><IMG SRC=\"last.gif\" BORDER=0 ALT=\"Last\"></A>\n         <IMG SRC=\"space.gif\" BORDER=0>\n         <A HREF=\"index.htm\"><IMG SRC=\"info.gif\" BORDER=0 ALT=\"Index\"></A>\n         <A HREF=\"http://www.ics.uci.edu/~nicolau\"><IMG SRC=\"home.gif\" BORDER=0 ALT=\"Home\"></A>\n         <A HREF=\"tsld013.htm\"><IMG SRC=\"text.gif\" BORDER=0 ALT=\"Text\"></A>\n     </TD> </TR>\n</TABLE>\n<P>Slide 13 of 24</P>\n</CENTER>\n<!-- <UL>\n<H2>Memory Footprint Analysis</H2>\n</UL></P>\n<P><UL>\n<LI><H2>\n</H2>\n</UL><UL>\n<LI><H2>Based on a combination of analysis and profiling information, the compiler can figure out that in the previous example: \n</H2>\n<UL>\n<LI>Data structure is a linked list. \n<LI>It is going to be accessed/defined sequentially.\n<LI>It contains no cycles. \n</UL></UL><UL>\n<LI><H2>Using this information the compiler would generate reconfigurability instructions to\n</H2>\n<UL>\n<LI>Allocate the list elements in contiguous memory locations, aligned modulo the cache size.\n<LI>Configure the cache so that line size is maximized, direct mapping is used, and  cache size is maximized (or transformed into compiler-controlled on-chip memory w/o a replacement policy; in this case, compiler would generate explicit code for loading/replacing data).</UL></UL></P>\n<P>  -->\n</Body>\n</HTML>\n", "encoding": "ascii"}