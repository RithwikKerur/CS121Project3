{"url": "https://www.ics.uci.edu/~ejw/authoring/acl/draft-ietf-webdav-acl-reqts-00.txt", "content": "          INTERNET-DRAFT                                         Lisa Lippert\n          Expires: January 1999                         Microsoft Corporation\n                                                                  August 1998\n\n                             WebDAV Access Control Goals\n                        draft-ietf-webdav-acl-reqts-01.txt\n\n       1.   Status of this Memo\n\n          This document is an Internet draft. Internet drafts are working\n          documents of the Internet Engineering Task Force (IETF), its\n          areas and its working groups. Note that other groups may also\n          distribute working information as Internet drafts.\n\n          Internet Drafts are draft documents valid for a maximum of six\n          months and can be updated, replaced or obsoleted by other\n          documents at any time. It is inappropriate to use Internet drafts\n          as reference material or to cite them as other than as \"work in\n          progress\".\n\n          To view the entire list of current Internet-Drafts, please check\n          the \"1id-abstracts.txt\" listing contained in the Internet-Drafts\n          Shadow Directories on ftp.is.co.za (Africa), ftp.nordu.net\n          (Northern Europe), ftp.nis.garr.it (Southern Europe), munnari.oz.au\n          (Pacific Rim), ftp.ietf.org (US East Coast), or ftp.isi.edu\n          (US West Coast).\n\n          Distribution of this document is unlimited. Please send comments\n          to the WWW Distributed Authoring and Versioning (WebDAV) mailing\n          list, <w3c-dist-auth@w3.org>, which may be joined by sending a\n          message with subject \"subscribe\" to <w3c-dist-auth-\n          request@w3.org>. Discussions are archived at URL\n          http://www.w3.org/pub/WWW/Archives/Public/w3c-dist-auth/.\n\n       2.   Abstract\n\n          This document defines goals for  an access control system for use\n          with the WebDAV protocol.\n\n          Access control systems grant or deny rights (such as \"read\" or\n          \"write\") to specified principals for individual resources.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          Lippert                                                    [Page 1]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n       3.   Contents\n\n          1.  Status of this Memo........................................1\n          2.  Abstract...................................................1\n          3.  Contents...................................................2\n          4.  Introduction...............................................3\n             4.1.  Problem to be solved..................................3\n          5.  Definitions................................................3\n             5.1.  Access Control List and Entries.......................3\n             5.2.  Principal.............................................3\n             5.3.  Scenarios.............................................3\n                5.3.1. Different authors on each document................3\n                5.3.2. Denying to member of a group......................3\n                5.3.3. Delegation........................................4\n             5.4.  Interoperability......................................4\n          6.  Goals......................................................4\n             6.1.  Functionality.........................................4\n             6.2.  Specifying principals.................................4\n             6.3.  Rights................................................5\n             6.4.  Granularity of Objects................................5\n             6.5.  Evaluating rights.....................................5\n             6.6.  Discovery.............................................5\n             6.7.  Security..............................................5\n          7.  Recommendations............................................5\n             7.1.  Functionality goals...................................5\n             7.2.  Achieving predictability..............................6\n                7.2.1. Evaluation Rules..................................6\n                7.2.2. Inheritance.......................................6\n                7.2.3. Ownership.........................................6\n          8.  Areas Out of Scope.........................................6\n             8.1.  Roles.................................................6\n          9.  SECURITY CONSIDERATIONS....................................7\n          10. REFERENCES.................................................8\n          11. Authors' Addresses.........................................8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          Lippert                                                    [Page 2]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n       4.   Introduction\n\n       4.1. Problem to be solved\n\n          In distributed authoring scenarios resources may be accessible by\n          multiple principals. To control how these principals can access\n          and alter a resource a system of access controls is needed. These\n          controls define what actions a particular principals is allowed\n          to exercise on a particular resource.\n\n          There does not currently exist a mechanism for DAV to be used to\n          grant and deny such access rights.  This document outlines the\n          goals for such a method.\n\n       5.   Definitions\n\n          Most terminology in this document is used in the same way as in\n          the WebDAV specification [1].\n\n       5.1. Access Control List and Entries\n\n          An Access Control List (ACL) usually refers to a collection of\n          Access Control Entries (ACE).  Each entry applies to one or more\n          principals and (usually) one object and/or its children.  Each\n          entry grants or denies one or more rights to the specified\n          principals on that object.  While this is a common model, it is\n          applied differently in various existing stores (see 5.4).\n\n          It is not required that the DAV access control draft use the\n          model of ACL as defined by existing stores.  This draft refers to\n          ACLs and ACEs because many systems use them, and in order to\n          provide examples for some recommendations and goals.\n\n       5.2. Principal\n\n          A principal is a user or group of users to whom specific access\n          rights can be granted or denied.\n\n       5.3. Scenarios\n\n          These are scenarios that SHOULD be accommodated by an access\n          control mechanism for DAV.  These are all possible multi-author\n          and distributed-author scenarios.  These scenarios were used to\n          build the goals list.\n\n       5.3.1.    Different authors on each document\n\n          Jim owns a directory of documents which must be edited by a\n          variety of different people, in fact a different set of people\n          for each document.  He must be able to set access permissions\n          individually for each document, so that only the correct editors\n          have write access to each document.\n\n       5.3.2.    Denying to member of a group\n\n          Lippert                                                    [Page 3]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n          Lisa administers a bunch of files which can all be read by\n          members of a group.  However, one of them contains details about\n          a surprise party for Josh.  Lisa must be able to set the\n          permissions on that document such that even though the group is\n          allowed access to the document, Josh cannot read the document.\n          This scenario is best served if new members can be added to the\n          group and be able to read the document automatically.\n\n       5.3.3.    Delegation\n\n          Jim wishes to delegate some administration of his directory to\n          Rohit.  First, Jim must be able to allow Rohit to read ACLs and\n          write resources without being able to write ACLs on those\n          resources.  Second, when Rohit is more trusted, Jim must be able\n          to allow Rohit to edit the ACLs on the directory and on all\n          resources in the directory, without giving Rohit the ability to\n          take over entirely from Jim by removing all permissions from Jim.\n\n       5.4. Interoperability\n\n          DAV implementations will in some cases be built on top of\n          existing access control implementations, e.g. file systems. Many\n          access permission features can be built on top of the underlying\n          store, however DAV access permissions will be more secure if the\n          store's access permission functionality is used.\n\n          Some common features of file systems with access control:\n\n           - Associate each combination of a resource, a principal and a\n          right with a \"yes/no\" decision whether the principal gets the\n          right on the resource\n           - Offer read, write and execute access to files\n           - Principals include concept of \"all users\"\n           - Some have more detailed rights such as \"set owner\", \"set ACL\",\n          \"synchronize\"\n           - May offer a different set of rights on directories (as opposed\n          to files)\n           - May allow access to be denied as well as granted\n           - Groups can be principals as well as users\n           - May have an \"owner\" for resources (the owner can have read or\n          write permission removed, but can never be denied permission to\n          take over the resource, set ACLs and restore permissions).\n           - Has rules for either avoiding conflicting access entries or\n          evaluating access entries in some consistent way to resolve\n          conflict\n           - May have inheritance rules\n\n       6.   Goals\n       6.1. Functionality\n\n          Principals with the appropriate rights must be able to read and\n          set access control information.\n\n       6.2. Specifying principals\n\n          Lippert                                                    [Page 4]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n          Principals MUST be uniquely identifiable.\n\n          It MUST be possible to use a the octet strings which are defined\n          by HTTP 1.1 [2] to identify a principal.\n\n          It must also be possible to specify special types of principals,\n          in particular all authorized principals, all anonymous\n          principals, and all principals.\n\n       6.3. Rights\n\n          It MUST be possible to grant or deny the following rights to any\n          principal\n\n           - to alter the body of a resource\n           - to alter the properties of a resource\n           - to delete a resource\n           - to add a child to a collection\n           - to read the ACL on a resource or collection\n           - to change the ACL on a resource or collection\n           - to delete a child from a collection\n           - to list the contents of a collection\n\n       6.4. Granularity of Objects\n\n          It must be possible to set ACLs individually on both collections\n          and resources.\n\n       6.5. Evaluating rights\n\n          The protocol draft must provide an algorithm by which conflicts\n          between rights, both granted and denied, for a particular\n          principal on a particular resource are unambiguously settled.\n\n       6.6. Discovery\n\n          The protocol draft must specify how clients discover what rights\n          are available on a resource as well as what rights have been\n          assigned to which principals for a particular resource. Discovery\n          is itself subject to access control.\n\n       6.7. Security\n\n          It should be acceptable to deny unprotected transactions.\n\n       7.   Recommendations\n\n       7.1. Functionality goals\n\n          It is recommended that users be able to add access control\n          information to an object without having to reset all access\n          control settings.  This is recommended because certain systems or\n          implementations may allow a user to add certain kinds of access\n          rights but not others (i.e. grant \"read\" but not grant \"delete\").\n\n          Lippert                                                    [Page 5]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n          Similarly, it should be possible for users to be able to remove,\n          delete or clear access rights without having to reset all rights.\n\n       7.2. Achieving predictability\n\n          Users SHOULD be able to predict what rights another user has,\n          based on looking at the DAV access rights granted and denied.\n          This may be impossible if another user has access to the resource\n          without using DAV, in which case other access control mechanisms\n          may apply.  The underlying implementation may have advanced\n          access control which is more restrictive than the DAV access\n          control.\n\n          There are several issues which much be dealt with carefully in\n          order to maintain as much predictability as possible.\n\n       7.2.1.    Evaluation Rules\n\n          Precise evaluation rules, with no ambiguity, are needed to\n          achieve predictability.\n\n       7.2.2.    Inheritance\n\n          If the underlying system uses inheritance, then users of the DAV\n          access control mechanism should still be able to predict its\n          behavior.  This could be achieved if the type of inheritance is\n          discoverable, or if the type(s) of inheritance is/are specified\n          by the DAV access control protocol draft.\n\n       7.2.3.    Ownership\n\n          Systems in which resources have owners also must be treated with\n          care.  Predictability can be achieved on systems with owners by\n          including owner functionality in DAV access control.  Systems\n          which do not support owner functionality could refuse requests to\n          change or set ownership.\n\n          There may be other ways to preserve predictability with\n          inheritance and ownership.\n\n       8.   Areas Out of Scope\n       8.1. Groups\n\n          Modeling groups is out of scope.  There is currently no concept\n          of groups to deal with in HTTP [2] or DAV.  The protocol draft\n          MAY support specifying (naming) groups which already exist on a\n          given underlying system.  It is recommended that the protocol\n          draft avoid issues such as the enumeration of group members or\n          administration of groups.\n\n       8.2. Roles\n\n          Those with experience building complex document management or\n          workflow systems on top of stores with simple ACLs know how hard\n\n          Lippert                                                    [Page 6]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n          it is to define roles for individuals. For example, the document\n          management system can map the role \"author\" to grant the rights\n          read/write/delete, but it is more difficult to go the other way.\n          Is an individual with read/write/delete permissions an author, an\n          editor, or somebody with no role and just a list of rights?  Many\n          systems employ the concept of assigning roles, more temporary\n          than identities, to more flexibly define access.\n\n          Roles are important. However, roles would appear to be difficult\n          and not necessarily related to ACLs.  The protocol draft MAY\n          define how roles may be assigned.\n\n       8.3. Certificate-based security\n\n          Certificates are out of scope for the DAV ACL protocol.\n\n       8.4. Time-based access control\n\n          Time-based access control is out of scope for the DAV ACL\n          protocol.\n\n       9.   SECURITY CONSIDERATIONS\n\n          This document is intended to specify how security can be enhanced\n          in WebDAV systems.  Many security considerations have already\n          been discussed in [1].\n\n          Authentication mechanisms, which will be used by DAV ACL\n          implementations to identify principals, are defined elsewhere for\n          HTTP 1.1 [2].  The same goals for security identified in [1],\n          such as not using the HTTP Basic authentication scheme, apply\n          even more strongly when access control functionality is\n          considered.\n\n          Inappropriate implementations or use of access control\n          functionality can make a system less secure in these ways:\n\n           - by potentially allowing non-administrators to change the\n          access settings for items on a server,\n\n           - by providing a way for access control information to be read\n          and set (may be snooped), and potentially snooped, hackers may\n          find it easier to discover names of accounts to use in attacks.\n\n          The \"Security\" goals section (6.7) includes some goals to\n          counterbalance these insecurities.  Also, the ability to specify\n          who has access rights to read and to change the rights themselves\n          (section 6.3) lessens the chance of hackers being able to learn\n          access information or set access levels.\n\n          Access control functionality also improves security, by giving\n          resource owners much more control and flexibility over who can\n          access their resources in what way.\n\n\n          Lippert                                                    [Page 7]\n          INTERNET-DRAFT           DAV ACLs Goals               August 1998\n\n       10.  REFERENCES\n\n          [1] Y. Goland, J. Whitehead, A. Faizi, S. Carter, D. Jensen,\n\n          \"Extensions for Distributed Authoring on the World Wide Web\",\n          <draft-ietf-webdav-protocol-08>, April 1998.\n\n          [2] R. Fielding, J. Gettys, J. Mogul, H. Frystyk, T. Berners-Lee,\n          \"Hypertext Transfer Protocol -- HTTP/1.1.\" RFC 2068. U.C. Irvine,\n          DEC, MIT/LCS. January, 1997.\n\n          H. Palmer, \"Requirements for Access Control within Distributed\n          Authoring and Versioning Environments on the World Wide Web\",\n          <draft-ietf-webdav-acreq-01.txt>, November 1997\n\n          P. J. Leach, Y. Y. Goland, \"WebDAV ACL Protocol\", <draft-ietf-\n          webdav-acl-00.txt> November 1997\n\n          M. Satyanarayanan, \"Integrating Security in a Large Distributed\n          System\", ACM transactions on computer systems 7(3), August 1989.\n\n       11.  Authors' Addresses\n\n          Lisa Lippert\n          Microsoft Corporation\n          One Microsoft Way\n          Redmond, WA 98052\n          EMail: lisadu@microsoft.com\n\n\n          Expires January 1999\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          Lippert                                                    [Page 8]   ", "encoding": "ascii"}