{"url": "https://www.ics.uci.edu/~thornton/ics23/LabManual/", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC\n \"-//W3C//DTD XHTML 1.1//EN\"\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\n<link rel=\"stylesheet\" href=\"../course.css\" type=\"text/css\" />\n\n<title>ICS 23 / CSE 23 Summer 2012, Lab Manual</title>\n</head>\n\n<body>\n\n<div class=\"navbar\">\n\n<p>\nICS 23 / CSE 23 Summer 2012 |\n<a href=\"../index.html\">News</a> |\n<a href=\"../CourseReference.html\">Course Reference</a> |\n<a href=\"../Schedule.html\">Schedule</a> |\n<a href=\"../LabManual\">Lab Manual</a> |\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\n</p>\n\n<hr />\n\n</div>\n\n<div class=\"header\">\n\n<p>ICS 23 / CSE 23 Summer 2012<br />\n   Lab Manual</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">The projects</p>\n\n<ul>\n  <li><a href=\"Dark\">Project #1: <i>Dark at the End of the Tunnel</i></a></li>\n  <li><a href=\"BlackAndWhite\">Project #2: <i>Black and White</i></a></li>\n  <li><a href=\"Probably\">Project #3: <i>Always Changing Probably</i></a></li>\n  <li><a href=\"RockAndRoll\">Project #4: <i>Rock and Roll Stops the Traffic</i></a></li>\n  <li><a href=\"LostForWords\">Project #5: <i>Lost for Words</i></a></li>\n</ul>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Introduction</p>\n\n<p>This quarter, you'll work on five programming projects, all of which will be written in Java, and all of which will be written individually.  Different projects will resonate differently with each of you, and different projects will require different amounts of work, but if you put the appropriate amount of effort into each of them, you'll find that your skill level wise rise steadily.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Evaluation of your work</p>\n\n<p>Each of your projects will be graded using a 4-point scale.  As you work on your projects, it is naturally your primary goal to write a program that works correctly.  However, writing a correctly-working program is not your sole objective.  The evaluation of each project will also consider issues of design and style, as well as correctness and completeness.</p>\n\n<p>An explanation of the 4-point scale follows:</p>\n\n<ul>\n  <li><b>0 points</b>.  You submitted no work.  Note that this includes submitting a program in which no attempt was made to solve the problem given (e.g., submitting only the code that was provided as a starting point, or code that has nothing to do with the problem given).</li>\n  <li><b>1 point</b>.  Some attempt was made to address the requirements, but the work is mostly incomplete and poorly done.  Programs that do not run will generally be awarded no more points than this.</li>\n  <li><b>2 points</b>.  The work you submitted is of reasonable quality and completeness, addressing at least the most important of the requirements.  The program runs.  Shows a basic understanding of the material, but not a complete one.  Presentation may be significantly lacking (e.g., a program that is hard to follow or has a cumbersome design).</li>\n  <li><b>3 points</b>.  Work that is of high quality and is complete and well-presented &mdash; with perhaps a few minor errors and/or design or style problems.  This is the score given for good, solid &mdash; but not extraordinary &mdash; work.</li>\n  <li><b>4 points</b>.  Work of very high quality that demonstrates a full and complete understanding of the material covered with a very polished presentation.  The program is complete (contains the features specified) and correct (functions as it should, with no errors).</li>\n</ul>\n\n<p>If we find it difficult to decide whether your work is best represented by one score or another &mdash; say, we're deliberating between 2 and 3 &mdash; we may award the half-point in between &mdash; say, 2.5.  You can expect that this will be relatively rare.</p>\n\n<p class=\"subtitle\">Late work</p>\n\n<p>Things happen and ten-week quarters can be unforgiving.  It's not unreasonable to expect that you may find it difficult to finish one of the projects on time, even if you're on top of things most of the time.  I get emails often from students, saying things like <i>If I just had one more day to work on this, I'd get it done!</i>  On the other hand, being consistently behind is a recipe for struggle in this course; we'll be moving quickly, and it will be progressively harder to catch up the farther behind you get.</p>\n\n<p>The best balance between these two realities is that everyone is allowed to have a tough time with a project once this quarter &mdash; maybe you underestimated the difficulty of an assignment, maybe you have three midterms and a paper due the same day, maybe you have a sudden outside commitment that can't be avoided.  For this reason, I'm offering the following late work policy:</p>\n\n<p><i>Each student is permitted to submit any one project up to 48 hours late, with no questions asked about why and no prior notification required.</i></p>\n\n<p>For the purposes of clarification, here are some additional details about how this policy works:</p>\n\n<ul>\n  <li>You are not required to notify us in advance &mdash; in fact, in all honesty, we'd prefer that you didn't.  (There are a lot of students in this course, so that would represent a lot of extra work for us.)  We'll be looking for submissions up to 48 hours beyond the deadline of each project.</li>\n  <li>There is a ten-minute grace period after the due date, allowing you time to get your files submitted to Checkmate.  If you submitted your files at 12:08am for an 11:59pm due date, you're fine.  Best not to play with fire, though, if you're already done before 11:59pm; at 12:11am, you'll have used up your one-time extension.  <i>No exceptions!</i></li>\n  <li>The first project that you submit late will fall under this policy; any subsequent project you submit late will not be accepted.  (In other words, you can't submit two projects late, then wait to see which one you get a better score on; we won't be grading the second one.)</li>\n  <li>If any one file is submitted beyond the ten-minute grace period, the entire project is considered late.</li>\n</ul>\n\n<p>We'll be tracking this throughout the quarter and, of course, will not grant the extension to anyone more than once.  But this should accommodate the unforeseen issues that might otherwise prevent you from finishing a project on time.</p>\n\n<p>Other than this, late work is not accepted in this course.</p>\n\n<p>Out-of-the-ordinary circumstances sometimes warrant exceptions to this policy; if you are faced with a problem that is preventing you from getting your work done on time, either on a single assignment or chronically, please contact me and we can talk about how best to approach the problem.</p>\n\n<p class=\"subtitle\">Paired or group work</p>\n\n<p>In this course, your programs are to be written individually.  No paired or group work is permitted.</p>\n\n<p class=\"subtitle\">Re-evaluation of your work</p>\n\n<p>The TA will be grading all of the projects this quarter.  If you believe you've been graded unfairly, you should first contact your TA to discuss the issue.  If, after that conversation, you're still feeling that your score does not fairly represent your work, contact me and I'll be glad to arbitrate.  Understand, however, that my overruling a TA's judgment is relatively rare.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Style standards</p>\n\n<p>In an organization (be it a corporate environment or even an open-source project), good software development is not just about writing a program that works.  It also requires writing a program that is easy to understand, both for the original author and others who may work on it in the future.  It is important that the program can be maintained easily as bugs are found and new user needs inevitably arise.  Style standards (including, but certainly not limited to, documentation requirements) help ensure that code written within an organization can be understood by everyone else within it.</p>\n\n<p>For this course, I've defined a set of <a href=\"StyleStandards.html\">style standards</a> that I'm requiring you to follow as you write your programs.  These standards will ensure that we'll have an easier time reading your programs as we help you with them and grade them.  More importantly, they also will help instill good \"code cleanliness\" habits that you will carry with you long after the course is over.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Submitting your projects</p>\n\n<p>When you complete each project, you must submit it to us electronically.  Follow <a href=\"SubmittingProjects.html\">this link</a> for a detailed description of how to submit your projects.  Understand that we will only accept projects submitted using the procedure described there; we <i>do not</i> accept printed copies of your projects, nor do we accept them via email <i>under any circumstances</i>.</p>\n\n<p>You are responsible for submitting the version of your project that you want graded.  We will grade the most recent submission that you made before the deadline.  Accidentally submitting the wrong version will not be considered grounds for a regrade.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Development environment</p>\n\n<p>We will be doing our work in Java, using <b>Java SE 7</b>.  You have your choice of development environment in this course, the only requirement being that you submit Java source code (.java files) to us that are compatible with Java 7.</p>\n\n<p>If you took the two previous courses in this sequence (ICS 21 / CSE 21 and ICS 22 / CSE 22) here at UCI, you'll likely have used an integrated development environment called Eclipse.  If you've taken your prior coursework elsewhere, you may have tried other options, such as NetBeans, BlueJ, or the command-line <b>javac</b> compiler and a text editor.  In general, I'd encourage you to consider Eclipse (or another integrated environment, such as NetBeans) for your work this quarter, as it offers features like an integrated debugger that you'll likely find helpful as you work on your programs.  But you're welcome to use whatever makes you feel comfortable.</p>\n\n<p class=\"subtitle\">Setting up your own machine</p>\n\n<p>While I encourage you to work on your projects in the labs as much as you can, so that help will be available for you when you need it, I also understand the reality that many of you will want to work from home, or on your own laptops wherever, at least part of the time.  You're certainly welcome to do it, though it should be noted that you're responsible for obtaining and installing the required software on your own machine(s).  Unfortunately, we realistically cannot support each of your home installations, so you're mostly on your own in getting these things set up and maintained.  However, I do have some information that will help.</p>\n\n<p><a href=\"SettingUpJava.html\">Here</a> is a document that describes how to set up Java on your Windows- or Mac OS X-based machine.  If you use Linux or Solaris, Java can be downloaded from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">Oracle's Java SE Downloads page</a>, the same way it can for Windows, and can also be downloaded using built-in \"package managers.\"  Installation procedures vary from one distribution of Linux to another, but ample documentation is available onine.</p>\n\n<p>If you've never used Eclipse and you're looking for a quick tutorial, have a look at <a href=\"http://www.ics.uci.edu/~thornton/ics22/LabManual/Lab0/\">Lab #0</a> from my most recent offering of ICS 22 / CSE 22.  In particular, I'd suggest using the workspace I provided in that course, as compiler settings and other configuration has been set up properly for introductory Java programming work.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Java Links</p>\n\n<p>Wondering how a particular class in the Java library works?  <a href=\"http://docs.oracle.com/javase/7/docs/api/index.html\">The Java 7 API documentation</a> is exactly what you need!  When I'm writing Java code, I spend a lot of time there.  After all, who can remember all the parameters to all of the methods in the Java library?  Besides, learning how to look things up in documentation is an invaluable skill, so it's best if you start developing that skill now.  Of course, if you're not sure where to look, we're happy to help!</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Academic honesty</p>\n\n<p class=\"subtitle\">The policy</p>\n\n<p>As ICS 23 or CSE 23 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at <a href=\"http://www.ics.uci.edu/ugrad/policies/#03\">this link</a>.</p>\n\n<p>All of your lab work is expected to be completed <i>solely by you</i>.  Worker in larger groups and/or sharing of code between students is not permitted.  Note that \"high-level discussion of course material for better understanding\" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)</p>\n\n<p>Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's work.</p>\n\n<p>Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends \"for reference.\"  Based on my experience, I can say that your \"friends\" may very well betray you and turn it in, anyway.</p>\n\n<p>Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.</p>\n\n<p>Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.</p>\n\n<p class=\"subtitle\">The lesson</p>\n\n<p>Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: <i>I fell behind and couldn't figure out how to catch up</i>.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you...</p>\n\n<p>If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us <i>sooner rather than later</i>.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.</p>\n\n</div>\n\n<div class=\"history\">\n\n<hr />\n\n<ul class=\"nomarker\">\n  <li>Many changes merged from a recent ICS 22 Lab Manual by Alex Thornton, Summer 2012.</li>\n  <li>A fair amount of rewriting by Alex Thornton, Fall 2007.</li>\n  <li>A few changes made by Alex Thornton, Summer 2006.</li>\n  <li>Minor bits and pieces updated by Alex Thornton, Winter 2005.</li>\n  <li>Some portions rewritten for a new version of ICS 22 by Alex Thornton, Fall 2004.</li>\n  <li>Project links brought to the top of the page for convenience, and two new sections (Java Links and Scheme Links) added by Alex Thornton, Winter 2003.</li>\n  <li>Typically minor modifications by Alex Thornton, Fall 2002.</li>\n  <li>A few relatively insignificant tweaks by Alex Thornton, Summer 2002.</li>\n  <li>Changes to the project grading criteria, other minor changes, and the removal of one project, by Alex Thornton, Spring 2002.</li>\n  <li>Originally written by Alex Thornton, Winter 2002, with portions cannibalized from ICS 22 Lab Manual, Fall 2001, by Alex Thornton.  The table of software qualities was adapted from a similar document written by David G. Kay.</li>\n</ul>\n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}