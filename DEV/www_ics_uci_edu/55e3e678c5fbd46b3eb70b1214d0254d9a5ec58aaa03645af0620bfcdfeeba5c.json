{"url": "https://www.ics.uci.edu/~jacobson/ics45J/LabManual/05-Assignment2.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n    \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<meta name=\"Generator\" content=\"Microsoft Word 97/98\">\n<title>Lab Assignment 2</title>\n<link rel=\"stylesheet\" href=\"../course.css\" type=\"text/css\">\n</head>\n\n<body>\n\n<div class=\"title\">\n<center>\n<h2>Animated Smileys</h2>\n<h3>Lab Assignment 2</h3>\n</center>\n</div>\n\n<p>This assignment gives you additional practice in basic Java programming, including use of <font class = \"codefacesmall\">if</font> statements and simple loops: You enhance the previous Smiley program to have a smiley group's faces bounce around a graphics window.</p>\n\n<div class=\"section\">\n<hr>\n<h3>Pair Programming</h3>\n</div>\n\n<p>You are required to pair program for this assignment.</h4></p>\n\n<div class=\"section\">\n<hr>\n<h3>Program Behavior and General Requirements</h3>\n</div>\n\n<p>When you run a (correctly) implemented version of this program, a graphics window appears, with from one to three smiley faces (a smiley group) in it; the exact shape and color of the faces are up to you, provided each face must be small enough that it can bounce around the graphics window and is recognizable as a smiley face.  Each smiley heads off towards a wall, an edge of the graphics window. When it hits the wall it should </p>\n\n<p><ol>\n<li>Change the color of its face to the color of the wall, and the wall color should become the color of the smiley face; in other words, the colors swap.</p>\n<li>Rebound from the wall, either directly (going back the way it came), or at 45 degrees up or down (if it hit the left or right wall) or 45 degrees left or right (if it hit the top or bottom wall); the direction is randomly chosen and each direction has an equal probability of occurring.</ol><p/>\n\n<p>Thie behavior repeats: Every time a smiley hits a wall, it and the wall swap colors and the smiley rebounds, heading to another wall. It continues for a given number of milliseconds, set as a constant in the program.</p>\n\n\n<p>Closing the window ends the program, (even if the window is closed while the smileys are still moving).</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Technical Details</h3>\n</div>\n\n<p>For this assignment, we've again helped you get started by providing some code and lots of comments and documentation. We provide several already-written classes, in compiled form, that provide functions you will likely need to use in your program. SmileyFace, SmileyFacePart, BouncingDisplay and WallName have public methods or constants you may need to employ, so we included text files, SmileyFace.txt, SmileyFacePart.txt, SmileyDisplay.txt, and WallName.txt that describe them. You may be surprised that SmileyFace and SmileyFacePart are not provided in source code form, since you wrote those classes in the last assignment. But that is exactly the point: having written and thoroughly tested them, we can now use their methods to make and manipulate smiley face characterisics without paying attention to the class' details; we don't need the source to use the class' capabilities.</p>\n\n<p>You are to complete the classes AnimatedSmiley, BouncingGroup and SmileyAnimation. Detailed comments in the code describe the public methods each class is to provide. You are free--and encouraged--to add whatever private methods, fields and contants are needed to \"help\" the public methods so their jobs, and to produce a well-designed, stylish program; comments in code give several suggestions on how you might go about this. (Once you have learned about interfaces, we'll be able to give to you, in a more formal and enforceable form, the information about public methods a class is required to provide.) </p>\n\n<p>All these files have been collected into an Eclipse project and zipped into an archive called \n<a href=\"//www.ics.uci.edu/~jacobson/ics45J/LabManual/LabFiles/Lab2.zip\"><font class = \"codefacesmall\"><font class = \"codefacesmall\">Lab2.zip</font></font></a>. Using the same procedure that you followed in the last assignment, import this project into your Eclipse workspace.</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Testing Tips</h3>\n</div>\n\n<p>It's typically fastest to implement and debug a program when it is done in stages; when something goes wrong, you know it was because of changes made at the current stage, thus reducing the amount of code you have to search to find the mistake. Testing in stages can take many forms. For this assignment, testing in stages boils down to adding and testing a method or two at a time, judiciously choosing them so that, as you add them, you are incrementally heading to a completed program.</p>\n\n<p>For example, here's an outline of one way to incrementally implement and test your program:</p>\n<ul>\n<li>Start by just constructing a smiley group of just one face, and painting the initial smiley face on the graphics display; don't animate it yet.\n<li>Move the smiley in one, chosen direction (not randomly) and make sure it goes that direction. Change the chosen direction a few times and re-run the program, making sure each time that the smiley face goes where it's supposed to go.\n<li>Using a chosen direction, make the smiley stop at a wall; repeat for all four walls.\n<li>When the smiley hits a wall, swap the color of the wall with the face's color; repeat for all four walls.\n<li>Have the smiley hit the wall \"dead on,\" swap colors and have the smiley return back the way it came; repeat for all four walls.\n<li>Have the smiley rebound from a wall at the three angles that can (later) randomly occur; repeat for each angle and each of the four walls.\n<li>Choose the \"bounce direction\" randomly, as described above.\n<li>Add another smiley to the group; make sure it, too, behaves properly and does not somehow cause the first smiley to behave incorrectly.\n<li>Add the third smiley to the group; test the program.\n<li>Test the whole program with various starting positions, sizes and colors for the smiley faces.\n</ul>\n\n<div class=\"section\">\n<hr>\n<h3>Deliverables</h3>\n</div>\n\n<p>Zip up your <i>project</i> folder into the file <font class = \"codefacesmall\">AnimatedSmileys.zip</font>, and turn it in via Checkmate.\n</p>\n\n\n<hr>\n<div class=\"history\">\nWritten by Norman Jacobson for ICS 21 Fall 2006, October 2006.\n<br>Minor edits by Norman Jacobson, December 2006 and September 2008.\n<br>Minor edits to reflect use of Eclipse, by Norman Jacobson September 2009. \n<br>&nbsp;&nbsp;Includes some text adapted from Alex Thornton's \"Lab 2\" for ICS 21 Summer 2009.\n<br>Minor edits by Norman Jacobson September 2010. \n<br>Minor revision to make clear that all directions of return after bouncing off a wall\n<br>&nbsp;&nbsp;have the same probability, by Norman Jacobson November 2010. \n<br>Revised for ICS 45J Fall 2012, by Norman Jacobson, August 2012.\n<br>Deliverables section added, by Norman Jacobson, October 2012.\n\n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}