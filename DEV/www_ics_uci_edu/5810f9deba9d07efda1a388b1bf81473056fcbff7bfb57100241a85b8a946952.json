{"url": "https://www.ics.uci.edu/~welling/NSFcareer/software/software_BMRF/doc/MRFLearning/runJTgrid.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n                \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<html>\n<head>\n  <title>Description of runJTgrid</title>\n  <meta name=\"keywords\" content=\"runJTgrid\">\n  <meta name=\"description\" content=\"Junction Tree Inference for a rectangular grid Boltzmann m/c\">\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n  <meta name=\"generator\" content=\"m2html &copy; 2003 Guillaume Flandin\">\n  <meta name=\"robots\" content=\"index, follow\">\n  <link type=\"text/css\" rel=\"stylesheet\" href=\"../m2html.css\">\n</head>\n<body>\n<a name=\"_top\"></a>\n<div><a href=\"../index.html\">Home</a> &gt;  <a href=\"index.html\">MRFLearning</a> &gt; runJTgrid.m</div>\n\n<!--<table width=\"100%\"><tr><td align=\"left\"><a href=\"../index.html\"><img alt=\"<\" border=\"0\" src=\"../left.png\">&nbsp;Master index</a></td>\n<td align=\"right\"><a href=\"index.html\">Index for MRFLearning&nbsp;<img alt=\">\" border=\"0\" src=\"../right.png\"></a></td></tr></table>-->\n\n<h1>runJTgrid\n</h1>\n\n<h2><a name=\"_name\"></a>PURPOSE <a href=\"#_top\"><img alt=\"^\" border=\"0\" src=\"../up.png\"></a></h2>\n<div class=\"box\"><strong>Junction Tree Inference for a rectangular grid Boltzmann m/c</strong></div>\n\n<h2><a name=\"_synopsis\"></a>SYNOPSIS <a href=\"#_top\"><img alt=\"^\" border=\"0\" src=\"../up.png\"></a></h2>\n<div class=\"box\"><strong>function sNodes = runJTgrid( model ) </strong></div>\n\n<h2><a name=\"_description\"></a>DESCRIPTION <a href=\"#_top\"><img alt=\"^\" border=\"0\" src=\"../up.png\"></a></h2>\n<div class=\"fragment\"><pre class=\"comment\"> Junction Tree Inference for a rectangular grid Boltzmann m/c\n\n Function that take a rectangular grid Boltzmann m/c (with 0/1 outputs) and \n runs a node clustering version of the general Junction Tree algorithm. \n Returns the node clusters and their final potentials (the marginals).\n\n Inputs:\n         model: struct with fields\n                numRows: # rows, R, in the grid\n                numCols: # columns, C, in the grid\n                alpha  : (R X C) matrix of node biases\n                wHor   : (R X C-1) matrix of horizontal edge weights \n                wVer   : (R-1 X C) matrix of vertical edge weights \n\n Returns:\n         sNodes: struct with fields\n                 nodes: matrix where row i gives the nodes belonging to supernode i. \n                        Size is ( number of supernodes X (R+1) )\n                 pot  : matrix where row i gives the marginal of supernode i.  \n                        Size is ( number of supernodes X (2^(R+1))</pre></div>\n\n<!-- crossreference -->\n<h2><a name=\"_cross\"></a>CROSS-REFERENCE INFORMATION <a href=\"#_top\"><img alt=\"^\" border=\"0\" src=\"../up.png\"></a></h2>\nThis function calls:\n<ul style=\"list-style-image:url(../matlabicon.gif)\">\n</ul>\nThis function is called by:\n<ul style=\"list-style-image:url(../matlabicon.gif)\">\n<li><a href=\"JTsampleGrid.html\" class=\"code\" title=\"function samples = JTsampleGrid(model,numSamples,rep01,varargin)\">JTsampleGrid</a>\tExact sampling for rectangular grid boltzmann m/c's using junction tree.</li><li><a href=\"MLgrid.html\" class=\"code\" title=\"function [model] = MLgrid(data,R,C)\">MLgrid</a>\tEstimate the ML parameters for a rectangular grid boltzmann m/c,</li></ul>\n<!-- crossreference -->\n\n\n\n<hr><address>Generated on Wed 28-Sep-2005 04:10:02 by <strong><a href=\"http://www.artefact.tk/software/matlab/m2html/\">m2html</a></strong> &copy; 2003</address>\n</body>\n</html>", "encoding": "ascii"}