{"url": "https://www.ics.uci.edu/~eppstein/pubs/1996.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\n1996\n</h2>\nNote that a paper may appear in listings for multiple years\ndue to multiple publication (of tech. report, conference, and journal versions).\n<p>\n<ul>\n<li><b>Separator based sparsification I:\nplanarity testing and minimum spanning trees</b>.<br>\nD. Eppstein,\n<a href=\"//www.scs.gatech.edu/people/zvi-galil\">Z. Galil</a>, \n<a href=\"//www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and T. Spencer.<br>\n<a href=\"//doi.org/10.1006/jcss.1996.0002\">\n<i>J. Comp. Sys. Sci.</i> 52: 3&ndash;27, 1996\n(special issue for 25th STOC)</a>.\n<p>\nFirst half of journal version of\n<a href=\"p-egis.html\">Separator based sparsification for dynamic planar graph algorithms</a>.\n<p>\n(<a href=\"//fano.ics.uci.edu/cites/Document/Separator-based-sparsification-I-planarity-testing-and-minimum-spanning-trees.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=227486\">ACM DL</a>)\n<p>\n<li><b>Separator based sparsification II: edge and vertex connectivity</b>.<br>\nD. Eppstein,\n<a href=\"//www.scs.gatech.edu/people/zvi-galil\">Z. Galil</a>, \n<a href=\"//www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and T. Spencer.<br>\nTech. Rep. CS96-13, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"//doi.org/10.1137/S0097539794269072\"><i>SIAM\nJ. Computing</i> 28 (1): 341&ndash;381, 1999</a>.\n<p>\nSecond half of journal version of\n<a href=\"p-egis.html\">Separator based sparsification for dynamic planar graph algorithms</a>.\n<p>\n(<a href=\"//fano.ics.uci.edu/cites/Document/Separator-based-sparsification-II-edge-and-vertex-connectivity.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=298566\">ACM DL</a>)\n<p>\n<li><b>Algorithms for proximity problems in higher dimensions</b>.<br>\n<a href=\"//www.middlebury.edu/~dickerso/\">\nM. T. Dickerson</a> and D. Eppstein.<br>\n<a href=\"//doi.org/10.1016/0925-7721(95)00009-7\">\n<i>Comp. Geom. Theory &amp; Applications</i> 5: 277&ndash;291, 1996</a>.\n<p>\nCombines a method from\n\"<a href=\"p-pgood.html\">Provably good mesh generation</a>\" for\nfinding sparse high-dimensional Delaunay triangulations,\na method of Dickerson, Drysdale, and Sack\n[\"<a href=\"//www.middlebury.edu/~dickerso/research/enum.html\">Simple\nalgorithms for enumerating interpoint distances</a>\", IJCGA 1992]\nfor using Delaunay\ntriangulations to search for nearest neighbors,\nand a method of Frederickson for speeding up tree-based searches.\nThe results are fast algorithms for several proximity problems\nsuch as finding the <i>k</i> nearest neighbors to each point\nin a given point set.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Algorithms for proximity problems in higher dimensions\">BibTeX</a> &ndash;\n<a href=\"DicEpp-CGTA-96.pdf\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Algorithms-for-proximity-problems-in-higher-dimensions.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/dickerson96algorithms.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=236474\">ACM DL</a>)\n<p>\n<li><b>Average case analysis of dynamic geometric optimization</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-93-18.pdf\">Tech. Rep. 93-18</a>, ICS, UCI, 1993.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314481\">\n<i>5th ACM-SIAM Symp. Discrete Algorithms,</i> Arlington, 1994, pp. 77&ndash;86</a>.<br>\n<a href=\"//doi.org/10.1016/0925-7721(95)00018-6\">\n<i>Comp. Geom. Theory &amp; Applications</i> 6: 45&ndash;68, 1996</a>.\n<p>\nThe Tech. Report used the more informative title\n\"Updating widths and maximum spanning trees using the rotating caliper graph\",\nwhich I also used for the journal submission,\nbut the referees made me change it back.\nDynamic geometry in a model of Mulmuley and Schwarzkopf in which insertions\nand deletions are chosen randomly among a worst-case pool of points.\nThis paper introduces several fundamental techniques\nincluding the <a href=\"/~eppstein/junkyard/rcg.html\">rotating caliper\ngraph</a> of a point set and a method for performing\ndecomposible range queries in the average case setting.\nIt has also since inspired the use of a similar model in dynamic graph\nalgorithms.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Average case analysis of dynamic geometric optimization\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-94-dyngeom.pdf\">SODA paper</a> &ndash;\n<a href=\"Epp-CGTA-96.pdf\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Average-case-analysis-of-dynamic-geometric-optimization.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96average.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=228291\">ACM DL</a>)\n<p>\n<li><b>Computing the discrepancy with applications to supersampling patterns</b>.<br>\n<a href=\"//www.cs.Princeton.EDU/~dpd/\">D. P. Dobkin</a>,\nD. Eppstein, and\n<a href=\"//www.mentallandscape.com/Index.htm\">D. P. Mitchell</a>.<br>\n<a href=\"//doi.org/10.1145/234535.234536\"><i>ACM Trans. on Graphics</i> 15 (4): 354&ndash;376, 1996.</a>\n<p>\nCombines \"<a href=\"p-disc.html\">Computing the discrepancy</a>\"\nwith experimental results of Mitchell on the discrepancies of various point sets,\nemphasizing the application of low-discrepancy sets to anti-aliasing in\nraytraced graphics.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Computing the discrepancy with applications to supersampling patterns\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Computing-the-discrepancy-with-applications-to-supersampling-patterns.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/dobkin96computing.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=234536\">ACM DL</a>)\n<p>\n<li><b>Approximating center points with iterated Radon points</b>.<br>\n<a href=\"//www.almaden.ibm.com/u/kclarkson/\">\nK. Clarkson</a>, D. Eppstein, \n<a href=\"//www.cs.cmu.edu/afs/cs.cmu.edu/user/glmiller/public/www/home.html\">G.L. Miller</a>,\n<a href=\"//www-users.cs.umn.edu/~carl/\">C. Sturtivant</a>, and \n<a href=\"//www-sal.cs.uiuc.edu/~steng/\">S.-H. Teng</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=161004\"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 91&ndash;98</a>.<br>\n<a href=\"//kenclarkson.org/center/p.pdf\"><i>Int. J. Comp. Geom. &amp; Appl.</i> 6 (3): 357&ndash;377, 1996</a>.\n<p>\nGiven a collection of <i>n</i> sites,\na center point is a point (not necessarily a site)\nsuch that no hyperplane through the centerpoint\npartitions the collection into a very small and a very large subset.\nCenter points have been used by Teng and others\nas a key step in the construction of geometric separators.\nOne can find a point with this property by choosing\na random sample of the collection and applying\n<a href=\"geom-lp.html\">linear programming</a>,\nbut the complexity of that method grows exponentially with the dimension.\nThis paper proposes an alternate method that\nproduces lower quality approximations (in terms of the size\nof the worst hyperplane partition) but takes time\npolynomial in both <i>n</i> and <i>d.</i>\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Approximating center points with iterated Radon points\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Approximating-center-points-with-iterated-Radon-points.html\">Citations</a>)\n<p>\n<li><b>Approximation algorithms for geometric problems</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//ieor.berkeley.edu/~hochbaum/html/book-aanp.html\">\n<i>Approximation Algorithms for NP-hard Problems</i></a>,\n<a href=\"//ieor.berkeley.edu/~hochbaum/\">D. Hochbaum</a>, ed.,\nPWS Publishing, 1996, pp. 296&ndash;345.\n<p>\nConsiders problems for which no polynomial-time exact algorithms\nare known, and concentrates on bounds for worst-case approximation\nratios, especially those depending intrinsically on geometry\nrather than on more general graph theoretic or metric space formulations.\nIncludes sections on the\n<a href=\"tsp.html\">traveling salesman problem</a>,\nSteiner trees,\n<a href=\"geom-tri.html\">minimum weight triangulation</a>,\nclustering, and separation problems.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Approximation algorithms for geometric problems\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Approximation-algorithms-for-geometric-problems.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=241946\">ACM DL</a>)\n<p>\n<li><b>Linear complexity hexahedral mesh generation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-51.pdf\">Tech. Rep. 95-51</a>, ICS, UCI, 1995.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=237237\">\n<i>12th ACM Symp. Comp. Geom.,</i> Philadelphia,\n1996, pp. 58&ndash;67</a>.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809109\">arXiv:cs.CG/9809109</a>.<br>\n<i>Comp. Geom. Theory &amp; Applications</i> 12: 3&ndash;16, 1999\n(special issue for 12th SCG).\n<p>\nAny simply connected polyhedron with an even number of quadrilateral\nsides can be partitioned into O(n) topological cubes, meeting face to\nface.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Linear complexity hexahedral mesh generation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Linear-complexity-hexahedral-mesh-generation.html\">Citations</a> &ndash;\n<a href=\"Epp-SCG-96.pdf\">SCG paper</a> &ndash;\n<a href=\"p-hexmesh-slides.pdf\">SCG talk slides</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96linear.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=310411\">ACM DL (CGTA)</a>)\n<p>\n<li><b>Zonohedra and Zonotopes</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-53.pdf\">Tech. Rep. 95-53</a>, ICS, UCI, 1995.<br>\n<i>Mathematica in Education and Research</i> 5 (4): 15&ndash;21, 1996.\n<p>\nI use Mathematica to construct <a href=\"geom-zono.html\">zonotopes</a>\nand display zonohedra.\nMany examples are shown, including one used for a lower bound\nin \"<a href=\"p-centroid.html\">The\ncentroid of points with approximate weights</a>\".\nThis paper is also available in\n<a href=\"//www.ics.uci.edu/~eppstein/junkyard/ukraine/ukraine.html\">HTML</a> and \n<a href=\"//www.ics.uci.edu/~eppstein/junkyard/ukraine/ukraine.ma\"><i>Mathematica</i> notebook</a> formats.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Zonohedra and zonotopes\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Zonohedra-and-zonotopes.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95zonohedra.html\">CiteSeer</a>)\n<p>\n<li><b>On triangulating three-dimensional polygons</b>.<br>\n<a href=\"//www.cs.technion.ac.il/~barequet/\">G. Barequet</a>, \n<a href=\"//www.middlebury.edu/~dickerso/\">M. Dickerson</a>,\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=237234\">\n<i>12th ACM Symp. Comp. Geom.,</i> Philadelphia, 1996, pp. 38&ndash;47</a>.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(98)00005-4\">\n<i>Comp. Geom. Theory &amp; Applications</i> 10: 155&ndash;170, 1998</a>.\n<p>\nIt is NP-complete, given a simple polygon in 3-space,\nto find a triangulated simply-connected surface (without extra vertices)\nspanning that polygon.  If extra vertices are allowed,\nor the surface may be curved,\nsuch a surface exists if and only if the polygon is unknotted;\nthe complexity of testing knottedness remains open.\nSnoeyink has shown that exponentially many extra vertices may be\nrequired for a triangulated spanning disk.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#On triangulating three-dimensional polygons\">BibTeX</a> &ndash;\n<a href=\"ftp://ftp.cs.technion.ac.il/pub/barequet/papers/3dt-socg96.ps.gz\">SCG paper</a> &ndash;\n<a href=\"ftp://ftp.cs.technion.ac.il/pub/barequet/papers/3dt-cgta.ps.gz\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/On-triangulating-three-dimensional-polygons.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/barequet96triangulating.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=292813\">ACM DL</a>)\n<p>\n<li><b>Using sparsification for parametric minimum spanning tree problems</b>.<br>\n<a href=\"//www.cs.iastate.edu/~fernande/\">\nD. Fern&aacute;ndez-Baca</a>,\n<a href=\"//www.cs.iastate.edu/faculty/slutzki.html\">\nG. Slutzki</a>, and D. Eppstein.<br>\n<a href=\"FerSluEpp-SWAT-96.ps.gz\"><i>5th Scand. Worksh. Algorithm Theory,</i> Reykjavik, 1996</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 1097, 1996, pp. 149&ndash;160.<br>\n<a href=\"FerSluEpp-NJC-96.pdf\"><i>Nordic J. Computing</i>\n3 (4): 352&ndash;366, 1996 (special issue for 5th SWAT).</a>\n<p>\nGiven a graph with edge weights that are linear functions of a parameter,\nfinds the sequence of\n<a href=\"mst.html\">minimum spanning trees</a> produced as the parameter varies,\nin total time O(mn log n), by combining ideas\nfrom \"<a href=\"p-sparsification.html\">Sparsification</a>\"\nand \"<a href=\"p-geomlb.html\">Geometric lower bounds</a>\".\nAlso solves various problems of optimizing the parameter value,\nincluding one closely related to that in\n\"<a href=\"p-maxwtavg.html\">Choosing subsets with maximum weighted average</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Using sparsification for parametric minimum spanning tree problems\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Using-sparsification-for-parametric-minimum-spanning-tree-problems.html\">Citations</a> &ndash;\n<a href=\"//www.cs.helsinki.fi/njc/References/fernandez-bacase1996:352.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=672282\">ACM DL (SWAT)</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=763883\">ACM DL (NJC)</a>)\n<p>\n<li><b>Faster construction of planar two-centers</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-12.pdf\">Tech. Rep. 96-12</a>, ICS, UCI, 1996.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314198\">\n<i>8th ACM-SIAM Symp. Discrete Algorithms,</i> New Orleans, 1997, pp. 131&ndash;138</a>.\n<p>\nImproving on a recent breakthrough of Sharir,\nwe use data structures from\n\"<a href=\"p-3lp.html\">Dynamic three-dimensional linear programming</a>\"\nto find two circular disks of minimum radius covering a set\nof points in the Euclidean plane, in randomized expected time\nO(<i>n</i> log<sup>2</sup> <i>n</i>).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Faster construction of planar two-centers\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-97.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Faster-construction-of-planar-two-centers.html\">Citations</a> &ndash;\n<a href=\"p-2c-slides.pdf\">DREI and SODA talk slides</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein97faster.html\">CiteSeer</a>)\n<p>\n<li><b>Dynamic connectivity in digital images</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-13.pdf\">Tech. Rep. 96-13</a>, ICS, UCI, 1996.<br>\n<i>Inf. Proc. Lett.</i> 62: 121&ndash;126, 1997.\n<p>\nAny algorithm that maintains the connected components\nof a bitmap image must take Omega(log <i>n</i> / log log <i>n</i>)\ntime per change to the image.  The problem can be solved in \nO(log <i>n</i>) time per change using dynamic planar graph techniques.\nWe discuss applications to computer Go and other games.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic connectivity in digital images\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-connectivity-in-digital-images.html\">Citations</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~dmjones/hbp/ipl/References/eppstein1997:121.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96dynamic.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=259717\">ACM DL</a>)\n<p>\n<li><b>On the parity of graph spanning tree numbers</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-14.pdf\">Tech. Rep. 96-14</a>, ICS, UCI, 1996.\n<p>\nAny bipartite Eulerian graph, any Eulerian graph with evenly many vertices,\nand any bipartite graph with evenly many vertices and edges, has an even\nnumber of\n<a href=\"mst.html\">spanning trees</a>.\nMore generally, a graph has evenly many spanning trees if and only if it\nhas an Eulerian edge cut.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#On the parity of graph spanning tree numbers\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/On-the-parity-of-graph-spanning-tree-numbers.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96parity.html\">CiteSeer</a>)\n<p>\n<li><b>Beta-skeletons have unbounded dilation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-15.pdf\">Tech. Rep. 96-15</a>, ICS, UCI, 1996.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9907031\">arXiv:cs.CG/9907031</a>.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(01)00055-4\">\n<i>Comp. Geom. Theory &amp; Applications</i> 23: 43&ndash;52, 2002</a>.\n<p>\nBeta-skeletons are geometric graphs used among other purposes\nfor <a href=\"//www.ics.uci.edu/~eppstein/junkyard/betadil.html\">empirical\nnetwork analysis</a> and minimum weight triangulation.\nA fractal construction shows that, for any beta&gt;0,\nthe beta-skeleton of a point set can have arbitrarily large dilation:\nOmega(n<sup>c</sup>), where c is a constant depending on beta\nand going to zero in the limit as beta goes to zero.\nIn particular this applies to the Gabriel graph.\nWe also show upper bounds on dilation of the same form.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Beta-skeletons have unbounded dilation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Beta-skeletons-have-unbounded-dilation.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=599525\">ACM DL</a>)\n<p>\n<li><b>Spanning trees and spanners</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-16.pdf\">Tech. Rep. 96-16</a>, ICS, UCI, 1996.<br>\n<i>Handbook of Computational Geometry,</i> J.-R. Sack and J. Urrutia,\neds., Elsevier, 1999, pp. 425&ndash;461.\n<p>\nSurveys results in geometric network design theory, including algorithms for\nconstructing minimum spanning trees and low-dilation graphs.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Spanning trees and spanners\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Spanning-trees-and-spanners.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein98spanning.html\">CiteSeer</a>)\n<p>\n<li><b>Application Challenges to Computational Geometry</b>.<br>\nThe\n<a href=\"a-cgitf.html\">\nComputational Geometry Impact Task Force\n</a>\nReport.<br>\n<a href=\"//ncstrl.cs.princeton.edu/expand.php3?id=TR-521-96\">Tech.\nRep. TR-521-96</a>, Princeton University, April 1996.<br>\nAdvances in Discrete and Computational Geometry &ndash; Proc. 1996 AMS-IMS-SIAM\nJoint Summer Research Conf. Discrete and Computational Geometry: Ten\nYears Later, Contemporary Mathematics 223, Amer. Math. Soc., 1999, pp. 407&ndash;423.\n<p>(<a href=\"//fano.ics.uci.edu/cites/Document/Application-challenges-to-computational-geometry.html\">Citations</a>)\n<p>\n<li><b>Dynamic graph algorithms</b>.<br>\nD. Eppstein,\n<a href=\"//www.scs.gatech.edu/people/zvi-galil\">Z. Galil</a>, \nand <a href=\"//www.info.uniroma2.it/~italiano/\">G.F. Italiano</a>.<br>\nTech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"//www.info.uniroma2.it/~italiano/Papers/dyn-survey.ps\">\n<i>Algorithms and Theoretical Computing Handbook,</i>\nM. J. Atallah, ed., CRC Press, 1999, chapter 8</a>.<br>\n2nd. ed., CRC Press, 2010, Vol. I: General Concepts and Techniques, chapter 9, pp. 9&ndash;1 - 9-28.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic graph algorithms\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-graph-algorithms.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein99dynamic.html\">CiteSeer</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"year.html\">Years</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}