{"url": "https://www.ics.uci.edu/~seal/projects/energy-test-min/index.html", "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-83301040-1', 'auto');\n  ga('send', 'pageview');\n\n</script>\n<head>\n<title>SEAL - Energy-Aware Test-Suite Minimization for Android Apps</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<meta http-equiv=\"Reply-to\" content=\"malek at uci dot edu\">\n<meta http-equiv=\"Owner\" content=\"Sam Malek\">\n<meta name=\"Author\" content=\"Sam Malek\">\n<meta name=\"Generator\" content=\"Emacs\">\n<link rev=\"MADE\" href=\"mailto:malek at uci dot edu\">\n<link href=\"../../seal.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n\n<body>\n<div class=\"wrapper\">\n    \n<!-- *************** Beginning of content ****************** -->\n\n<h2>Energy-Aware Test-Suite Minimization for Android Apps</h2>\n\n<p>\nThe rising popularity of mobile apps deployed on battery-constrained devices has motivated the need for effective energy-aware testing techniques. Energy testing is generally more labor intensive and expensive than functional testing, as tests need to be executed in the deployment environment, specialized equipment needs to be used to collect energy measurements, etc. Currently, there is a dearth of automatic mobile testing techniques that consider energy as a program property of interest. This paper presents an energy-aware test-suite minimization approach to significantly reduce the number of tests needed to e\u000beffectively test the energy properties of an Android app. It relies on an energy-aware coverage criterion that indicates the degree to which energy-greedy parts of a program are tested. We describe and evaluate two complementary algorithms for test-suite reduction. Experiments over test suites provided for real-world apps have corroborated our ability to reduce the test suite size by 84% on average, while maintaining the effectiveness of test suite in revealing the great majority of energy bugs.\n</p>\n\n<h3>Approach Overview</h3>\n<p>\n    Our framework for energy-aware test-suite minimization, consists of two major components: (1) Energy-Aware Coverage Calculator (ECC) which is responsible to calculate the eCoverage for each test case, ti, in the original test suite of the given app using program analysis; and (2) Energy-Aware Test-Suite Minimization (ETM) component that identifies a representative set of test cases from full test suite, suitable for energy testing of the given app.\n</p>\n\n<img style=\"margin:10\" ALT=\"[ETM picture]\" height=\"250\" src=./etm_approach.png><br>\n\n<p>\nECC component statically analyzes an app to obtain its call graph and annotates each node of the call graph with energy cost estimates. Using the execution traces of test cases in the available test suite, the eCoverage of each test case will be calculated by mapping execution path information to the annotated call graph.\n\n<br><br>Given a test suite and eCoverage of test cases, ETM component produces a minimized test suite suitable for energy testing, which aids a developer by reducing the effort needed to inspect the test results, especially for identifying energy bugs in the code. ETM component performs the energy-aware test-suite minimization in two complementary ways, optimal yet computationally expensive integer programming (IP) technique, and efficient near-optimal greedy approach.\n\n<br><br>Using energy-aware test-suite minimization, the search space for assessing energy properties of the app and identifying plausible energy bugs is reduced to handful of test cases, helping the developer in fixing such issues with less effort and time. Our framework also delivers execution traces of test cases and energy estimate of executed energy-greedy segments, helping developers to understand which sequences of invoking energy-greedy segments are more energy consuming and to pinpoint actual cause of energy bugs.\n</p>\n\n<h3>Tool</h3>\n\n<p>\nThe tool is available for download from <a href=\"http://www.ics.uci.edu/~seal/projects/energy-test-min/tool.html\">here</a>.\n\n<h3>Publications</h3>\n\nMore details about can be found in our publication below:\n<br>\n<ul class=\"paperlist\">\n    <li><b>Energy-Aware Test-Suite Minimization for Android Apps</b><br> \n    Reyhaneh Jabbarvand, Alireza Sadeghi, Hamid Bagheri, and Sam Malek<br>\n    <i>International Symposium on Software Analysis and Testing (ISSTA), Saarbrucken, Germany, July 2016. (25% acceptance rate)</i>\n    <br>[<a href=\"./2016ISSTA.pdf\">PDF</a>]\n    </li> \n</ul>\n\n<!-- ***************** End of content ****************** -->\n<br><br>\n<div style=\"float:left\">\n            <a href=\"http://www.ics.uci.edu/~seal/\"><img ALT=\"[seal's logo]\" height=\"200\" src=../../seal.png></a>\n</div>\n<div style=\"float:right\">\n            <a href=\"http://www.ics.uci.edu\"><img ALT=\"[uci's logo]\" style=\"padding-top: 40px\" height=\"100\" src=../../uci.jpg></a>\n</div>\n</div>\n</body>", "encoding": "ascii"}