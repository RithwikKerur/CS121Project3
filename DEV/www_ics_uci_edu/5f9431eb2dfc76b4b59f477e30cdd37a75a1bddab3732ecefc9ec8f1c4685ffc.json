{"url": "https://www.ics.uci.edu/~goodrich/teach/ics247/hw/hw4.html", "content": "<html>\n\n<head>\n<title>ICS 247 - Security Algorithms Homework 4</title>\n</head>\n\n<body bgcolor=\"#FFFFFF\">\n\n<center>\n\n<h2>ICS 247 - Security Algorithms Homework 4, 50 Points\n<br>\nDue: Friday, February 27, 2004</h2>\n\n</center>\n\n<p>\nConsider an SDR solution where users are associated with the leaves\nof a complete binary tree T.  Every node v in T has a secret key\nK(v), which is known to each of v's descendents.\nThe root node of T also has a secret key X, and each non-root node\nhas a key that is derived from X, such that, for each\nnode v, if X(v) is the key for v, then L(X(v)) is the key for v's\nleft child and R(X(v)) is the key for v's right child, where L and R\nare (different) one-way hash functions.\nFor each leaf node v, we store at v the X(u) key values for each\nsibling u of the path from v to the root.\nWe then define set differences the same as in the SDR method, where\nS[v,w] is the set that is rooted at node v but excludes the subtree\nrooted at node w.  The difference between this scheme and SDR,\nhowever, is that the way we assign a key for S[v,w] is to use\nf(K(v),X(v)), where f is a one-way function.\n\n<ol>\n<li><i>10 points.</i>\nRigorously\nshow that for any set of r revoked leaves, there are O(r) S[v,w] sets \nthat cover all the non-revoked users.\n\n<li><i>10 points.</i>\nShow that each user need store only O(log n) keys, where n is the\nnumber of users, using the above scheme (as opposed to the regular\nSDR method that requires O(log^2 n) keys per user).\n\n<li><i>10 points.</i>\nShow that, for any revoked leaf x in the above scheme,\nx is unable to decrypt any message from the leader using only the\nkeys stored at x.\n\n<li><i>10 points.</i>\nShow that two revoked users in the above scheme can collude so that\none of them can read one of the messages sent by the leader.\n\n<li><i>10 points.</i>\nShow that in the SDR approach defined in class (using the paper by\nNaor et al.), no two revoked users can collude to decrypt a message\nsent by the leader.\n</ol>\n\n</body>\n\n</html>\n", "encoding": "ascii"}