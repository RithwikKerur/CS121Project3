{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node151.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Using the macros</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Using the macros\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html4059 HREF=\"node152.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4057 HREF=\"node149.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4051 HREF=\"node150.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4061 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4060 HREF=\"node152.html\"> Definite Clause Grammars </A>\r\n<B>Up:</B> <A NAME=tex2html4058 HREF=\"node149.html\">  ECLiPSe\r\n  Macros</A>\r\n<B> Previous:</B> <A NAME=tex2html4052 HREF=\"node150.html\"> Introduction</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION001220000000000000000> Using the macros</A></H1>\r\n<P>\r\nThe following built-ins control macro expansion:\r\n<DL ><DT><b> define_macro(+TermClass, +TransPred, +Options)</b>\r\n<DD> <BR>\r\n<P>\r\ndefine a macro for the given <i> TermClass</i>. The transformation will\r\nbe performed by the predicate <i> TransPred</i>.\r\n<DT><b> erase_macro(+TermClass)</b>\r\n<DD> <BR>\r\n<P>\r\nerase a currently defined macro for <i> TermClass</i>. This can only be done\r\nin the module where the definition was made.\r\n<DT><b> current_macro(?TermClass, ?TransPred, ?Options, ?Module)</b>\r\n<DD> <BR>\r\n<P>\r\nretrieve information about currently defined visible macros.\r\n<P>\r\n </DL>\r\n<P>\r\nMacros are selectively applied only to terms of the specified class.\r\n<i> TermClass</i> can take two forms:\r\n<DL ><DT>Name/Arity\r\n<DD> transform all terms with the specified functor\r\n<A NAME=2356>&#160;</A>\r\n<A NAME=2357>&#160;</A>\r\n<DT>type(Type)\r\n<DD> transform all terms of the specified type, where Type\r\nis one of <tt> compound, string, integer, rational, real, atom,\r\ngoal</tt><A NAME=tex2html517 HREF=\"footnode.html#2359\"><IMG ALIGN=BOTTOM ALT=\"gif\" SRC=\"http://www.ecrc.de/eclipse/new_icons//foot_motif.gif\"></A>.\r\n<P>\r\n </DL>\r\nThe +TransPred argument specifies the predicate that will perform the\r\ntransformation. It has to be of arity 2 or 3 and should have the form:\r\n<blockquote> <PRE>trans_function(OldTerm, NewTerm [, Module]) :- ... .\r\n</PRE></blockquote>\r\nAt transformation time, the system will call <i> TransPred</i> in the module\r\nwhere <b> define_macro/3</b> was invoked.\r\nThe term to transform is passed as the first argument, the second is a free\r\nvariable which the transformation predicate should bind to the\r\ntransformed term, and the optional\r\nthird argument is the module where the term is read or written.\r\n<P>\r\n<i> Options</i> is a list which may be empty (in this case the macro defaults\r\nto a local read term macro) or contain specifications from\r\nthe following categories:\r\n<UL><LI> visibility\r\n<P>\r\n<DL ><A NAME=2369>&#160;</A>\r\n<DT>local:\r\n<DD> The transformation is only visible in this module (default).\r\n<A NAME=2370>&#160;</A>\r\n<DT>global:\r\n<DD> The transformation is globally visible.\r\n<P>\r\n </DL>\r\n<P>\r\n<LI> mode\r\n<DL ><A NAME=2373>&#160;</A>\r\n<DT>read:\r\n<DD> This is a read macro and shall be applied after reading a\r\nterm (default).\r\n<P>\r\n<A NAME=2374>&#160;</A>\r\n<DT>write:\r\n<DD> This is a write macro and shall be applied before printing\r\na term.\r\n<P>\r\n </DL>\r\n<P>\r\n<LI> type\r\n<DL ><A NAME=2377>&#160;</A>\r\n<DT>term:\r\n<DD> Transform all terms (default).\r\n<P>\r\n<A NAME=2378>&#160;</A>\r\n<DT>clause:\r\n<DD> Transform only if the term is a program clause,\r\ni.e. inside compile/1, assert/1 etc.\r\nWrite macros are applied using the 'C' option in the printf/2 predicate.\r\n<P>\r\n<A NAME=2382>&#160;</A>\r\n<DT>goal:\r\n<DD> Transform only if the term is a subgoal in the\r\nbody of a program clause.\r\nWrite macros are applied using the 'G' option in the printf/2 predicate.\r\n<P>\r\n </DL>\r\n<P>\r\n<LI> additional specification\r\n<DL ><A NAME=2386>&#160;</A>\r\n<DT>protect_arg:\r\n<DD> Disable transformation of subterms (optional).\r\n<A NAME=2387>&#160;</A>\r\n<DT>top_only:\r\n<DD> Consider only the whole term, not subterms (optional).\r\n<P>\r\n </DL></UL>\r\n<P>\r\nHere is an example of a conditional read macro:\r\n<blockquote> <PRE>[eclipse 1]: [user].\r\n trans_a(a(X,Y), b(Y)) :-    % transform a/2 into b/1,\r\n        number(X),           % but only under these\r\n        X &gt; 0.               % conditions\r\n\r\n:- define_macro(a/2, trans_a/2, []).\r\n  user       compiled traceable 204 bytes in 0.00 seconds\r\n\r\nyes.\r\n[eclipse 2]: read(X).\r\n        a(1, hello).\r\n\r\nX = b(hello)                 % transformed\r\nyes.\r\n[eclipse 3]: read(X).\r\n        a(-1, bye).\r\n\r\nX = a(-1, bye)               % not transformed\r\nyes.\r\n</PRE>\r\n</blockquote>\r\nIf the transformation function fails, the term is not transformed. Thus, \r\n<b> a(1, zzz)</b> is transformed into <b> b(zzz)</b> but <b> a(-1, zzz)</b> \r\nis not transformed.\r\nThe arguments are transformed bottom-up. It is possible to protect the \r\nsubterms of a transformed term by specifying the flag <tt> protect_arg</tt>.\r\n<P>\r\nA term can be protected against transformation by quoting it with \r\nthe ``protecting functor'' (by default it is <b> no_macro_expansion/1</b>):\r\n<A NAME=2397>&#160;</A>\r\n<blockquote> <PRE>[eclipse 4]: read(X).\r\n        a(1, no_macro_expansion(a(1, zzz))).\r\nX = b(a(1, zzz)).\r\n</PRE>\r\n</blockquote>\r\nNote that the protecting functor is itself defined as a macro:\r\n<blockquote> <PRE>trprotect(no_macro_expansion(X), X).\r\n:- define_macro(no_macro_expansion/1, trprotect/2, [global, protect_arg]).\r\n</PRE> </blockquote>\r\nA macro is by default only visible in the module where it has been defined.\r\nWhen it is defined inside a module interface, then it is copied to all\r\nother modules that contain a use_module/1 for this module.\r\nThe transformation function should be exported in this case and be defined\r\nin the module interface as well.\r\n<P>\r\nA macro can also be made visible in all modules by specifying the <tt> global</tt>\r\noption in the option list. As usual, local definitions hide global ones.\r\n<A NAME=2404>&#160;</A>\r\nThe global flag <b> macro_expansion</b> can be used to disable\r\nmacro expansion globally, e.g. for debugging purposes.\r\nUse <tt> set_flag(macro_expansion, off)</tt> to do so.\r\n<P>\r\nThe next example shows the use of a type macro. Suppose we want to represent\r\nintegers as s/1 terms:\r\n<blockquote> <PRE>[eclipse 1]: [user].\r\n tr_int(0, 0).\r\n tr_int(N, s(S)) :- N &gt; 0, N1 is N-1, tr_int(N1, S).\r\n :- define_macro(type(integer), tr_int/2, []).\r\n\r\nyes.\r\n[eclipse 2]: read(X).\r\n        3.\r\n\r\nX = s(s(s(0)))\r\nyes.\r\n</PRE> </blockquote>\r\nWhen we want to convert the s/1 terms back to normal integers so that they\r\nare printed in the familiar form, we can use a write macro.\r\nNote that we first erase the read macro for integers, otherwise we would get\r\nunexpected effects since all integers occurring in the definition of\r\ntr_s/2 would turn into s/1 structures:\r\n<blockquote> <PRE>[eclipse 3]: erase_macro(type(integer)).\r\n\r\nyes.\r\n[eclipse 4]: [user].\r\n tr_s(0, 0).\r\n tr_s(s(S), N) :- tr_s(S, N1), N is N1+1.\r\n :- define_macro(s/1, tr_s/2, [write]).\r\n\r\nyes.\r\n[eclipse 2]: write(s(s(s(0)))).\r\n3\r\nyes.\r\n</PRE> </blockquote><BR> <HR><A NAME=tex2html4059 HREF=\"node152.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4057 HREF=\"node149.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4051 HREF=\"node150.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4061 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4060 HREF=\"node152.html\"> Definite Clause Grammars </A>\r\n<B>Up:</B> <A NAME=tex2html4058 HREF=\"node149.html\">  ECLiPSe\r\n  Macros</A>\r\n<B> Previous:</B> <A NAME=tex2html4052 HREF=\"node150.html\"> Introduction</A>\r\n<BR> <HR> <P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}