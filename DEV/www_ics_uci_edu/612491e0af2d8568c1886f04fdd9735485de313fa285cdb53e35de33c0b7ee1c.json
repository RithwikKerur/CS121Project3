{"url": "https://www.ics.uci.edu/~alexv/low_pwr.html", "content": "<!DOCTYPE HTML SYSTEM \"html.dtd\">\n<HTML CHARSET=\"head\">\n<HEAD>   <TITLE>Low-Power processors</TITLE>\t</HEAD>\n\n<font color=\"cc9876\">\n<BODY><H2> Reducing power consumption in <br> embedded and high-performance processors.\n</H2> \n</font>\n\n<p>\nPower dissipation is a major issue in processor design. In particular, CMOS technology scaling<br>\nhas significantly increased the leakage power dissipation so that it accounts for an increasingly large<br>\nfraction of processor power dissipation.  One of the main issue is how to achieve power savings without loss<br>\nof performance.<br>\n</p>\n\n<p>\nMuch of our work in this area has focused on cache power dissipation.  We addressed issues<br>\nin L1 I- and D-cache dynamic as well as static power consumption. This included way caching to save<br>\nstatic and dynamic power in high-associativity caches (as an alternative to way prediction),<br>\ncached load-store queue as a low-cost alternative to L0 cache, using branch prediction information<br>\nto save power in instruction caches. We addressed L2 power consumption, in particular leakage power<br>\nin L2 peripheral circuits.  The results of this research are applicable in both embedded and<br>\nhigh-performance processors.<br>\n</p>\n\n<p>\nAnother aspect of this research is low-power instruction queue design for out-of-order processors.<br>\nCAM-based instruction queues are not scalable and consume significant amount of power due to wide<br>\nissue and CAM search on each cycle.  One approach we proposed used a banked queue, thus dividing a<br>\nCAM into smaller banks with faster search. A pointer table indicates which bank an instruction belongs to.<br>\nA more complex approach disposed of CAM-based queue altogether and used instruction dependence pointers<br>\nand RAM-based queue for \"direct\" wakeup.  It solved the problem of how to achieve fast branch <br> \nmisprediction recovery when using pointers while using dependent pointers. <br>\n</p>\n\n<p>\nFinally, we investigated the problem of power consumption in the register file.  Content-aware register file<br>\nutilized knowledge of instruction operand and effective address width to reduce the number<br>\nof bits read from the RF and to speed up TLB access using an \"L0 TLB\".  This type of register file was also <br>\nshown to enable a new type of clustered processor with improved performance and reduced power.<br>\n</p>\n\nSee recent publication list for papers with details of the above.\n</BODY></HTML>\n", "encoding": "ascii"}