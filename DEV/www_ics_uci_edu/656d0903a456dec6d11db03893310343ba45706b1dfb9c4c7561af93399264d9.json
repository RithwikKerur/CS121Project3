{"url": "https://www.ics.uci.edu/~lopes/aop/aop.html", "content": "<html>\r\n\r\n<head>\r\n<meta http-equiv=\"Content-Language\" content=\"en-us\">\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\">\r\n<title>AOP Home Page at UCI</title>\r\n</head>\r\n\r\n<body bgcolor=\"#20000F\" text=\"#FFFFFF\" link=\"#FFFFFF\" vlink=\"#C0C0C0\" alink=\"#9999FF\">\r\n\r\n<font face=arial>\r\n\r\n<h2>Aspect-Oriented Programming and Software Development</h2>\r\n\r\n<table border=0 cellpadding=1>\r\n  <tr valign=\"top\">\r\n    <! td bgcolor=gray width=150>\r\n    <td width=150>\r\n    <table border=0>\r\n      <tr>\r\n      <td><strong>In the spotlight</strong><br>\r\n      <font size=-1>\r\n\r\n      &nbsp;&nbsp;<a\r\n      href=\"http://www.technologyreview.com/articles/tr10_kiczales0101.asp\">MIT's\r\n      Top 10</a><br>\r\n      &nbsp;&nbsp;<a href=\"http://www.javaworld.com/javaworld/jw-01-2002/jw-0118-aspect.html\">Java World</a><br>\r\n      &nbsp;&nbsp;<a\r\n      href=\"http://portal.acm.org/toc.cfm?id=383845&type=issue&coll=portal&dl=ACM&idx=J79&part=magazine&WantType=Magazines&title=CACM\">CACM\r\n      Special</a><br>\r\n      </font>\r\n      </td>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      <tr>\r\n      <td><strong>Go sites</strong><br>\r\n      <font size=-1>\r\n\r\n      &nbsp;&nbsp;<a href=\"http://aosd.net/\">AOSD</a><br>\r\n\r\n      &nbsp;&nbsp;<a href=\"http://aspectj.org\">AspectJ</a><br>\r\n      </font>\r\n      </td>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      <tr>\r\n      <td><strong>Read more</strong><br>\r\n      <font size=-1>\r\n      &nbsp;&nbsp;<a href=\"ftp://ftp.ccs.neu.edu/pub/people/crista/publications/ecoop00/index.html\">ECOOP'00</a><br>\r\n      &nbsp;&nbsp;<a href=\"ftp://ftp.ccs.neu.edu/pub/people/crista/publications/icse00/index.html\">ICSE'00</a><br>\r\n      &nbsp;&nbsp;<a href=\"ftp://ftp.ccs.neu.edu/pub/people/crista/publications/ecoop97/index.html\">ECOOP'97</a><br>\r\n      </font>\r\n      </td>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      <tr>\r\n      <td><strong>Research topics</strong><br>\r\n      <font size=-1>\r\n      &nbsp;&nbsp;Program understanding<br>\r\n      &nbsp;&nbsp;Measuring complexity<br>\r\n      &nbsp;&nbsp;Visualizing software<br>\r\n      &nbsp;&nbsp;Coping with fuzzyness<br>\r\n      &nbsp;&nbsp;Programming models<br>\r\n      </font>\r\n      </td>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      </tr>\r\n      <tr>\r\n      <td>&nbsp;</td>\r\n      </tr>\r\n\r\n      <tr>\r\n      <td><a href=\"aop-pics.html\">Kodak moments</a><br>\r\n      </font>\r\n      </td>\r\n\r\n      </tr>\r\n    </table>\r\n    </td>\r\n\r\n    <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>\r\n\r\n    <td>\r\n    <font size=-1>\r\n\r\n    <p>Aspect-Oriented Programming (AOP) is a programming model that\r\n    tackles a specific problem: capturing consistent units of a\r\n    software system that the traditional programming models force to\r\n    be spread among several modules of the program implementations. In\r\n    this light, aspects are those consistent units that happen to\r\n    crosscut other units. A concrete example will make these\r\n    definitions more clear.</p>\r\n\r\n    <p>Take a telecom system, with Customers, Calls and\r\n    Connections. The basic operation of this system relates to the\r\n    calls that customers make, including conference calls and merging\r\n    of different connections into the same call. Over this basic\r\n    operation, there is a timing feature which tracks the \r\n    connection time per customer. And over that, there may be a billing\r\n    feature that charges costumers for the calls they make, according\r\n    to the amount of time they used and the types of calls they made.\r\n    </p>\r\n\r\n    <p>Think for a moment how you would implement this using, say, an\r\n    Object-Oriented Programming model. Customers, calls and\r\n    connections are natural candidates for objects whose behavior is\r\n    defined by class implementations. The timing feature could also be\r\n    implemented by a group of classes, including, at least, a\r\n    timer. Even though you may be able to isolate the functionality of\r\n    the timing feature into a group of classes, there must be some\r\n    code in the basic classes that invokes the timing feature at\r\n    appropriate points in the operation of the telecom system. So, for\r\n    example, it's plausible that everytime there is a new connection\r\n    we must start a timer; it's also plausible that calls made by\r\n    certain special customers are not timed. The points at which the\r\n    timing feature is invoked by the basic objects is an important and\r\n    consistent part of this system, and its specification can change\r\n    independent of all the other parts.\r\n    </p>\r\n\r\n    <p>Using a language that supports AOP, we can capture these\r\n    dependencies in implementation modules of their own. In this case,\r\n    we can have one module in the program that encapsulates the\r\n    information about when the timing feature is invoked. Doing things\r\n    this way, we can trace changes in the specification of the timing\r\n    feature into one consistent unit of the program implementation. We\r\n    can even unplug the timing feature from the system without having\r\n    to change a single line of code of the basic classes,\r\n    preserving the integrity of the basic operation.</p>\r\n\r\n    <p>What else? There are many more examples of how thinking in\r\n    terms of aspects can have a positive impact in software\r\n    development. Software developers out there have already embraced\r\n    some of these ideas, especially for helping them develop their\r\n    systems by having aspects such as tracing, profiling and\r\n    testing. You can find out much more about how developers are using\r\n    AOP by following the links to the AOP-related sites listed on the\r\n    left.</p>\r\n\r\n    <p>The quest for better software development models and tools\r\n     doesn't end with the current state of AOP. A lot more can be done\r\n     in this field. For project ideas and general information, please\r\n     contact <a href=\"../\">Prof. Crista Lopes</a>.\r\n     </p>\r\n\r\n    <em>Note that some of the ideas in AOP have been\r\n    patented by the Xerox Corporation.</em>\r\n    </p>\r\n    </font>\r\n  \r\n    </td>\r\n  </tr>\r\n\r\n\r\n</table>\r\n\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}