{"url": "https://www.ics.uci.edu/~eppstein/261/w06-hw7.txt", "content": "1. Suppose you are given as input a string s of 0's and 1's, and you\nwish to determine all strings w such that w0 and w1 are both contiguous\nsubstrings of s. Describe how to do this efficiently using a suffix tree.\nNote that each w can be output in constant time by listing a start\nposition in s and a length, so you do not need to worry about the amount\nof time needed to output the actual strings.\n\nFor instance, if s consists of n-1 0's followed by a single 1, then the\nstrings w that should be output are the empty string, 0, 00, 000,\n... up to n-2 0's.  These can all be specified as starting at position 0\nin s and continuing for all possible lengths from 0 to n-2.\n\n\n2. How much time would a flat tree take per operation (using O-notation)\non inputs consisting of sets of integers in the range from 0 to (sqrt n)!\n(that's the factorial of sqrt n)? Use the approximation log x! ~= x log x.\n\n\n3. Suppose we want to maintain a set of integers, stored as machine\nwords with W bits per word, and answer range counting queries that ask\nfor the number of stored integers within some interval. Can we do this\nefficiently using a flat tree? What would be the time per operation?\n", "encoding": "ascii"}