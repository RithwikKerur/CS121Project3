{"url": "https://www.ics.uci.edu/~eppstein/263/s14-hw7.html", "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\">\n<html>\n<head>\n<title>CompSci 263, Spring 2014, Homework 7</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script type=\"text/javascript\"\n  src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n</head>\n<body>\n<h1>CS 263, Spring 2014, Homework 7</h1>\n<h2>Due at the start of class, Thursday, May 22</h2>\n\n<ol>\n<li><p>Define a graph to be $k$-Hamiltonian if there exist $k$ simple cycles in the graph that together cover all of the vertices. Use inclusion-exclusion to design an algorithm that tests whether a graph is $3$-Hamiltonian. What is the running time of your algorithm?\n</p></li>\n<li><p>Recall that the fast zeta transform takes a function $f(S)$ from sets to real numbers as input, and produces as output a function $\\hat f(S)=\\sum_{T\\subset S} f(T)$. Describe an algorithm that takes $\\hat f$ as input and produces $f$ as output.\n</p></li>\n<li><p>How many perfect matchings are there in a four-dimensional hypercube? (This is a bipartite graph with 16 vertices, which can be associated with the four-bit binary numbers in such a way that two vertices are adjacent if and only if their numbers differ in a single bit. Computational solutions are encouraged but not required.)\n</p></li>\n</ol>\n</body>\n</html>\n", "encoding": "ascii"}