{"url": "https://www.ics.uci.edu/~alspaugh/cls/shr/binaryString.html", "content": "<?xml version='1.1'?>\n<!DOCTYPE html\n     PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'\n     'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>\n<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>\n<head>\n  <title>Binary Strings</title>\n  <meta name='Author' content='Thomas A. Alspaugh'/>\n  <meta name='Description' content=\"Binary strings\"/>\n  <meta http-equiv='content-type' content='text/html; charset=ISO-8859-1'/>\n  <meta http-equiv='Content-Style-Type' content='text/css'/>\n  <link href='../../alspaugh-uci.css' rel='stylesheet' type='text/css'/>\n  <!-- <link href='../alspaugh-uci-cls.css' rel='stylesheet' type='text/css'/> -->\n  <style type='text/css'>\n    @media screen {\n      body     {  background: url(\"img/bg-binaryString.png\") repeat-y;  }\n      #TMain   {  margin-left: 10.00em;  }\n    }\n  </style>\n</head>\n<body>\n\n<div id='TBg'>\n\n<div id='THeader'>\nBinary Strings\n<span class='newUrl'><a href='https://thomasalspaugh.org/pub/fnd/binaryString.html'\n  >thomasalspaugh.org/pub/fnd/binaryString.html</a></span>\n</div>\n\n<div id='TLinks1' class='Links'> <!-- - - - - - - - - - - - - - - - - - - - -->\n<p>  <a class='sc' href='../../index.html'>Home</a>\n</p>\n<div class='hr'> </div>\n<p>  <a href='index.html'>Foundations home</a>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='set.html'>Sets</a><br/>\n<a href='relation.html'>Relations</a><br/>\n<a href='correspondence.html'>Correspondences</a><br/>\n<a href='orderedSet.html'>Ordered Sets</a><br/>\n<a href='lattice.html'>Lattices</a><br/>\n<a href='graph.html'>Graphs</a><br/>\n<a href='powerset.html'>Powersets</a><br/>\n<a href='binaryString.html'>Binary Strings</a><br/>\n<a href='logicConcepts.html'>Logic</a><br/>\n<a href='allen.html'>AIA</a><br/><!-- -spell AIA -->\n<a href='greek.html'>Greek</a><br/>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='glossaryExternal.html'>Glossary</a><br/>\n<a href='goodAbstract.html'>Abstracts</a><br/>\n<a href='argument.html'>Argument</a><br/>\n<a href='inquiryCycle.html'>Inquiry Cycle</a><br/>\n<a href='hohfeld.html'>Legal Relations</a><br/>\n<a href='goodPresentation.html'>Presentations</a><br/>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='quickStart.html'>Elicitation</a><br/>\n<a href='ontology.html'>Glossaries</a><br/>\n<a href='goal.html'>Goals</a><br/>\n<a href='istar.html'>i*</a><br/>\n<a href='SCR.html'>SCR</a><br/>\n<a href='tracing.html'>Tracing</a><br/>\n</p>\n<div class='hr2'> </div>\n<p>\n<a href='alloy.html'>Alloy</a><br/>\n<a href='msc.html'>MSCs</a><br/>\n<a href='regularExpression.html'>Regular Exprs.</a><br/>\n</p><!-- -spell MSCs Exprs -->\n<div class='hr2'> </div>\n<p>\n<a href='java-designPattern.html'>Design Patterns</a><br/>\n<a href='javadoc.html'>Javadoc</a><br/>\n<a href='java-package.html'>Java Packages</a><br/>\n<a href='java-type.html'>Java Types</a><br/>\n</p>\n<div class='hr2'> </div>\n<p>\n<a href='html.html'>(X)HTML</a><br/>\n<a href='xmlSchema.html'>XML Schemas</a><br/>\n<a href='xslt.html'>XSLT</a><br/>\n</p><!-- -spell XSLT -->\n</div>\n\n\n<!-- No right column -->\n<div id='TMain'><!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->\n<!--xhtml -y -->\n\n\n<p> A <dfn>binary string</dfn>\nis a sequence of 0's and 1's.&nbsp;\n</p>\n\n<p>Let <span class='M'>&Sigma;</span> be the set {0,1}.&nbsp;\nThen the set of finite binary strings is written as <span class='M'>&Sigma;</span>*,\nand the set of finite and infinite binary strings is written as <span class='M'>&Sigma;</span>**.&nbsp;\n(The same notation is used for other alphabets other than 0 and 1.)&nbsp;\n</p>\n<p>\n<span class='M'>&Sigma;</span>* can be ordered by the prefix relation,\nas can <span class='M'>&Sigma;</span>**:&nbsp;\nfor u,v<span class='M'>&isin;</span><span class='M'>&Sigma;</span>* (<span class='M'>&Sigma;</span>**), u is a <dfn>prefix</dfn> of v if either\nu=v or\nu is a finite initial substring of v.&nbsp;\nWe write u&le;v if u is a prefix of v,\nand u||v if neither u nor v is a prefix of the other\n(some authors write u#v).&nbsp;\n</p>\n\n<p> Here are some examples:\n</p>\n\n<ul>\n  <li> The empty string <span class='M'>&epsilon;</span> is a binary string.&nbsp;\n    <span class='M'>&epsilon;</span> is in both <span class='M'>&Sigma;</span>* and <span class='M'>&Sigma;</span>**.&nbsp;\n  </li>\n  <li> 0 and 1 are finite binary strings, and are in both\n    <span class='M'>&Sigma;</span>* and <span class='M'>&Sigma;</span>**, as are all finite binary strings.&nbsp;\n  </li>\n  <li> 010101... is an infinite binary string.&nbsp;\n    It is in <span class='M'>&Sigma;</span>** but not <span class='M'>&Sigma;</span>*.&nbsp;\n  </li>\n  <li>0&nbsp;&le;010101...\n    <br/>0 is a prefix of 010101....\n  </li>\n  <li>1&nbsp;||&nbsp;010101...\n    <br/>1 is not a prefix of 010101..., nor is 010101... a prefix of 1;\n    they are incomparable.&nbsp;\n    In fact, 010101... is not a prefix of anything (because it is not finite).&nbsp;\n  </li>\n  <li>00&nbsp;&le;&nbsp;000\n  </li>\n  <li>00&nbsp;||&nbsp;0101\n  </li>\n</ul>\n\n\n</div>\n\n</div><!-- #TBg -->\n\n<div id='TFooter'>\n<div class='W3C'>\n  <a href='http://validator.w3.org/check?uri=referer'><img class='W3C'\n    src='../../img/valid-xhtml10-blue.png'\n    alt='Valid XHTML 1.0 Strict'/></a>\n  <br/>\n  <a href='http://jigsaw.w3.org/css-validator/check/referer'><img class='W3C'\n    src='../../img/vcss-blue.png'\n    alt='Valid CSS!'/></a>\n</div>\n<div class='timestamp'>2010Feb24We20:59</div>\n<div style='padding-top:1px;'>\n<a class='plain' href='./index.html' style='font-variant:small-caps;'\n>Thomas A. Alspaugh</a>\n<span style='padding-left:1em;'><span class='email ss sm'>alspaugh&nbsp;\n    <span class='ss sc sm'>at</span> &middot; ics &middot; uci &middot; edu</span>\n    <!-- -spell alspaugh uci edu --> </span>\n</div>\n</div>\n\n<!-- Google Analytics code -->\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol)\n  ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost +\n  \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-15281497-1\");\npageTracker._trackPageview();\n} catch(err) {}\n</script>\n\n</body>\n</html>\n\n", "encoding": "ascii"}