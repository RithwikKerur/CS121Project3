{"url": "https://www.ics.uci.edu/~rickl/courses/cs-171/0-ihler-2016-fq/Projects/ConnectK/scripts/ati_notes.txt", "content": "mile=\"M05\"\n\n### Unzipping archives.  Do just once; we will manually modify students' files as required ###\n# unzip & assemble directory structures\n# unzip main zip file; move zips to _zip\n# for z in _zip/*.zip ; do mkdir ${z%.zip}; unzip -d ${z%.zip} $z \n# remove junk: \n# find . -name __MACOSX -exec rm -r {} \\;\n\n### Re-compile / test compilation of source ##################################################\n# compile c++ files\nrm ati/${mile}.compile.log; ati/compile $mile | tee ati/${mile}.compile.log\n## if compile fails, create compile error log?\n\n# compile java files (?)\n...\n## if compile fails, create compile error log?\n\n\n# fix up python files as needed\n# load any files that need the full input shell, and paste it in from the template\ngrep -L make_ai_shell_from_input */*/src/*AI.py\nvim $(grep -L make_ai_shell_from_input */*/src/*AI.py)\n## also change make_move call pattern if required\n#vim $(grep -l \"make_move(deadline)\" */*/src/*AI.py)\n#:%s/make_move(deadline)/make_move(model, deadline)/g\n#:%s/make_move(self, deadline)/make_move(self, model, deadline)/g\n#:w\n#:next\n# missing \"global deadline\" bug\ngrep -L \"global deadline\" */*/src/*AI.py\nvim $(grep -L \"global deadline\" */*/src/*AI.py)\n\n# find AIs with compiled binaries ( !!! or cpp files? )\n\nati/compile M06\n\nfor file in Submissions/M06_*/*/*/bin/*AI ; do\n  if [ ! -e \"${file%/*}\"/byAlex ] ; then\n    echo \"${file%/*}\"\n  fi\ndone\n\n# makefiles done by hand:\nfind Submissions/M06_final/ -name \"makefile\"\nfind Submissions/M06_final/ -name \"Makefile\"\n\n\n# add library for python entries\nfor file in Submissions/M06_*/*/*/src/*AI.py ; do\n  if [ ! -d \"${file%/*}\"/ConnectKSource_python ] ; then\n    cp -r ConnectKSource_python \"${file%/*}\"/ConnectKSource_python\n  fi\ndone\n\n\n# execute IO test (c++,py); \"do anything\" (java) (3x3 k=1; alt 1st)\nmile=M05\nrm ati/${mile}.io.log; ati/test_io ${mile} | tee ati/${mile}.io.log\n## if IO fails, create IO error log? debug?\n\n\n# execute minimax play tests\nmile=M05\nrm ati/${mile}.play.log; ati/test_ids ${mile} | tee ati/${mile}.play.log\n## \n\n# execute tictactoe v Random, v Basic\n# execute connect4 v Random, v Basic\n# execute 9x7x5 v Random, v Basic\n\n# M03,M04 : timeout 60 sec, fixed depth = 1 / 2 / 3\n# M05 : timeout 60 sec, timeout 5 sec,\n\n\n\n\n", "encoding": "ascii"}