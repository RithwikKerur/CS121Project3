{"url": "https://www.ics.uci.edu/~emilyo/teaching/info43s2015/homeworks/Homework3.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <meta http-equiv=\"Content-Style-Type\" content=\"text/css\">\n  <title></title>\n  <meta name=\"Generator\" content=\"Cocoa HTML Writer\">\n  <meta name=\"CocoaVersion\" content=\"1347.57\">\n  <style type=\"text/css\">\n    p.p1 {margin: 0.0px 0.0px 14.0px 0.0px; text-align: center; font: 18.0px Times; color: #000000; -webkit-text-stroke: #000000}\n    p.p2 {margin: 0.0px 0.0px 15.0px 0.0px; text-align: center; font: 14.0px Times; color: #000000; -webkit-text-stroke: #000000}\n    p.p3 {margin: 0.0px 0.0px 12.0px 0.0px; font: 14.0px Times; color: #000000; -webkit-text-stroke: #000000}\n    p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Times; color: #000000; -webkit-text-stroke: #000000}\n    p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Times; color: #000000; -webkit-text-stroke: #000000; min-height: 18.0px}\n    p.p6 {margin: 0.0px 0.0px 12.0px 0.0px; font: 14.0px Times; color: #000000; -webkit-text-stroke: #000000; min-height: 18.0px}\n    span.s1 {font-kerning: none}\n    span.s2 {font: 14.0px Times; text-decoration: underline ; font-kerning: none; color: #0000ee; -webkit-text-stroke: 0px #0000ee}\n  </style>\n</head>\n<body>\n<p class=\"p1\"><span class=\"s1\"><b>Inf 43: Introduction to Software Engineering</b></span></p>\n<p class=\"p2\"><span class=\"s1\"><b>Spring, 2015<br>\nHomework 3: Black-Box Testing of ZotMyHealth<br>\nDue Tuesday, June 2, 11:55pm (through EEE) <span class=\"Apple-converted-space\">\u00a0</span></b></span></p>\n<p class=\"p2\"><span class=\"s1\"><br>\n</span></p>\n<p class=\"p3\"><span class=\"s1\">This assignment is about testing, specifically partitioning the test-input domain for several requirements of your choice.</span></p>\n<p class=\"p3\"><span class=\"s1\">For this assignment, you are required to plan for testing of the ZotMyHealth system using a \"black box\" or specification-based testing approach. In particular, you will develop tests for two of the use cases for ZotMyHealth, listed below. (These two use cases were not necessarily given in the interviews, so don't worry if you did not include them in your requirements specification.) You will not execute any test cases since there is no code available. Use the following two use cases for ZotMyHealth as the requirements specification for this assignment.</span></p>\n<p class=\"p3\"><span class=\"s1\"><br>\n</span></p>\n<p class=\"p3\"><span class=\"s1\"><b>Use Case 1: Calculate Body Mass Index (BMI)</b></span></p>\n<p class=\"p3\"><span class=\"s1\">In this use case, the user asks the system to calculate their BMI. To accomplish this, the user must input three items:</span></p>\n<p class=\"p3\"><span class=\"s1\">1. The \u201cfeet\u201d portion of their height (must be a valid non-negative number, or else the user will get an error message)</span></p>\n<p class=\"p3\"><span class=\"s1\">2. The \u201cinches\u201d portion of their height (must be a valid non-negative number, or else the user will get an error message)</span></p>\n<p class=\"p3\"><span class=\"s1\">3. Their weight in pounds (must be a valid non-negative number, or else the user will get an error message)</span></p>\n<p class=\"p3\"><span class=\"s1\">Once all three items are inputted, the user can ask the system to calculate the BMI. Assume that the user interface does not allow any of these three items to be blank (e.g., the button to calculate BMI is grayed out unless all three items are entered.) (Hint: none of your test cases should include a blank entry!)</span></p>\n<p class=\"p3\"><span class=\"s1\">The output of this use case would be their BMI as a floating point number with exactly one digit after the decimal point (round to the nearest tenth). The system should calculate BMI using the following formula:</span></p>\n<p class=\"p3\"><span class=\"s1\">(weight in pounds * 703) / ((height in inches) ^2)</span></p>\n<p class=\"p4\"><span class=\"s1\">For example, for a 6-foot, 3-inch person with a weight of 215 pounds, the formula would become:</span></p>\n<p class=\"p5\"><span class=\"s1\"></span><br></p>\n<p class=\"p4\"><span class=\"s1\">(215 * 703) / (75 ^2) = 151,145 / 5,625 = 26.9</span></p>\n<p class=\"p5\"><span class=\"s1\"></span><br></p>\n<p class=\"p4\"><span class=\"s1\">Thus, a BMI of 26.9 would be calculated for these inputs.</span></p>\n<p class=\"p5\"><span class=\"s1\"></span><br></p>\n<p class=\"p4\"><span class=\"s1\">*Note: Regardless of what your basis is for a particular test case, all test cases for this use case must consist of all three items (feet, inches, weight)</span></p>\n<p class=\"p4\"><span class=\"s1\">*Note 2: If the input results in division by 0, \u201cNaN\u201d is displayed as the BMI.</span></p>\n<p class=\"p3\"><span class=\"s1\"><br>\n</span></p>\n<p class=\"p3\"><span class=\"s1\"><b>Use Case 2: Get Workout Recommendations</b></span></p>\n<p class=\"p3\"><span class=\"s1\">In this use case, the user clicks a button to ask the system to evaluate their workout patterns and give them recommendations for how to be healthier based on these patterns.<span class=\"Apple-converted-space\">\u00a0</span></span></p>\n<p class=\"p3\"><span class=\"s1\">The algorithm for this function should perform as follows:</span></p>\n<p class=\"p3\"><span class=\"s1\">* If there are less than five consecutive days of workout tracking (whether there are actually workouts recorded on those days or not), they will get an error message. We can call this message ERROR.</span></p>\n<p class=\"p3\"><span class=\"s1\">* If the user has worked out at least an average of 30 minutes per day over the last five days (including the current day), the system will give them an encouraging message (e.g., \u201cYour workout patterns look good. Keep up the good work!\u201d). We can call this message GOOD_JOB.</span></p>\n<p class=\"p3\"><span class=\"s1\">* If the user has worked out less than an average of 30 minutes per day over the last five days (including the current day), the system will give them a message that recommends they work out at least 30 minutes per day. We can call this message WORKOUT_MORE).</span></p>\n<p class=\"p6\"><span class=\"s1\"></span><br></p>\n<p class=\"p3\"><span class=\"s1\">The input for your test cases is the set of workout data for the past 5 days, where:</span></p>\n<p class=\"p3\"><span class=\"s1\">-each day can contain 0 or more workouts</span></p>\n<p class=\"p3\"><span class=\"s1\">-each workout has a name and a duration (in minutes); assume this is always a positive integer</span></p>\n<p class=\"p6\"><span class=\"s1\"></span><br></p>\n<p class=\"p3\"><span class=\"s1\">For example, one of my test case inputs might be:<span class=\"Apple-converted-space\">\u00a0</span></span></p>\n<p class=\"p3\"><span class=\"s1\">{Day 1: jogging 30 minutes</span></p>\n<p class=\"p3\"><span class=\"s1\">Day 2: jogging 20 minutes, yoga 30 minutes<span class=\"Apple-converted-space\">\u00a0</span></span></p>\n<p class=\"p3\"><span class=\"s1\">Day 3: (none)</span></p>\n<p class=\"p3\"><span class=\"s1\">Day 4: weight lifting 60 minutes<span class=\"Apple-converted-space\">\u00a0</span></span></p>\n<p class=\"p3\"><span class=\"s1\">Day 5: (none)}.<span class=\"Apple-converted-space\">\u00a0</span></span></p>\n<p class=\"p3\"><span class=\"s1\">The expected output of this test case would be WORKOUT_MORE, since the average of the 5 days is only 28 minutes of exercise per day.<span class=\"Apple-converted-space\">\u00a0</span></span></p>\n<p class=\"p6\"><span class=\"s1\"></span><br></p>\n<p class=\"p3\"><span class=\"s1\">As another example, if the user only started tracking workouts 3 days ago, the test case input might look like:</span></p>\n<p class=\"p3\"><span class=\"s1\">{Day 1: untracked</span></p>\n<p class=\"p3\"><span class=\"s1\">Day 2: untracked</span></p>\n<p class=\"p3\"><span class=\"s1\">Day 3: weight lifting 45 minutes</span></p>\n<p class=\"p3\"><span class=\"s1\">Day 4: (none)</span></p>\n<p class=\"p3\"><span class=\"s1\">Day 5: ballet 60 minutes}.</span></p>\n<p class=\"p3\"><span class=\"s1\">The expected output of this test case would be ERROR, since less than five consecutive days have been tracked.</span></p>\n<p class=\"p3\"><span class=\"s1\"><br>\n</span></p>\n<p class=\"p3\"><span class=\"s1\">You will follow the equivalence class partitioning approach to black box testing. For each of these two use cases, determine exactly three bases, making sure that each of them is a reasonable criterion that can be used to divide the domain of possible test cases into interesting subdomains. For each basis, <b>list at least three subdomains and two test cases for each subdomain</b>. (&lt;- DO NOT OVERLOOK THIS REQUIREMENT\u2014YOU WILL LOSE BIG POINTS IF YOU DO!) Make sure your subdomains cover the whole range of possible inputs. You should avoid overlapping your subdomains whenever possible.</span></p>\n<p class=\"p3\"><span class=\"s1\">Record your test cases in a collection of 6 test matrices. Your homework should start from the <a href=\"http://www.ics.uci.edu/~emilyo/teaching/info43s2015/homeworks/Homework3Template.docx\"><span class=\"s2\">Homework 3 template</span></a>. DO NOT CHANGE THE FORMAT OF THE TESTING MATRIX. You can add/remove space in between the matrices to keep all of each table on one page, and you can add/remove <b>rows</b> (but not columns) from the matrices. No other edits are allowed. If you do, you will be deducted points. (If you see that an edit is necessary, ask me about it first to makes sure that it's ok.)</span></p>\n<p class=\"p3\"><span class=\"s1\"><br>\n</span></p>\n</body>\n</html>\n", "encoding": "utf-8"}