{"url": "https://www.ics.uci.edu/~aburtsev/250P/2019winter/hw/hw4.html", "content": "<HTML>\n<HEAD>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=US-ASCII\">\n<TITLE>250P Computer Systems Architecture</TITLE>\n<LINK HREF=\"./css/main.css\" TYPE=\"text/css\" REL=\"stylesheet\">\n<META NAME=\"Description\" CONTENT=\"cs250P Computer Systems Architecture (Anton Burtsev)\">\n<META NAME=\"Keywords\" CONTENT=\"Anton Burtsev, Burtsev, Anton, cs250P\">\n<SCRIPT SRC=\"./scripts/image_switcher.js\" LANGUAGE=\"JavaScript\"></SCRIPT>\n</HEAD>\n\n<BODY BGCOLOR=\"#FFFFFF\" LEFTMARGIN=\"0\" TOPMARGIN=\"0\" MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\">\n\t<TABLE  ID=\"text\" ALIGN=\"CENTER\" WIDTH=\"600\" BORDER=\"0\" CELLPADDING=\"0\" CELLSPACING=\"0\">\n\t<TR>\n\t\t<TD ALIGN=\"LEFT\" BGCOLOR=\"#FFFFFF\"><!-- top margin --> \n\t\t\t<IMG SRC=\"./images/spacer.gif\" WIDTH=\"100%\" HEIGHT=\"15\" ALT=\"\" BORDER=\"0\"/>\n\t\t</TD>\n\t</TR>\n\t<TR>\n\t<TD>\n\t\t<DIV ID=\"tech_nav\">\n\t\t\t<A HREF=\"../index.html\">Home</A>\n\t\t\t<IMG SRC=\"./images/spacer.gif\" WIDTH=\"100%\" HEIGHT=\"30\" ALT=\"\" BORDER=\"0\"/>\n\t\t</DIV>\n\t</TD>\n\t</TR>\t\n\t<TR>\n\t<TD COLSPAN=\"4\" ALIGN=\"LEFT\" BGCOLOR=\"#FFFFFF\">\n\n\n\n\t\t<P>\n\n<h1>HW4: Caches and Cache-Coherence</h1>\n\n<p><b>Note:</b>\n  Make reasonable assumptions where necessary and clearly state them.\n  Feel free to discuss problems with classmates, but the only written material\n  that you may consult while writing your solutions are the textbook, lecture\n  notes, and lecture slides.\n  <p>\n\n\n<h3> Memory access times</h3> \n\n<p>\nConsider a processor and a program that would have an IPC of 1 with a\nperfect 1-cycle L1 cache.  Assume that each additional cycle for cache/memory\naccess causes program execution time to increase by one cycle.  Assume the\nfollowing MPKIs and latencies for the following caches: <br>\n<ul>\n<li> L1: 32 KB: 1-cycle: 80 MPKI\n<li> L2: 256 KB: 10-cycle: 50 MPKI\n<li> L3: 2 MB: 30-cycle: 20 MPKI\n<li> L4: 32 MB: 100-cycle: 5 MPKI\n<li> Memory: 250-cycles\n</ul>\nEstimate the program execution times for the following cache configurations:\n<ol>\n<li> L1-L2-L3-L4\n<li> L1-L2-L3\n<li> L2-L3-L4\n<li> L1-L2-L4\n</ol>\n\n\n\n<h3> Cache Organization</h3>\n\nA 64 MB L3 cache has a 128 byte line (block) size and is 32-way set-associative.\nHow many sets does the cache have? How many bits are used for the offset,\nindex, and tag, assuming that the CPU provides 48-bit addresses?\nHow large is the tag array? (If you do not explain your steps, you will not\nreceive partial credit for an incorrect answer.)\n\n\n\n<h3>Cache Miss Rates </h3>\n\nFor the following access pattern, (i) indicate if each access is a hit or miss.\n(ii) What is the hit rate?\nAssume that the cache has 2 sets and is 2-way set-associative.  Assume that\nblock A maps to set 0, B to set 1, C to set 0, D to set 1, E to set 0, F\nto set 1.  Assume an LRU replacement policy.  \n<p>\nDoes the hit rate improve\nif you assume a fully-associative cache of the same size (again, indicate \nif each access is a hit or a miss)?\n<p>\nAccess pattern: ABCBABECADBCAFDBCEA\n\n\n\n<h3>Virtually Indexed Cache</h3>\n\nAssume that the OS uses a page size of 8 KB.  Assume that your L1\ncache must be 4-way set-associative, and the cache line size is 64 bytes.  \nIf you're trying to correctly implement a\nvirtually indexed physically tagged cache (with no additional support from\nthe OS), what is the largest L1 cache that you can design?\n\n<h3> Snooping-Based Cache Coherence</h3>\n\nConsider a symmetric shared-memory multiprocessor (3 processors\nsharing a bus) implementing a snooping cache coherence protocol such\nas the one discussed in class. For each of\nthe events below, explain the coherence protocol steps (does the cache flag\na hit/miss, what request is placed on the bus, who responds, is a writeback\nrequired, etc.) and mention\nthe eventual state of the data block in the caches of each of the 3 processors.\nAssume that the caches are direct-mapped and that each cache line only\nstores one word and that words X and Y map to the same cache line\nin each cache (in other words, X and Y cannot both be in the cache at the\nsame time). At the start, X and Y are not in any of the three caches.\n<p>\n<font size=\"2\" face=\"Verdana\">\nP1:  Write  X <br>\nP2:  Write  X <br>\nP3:  Read X <br>\nP2:  Read X <br>\nP3:  Write  X <br>\nP3:  Read  Y <br>\nP2:  Write Y <br>\n</font>\n<p>\n\n\n<h3>Subimt</h3>\n\n<p>Submit your solution through Gradescope <a\nhref=\"https://www.gradescope.com/courses/39177\">HW4</a> (as a PDF file (please\nmark which parts of the PDF are used for each question (this can be done\nthrough Gradescope)). \n\n\n\n\t</TD>\t\t\t\n\t</TR>\n\t<TR>\n\t\t<TD ALIGN=\"LEFT\" BGCOLOR=\"#FFFFFF\"><!-- top margin --> \n\t\t\t<IMG SRC=\"./images/spacer.gif\" WIDTH=\"100%\" HEIGHT=\"15\" ALT=\"\" BORDER=\"0\"/>\n\t\t</TD>\n\t</TR>\n\t<TR>\n\t<TD COLSPAN=\"4\">\n\t\t<DIV ID=\"tech\">Updated: March, 2019</DIV>\n\t</TD>\n\t</TR>\n\t</TABLE>\n</BODY>\n</HTML>\n\n", "encoding": "ascii"}