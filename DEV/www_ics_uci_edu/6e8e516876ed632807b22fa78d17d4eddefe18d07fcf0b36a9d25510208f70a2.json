{"url": "https://www.ics.uci.edu/~amrm/slides/compiler/compiler/sld010.htm", "content": "\n<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->\n\n<HTML>\n<HEAD>\n\n<meta name=\"GENERATOR\" content=\"Microsoft Internet Assistant for Microsoft PowerPoint 97\">\n <TITLE>Semantics Retention - Effect</TITLE> \n</HEAD>\n\n<BODY     >\n\n<CENTER>\n<TABLE WIDTH=100%> \n     <TR> <TD WIDTH=100% ALIGN=CENTER>\n         <IMG SRC=\"img010.gif\" usemap=\"#Objmap\" WIDTH=640 HEIGHT=480 BORDER=0>\n     </TD> </TR>\n     <TR> <TD WIDTH=100% ALIGN=CENTER>\n         <A HREF=\"sld001.htm\"><IMG SRC=\"first.gif\" BORDER=0 ALT=\"First\"></A>\n         <A HREF=\"sld009.htm\"><IMG SRC=\"prev.gif\" BORDER=0 ALT=\"Previous\"></A>\n         <A HREF=\"sld011.htm\"><IMG SRC=\"next.gif\" BORDER=0 ALT=\"Next\"></A>\n         <A HREF=\"sld024.htm\"><IMG SRC=\"last.gif\" BORDER=0 ALT=\"Last\"></A>\n         <IMG SRC=\"space.gif\" BORDER=0>\n         <A HREF=\"index.htm\"><IMG SRC=\"info.gif\" BORDER=0 ALT=\"Index\"></A>\n         <A HREF=\"http://www.ics.uci.edu/~nicolau\"><IMG SRC=\"home.gif\" BORDER=0 ALT=\"Home\"></A>\n         <A HREF=\"tsld010.htm\"><IMG SRC=\"text.gif\" BORDER=0 ALT=\"Text\"></A>\n     </TD> </TR>\n</TABLE>\n<P>Slide 10 of 24</P>\n</CENTER>\n<!-- <UL>\nSource level semantics\n</UL><UL>\neliminate red dependencies;\n</UL><UL>\nalgorithm-level semantics\n</UL><UL>\neliminate blue dependencies</UL></P>\n<P><UL>\n<H2>Semantics Retention - Effect</H2>\n</UL></P>\n<P><UL>\nBest Schedules</UL></P>\n<P><UL>\nNeglecting semantics</UL></P>\n<P><UL>\nRetaining source-level\n</UL><UL>\nsemantics alone</UL></P>\n<P><UL>\nRetaining source and algorithm level semantics</UL></P>\n<P><UL>\niter(i)</UL></P>\n<P><UL>\niter(i+1)</UL></P>\n<P><UL>\niter(i+2)</UL></P>\n<P><UL>\nSemantics Hierarchy\n</UL><UL>\n\t\tROOT\n</UL><UL>\n\n</UL><UL>\n\tSTACK\t\tHEAP\n</UL><UL>\n\n</UL><UL>\n\n</UL><UL>\nstruct_type1*  struct_type2*   int   struct_type1   struct_type2\n</UL><UL>\n\n</UL><UL>\n\n</UL><UL>\n\n</UL><UL>\n    ctrl \t        node\t      i    j \t*ctrl \t *node\n</UL><UL>\n\t\t\t\t\t\n</UL><UL>\n \t\t\t  vec       cnt     data   next\t\t\t    \t\t\n</UL><UL>\n\t\t   \t{5, 7}    {1,3}   {4}    {8}</UL></P>\n<P><UL>\nC source\n</UL><UL>\nlist *node;\n</UL><UL>\ncontrol *ctrl;\n</UL><UL>\nwhile (\u2026){\n</UL><UL>\n node-&#062cnt++;\n</UL><UL>\n ctrl-&#062vec[i] += node-&#062data[j];\n</UL><UL>\n node = node-&#062next;}</UL></P>\n<P><UL>\nN-addr code\n</UL><UL>\n1: cnt = M[node + cntoffset]\n</UL><UL>\n2: cnt = cnt + 1\n</UL><UL>\n3: M[node + cntoffset] = cnt\n</UL><UL>\n4: d = M[node + dataoffset]\n</UL><UL>\n5: c = M[ctrl + vecioffset]\n</UL><UL>\n6: d = d + c\n</UL><UL>\n7: M[ctrl + vecioffset] = d\n</UL><UL>\n8: node = M[node + nextoffset]</UL></P>\n<P><UL>\nGCC generates N-addr\n</UL><UL>\ncode and Semantics\n</UL><UL>\nHierarchy</UL></P>\n<P>  -->\n</Body>\n</HTML>\n", "encoding": "Windows-1252"}