{"url": "https://www.ics.uci.edu/~theory/269/070220.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, Feb 20, 2007</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"\n521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a>\n\n<h2>CompSci 269S, Winter 2007: Theory Seminar</h2>\n\n<h3>Feb 20, 2007, 2:00pm, in ICS2 144</h3>\n\n<h1>\nMeshing in Fixed Dimension in near Optimal Work and Time\n</h1>\n\n<h2>Gary Miller, CMU</h2>\n\n<p>\n<b>Abstract:</b>\n<p>\nA new meshing algorithm will be presented for meshing with boundaries\nin any fixed dimension, Sparse Voronoi Refinement (SVR). The meshing\nproblem in 3D, for example, takes as input a a domain and a\ncollection\nof features(points, edges, and faces) and decomposes the domain into\ntetrahedra.\n\n<p>\nThere are four important properties that a meshing algorithm should\nhave:\n1) The tetrahedra should have good aspect ratio, no small angles.\n2) The mesh should conform to the features.\n3) The size should be competitive to an optimal-size mesh.\n4) The algorithm should be work and time competitive with a optimal\nalgorithm.\n\n<p>\nSVR is the first algorithm known to have have all four properties\neven\nin 3D for a reasonable assumption about the input.\n\n<p>\nOver the last 17 years computer scientists have been in the forefront\nin designing algorithms with guarantees for all four conditions,\nbeginning with the pioneering work of Bern, Eppstein, and Gilbert on\nquadtree meshing in 1990.  Their algorithm has all 4 guarantees for\n2D\npoints where the work is O(n log L/s + m).  Here L/s is the ratio of\nthe size of the domain over the smallest input feature. In 1993\nRuppert proposed a method called Delaunay Refinement which included\nguarantees for the first three conditions in 2D.\n\n<p>\nThe 3D octtree algorithms starts by insuring 1) always and finishes\nby\ninsuring 2), while Delaunay Refinement algorithms first insure 2)\nthen\nrefine until 1) is satisfied.  SVR can be viewed as\na compromise  by alternately insuring 1) and then 2).  SVR has\nsequential-time/work bounds of O(n log L/s + m) for inputs in any\nfixed dimension with piecewise-linear constraining (PLC) features.\nThe parallel time is O(log L/s log m)$ on an EREW PRAM, with the same\nwork.\nSVR is straightforward enough that it is likely to be extremely fast\nin practice.\n<p>\nThis represent joint work with Benoit Hudson and Todd Phillips\n\n\n</body>\n</html>\n", "encoding": "ascii"}