{"url": "https://www.ics.uci.edu/~eppstein/junkyard/euler/binary.html", "content": "<html><head>\n<title>Euler's Formula</title>\n</head><body>\n<h1><a href=\"http://www.ics.uci.edu/~eppstein/junkyard/\"><img src=\"../junkyard.gif\" align=center width=\"545\" height=\"45\" alt=\"The Geometry Junkyard\" border=0></a></h1>\n<hr>\n<h1>Euler's Formula,\nProof 15: Binary Homology\n</H1>\n\nPortions of the following proof are described by\n<a href=\"refs.html#Lak\">Lakatos</a> (who credits it to Poincar&eacute;)\nhowever Lakatos omits any detailed justification for the properties \nof the map b defined below, instead treating them as axioms\n(so the theorem he ends up proving is that\nthat Euler's formula is true of any polyhedron satisfying these axioms,\nbut he doesn't prove that this is true of convex polyhedra).\n<P>\nLike the <a href=\"shell.html\">shelling</a> proof,\nthis proof\ninterprets a polyhedron or polytope as a complex of polyhedral\nfaces of varying dimensions, with <I>f<sub>i</sub></I> denoting the number\nof faces of dimension i.  And like that proof,\nwe add two \"extra\" cells, one for the whole polytope\nand one for the \"empty face\", so <I>f</I><sub>-1</sub>=<I>f<sub>d</sub></I>=1.\n<P>\nWe interpret the subsets of faces of dimension <I>i</I>\nas a vector space over the two-element field GF(2),\nwith vector addition being performed by symmetric difference\nof subsets (also known as exclusive or).\nIn this way we get <I>d</I>+1 vector spaces V<sub><I>i</I></sub>,\nwith dimensions equal to <I>f<sub>i</sub></I>.\nThe sets of faces of the polytope can be interpreted as forming\nbases for these vector spaces.\n<P>\nThese spaces also come equipped with a linear mapping b taking\neach space V<sub><I>i</I></sub> to the next lower dimensional space,\ndefined on each face to be the set of its facets.\nWhen v is a sum of faces, b(v) is the sum of the corresponding\nsets of facets.\n(The empty face has no facets, and a vertex is defined\nto have the empty face as its only facet.)\nThis mapping has two very important properties:\n<OL>\n<LI>Boundaries have no boundaries.  In other words,\nfor any vector v, b(b(v))=0.\nIf v is a basis vector, corresponding to a single face of the polytope,\nthis is true because any <I>ridge</I> (face two dimensions lower than <I>v</I>)\nforms the boundary between two facets of <I>v</I>, and is therefore\ncancelled out in the calculation of b(b(v)).\nIn the special case of the empty face, b(v)=0 already and for any linear\nmap b(0)=0.  In the special case of a vertex, b(v) is the empty face\nand again b(b(v))=0.\nThe result follows as well for vectors other than the bases\nby linearity.\n<P>\n<LI>Any vector without a boundary is itself a boundary.\nIn other words, for any vector v, if b(v)=0, then v=b(w) for some w.\nIf v=0 then we can choose w=0 as well; for nonzero v\nwe prove this by analyzing the vectors of each dimension separately.\nIf v is in V<sub>-1</sub>, it must be the empty face itself\nand is the boundary of some vertex.\nIf v is in V<sub>0</sub>, it must consist of an even number of vertices\nfor b(v) to be zero.  These vertices can be paired up\nand connected by paths; then w can be taken to be the vector sum of\nthese paths.\nIf v is in V<sub>1</sub>, it forms a set of edges meeting an even number of\ntimes at each vertex; these edges can be grouped into Jordan curves\nand w can be taken to be the vector sum of regions bounded by these curves.\nIf v is in V<sub>2</sub>, it must be the whole set of facets of the polyhedron,\nsince we can find a path on the polyhedron boundary from any facet to\nany other facet (avoiding vertices), and none of the edges\ncrossed by this path can be in b(v).\nSo we can take w to be the single cell corresponding to the whole polyhedron.\nFinally, if v is a nonzero vector in V<sub>3</sub>, b(v) cannot be zero.\n</OL>\n<P>\nWith these preliminaries out of the way we are ready to\nbegin the proof that\nSum(-1<sup><I>i</I></sup> <I>f<sub>i</sub></I>)=0.\n<BLOCKQUOTE>\nLet B<sub><I>i</I></sub> denote the subspace of V<sub><I>i</I></sub> consisting\nof those vectors for which b(v)=0.\nThen the map b takes V<sub><I>i</I></sub> to B<sub><I>i</I>-1</sub>.\nWhenever we have a linear map of vector spaces,\nwe can use it to decompose the original space into\nits <I>nullspace</I> (the set of vectors mapped to zero,\nhere B<sub><I>i</I></sub>) and its orthogonal complement,\nwhich is mapped one-to-one onto the image of the map.\nThis tells us that\ndim(V<sub><I>i</I></sub>)=dim(B<sub><I>i</I></sub>)+dim(B<sub><I>i</I>-1</sub>).\nPlugging this expansion into the sum we are trying to evaluate\ngives\n<BLOCKQUOTE>\nSum(-1<sup><I>i</I></sup> <I>f<sub>i</sub></I>)\n\n= Sum(-1<sup><I>i</I></sup> (dim(B<sub><I>i</I></sub>) +\ndim(B<sub><I>i</I>-1</sub>)))\n</BLOCKQUOTE>\nwhich equals zero, because each term B<sub><I>i</I></sub>\nappears twice with opposite signs.\n</BLOCKQUOTE>\nCancelling the two extra parameters <I>f</I><sub>-1</sub> and\n<I>f</I><sub>3</sub> from\nthe sum gives the usual Euler formula.\nI suspect there is a more direct, dimensionless way of proving\nthat boundaryless vectors are themselves boundaries, but I don't see it\nand Lakatos doesn't describe it.\n<P>\n<I>Homology theory</I>, one of the foundation stones of\nalgebraic topology, is devoted to defining similar vector spaces and\nunderstanding\nthe extent to which the key equation\ndim(V<sub><I>i</I></sub>)=dim(B<sub><I>i</I></sub>)+dim(B<sub><I>i</I>-1</sub>)\nfails to be true in other topological spaces.\n<P><HR><P>\n<a href=\"/~eppstein/junkyard/euler/\">Proofs of Euler's Formula</a>.<BR>\nFrom the <a href=\"/~eppstein/junkyard/\">Geometry Junkyard</a>,\ncomputational\nand recreational geometry pointers.<BR>\n<a href=\"http://www.ics.uci.edu/~eppstein/\">David Eppstein</a>,\n<a href=\"http://www.ics.uci.edu/~theory/\">Theory Group</a>,\n<a href=\"http://www.ics.uci.edu/\">ICS</a>,\n<a href=\"http://www.uci.edu/\">UC Irvine</a>.<P>\n<SMALL>Semi-automatically\n<a href=\"http://www.ics.uci.edu/~eppstein/pubs/filter.html\">filtered</a>\nfrom a common source file.\nLast update: <!--#flastmod file=\"euler.ff\" -->.</SMALL>\n", "encoding": "ascii"}