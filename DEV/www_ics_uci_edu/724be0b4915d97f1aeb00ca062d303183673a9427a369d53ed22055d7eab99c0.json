{"url": "https://www.ics.uci.edu/~thornton/ics32/ProjectGuide/Project3/example.html", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!DOCTYPE html PUBLIC\r\n \"-//W3C//DTD XHTML 1.1//EN\"\r\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\r\n\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\r\n\r\n<head>\r\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\r\n<link rel=\"stylesheet\" href=\"../../course.css\" type=\"text/css\" />\r\n\r\n<title>ICS 32 Winter 2019, Project #3: Jack of All Trades, Example Implementation</title>\r\n</head>\r\n\r\n<body>\r\n\r\n<div class=\"navbar\">\r\n\r\n<p>\r\nICS 32 Winter 2019 |\r\n<a href=\"../../index.html\">News</a> |\r\n<a href=\"../../CourseReference.html\">Course Reference</a> |\r\n<a href=\"../../Schedule.html\">Schedule</a> |\r\n<a href=\"../../ProjectGuide\">Project Guide</a> |\r\n<a href=\"../../Notes\">Notes and Examples</a> |\r\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\r\n</p>\r\n\r\n<hr />\r\n\r\n</div>\r\n\r\n<div class=\"header\">\r\n\r\n<p>ICS 32 Winter 2019<br />\r\n   Project #3: <i>Jack of All Trades</i><br />\r\n   Example Implementation</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Background</p>\r\n\r\n<p>This example implementation is intended to allow you to experiment with a completed version of the project, so you can see the expected, correct output for a given input.  Using the example implementation is straightforward:</p>\r\n\r\n<ul>\r\n  <li>In the section marked <i>Input</i> below, type your desired input into the text area, then click the <b>Run</b> button below it.</li>\r\n  <li>If you type correct input &mdash; following the same rules as in the <a href=\"index.html\">project write-up</a> &mdash; then you should see the example implementation begin running, then display an output table.</li>\r\n  <li>If you type incorrect input, you'll instead see a brief description of what was wrong with it.</li>\r\n  <li>After you run one input, click the <b>Start Over</b> button that appears at the bottom to try another.</li>\r\n</ul>\r\n\r\n<p>There are a couple of things you should note about this example implementation that make it slightly different from what you're building.</p>\r\n\r\n<ul>\r\n  <li>The example implementation checks for the formatting of the input and attempts to provide error messages when the input is incorrect.  Your project, on the other hand, is not expected to handle incorrectly-formatted input at all; you can do anything you'd like (including program crashes), as we will not be testing invalid inputs.</li>\r\n  <li>Because the example implementation runs on a web page, it takes advantage of the formatting capabilities provided by web browsers to display the output in a clean, tabular form.  Your program's output may not be so nicely-formatted, since what you're writing is a tab-delimited output &mdash; and since tabs don't guarantee that things \"line up\" vertically.  What the tables outputted by the example implementation show you is where the tabs should go; your implementation should print a tab character every time the example implementation goes from one table cell to the next (on the same line) and a newline character every time the example implementation goes to the next line.</li>\r\n</ul>\r\n\r\n</div>\r\n\r\n<div id=\"iex32App\" />\r\n\r\n<script type=\"text/javascript\" src=\"iex32-1.0.3.js\"></script>\r\n\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}