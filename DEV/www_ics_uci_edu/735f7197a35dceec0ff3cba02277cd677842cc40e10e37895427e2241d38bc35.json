{"url": "https://www.ics.uci.edu/~kay/pubs/writing.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\">\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\">\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Monday, February 23, 1998 3:40 PM\">\n<TITLE>Computer Scientists Can Teach Writing</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERDATA\" CONTENT=\"6E71595E\">\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"communications skills, writing, advanced courses, technical writing\">\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"A course in communications skills for computer science majors, offered in the Department of Information and Computer Science at the University of California, Irvine.  This is an instance of writing across the curriculum.\">\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<A NAME=\"_top\"></A>\n<P>\n<IMG SRC=\"ud_writing_gt_files/computer_scientists_can_t.gif\" WIDTH=503 HEIGHT=145 HSPACE=6 VSPACE=6 ALT=\"Computer Scientists Can Teach Writing:\">\n</P>\n<BR><BR><BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Key Words:</B></FONT><FONT FACE=\"Times\" SIZE=2>\ncommunications skills, writing, advanced courses, technical writing</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Abstract</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The author&#39;s institution requires all students\nto take one course that concentrates on writing at the upper division (junior\nor senior) level. The computer science department offers one such course,\ntaught by computer scientists. It concentrates on communications issues\nrelevant to computer scientists and computer professionals, going beyond\ntraditional &quot;technical writing&quot; to give students experience in\noral presentation, document design, and writing in forms appropriate for\nvarious audiences. This course takes advantage of analogies between writing\nand software development and motivates computer science students to pay\nmore careful attention to their writing.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Background</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>Faculty often lament that their students lack\ngood writing skills. Traditionally, computer science students take courses\nin composition offered by the English department during their first year\nand have few later opportunities to write extensively, particularly on topics\nin computing. In recent years the community of rhetoric and composition\neducators has addressed poor student writing by enhancing and expanding\non traditional &quot;freshman composition&quot; in various ways, which computer\nscience faculty wishing to improve students&#39; writing might profitably\nexplore. </FONT><A HREF=\"ud_writing_gt_files/endnotes.html#_77\">Endnotes</A><A HREF=\"ud_writing_gt_files/endnotes.html#_78\">Endnotes</A></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>One common practice, known as &quot;writing across\nthe curriculum,&quot; encourages instructors in all disciplines to include\nwriting assignments in their courses. Specialized composition courses alone,\nwhile necessary and valuable, leave the impression with many students that\nclear, careful writing is something only English teachers care about. Computer\nscience departments have adopted this practice. </FONT><A HREF=\"ud_writing_gt_files/endnotes.html#_79\">Endnotes</A></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>At the author&#39;s institution, a long-standing\ncampuswide requirement complements and extends &quot;writing across the\ncurriculum&quot;, mandating that every student take one upper-division course\nthat both requires a significant amount of writing and addresses writing-related\nissues as part of the course. Across campus, these courses share the philosophy\nthat at the upper-division level, students benefit from hearing faculty\nin their own discipline describe the variety and quality of writing expected\nof practitioners in that discipline, and from actually doing that kind of\nwriting. To satisfy the campuswide requirement, a course must be offered\nat the upper division (junior or senior) level. It must require that students\nsubmit at least 4000 words of revised prose--that is, prose that has been\nevaluated and returned to the students for revision and resubmission. The\ncampus encourages departments to maintain a student-faculty ratio of no\nmore than 20:1 in these courses, and to staff them with full-time faculty.\nCourses that satisfy this requirement may cover writing as an adjunct to\nother subject matter or may focus primarily on communications skills relevant\nto their discipline.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The author&#39;s department (of computer science)\noffers such a course. Beyond traditional &quot;technical writing,&quot;\nthis course covers a broad range of communications issues relevant to computer\nscientists, including oral work, writing for electronic media, and presentation\ngraphics.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Course Goals and Structure</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The course has four main goals:</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Provide a forum where writing is the main focus,\nrather than the usual afterthought of throwing together a project&#39;s\ndocumentation in the last half hour before it&#39;s due.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Concentrate on the appropriate tone and level\nfor a document&#39;s specific audience (e.g., management, novice users,\ntechnical staff)</FONT></P>\n<BR><BR>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Explore writing documents of different sizes\n(analogous to &quot;programming in the large&quot; vs. &quot;programming\nin the small&quot;): Infinitesimal, such as Email subject lines; small,\nsuch as Email, memos, or brochures; and medium, such as proposals, papers,\nor technical reports.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Practice writing in a variety of forms common\nto computer professionals, such as the following (not all of which would\nbe required in a single offering of the course): Proposals or recommendations,\ntechnical arguments or policy statements, research papers, grant proposals,\noral presentations, use of presentation software, effective graphics and\ndocument design, and writing for electronic media such as the Web.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Common Objections</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>Faculty in the sciences commonly raise these objections\nto teaching courses that focus on writing:</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>&quot;Leave the English teaching to the experts.&quot;\nIndeed, when the author was first asked to teach this course, his reaction\nwas to recall his own dissatisfaction with attempts by non-computer scientists\nto teach programming. But a computer scientist can reach advanced computer\nscience students--by taking advantage of their common knowledge and experience\nand by making assignments that require technical expertise and are characteristic\nof the discipline--much more effectively than the typical composition expert\nwho lacks a computing background. Successful academic computer scientists\nshould all possess the requisite writing ability to teach this kind of course--the\nability to recognize clarity, cogency, and good organization. Detailed grasp\nof grammatical terms and rules is much less important in a course such as\nthis one.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>&quot;I don&#39;t want to correct thousands of\nmechanical errors.&quot; You shouldn&#39;t and you needn&#39;t. A course\nat this level should focus on organization, content, and appropriateness\nfor the intended audience; the instructor must exercise some forbearance\n(to avoid becoming obsessed with syntax) and some redirection (of students\nwith significant special needs to other, more appropriate resources on campus)\nto avoid being drawn down into a black hole of red pencil. In a later section\nwe address some approaches to handling students&#39; mechanical mistakes.\nInstructors should bear in mind that students at this level have passed\nlower division writing--they have had experience writing at the college\nlevel. Upper-division instructors should hold them to that standard; it\nmay be lower than our ideal, but it is typically higher than the level of\nwriting students think they can get away with when they&#39;re not being\ngraded on their writing. When instructors make clear that written work will\nnot be accepted unless students take the time to meet minimum standards\nof correctness and polish, the quality of the work does improve markedly.\n(Computer science instructors unfamiliar with the standards of their institution&#39;s\ncomposition program might consider meeting with those who run it. They can\nprovide samples of passing work and possibly style sheets or other guidelines\nthat they expect their students to follow.)</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>&quot;I have too many non-native speakers.&quot;\nIn the author&#39;s personal experience, some of the top grades in each\noffering of the course go to non-native speakers of English. Native language\nis largely independent of the primary focus of this course on cogent organization,\nwhich can shine through most minor syntactic flaws that are due to native\nlanguage differences (as opposed to mere carelessness). Below we address\nEnglish as a Second Language (ESL) issues further.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>&quot;It takes years of schooling and practice\nto develop good writing skills; how can one course make my students good\nwriters?&quot; It can&#39;t, but it can make them <I>better</I> writers,\nit can motivate them to pay closer attention and devote more time to their\nwriting, it can show them models of writing in their own area, and it can\ndispel myths like these: &quot;Writing isn&#39;t important for computer\nscience,&quot; &quot;I can use a grammar/spell checker,&quot; &quot;I&#39;m\nnot a born writer, so I&#39;ll never be a good writer&quot; &quot;I&#39;m\nnot a native speaker, so I&#39;ll never be a good writer.&quot; Writing\nis a skill, and skills require practice to master. Any student will show\nimprovement if he or she spends on this course half as much time as would\nbe required for any programming project course at the same level.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Teaching Strategies</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The following strategies make teaching a course\nlike this one feasible, effective, and even surprisingly pleasant for a\ncomputer scientist:</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Require revisions. Writing is an iterative process\nof enhancement, revision, and polish. Students should no more expect to\nwhip off perfect prose in one pass than they would perfect code. (After\nall, natural languages such as English are much <I>more</I> complex and\nless completely defined than formal languages such as C++ or Scheme.) Each\nstudent should submit a draft (not a rough drafts, but a serious attempt\nat quality work), the instructor (or in some cases other students, as described\nbelow) should read the draft, make comments, and return it to the author\nfor use in preparing the final version.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Use peer editing, in which students read each\nother&#39;s drafts, identifying confusing passages and making suggestions\nfor revision. Students become inured to critical comments by faculty; their\npeers&#39; confusion is harder to disregard.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* In students&#39; writing, distinguish syntax\nand mechanical errors from flaws in the content or organization. Give separate\ngrades for each, and keep the comments in each category separate (e.g.,\nin different colors or in the left vs. the right margin).</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Don&#39;t be a human English compiler, red-penciling\nevery syntax or mechanical mistake and refusing to proceed with evaluation\nat a deeper level. Mark mechanical errors on the first page, or the first\nparagraph, or the first ten problems, and then stop. If you can read the\nrest of the paper for its content and organization despite the remaining\nerrors, do so; if not, require the student to polish the writing and resubmit\nit. As mentioned earlier, upper-division students should have mastered the\nmechanics, and that level of mastery should be expected and enforced. Indeed,\nwe do students a disservice when we don&#39;t base a small part of every\nassignment grade in every class on the quality of the writing, because it\ngives the impression that we don&#39;t think that quality matters. Most\ninstitutions have learning skills centers or other resources to which you\ncan refer students who need in-depth or remedial work on the mechanics.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Try to recognize errors that are due to a student&#39;s\nnative language not being English. Research indicates that second-language\nlearning follows an ordered progression over many years, which cannot be\ngreatly compressed, because some language features take longer than others\nto assimilate. You still must point out the errors and grade accordingly,\nbut it should be understood that they stem from a long-term process rather\nthan carelessness or weakness on the student&#39;s part. This requires that\nthe instructor learn to recognize errors typical to native speakers of various\nlanguages; ESL instructors may be able to provide this information.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* As a long-term strategy for improving students&#39;\nwriting, encourage them to read broadly and frequently: the newspaper instead\nof the television news, a recreational novel rather than a movie or entertainment\non television.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Representative Assignments</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The following assignments comprise a typical offering\nof this course (in a ten-week quarter):</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* &quot;<A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/editing.html\">Warm-up</A>&quot;--Edit\na few short passages for clarity, with a focus on the most common pitfalls\nand solecisms.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* &quot;<A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/trimming.html\">Trimming the Fat</A>&quot;--Choose\na five-page (1500-word) passage and rewrite it in three pages (900 words),\nmaintaining the content.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* &quot;<A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/instructions.html\">Writing Instructions</A>&quot;--Build\nsome object using Tinkertoys, Lego, or some other system with more than\none type of component that can be combined in more than one way. Write a\nmanual that explains how to build this object. Bring your draft manual and\nthe disassembled pieces to class on a specified date, when you will give\nboth to a classmate who will try to build your object following your manual,\nwithout any in-person assistance from you.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>This assignment follows most closely the technical\nwriting tradition. Having other students try to follow the manual demonstrates\nthe importance of clear, unambiguous writing in a tangible way.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* &quot;<A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/influencing.html\">Influencing Policy</A>&quot;--Write\na letter to a policy maker (either a government official or a newspaper)\ntaking a position on a technical issue and backing it up with the best reasoning\nyou can.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>We encourage students to start by listing their\nposition and the points that support it in the form of a syllogism.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* &quot;<A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/graphicsactivity.html\">Graphics Activity</A>&quot;--Take\na small supplied set of data and, using presentation graphics software,\nproduce a variety of charts that support different perspectives or points\nof view.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* &quot;<A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/changingsys.html\">Changing the System</A>&quot;--Choose\na software system you&#39;re familiar with and examine it from multiple\nperspectives: introducing new users to the system, proposing changes to\nthe system, and promoting the changed system to its users. This assignment\nhas four separate parts:</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>1. An <A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/presentationreview.html\">oral synopsis</A>\nof the system and the changes you intend to propose (audience: our class,\nwho may know something about the software and who may have suggestions about\nthe proposed changes)</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>2. An <A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/changingsys-editintro.html\">introduction</A>,\nboth written and oral, to the current system (intended audience: novices,\nunfamiliar with the software, who need to learn its purpose and basic functionality)</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>3. A formal <A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/changingsys-editprop.html\">proposal</A>,\nwritten and oral, describing and justifying the changes you propose (audience:\nthe &quot;higher-ups&quot; who decide what changes should be supported;\nthey know about the software but must be convinced of the need to change\nand the feasibility of the changes you propose)</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>4. A <A HREF=\"http://www.ics.uci.edu/~kay/courses/139w/changingsys-editpromo.html\">brochure, flyer, or web page</A>\nand a short oral presentation describing and promoting your changes (audience:\nthe system&#39;s current users, who know what it does now but need to know\nwhat the changes mean)</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>This assignment spans most of the term, with class\ndays devoted to the oral components and drafts required for the written\nparts. Each of the four parts addresses a different aspect of the same subject\nmatter, allowing students to concentrate on the differences in audience\nand presentation level.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Conclusions</B></FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>Writing is very much like software development,\nand the similarities help computer science students appreciate what they\nmust do as writers.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Both involve a logical, carefully organized\nexposition of complex ideas. Students understand top-down design and stepwise\nrefinement of software; approaching prose the same way should come easily.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Practitioners of both must follow a set of language\nrules (somewhat richer, more powerful, and less completely defined for English\nthan for formal languages).</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Both are iterative processes, subject to successive\nrefinements. Advanced computer science students would ridicule the idea\nof writing code by starting at the top of a blank screen and proceeding\nlinearly until finished, with a completed, correct program as the result,\nyet often they expect to write prose in exactly that one-pass fashion.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>* Writing, like computing, is based on a hierarchy\nof abstraction levels from the lowest, typography and document design, through\nspelling, punctuation, syntax, usage, style and tone, organization, content\nand facts, all the way up to the document&#39;s ultimate effectiveness (which\ndepends, as does software&#39;s ease of use, not only on the author but\non the audience).</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>This course has been successful and the students,\nwhile reluctant at the outset, appreciate the variety of experiences the\ncourse provides and are grateful to have them first in school rather than\non the job. Students also appreciate that their instructor is primarily\na computer scientist. After many years in school, they become desensitized\nto English teachers&#39; criticism of their writing and they develop various\ndefense mechanisms (&quot;Yes, but <I>I</I> can write network management\ncode in C++&quot;); when someone they respect technically tells them that\nwriting is important, it captures their attention.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The course described here should add to the menu\nof writing experiences available to (and perhaps required of) our students.\nThis course is not intended to supplant or replace any other program designed\nto improve students&#39; writing, such as pervasive &quot;writing across\nthe curriculum,&quot; capstone projects, senior theses, or specific courses\nin technical writing, documentation, or oral presentations. </FONT><A HREF=\"ud_writing_gt_files/endnotes.html#_76\">Endnotes</A><FONT FACE=\"Times\" SIZE=2>\nThe greater the quantity and variety of writing experiences students have,\nthe more their writing will improve.</FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B><A HREF=\"http://www.ics.uci.edu/~kay/pubs/ud_writing_gt_files/endnotes.html\">References</A></B></FONT></P>\n<BR CLEAR=ALL>\n</BODY>\n</HTML>\n", "encoding": "ascii"}