{"url": "https://www.ics.uci.edu/~eppstein/pubs/tsp.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nTraveling salesman and hamiltonian cycle problems \n</h2>\n<ul>\n<li><b>Worst-case bounds for subadditive geometric graphs</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=161018\"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 183&ndash;188.</a>\n<p>\nFor many geometric graph problems for points in the unit square,\nsuch as <a href=\"mst.html\">minimum spanning trees</a>,\n<a href=\"graph-match.html\">matching</a>, and\n<a href=\"tsp.html\">traveling salesmen</a>,\nthe sum of edge lengths is O(sqrt <i>n</i>) and the sum of\n<i>d</i>th powers of edge lengths is O(log <i>n</i>).\nWe provide a \"gap theorem\" showing that if these bounds do not hold\nfor a class of graphs, both sums will instead be Omega(<i>n</i>).\nFor traveling salesmen the O(log <i>n</i>) bound is tight\nbut for some other graphs the sum of\n<i>d</i>th powers of edge lengths is O(1).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Worst-case bounds for subadditive geometric graphs\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Worst-case-bounds-for-subadditive-geometric-graphs.html\">Citations</a> &ndash;\n<a href=\"BerEpp-SCG-93.pdf\">Preprint of SCG version</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern93worstcase.html\">CiteSeer</a>)\n<p>\n<li><b>Approximation algorithms for geometric problems</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//ieor.berkeley.edu/~hochbaum/html/book-aanp.html\">\n<i>Approximation Algorithms for NP-hard Problems</i></a>,\n<a href=\"//ieor.berkeley.edu/~hochbaum/\">D. Hochbaum</a>, ed.,\nPWS Publishing, 1996, pp. 296&ndash;345.\n<p>\nConsiders problems for which no polynomial-time exact algorithms\nare known, and concentrates on bounds for worst-case approximation\nratios, especially those depending intrinsically on geometry\nrather than on more general graph theoretic or metric space formulations.\nIncludes sections on the\n<a href=\"tsp.html\">traveling salesman problem</a>,\nSteiner trees,\n<a href=\"geom-tri.html\">minimum weight triangulation</a>,\nclustering, and separation problems.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Approximation algorithms for geometric problems\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Approximation-algorithms-for-geometric-problems.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=241946\">ACM DL</a>)\n<p>\n<li><b>Fast hierarchical\nclustering and other applications of dynamic closest pairs</b>.<br>\nD. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=315030\">\n<i>9th ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1998, pp. 619&ndash;628</a>.<br>\n<a href=\"//arXiv.org/abs/cs.DS/9912014\">arXiv:cs.DS/9912014</a>.<br>\n<a href=\"//doi.org/10.1145/351827.351829\"><i>J. Experimental\nAlgorithmics</i> 5 (1): 1&ndash;23, 2000</a>.\n<p>\nThis paper shows how to use my dynamic closest pair data structure\nfrom \"<a href=\"p-dynmst.html\">Dynamic Euclidean minimum\nspanning trees</a>\" for some non-geometric problems including\nhierarchical clustering,\n<a href=\"graph-match.html\">greedy matching</a>,\nand <a href=\"tsp.html\">TSP heuristics</a>.\nExperiments show variants of my data structures to be faster than\npreviously used heuristics.\n<p>(<a href=\"../projects/pairs/\">Source code and experimental data</a> &ndash; \n<a href=\"/~eppstein/bibs/eppstein.html#Fast hierarchical clustering and other applications of dynamic closest pairs\">BibTeX</a> &ndash;\n<a href=\"/~eppstein/projects/pairs/Papers/Epp-SODA-98.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Fast-hierarchical-clustering-and-other-applications-of-dynamic-closest-pairs.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein98fast.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=351829\">ACM DL</a> &ndash;\n<a href=\"//www.jea.acm.org/2000/EppsteinDynamic/\">JEA home page</a>)\n<p>\n<li><b>The traveling salesman problem for cubic graphs</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0302030\">arXiv:cs.DS/0302030</a>.<br>\n<i>8th Worksh. Algorithms and Data\nStructures,</i> Ottawa, 2003.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 2748, 2003, pp. 307&ndash;318.\n<i>J. Graph Algorithms and Applications</i> 11 (1): 61&ndash;81, 2007.\n<p>\nWe find improved <a href=\"exponential.html\">exponential-time\nalgorithms</a> for exact solution of the\n<a href=\"tsp.html\">traveling salesman problem</a>\non graphs of maximum degree three and four.\nWe also consider related problems including counting the number of\nHamiltonian cycles in such graphs.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#The traveling salesman problem for cubic graphs\">BibTeX</a> &ndash;\n<a href=\"Epp-WADS-03-talk.pdf\">WADS talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/The-traveling-salesman-problem-for-cubic-graphs.html\">Citations</a>)\n<p>\n<li><b>Single-strip triangulation of manifolds with arbitrary topology.</b><br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~gopi/\">M. Gopi</a>.<br>\n<a href=\"//videos.compgeom.org/\">13th Video Review of\nComputational Geometry, 2004</a>.<br>\n<i>20th ACM Symp. Comp. Geom.,</i> Brooklyn, 2004, pp. 455&ndash;456 (abstract\nfor video).<br>\n<i>25th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '04)</i>,\nGrenoble, 2004 (2nd best paper award).<br>\n<i>Eurographics Forum</i> 23 (3): 371&ndash;379, 2004.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0405036\">arXiv:cs.CG/0405036</a>.\n<p>\nWe describe a new algorithm, based on\n<a href=\"graph-match.html\">graph matching</a>,\nfor subdividing a\n<a href=\"geom-tri.html\">triangle mesh</a> (without boundary)\nso that it has a\n<a href=\"tsp.html\">Hamiltonian cycle</a> of triangles, and prove that\nthis subdivision process increases the total number of triangles\nin the mesh by at most a factor of 3/2.  We also prove lower bounds\non the increase needed for meshes with and without boundary.\n<p>\n(<a href=\"//www.graphics.ics.uci.edu/publications/GE04\">Graphics\nlab pubs page</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Single-strip-triangulation-of-manifolds-with-arbitrary-topology.html\">Citations</a>)\n<p>\n<li><b>Single triangle strip and loop on manifolds with boundaries.</b><br>\n<a href=\"//www.ics.uci.edu/~anusheel/\">A. Bushan</a>,\n<a href=\"//www.ics.uci.edu/~pablo/\">P. Diaz-Gutierrez</a>,\nD. Eppstein, and\n<a href=\"//www.ics.uci.edu/~gopi/\">M. Gopi</a>.<br>\nTech. Rep. 05-11, UC Irvine, School of Information and Computer Science,\n2005.<br>\nProc. 19th Brazilian Symp. Computer Graphics and Image Processing\n(SIBGRAPI 2006), pp. 221&ndash;228.\n<p>\nThis follows on to our previous paper on\n<a href=\"p-singlestrip.html\">using graph matching to cover a\ntriangulated polyhedral model with a single triangle strip</a> by\nextending the algorithms to models\nwith boundaries. We provide two methods: one is based on using an algorithm\nfor the Chinese Postman problem to find a small set of triangles to\nsplit in order to find a perfect matching in the dual mesh, while the\nother augments the model with virtual triangles to remove the boundaries\nand merges the strips formed by our previous algorithm on this augmented\nmodel. We implement the algorithms and report some preliminary\nexperimental results.\n<p>\n(<a href=\"//www.graphics.ics.uci.edu/publications/BDEG05\">Graphics\nlab pubs page</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}