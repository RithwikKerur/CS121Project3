{"url": "https://www.ics.uci.edu/~redmiles/ics125-WQ00/projects/klax.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n\n<head>\n<title></title>\n<meta NAME=\"Author\" CONTENT>\n<meta NAME=\"GENERATOR\" CONTENT=\"Microsoft FrontPage 3.0\">\n</head>\n\n<body>\n\n<table BORDER=\"2\" CELLSPACING=\"2\" CELLPADDING=\"2\" WIDTH=\"100%\" BGCOLOR=\"#CCCCCC\">\n  <tr>\n    <td><h1>UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN</h1>\n    <h1>PROJECT DESCRIPTION</h1>\n    </td>\n  </tr>\n</table>\n\n<hr WIDTH=\"100%\">\n\n<pre>\n\nKLAX Game\n\nKLAX is a simple single-player game (screenshot at\nhttp://www.ics.uci.edu/pub/arch/images/KLAX.gif). What's unique about KLAX\nis that it's completely implemented using small, discrete, flexible\ncomponents. KLAX's architecture diagram can be found at\nhttp://www.ics.uci.edu/pub/arch/images/klax-arch.gif.\n\nThe components that make up the KLAX game can be divided into three logical\ngroups. The <i>game state</i> components at the top of the architecture are\nresponsible for storing and maintaining the game's state (the score, number\nof lives, the positions of all the tiles in the game, etc). The <i>game\nlogic</i> components immediately below observe the game's state and change\nit in accordance with the game rules. For example, every time the clock\nadvances, the tile matching component determines whether or not there is a\nmatch in the game well. The </i>artist</it> components draw the game's state\non the screen by sending messages to the graphics binding component. The\nGraphicsBinding component translates user events, such as key presses, into\nmessages for the artist components. The connectors are responsible for\nrouting messages between components.\n\nA KLAX project requires you to:\n\n1. Suggest three or four new features for KLAX (some easy, some difficult).\nFor comparison, a previous ICS 125b team added a high score list (easy) and\nmulti-player support (hard). From your list, we'll work together to select\ntwo for the project.\n\n2. Understand how KLAX works. This means understanding what each component\ndoes and how it interacts with the other components.\n\n3. Design your two features and decide how you're going to modify KLAX's\narchitecture to implement them.\n\n4. Implement your features and integrate them with KLAX's architecture. You\ncan also package your features as software add-ons so that they may be\ndownloaded from a Web site and dynamically installed.\n</pre>\n\n<P>\nIf you have any questions, e-mail to <a HREF=\"mailto:peymano@ics.uci.edu\">Paymen. </a>\n \n<hr>\n\n<p><a HREF=\"projects.html\">ICS125 WQ00 Project Opportunities<br>\n</a><a HREF=\"../ics125.html\">ICS125 WQ00<br>\n</a><a HREF=\"http://www.ics.uci.edu/~redmiles\">David F. Redmiles ?Home Page<br>\n</a><a HREF=\"http://www.ics.uci.edu/\">Department of Information and Computer Science<br>\n</a><a HREF=\"http://www.uci.edu/\">University of California, Irvine CA 92717-3425</a> </p>\n</body>\n</html>\n", "encoding": "ascii"}