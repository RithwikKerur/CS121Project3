{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node265.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Lists Library Predicates</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Lists Library Predicates\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html5423 HREF=\"node266.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html5421 HREF=\"node243.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html5415 HREF=\"node264.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html5425 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html5424 HREF=\"node266.html\"> Sorts Library predicates </A>\r\n<B>Up:</B> <A NAME=tex2html5422 HREF=\"node243.html\"> The Built-in Predicates </A>\r\n<B> Previous:</B> <A NAME=tex2html5416 HREF=\"node264.html\"> Operating System Built-Ins</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION0021220000000000000000> Lists Library Predicates</A></H1>\r\n<P>\r\n<A NAME=tex2html1254 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  provides a library of list manipulation predicates. These are\r\nprovided in the prolog library file <b> lists.pl</b>. This library is autoloaded\r\nwhen one of the predicates is first used. \r\n<A NAME=6233>&#160;</A>\r\n<A NAME=6234>&#160;</A>\r\n<P>\r\n<A NAME=tex2html1253 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  Lists Library predicate.\r\n<DL ><DT><b> append(?List1, ?List2, ?List3)</b>\r\n<DD> <BR> \r\nSucceeds if  List3 is the result of appending  List2 to  List1.\r\n<A NAME=6322>&#160;</A>\r\n<DT><b> checklist(+Pred, +List)</b>\r\n<DD> <BR> \r\nSucceeds if  Pred(Elem) succeeds for every element of  List. \r\n<A NAME=6326>&#160;</A>\r\n<DT><b> delete(?Element, ?List1, ?List2)</b>\r\n<DD> <BR> \r\nSucceeds if  List2 is  List1 less an occurence of  Element in  List1.\r\n<A NAME=6332>&#160;</A>\r\n<DT><b> flatten(+NestedList, ?FlatList)</b>\r\n<DD> <BR> \r\nSucceeds if  FlatList is the list of all elements in  NestedList, as found in a left-to-right, depth-first traversal of  NestedList.\r\n<A NAME=6337>&#160;</A>\r\n<DT><b> intersection(+List1, +List2, ?Common)</b>\r\n<DD> <BR> \r\nSucceeds if  Common unifies with the list which contains the common elements of  List1 and  List2.\r\n<A NAME=6342>&#160;</A>\r\n<DT><b> length(?List, ?N)</b>\r\n<DD> <BR> \r\nSucceeds if the length of list  List is  N.\r\n<A NAME=6346>&#160;</A>\r\n<DT><b> maplist(+Pred, ?OldList, ?NewList)</b>\r\n<DD> <BR> \r\nSucceeds if  Pred(Old, New) succeeds for corresponding pairs of elements from  OldList and  NewList. \r\n<A NAME=6351>&#160;</A>\r\n<DT><b> member(?Term, ?List)</b>\r\n<DD> <BR> \r\nSucceeds if  Term unifies with a member of the list  List.\r\n<A NAME=6355>&#160;</A>\r\n<DT><b> memberchk(+Term, ?List)</b>\r\n<DD> <BR> \r\nSucceeds if  Term is a member of the list  List.\r\n<A NAME=6359>&#160;</A>\r\n<DT><b> nonmember(+Element, +List)</b>\r\n<DD> <BR> \r\nSucceeds if  Element is not an element of the list  List.\r\n<A NAME=6363>&#160;</A>\r\n<DT><b> subset(?SubList, +List)</b>\r\n<DD> <BR> \r\nSucceeds if  List is the list which contains all elements from  SubList in the same order as in  SubList.\r\n<A NAME=6368>&#160;</A>\r\n<DT><b> subtract(+List1, +List2, ?Remainder)</b>\r\n<DD> <BR> \r\nSucceeds if  Remainder is the list which contains those elements of  List1 which are not in  List2.\r\n<A NAME=6373>&#160;</A>\r\n<DT><b> union(+List1, +List2, ?Union)</b>\r\n<DD> <BR> \r\nSucceeds if  Union is the list which contains the union of elements in  List1 and those in  List2.\r\n<A NAME=6378>&#160;</A>\r\n<P>\r\n </DL><BR> <HR><A NAME=tex2html5423 HREF=\"node266.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html5421 HREF=\"node243.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html5415 HREF=\"node264.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html5425 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html5424 HREF=\"node266.html\"> Sorts Library predicates </A>\r\n<B>Up:</B> <A NAME=tex2html5422 HREF=\"node243.html\"> The Built-in Predicates </A>\r\n<B> Previous:</B> <A NAME=tex2html5416 HREF=\"node264.html\"> Operating System Built-Ins</A>\r\n<BR> <HR> <P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}