{"url": "https://www.ics.uci.edu/~eppstein/gina/kern.html", "content": "<HTML><HEAD>\n<TITLE>Geometry in Action</TITLE>\n<META name=\"Owner\" value=\"eppstein\">\n<META name=\"Reply-To\" value=\"eppstein@ics.uci.edu\">\n</HEAD><BODY BGCOLOR=\"#FFFFFF\" FGCOLOR=\"#000000\">\n<!--#config timefmt=\"%d %h %Y, %T %Z\" -->\n<H1>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/geom.html\"><IMG src=\"gina.gif\" ALIGN=center WIDTH=\"493\" HEIGHT=\"52\" ALT=\"Geometry in Action\" BORDER=0></A>\n</H1>\n<HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:bigelow@Sunburn.Stanford.EDU\">bigelow@Sunburn.Stanford.EDU</A> (Charles A. Bigelow)\n<B>Newsgroups:</B>     comp.fonts,comp.graphics.algorithms\n<B>Subject:</B>        Re: Kerning?\n<B>Date:</B>           22 Jun 1994 00:26:24 GMT\n<B>Organization:</B>   Computer Science Department,  Stanford University.\n</PRE><HR><PRE>\nIn article &lt;1994Jun20.214444.9370@gallant.apple.com&gt;,\nJens Alfke  &lt;<A HREF=\"mailto:jens_alfke@powertalk.apple.com\">jens_alfke@powertalk.apple.com</A>&gt; wrote:\n&gt;The Exception, <A HREF=\"mailto:mlfallon@unix1.tcd.ie\">mlfallon@unix1.tcd.ie</A> writes:\n&gt;&gt; Does anyone have any details on how to kern, vector based characters.\n&gt;&gt; I am looking for anything, theory, algorithm or code if possible.\n&gt;\n&gt;If you're asking about algorithms for automatically computing kerning values\n&gt;based on the geometric shape of the characters ... I'm not sure whether\n&gt;there's been any serious work done in this area. \n\nWell, actually, there has been some serious work in this area, though the\nproblem is by no means solved, or, more accurately, there are several claims of\nsolutions, all different. \n\nDavid Kindersley, a noted British stone carver and lettering artist, and Neil\nWiseman, computer scientist at Cambridge University, have collaborated for two\ndecades on algorithmic methods of letterspacing. Kindersley has written on this\nresearch in a little booklet called *Optical Letterspacing for New Printing\nSystems*, which appeared in the 1970's and has, I believe, come out in at least\none later edition. I believe also that he and Wiseman have published accounts\nof it elsewhere, as well, but I don't have the references at hand. For a while,\nand perhaps still, they were offering to license their algorithms to software\ncompanies, but I do not know if any firms took them up on the deal. Too bad,\nbecause they had some pretty interesting results. Their algorithms have changed\nand evolved over the years, but at one time they were based on measuring the\nmoments of intertia of letters, as though they were cut-out spun about their\nvertical axes. \n\nURW has also done quite a lot of research on this problem, and their \"Kernus\"\nsoftware is the commercial result. I don't know what their latest algorithms\nare, but at one time they were based on the model of electrostatic repulsion.\n\nOther algorithms have been linear - equalizing distances between letters, which\ndoesn't give good results, unless you like the weird look that results, which\nsome people do, or areal - equalizing areas between letters, which works sort\nof mediocrely, if you do some ad hoc fudging, especially in defining the\n\"meniscus\" of internal vs. external space in a letter like 'c', or various\nbaroque schemes intended to remedy the obvious deficiencies in the linear and\nareal approaches. \n\nI personally am partial toward approaches that analyze letters as spatial\nfrequencies, for example by low-pass filtering the letters and adjusting\ntheir spacing so as to achieve the cleanest spectrum for the lower frequencies\nin the word image, but I don't know of anyone doing that commercially, and\nbesides, I barely understand what I mean by that myself!\n\n-- Chuck Bigelow\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:freek@phil.ruu.nl\">freek@phil.ruu.nl</A> (Freek Wiedijk)\n<B>Newsgroups:</B>     comp.fonts,comp.graphics.algorithms\n<B>Subject:</B>        Re: Kerning?\n<B>Date:</B>           22 Jun 1994 09:27:40 +0200\n<B>Organization:</B>   Dept. of Philosophy, Utrecht University, The Netherlands\n</PRE><HR><PRE>\n<A HREF=\"mailto:bigelow@Sunburn.Stanford.EDU\">bigelow@Sunburn.Stanford.EDU</A> (Charles A. Bigelow) writes:\n&gt;David Kindersley, a noted British stone carver and lettering artist, and Neil\n&gt;Wiseman, computer scientist at Cambridge University, have collaborated for two\n&gt;decades on algorithmic methods of letterspacing. Kindersley has written on this\n&gt;research in a little booklet called *Optical Letterspacing for New Printing\n&gt;Systems*, which appeared in the 1970's and has, I believe, come out in at least\n&gt;one later edition. I believe also that he and Wiseman have published accounts\n&gt;of it elsewhere, as well, but I don't have the references at hand. For a while,\n&gt;and perhaps still, they were offering to license their algorithms to software\n&gt;companies, but I do not know if any firms took them up on the deal.\n\nFrom some time ago:\n================================================================\n&gt;From <A HREF=\"mailto:hugo@harlqn.co.uk\">hugo@harlqn.co.uk</A> Fri Mar 13 19:23:22 1992\n&gt;From: Hugo Tyson &lt;<A HREF=\"mailto:hugo@harlqn.co.uk\">hugo@harlqn.co.uk</A>&gt;\n&gt;Date: Fri, 13 Mar 92 17:41:18 GMT\n&gt;Message-Id: &lt;21315.9203131741@morris.harlqn.co.uk&gt;\n&gt;To: <A HREF=\"mailto:freek@fwi.uva.nl\">freek@fwi.uva.nl</A>\n&gt;Subject: OCS Patent\n&gt;Cc: <A HREF=\"mailto:hugo@harlqn.co.uk\">hugo@harlqn.co.uk</A>\n&gt;Status: RO\n\nIn article &lt;1992Mar3.153923.14555@fwi.uva.nl&gt; you write:\n&gt;Does there exist a publicly available implementation of David\n&gt;Kindersley's LOGOS system?  This system is a method for automatically\n&gt;generating kerning tables for a given font.\n\nI think you should be aware that the method is patented, by David\nKindersley and Neil Wiseman, the patent was then held by a company\ncalled Cambridge SuperVision, formed by the two plus an investor, who\nhave since signed over exclusive rights to the patent and associated\nmethods to us, Harlequin Limited.\n\nWe have, available now, a portable software library to perform OCS,\nand other spacing processes required my modern typographers.  If you\nhave a serious interest in this, please do contact Harlequin again\nfor details.\n\nBTW, yes, it is hard to implement in terms of getting the maths right\nevery time, and choosing the correct variables to control the\ncalculations.  Obviously I will say no more.\n\n\t- Huge\n\nAny opinions herein are mine only.  Even the postcode may be wrong\n   ---------------------  Hugo Tyson  -------------------------\nHarlequin Limited, Barrington Hall, Barrington, Cambridge, CB2 5RG\nEngland;    Tel.  (UK) 0223 872522  (International) +44 223 872522\n   ------------------------------------------------------------\nIf God/Darwin had meant us to use single-button mice,\n     He would have given us prehensile noses.\n================================================================\n\nHope this helps :-)\n\nFreek\n--\nThird theory of Phenomenal Dynamics:  The difference between\na symbol and an object is quantitative, not qualitative.\n</PRE><HR><PRE>\n<B>Newsgroups:</B>     comp.fonts,comp.graphics.algorithms\n<B>From:</B>           <A HREF=\"mailto:stijnr@sci.kun.nl\">stijnr@sci.kun.nl</A> (Stijn Raaijmakers)\n<B>Subject:</B>        Re: Kerning?\n<B>Organization:</B>   University of Nijmegen, The Netherlands\n<B>Date:</B>           Wed, 22 Jun 1994 10:28:28 GMT\n</PRE><HR><PRE>\nIn &lt;2u80fg$arh@Times.Stanford.EDU&gt; <A HREF=\"mailto:bigelow@Sunburn.Stanford.EDU\">bigelow@Sunburn.Stanford.EDU</A> (Charles A. Bigelow) writes this about automatic kerning:\n\n[...]\n\n&gt;I personally am partial toward approaches that analyze letters as spatial\n&gt;frequencies, for example by low-pass filtering the letters and adjusting\n&gt;their spacing so as to achieve the cleanest spectrum for the lower frequencies\n&gt;in the word image, but I don't know of anyone doing that commercially, and\n&gt;besides, I barely understand what I mean by that myself!\n\nWouldn't this result in the same kerning for an E with small filled\ntriangles as serifs and an E with very long, thin serifs (which would\nneed about the same kerning as an N).  And wouldn't the difference in\nkerning be to big for VA and AV?  I spent some time thinking about\nautomatic kerning, as I thought it might be a good subject for my\nthesis (computer science), but doesn't seem to be so appropriate.  Too\nbad.\n\nSti(bad kerning here, usually)jn.\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:mcintosh@donald.cc.utexas.edu\">mcintosh@donald.cc.utexas.edu</A> (Aubrey McIntosh)\n<B>Newsgroups:</B>     comp.fonts,comp.graphics.algorithms\n<B>Subject:</B>        Re: Kerning?\n<B>Date:</B>           22 Jun 1994 18:37:27 -0500\n<B>Organization:</B>   Chemistry Department, University of Texas, Austin TX 78712\n</PRE><HR><PRE>\nIn comp.fonts &amp; al.,\n<A HREF=\"mailto:bigelow@Sunburn.Stanford.EDU\">bigelow@Sunburn.Stanford.EDU</A> (Charles A. Bigelow) writes:\n\n&gt; I personally am partial toward approaches that analyze letters as spatial\n&gt; frequencies, for example by low-pass filtering the letters and adjusting\n&gt; their spacing so as to achieve the cleanest spectrum for the lower frequencies\n&gt; in the word image, but I don't know of anyone doing that commercially, and\n&gt; besides, I barely understand what I mean by that myself!\n\nWell, I know what it means, and I had an Aha! reaction to the idea.\nThere is a Scientific American article in about 1965 on recognition\nof faces that, if I trust 20 year old memories (1), shows the \nresults of several digitized portraits of Washington and other well \nknown images that have been bandpassed at various frequencies.\n\nThey discuss a \"critical bandpass region\" where interference is \nhigh,  and show that there can be large noise outside this region \nthat does not interfere very much with recognition.\n\nGosh, I can see myself spending *all* my hobby time budget adjusting \nvarious metafont files to make the letters have similar frequency \nsignatures, including certain harmonics, and adjusting the kerning \nso that the phase matching is good.\n\nI can see the adjustment of stems and serifs to various spatial\nfrequency harmonics as a second topic, just in cast not enough\ntime is spent in the first study.\n\n1) 1994-1965 = 29.  I read it more recently.\n\n-- \n5/23/94  Sunny, highs near 90.  Seasonal tornadic conditions. Garden \nis vigorous, many plants reaching eye level.  Beets nearing end of \nharvest window, corn tassled.  Squash and tomatoes in production.\nBlackberries :-)\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> (Tiro TypeWorks)\n<B>Date:</B>           Sat, 30 Mar 1996 22:11:02 GMT\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Speaking of spacing (was Re: Walbaum-font)\n</PRE><HR><PRE>\n<A HREF=\"mailto:quixote@primenet.com\">quixote@primenet.com</A> (Donald A. Hosek) wrote:\n\n&gt;Speaking of spacing, does anyone have a US patent number for\n&gt;Kindersley's LOGOS system? (Or any other country's patent number if\n&gt;necessary). I'm curious to know exactly how the center spacing points\n&gt;are determined for the letters & attempting a home-brew LOGOS-spacer\n&gt;(the legal limits of its use are yet another question... certainly\n&gt;there is the catch that if I roll my own, no one else can have a copy,\n&gt;but the use of its output is another question entirely).\n\nI'm afraid I can't help you with the patent numbers, but my\nunderstanding of the centre spacing points are as follows. Note that\nLogos depends to a great degree on the letters themselves being\n'correctly formed' -- ie. Kindersley's notion of correct spacing is\ninextricably linked to this ideas of correct letterforms. It is a\nsystem based on visual balance, which means that all the letters must\ncarefully balanced with each other. You mention the problems of\ncorrectly spacing the Bembo uppercase R; Kindersley may well  have\nsimply rejected the form.\n\nFor the spacing of uppercase letters under Logos, R is actually the\nkey letter. According to Kindersley (quoted in Rosemary Sassoon's\nexcellent 'The Practical Guide to Lettering and Applied Calligraphy'),\n'The relation of space to letter should remain constant, in such a way\nthat the optical vertical centre of any letter is also the\nmathematical vertical centre of the space which with letter occupies.\nThus the R, which in most alphabets is the most off-centre\nmathematically, becomes the key to the spacing throughout the\nalphabet.'\n\nI can upload a diagram, if people would find it useful, but the\ntreatment of the R is basically as follows. The optical vertical\ncentre of the R must be determined by eye. (Kindersley did a great\ndeal of work in optics, to devise an electronic equivalent for this,\nbut never seems to have matched his own ability to see the centre.)\nOnce the optical vertical centre of the letter has been identified, a\nline, A, is drawn through it. A horizontal measurement is taken from\nthe base of line A to the base of line B, which is drawn vertically at\nthe tip of the R's leg. This distance, A-B, is then measured to the\nleft, from A, to produce A-C, where C is becomes the left sidebearing\nof the character. From this, the sidebearings of all verticals can be\ndetermined.\n\nThis is the basis of Logos, and from it one can deduce both the\nstrengths and the weaknesses of the system. The system does not, for\nexample, take into account the optical effect of the thin vertical\nstems found in most uppercase Ns, which require narrower spacing than\nthe thicker stems of most other letters. On the positive side, the\nsystem guarantees certain typographical niceties, such as optically\njustified margins.\n\nAs Kindersley admitted, concluding his anaylsis of the uppercase R,\n'This is the underlying principle of mys standard spacing, but there\nare many modifications that have to be made in order to produce a\nreally even fit.'\n\nJohn Hudson, Type Director\n\nTiro TypeWorks\nVancouver, BC\n<A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A>\n<A HREF=\"http://www.portal.ca/~tiro/\">http://www.portal.ca/~tiro</A>\n</PRE>\n<HR><PRE>\n<B>Newsgroups:</B>     comp.fonts\n<B>From:</B>           <A HREF=\"mailto:lee@sq.com\">lee@sq.com</A> (Liam R. E. Quin)\n<B>Subject:</B>        Re: f-ligature frustrations\n<B>Organization:</B>   SoftQuad Inc., Toronto, Canada\n<B>Date:</B>           Tue, 14 May 1996 23:52:30 GMT\n</PRE><HR><PRE>\nAlan Sargent &lt;<A HREF=\"mailto:sargent@Gateway.net.hk\">sargent@Gateway.net.hk</A>&gt; wrote:\n&gt; Obviously it would be impractical to predefine kerning for mixed fonts -- \n&gt; billions ( (100 chars * 1000 fonts)exp2  at least) of pairs -- but if the \n&gt; widths and offsets are done consistently you shouldn't get collisions.\n\nThe only way I know of to do this is with sectored kerning, e.g. as used\nby the Compugraphic MCS series typesetters years ago...\nThe idea of sectored kerning is that you have a low resolution surrogate.\nFor example, with 4 sectors, you might represent boy as\n\n    #\n    ### ### ###\n    ### ###  ##\n\t     ##\n\nNow, you can fit Toy like this:\n\n    #####\n      #  \n      # ### ###\n      # ###  ##\n\t     ##\n\nThis usually needs to be augmented by kern pairs for the exceptions, and\nit turns out to be tricky to define the sector heights, and also to\ndetermine the values, since changing a single value -- e.g. the width\nof the top of `T' -- affects every letter combination next to a T.\n\nIn practice, systems using this normally used four vertical sectors, and\nallowed widths from 0 to 256 both on each side of the character, measured\noutwards.\n\nI'm not aware of any modern systems working this way.\n\nIn principle, you could kern across fonts as long as the x-height,\ndescender-height and cap-height were the same, and get plausible, if not\nalways excellent, results.   In practice, I don't recall any systems that\ndid this, except possibly the Compugraphic MCS series (I've forgotten).\n\nLee\n\n-- \nLiam Quin, SoftQuad Inc    | lq-text freely available Unix text retrieval\n<A HREF=\"mailto:lee@sq.com\">lee@sq.com</A> +1 416 239 4801 | FAQs: Metafont fonts, OPEN LOOK UI, OpenWindows...\nSGML: <A HREF=\"http://www.sq.com/index.html\">http://www.sq.com/</A>   |`Consider yourself... one of the family...\nThe barefoot programmer    | consider yourself... At Home!' [the Artful Dodger]\n</PRE><HR>\n<P>\n<I>The following messages are based around two example images posted by\nTiro Typeworks, of a kerning system based on defining certain rectangular polygons that approximate the shapes of the original letters, and packing these shapes as closely as possible:</I>\n<P>\n<IMG SRC=\"kernfont.gif\">\n<P>\n<IMG SRC=\"kernfon2.gif\">\n<P>\n<HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:Lorp@truetype.demon.co.uk\">Lorp@truetype.demon.co.uk</A> (Laurence Penney)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 23:45:44 GMT\n<B>Organization:</B>   Kendrick Digital Typography\n</PRE><HR><PRE>\n<A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> (Tiro TypeWorks) wrote:\n\n&gt;Attached is a small binary file showing a quickly knocked up demo of\n&gt;what Laurence seems to be proposing.\n\nThat's exactly right!\n\n&gt;                                     Having done this experiment, I\n&gt;remain intrigued by the possibility. As a spacing model, the kern-font\n&gt;idea is certainly possible. I suspect it would be very time-consuming\n&gt;to make sure that a character's kern-outline connected properly with\n&gt;every other character's, but I see no theoretical reason why it\n&gt;shouldn't work. I had chosen the words AT FAULT ahead of time (as it\n&gt;contains a variety of kerning problems), and this largely guided the\n&gt;shaping of my kern-outlines, although I tried to anticipate what their\n&gt;final shapes might be if they were to be properly fitted with a\n&gt;complete alphabet.\n\nI imagined the kern-glyphs being less blocky, using curves more closely\nrelated to the image-glyph than your kern-bands. Perhaps, like the extent\nof a \"field\" created by the \"mass\" of the black of the letter, heavy parts\nof the letter would be relatively far from the kern-edge, while the\nkern-edge would come very close to thin parts. This would be achievable\nalgorithmically, with maybe only a little fine-tuning needed.\n\n&gt;...\n&gt;As demonstrated in the sample, the even space character can be given\n&gt;an appropriate kern-outline to kern with the extreme overhang of\n&gt;letters such as T, V, etc.\n\nI think this probably isn't ideal. What about characters that bulge in the\nmiddle? White space should not be treated as if it were a glyph - which it\nis only in a narrow, technical, font-format sense. Rather, a system should\nensure that the horizontal minimum distance (HMD) between two kern-glyphs\neither side of a space is \"space-width\", rather than zero (the system's\nHMD value for unspaced kern-glyphs).\n\n&gt;An added bonus, as demonstrated by the red lines, is the adaptability\n&gt;of the system to optically justifying margins.\n\nFrom your picture, it's not clear how the system would determine the\n\"optically justifying margins\" (no character has a \"standard\" advance\nwidth any more). A mean or median average of the kern-edge would be one\nidea.\n\nGlad you like the proposal,\n\n-- Laurence Penney\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> (Tiro TypeWorks)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Kern-font demo 2 (Was: Laurence Penney's...) - kernfon2.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 00:50:52 GMT\n<B>Organization:</B>   Tiro TypeWorks\n</PRE><HR><PRE>\nThis is my second experiment with Laurence Penney's kern-font\nproposal. In this sample, I have combined three fonts from the Adobe\nGaramond family: Regular (F1), Expert (F2) and Alternate (F3). This\ndemonstrates the cross-font kerning potential of Laurence's proposal.\n\nIn the first line, the characters are combined without any kerning\napplied. This is how they would appear after ligature and alternate\nsubstitutions in any word-processor or page-layout program.\n\nIn the second line, the kern-font spacing has been applied. Using this\nsystem, I was able to create a better fit between the 'ff' ligature\nand the following 'e', and nicely tucked the punctuation under the arm\nof the terminal 't'.\n\nJohn Hudson, Type Director\n\nTiro TypeWorks\nVancouver, BC\n<A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A>\n<A HREF=\"http://www.portal.ca/~tiro/\">http://www.portal.ca/~tiro</A>\n</PRE>\n<HR><PRE>\n<B>Newsgroups:</B>     comp.fonts\n<B>From:</B>           <A HREF=\"mailto:lee@sq.com\">lee@sq.com</A> (Liam R. E. Quin)\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Organization:</B>   SoftQuad Inc., Toronto, Canada\n<B>Date:</B>           Sat, 18 May 1996 19:55:57 GMT\n</PRE><HR><PRE>\nJohn, your gif is essentially using sectored kerning.\n\nDraw another red vertical line through the centre of each chracter.\n(it doesn't have to be the exact centre, middlish is OK).\n\nYou've used approx. 8 different vertical positions for your boxes.\nLet's say for now that there are eight sectors with fixed positions.\n(this may not work as well, bt bear with me, I pray you)\n\nFrom the centre-line, measure the distance first to the right and then to\nthe left of your rectangularised letter, in the middle of each of these\neight sectors.\n\nThis will give you eight pairs of numbers.  These represent the sector kerns\nfor that character.\n\nThe fitting algorithm is very straight-forward given such sectors.\nYou add the widths of sectors a pair at a time and take the largest as the\ndistance between vertical centres.\n\nMost commercial sectored-kern systems I have seen only support 4 or 6 sectors,\nwhich I always felt was too small a number.  It would be interesting to\ntry modifying our text engine (part of sqtroff) to handle larger numbers\nof sectors, and then see what could be produced atomatically.\n\nIf you have fewer sectors, the fixed heights become more of a problem.\nFor example, with only 4 sectors, you can't really kern A and U together\nas well as you've done it.  With six you can, although you need to save at\nleast one sector for lower case descenders.\n\nAll the fonts I have today use kern pairs, and sqtroff isn't available on\nthe Mac (Unix only), or I'd send you a demo.\n\nWith 196 glyphs in a font, and allowing at most 256 values for the width\non each side of centre (approx 512 ppem), 10 sectors would give us\n196 * 10 * 2 bytes, or 3,920 bytes of kern information, stored in binary\nformat.\n\nWith only 16 values on each side, that could be halved to 1,960 bytes.\n\nThere is a variation that uses not the centre of the character, but the\nleft and right edges (respectively) of the bounding box.  In this case,\nthe numbers are smaller, and one can allow 256 values at 1000 ppem, but\nin practice the numbers will usually be smaller.  This is the method used\nin sqtroff, as I recall (it's been maybe 7 or 8 years since I looked at\nusing sectored kerning with sqtroff!).\n\nSince kern pairs each have to have at least one character name (you can\ndeduce the other if you store the kerns along with, say, the left-hand\ncharacter), using sectors starts to save space after maybe a couple of\nhundred kern pairs.  In theory, the sectors could be derived automatically,\nwhich would certainly be a help.  And of course, if the heights of the\nsectors are recorded (sqtroff didn't do this), you could kern across fonts,\nwith at least moderate success I should think.\n\nLee\n\n-- \nLiam Quin, SoftQuad Inc    | lq-text freely available Unix text retrieval\n<A HREF=\"mailto:lee@sq.com\">lee@sq.com</A> +1 416 239 4801 | FAQs: Metafont fonts, OPEN LOOK UI, OpenWindows...\nSGML: <A HREF=\"http://www.sq.com/index.html\">http://www.sq.com/</A>   |`Consider yourself... one of the family...\nThe barefoot programmer    | consider yourself... At Home!' [the Artful Dodger]\n</PRE><HR><PRE>\n<B>From:</B>           David Marshall &lt;<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">D.P.Marshall@durham.ac.uk</A>&gt;\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (1/1)\n<B>Date:</B>           Sat, 18 May 1996 19:22:55 +0100\n<B>Organization:</B>   University of Durham, Durham, UK\n</PRE><HR><PRE>\nI like this. I like it a lot. It does remind me of Intellifont's sectored \nkerning which could use an aribtrary number of sectors (although Agfa \nalways used four) for which the position of the sectors was never known to \nthe rasterizer (it was just numbers). Some fonts split the cap height up \nevenly into four sectors, some split the x-height into three even sectors \nand one for the rest, some split it up strangely.\n\nBecause there was no standard definition for where the sectors actually \nwere, it wasn't possible to use kerning across fonts. A shame.\n\nDave\n-- \n       \"The tangled web of worries around speech shows how little \n            people know about it\" - Professor Jean Aitchison\n\n<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">mailto:D.P.Marshall@durham.ac.uk</A>           <A HREF=\"http://www.dur.ac.uk/~d3r6yw/\">http://www.dur.ac.uk/~d3r6yw/</A>\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> (Tiro TypeWorks)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 00:42:31 GMT\n<B>Organization:</B>   Tiro TypeWorks\n</PRE><HR><PRE>\n<A HREF=\"mailto:lee@sq.com\">lee@sq.com</A> (Liam R. E. Quin) wrote:\n\n&gt;John, your gif is essentially using sectored kerning.\n\nI understand the similarity to vectored kerning, but there are some\nimportant differences in Laurence's proposal that I find interesting,\nmost importantly in the proposed application. There are two related\nproblems with vectored kerning, both of which you bring up in your\npost. The first involves the number of sectors employed, and the\nsecond, derived from the first, involves the quantity of kern data to\nbe included in the vector kerned font.\n\nFrom a typographic point of view, it is the first problem that\nconcerns me most. Correct letterspacing is something of an exact\nscience. As you correctly point out, 4-6 sectors is hardly sufficient\nto ensure correct spacing. In fact, such a system puts us right back\nto the fitting problems of the Linotype machine: we would end up\nhaving to adjust letterforms to fit the spacing system. What number of\nsectors is sufficient? How much kerning data would result from such a\nquantity? And how and where in the font would this data be stored?\n\nWhat intrigues me about Laurence's proposal is a) the tailoring of the\nkern-outline to each individual character form, and b) the storing of\nsuch data in an invisible, background font from which the visible font\nreceives its spacing metrics.\n\n&gt;And of course, if the heights of the sectors are recorded\n&gt;(sqtroff didn't do this), you could kern across fonts,\n&gt;with at least moderate success I should think.\n\nIn my second experiment, I have applied Laurence's\nprinciple to three fonts from the Adobe Garamond family, to show how\nwell the system works for cross-font kerning.\n\nNow I think about it, the term 'kerning' actually becomes irrelevant\nin the application of this system. Under Laurence's proposal there is\nsimply 'spacing', which, as any calligrapher or stonecutter will tell\nyou, is a function of the form of the letters, rather than of the\nsystem employed to render them. This distinction is, perhaps, what\nmost appeals to me about the 'kern-font' proposal.\n\nJohn Hudson, Type Director\n\nTiro TypeWorks\nVancouver, BC\n<A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A>\n<A HREF=\"http://www.portal.ca/~tiro/\">http://www.portal.ca/~tiro</A>\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:typenerd@slip.net\">typenerd@slip.net</A> (David Lemon)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 08:43:57 -0800\n<B>Organization:</B>   Juicy Graphics\n</PRE><HR><PRE>\nIn article &lt;4nlqf2$mk8@thoth.portal.ca&gt;, <A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> (Tiro TypeWorks) wrote:\n&gt; I understand the similarity to vectored kerning, but there are some\n&gt; important differences in Laurence's proposal that I find interesting,\n&gt; most importantly in the proposed application.\n\nWhile it's clear that either a designer-specified kern edge or good sector\nkerning would\n- give good results for cross-font spacing\n- do much better than kern pairs for unanticipated glyph combinations\nwithin a single font, and\n- probably do nearly as well as manually-spec'd kern pairs in anticipated\ncombinations,\n\none obvious drawback is that either approach would require a data format\nthat current applicaions and renderers are not prepared for. The other\nobvious drawback is that no current fonts use either, so font collections\nwould have to be repurchased.\n\n- David Lemon\n  type nerd\n  Back in June we delivered oxygen equipment of the same size.\n</PRE><HR><PRE>\n<B>From:</B>           David Marshall &lt;<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">D.P.Marshall@durham.ac.uk</A>&gt;\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 00:59:18 +0100\n<B>Organization:</B>   University of Durham, Durham, UK\n</PRE><HR><PRE>\nLiam R. E. Quin wrote:\n&gt; Most commercial sectored-kern systems I have seen only support 4 or 6 sectors,\n&gt; which I always felt was too small a number.  It would be interesting to\n&gt; try modifying our text engine (part of sqtroff) to handle larger numbers\n&gt; of sectors, and then see what could be produced atomatically.\n&gt; If you have fewer sectors, the fixed heights become more of a problem.\n&gt; For example, with only 4 sectors, you can't really kern A and U together\n&gt; as well as you've done it.  With six you can, although you need to save at\n&gt; least one sector for lower case descenders.\n\nThe 4 in Intellifont was a little low - I guess they were balancing quality \nwith storage space. They did have the advantage that the positioning of the \nsectors was arbitrary - they could be completely different for every font - \nand so could be tuned to the font, but this makes inter-font kerning \nimpossible. Agfa gave no kerning space to descenders.\n\n&gt; With 196 glyphs in a font, and allowing at most 256 values for the width\n&gt; on each side of centre (approx 512 ppem), 10 sectors would give us\n&gt; 196 * 10 * 2 bytes, or 3,920 bytes of kern information, stored in binary\n&gt; format.\n&gt; With only 16 values on each side, that could be halved to 1,960 bytes.\n\nIt's a very compact method. Intellifont adjusts relative to the left and \nright edges widths in 54ths of an em. Didn't URW use a method of categorizing \nthe left and right sides of characters and providing sector-based kerning for \neach category?\n\n&gt; Since kern pairs each have to have at least one character name (you can\n&gt; deduce the other if you store the kerns along with, say, the left-hand\n&gt; character), using sectors starts to save space after maybe a couple of\n&gt; hundred kern pairs.  In theory, the sectors could be derived automatically,\n&gt; which would certainly be a help.  And of course, if the heights of the\n&gt; sectors are recorded (sqtroff didn't do this), you could kern across fonts,\n&gt; with at least moderate success I should think.\n\nSector-based kerning is such a good idea I really have no idea why it isn't \nused in the more commercial formats (the Amiga's main format is still \nIntellifont - or is that Intelephant?) I would like to see sector-based \nkerning become more common - with either standard positions for sectors or \nrecording of sector positions. Inter-font kerning is highly desirable.\n\nWho wants to persuade Microsoft to kludge sector-based kerning into their \nTrueType engine? :)\n\nDave\n-- \n       \"The tangled web of worries around speech shows how little \n            people know about it\" - Professor Jean Aitchison\n\n<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">mailto:D.P.Marshall@durham.ac.uk</A>           <A HREF=\"http://www.dur.ac.uk/~d3r6yw/\">http://www.dur.ac.uk/~d3r6yw/</A>\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> (Tiro TypeWorks)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 03:00:58 GMT\n<B>Organization:</B>   Tiro TypeWorks\n</PRE><HR><PRE>\n<A HREF=\"mailto:lee@sq.com\">lee@sq.com</A> (Liam R. E. Quin) wrote:\n\n&gt;Since kern pairs each have to have at least one character name (you can\n&gt;deduce the other if you store the kerns along with, say, the left-hand\n&gt;character), using sectors starts to save space after maybe a couple of\n&gt;hundred kern pairs.\n\nThe beauty of Laurence's system is that it removes the need for kern\npairs, as such. Rather than having to second guess what letter\ncombinations are liable to crop up in an average user's texts, a type\ndesigner would simply tailor the kern-outlines to his letterforms and\nlet these shapes determine all spacing. This means that every letter\nwould space itself optically with whatever was put beside it.\n\nThe phrase 'KsfsVQ yoTAv' is nonsense, but under the kern-font system\nit would be perfectly spaced nonsense -- even the grammatically\nimpossible combinations such as  'sV' and 'oT'. Each letter would fit\nits kern outline as neatly as possible to the adjacent letter's kern\noutline.\n\nThis also means that designers like myself, who are keen to correctly\nspace their fonts for multilingual typesetting, will no longer have to\nplay at amateur linguistics trying to determine what kern pairs might\nbe necessary in typesetting Lower Sorbic.\n\nThe more I think about Laurence's proposal, the more I like it. If\nsomeone wants to develop this as a font format, they'd better give\nLaurence a big wad of cash for the idea.\n\nAs yet, I can't figure out if there's a way to build letterspacing\n(i.e. increasing space in strings of uppercase text) into the\nkern-font system. I suspect this might not be possible. Mind you, most\nType 1 and TT manufacturers don't take advantage of this possibility\nin existing formats, so probably wouldn't notice the loss. It would\nremain possible, of course, to letterspace within layout applications.\n\nJohn Hudson, Type Director\n\nTiro TypeWorks\nVancouver, BC\n<A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A>\n<A HREF=\"http://www.portal.ca/~tiro/\">http://www.portal.ca/~tiro</A>\n</PRE><HR><PRE>\n<B>From:</B>           David Marshall &lt;<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">D.P.Marshall@durham.ac.uk</A>&gt;\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 1996 02:49:53 +0100\n<B>Organization:</B>   University of Durham, Durham, UK\n</PRE><HR><PRE>\nTiro TypeWorks wrote:\n&gt; b) the storing of\n&gt; such data in an invisible, background font from which the visible font\n&gt; receives its spacing metrics.\n\nA nice idea, but technically more difficult to implement that sector-based \nkerning. Even if you massively increase the number of sectors, sector-\nbased kerning will still be much faster than an invisible type body.\n\nDave\n-- \n       \"The tangled web of worries around speech shows how little \n            people know about it\" - Professor Jean Aitchison\n\n<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">mailto:D.P.Marshall@durham.ac.uk</A>           <A HREF=\"http://www.dur.ac.uk/~d3r6yw/\">http://www.dur.ac.uk/~d3r6yw/</A>\n</PRE><HR><PRE>\n<B>From:</B>           Christopher Fynn &lt;<A HREF=\"mailto:cfynn@sahaja.demon.co.uk\">cfynn@sahaja.demon.co.uk</A>&gt;\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           Sun, 19 May 96 11:41:28 GMT\n<B>Organization:</B>   &lt;None&gt;\n<B>Reply-To:</B>       <A HREF=\"mailto:cfynn@sahaja.demon.co.uk\">cfynn@sahaja.demon.co.uk</A>\n</PRE><HR><PRE>\nIn article &lt;4nm2ik$sj6@thoth.portal.ca&gt; <A HREF=\"mailto:tiro@portal.ca\">tiro@portal.ca</A> \"Tiro TypeWorks\" writes:\n\n...\n&gt; The phrase 'KsfsVQ yoTAv' is nonsense, but under the kern-font system\n&gt; it would be perfectly spaced nonsense -- even the grammatically\n&gt; impossible combinations such as  'sV' and 'oT'. Each letter would fit\n&gt; its kern outline as neatly as possible to the adjacent letter's kern\n&gt; outline.\n\nAs an aside to the main issue here.\n\nWith some systems for transcribing certain scripts into \nthe roman alphabet such  mixed case \"nonsense\" can occur. \nFor instance Tibetan has some letters and vowels which are \nsometimes reversed. In roman transcription when these occur \nthey are usually indicated by a change of case. \n\nOther people use an upper case letter to indicate the main \nletter in a syllable  - as Tibetan has silent prefixes this\nthis looks like:  bsGrub brGyud   \n\nThere are also some strange combinations used in Pinyin the \nsystem of writing Chinese in Roman script widely used in China.\n- Don't assume that you only need to make kerning pairs\nfor combinations that occur in European languages. \n\nAnother kerning feature I'd like to see is the ability to kern more\nthan a pair of letters. Some scripts have subjoined letters\nsomething like this:\n\n               ACDEGH\n               B  F\n  \nIn this case A may need to kern with both B and C and E with F\nand G.\n\n- Chris\n\n-- \nChristopher J Fynn                   &lt;<A HREF=\"mailto:cfynn@sahaja.demon.co.uk\">cfynn@sahaja.demon.co.uk</A>&gt;   \n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n4 Chester Court                                                \n84 Salusbury Rd                                                \nLondon NW6 6PA                                                    \nUnited Kingdom                        Tel: +44 (0) 171 625 8925\n</PRE>\n<HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:orandier@planete.net\">orandier@planete.net</A> (Olivier RANDIER)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           20 May 1996 22:43:28 GMT\n<B>Organization:</B>   planete\n</PRE><HR><PRE>\nIn article &lt;319E6456.2F3E@walton.dur.ac.uk&gt;, David Marshall\n&lt;<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">D.P.Marshall@durham.ac.uk</A>&gt; wrote:\n\n&gt; Liam R. E. Quin wrote:\n&gt; &gt; With 196 glyphs in a font, and allowing at most 256 values for the width\n&gt; &gt; on each side of centre (approx 512 ppem), 10 sectors would give us\n&gt; &gt; 196 * 10 * 2 bytes, or 3,920 bytes of kern information, stored in binary\n&gt; &gt; format.\n&gt; &gt; With only 16 values on each side, that could be halved to 1,960 bytes.\n&gt; \n&gt; It's a very compact method. Intellifont adjusts relative to the left and \n&gt; right edges widths in 54ths of an em. Didn't URW use a method of categorizing \n&gt; the left and right sides of characters and providing sector-based kerning for \n&gt; each category?\n\nI missed the beginning of the thread, but I think I've got a good\nunderstanding of what you mean. So I thought you all would be interesting\nin knowing that something like that already exists!\nI have been using FontStudio for years (Did I tell you that I love this\nprogram?... Yes, I did ;-)), and it has a special feature for\nautomatically creating kerning pairs and measures. In FontStudio, you have\ntwo layers, front for creating glyphs, back for anything you want (very\nuseful to use vector models). You can trace in the background the\n\"kern-font\" you speak about, and then ask FontStudio to generate kerning\npairs and measures using it. You specify the relative and/or absolute\ndistance between \"kern-font\" glyphs and just run it. It's well explained\nin the doc. I thought that features was present in FOG, as autokern\nfonction was mentionned in the adds. But, as you all doesn't seem to know\nabout it, I suppose that autokern in FOG doesn't work that way. That's\nanother reason for me not to get to FOG instead of FontStudio!\nSo I think you should get in touch with the developpers of FontStudio to\nhave information about their autokern engine (especially if you want to\ninclude it in a font format (not in True Type, please, you all know\nprofessionals dont want to deal with True Type -- maybe in OpenType?).\nGive them a shake-hands for me!\n\n-- \nOlivier Randier -- Experluette\n</PRE><HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:Lorp@truetype.demon.co.uk\">Lorp@truetype.demon.co.uk</A> (Laurence Penney)\n<B>Date:</B>           Tue, 21 May 1996 01:10:07 GMT\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n</PRE><HR><PRE>\nDavid Marshall &lt;<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">D.P.Marshall@durham.ac.uk</A>&gt; wrote:\n\n&gt;Tiro TypeWorks wrote:\n&gt;&gt; b) the storing of\n&gt;&gt; such data in an invisible, background font from which the visible font\n&gt;&gt; receives its spacing metrics.\n\n&gt;A nice idea, but technically more difficult to implement that sector-based \n&gt;kerning. Even if you massively increase the number of sectors, sector-\n&gt;based kerning will still be much faster than an invisible type body.\n\nThe algorithms to touch bezier-edges are clearly more complex than normal\nkerning or sector kerning, but rather less complex than rasterizing a\ntypical glyph. In any case, you could implement a kerning-cache!\n\nCommon combinations would get stored, on disk and in memory, after\npreparing only a few documents - automatically adjusting to your language\nand habits. You could store your \"overrides\" there too. Pre-computed\nkerning tables could still be supplied with fonts, much like TrueType's\n'hdmx' table (without which fonts are slowed down but otherwise\nunaffected). Without cacheing (for bitmaps) and pre-computation (e.g. for\nbounding boxes), scalable fonts would still be deathly slow...\n\n-- Laurence Penney\n</PRE>\n<HR><PRE>\n<B>From:</B>           <A HREF=\"mailto:rhancock@tdc.dircon.co.uk\">rhancock@tdc.dircon.co.uk</A> (Ralph Hancock)\n<B>Newsgroups:</B>     comp.fonts\n<B>Subject:</B>        Re: Kern-font demo (Was: Laurence Penney's...} - kernfont.gif (0/1)\n<B>Date:</B>           22 May 1996 02:45:08 +0100\n<B>Organization:</B>   The Direct Connection\n</PRE><HR><PRE>\n<A HREF=\"mailto:orandier@planete.net\">orandier@planete.net</A> (Olivier RANDIER) writes:\n&gt; In article &lt;319E6456.2F3E@walton.dur.ac.uk&gt;, David Marshall\n&gt; &lt;<A HREF=\"mailto:D.P.Marshall@durham.ac.uk\">D.P.Marshall@durham.ac.uk</A>&gt; wrote:\n\n...\n&gt; I have been using FontStudio for years (Did I tell you that I love this\n&gt; program?... Yes, I did ;-)), and it has a special feature for\n&gt; automatically creating kerning pairs and measures. In FontStudio, you have\n&gt; two layers, front for creating glyphs, back for anything you want (very\n&gt; useful to use vector models). You can trace in the background the\n&gt; \"kern-font\" you speak about, and then ask FontStudio to generate kerning\n&gt; pairs and measures using it. You specify the relative and/or absolute\n&gt; distance between \"kern-font\" glyphs and just run it. It's well explained\n&gt; in the doc. I thought that features was present in FOG, as autokern\n&gt; fonction was mentionned in the adds. But, as you all doesn't seem to know\n&gt; about it, I suppose that autokern in FOG doesn't work that way. That's\n&gt; another reason for me not to get to FOG instead of FontStudio!\n&gt; So I think you should get in touch with the developpers of FontStudio to\n&gt; have information about their autokern engine (especially if you want to\n&gt; include it in a font format (not in True Type, please, you all know\n&gt; professionals dont want to deal with True Type -- maybe in OpenType?).\n&gt; Give them a shake-hands for me!\n&gt; \nType Designer has an autokern feature that divides the space between\nletters into up to 64 horizontal stripes and kerns them so that the\nshortest stripe between two glyphs is always the same length. This gives\na reasonable rough kerning, though you need to adjust things like AH, which\nwould need to be closer serif-to-serif than HH but would be put the same\ndistance apart. The kerning is recorded in a perfectly conventional way,\nof course. You can specify categories that are to be kerned with each other\nor treated similarly - without which you would have a ridiculous number of\nkerning pairs.\n\nRalph Hancock &lt;<A HREF=\"mailto:rhancock@dircon.co.uk\">rhancock@dircon.co.uk</A>&gt;\n</PRE>\n<HR><P>\nPart of\n<A HREF=\"http://www.ics.uci.edu/~eppstein/geom.html\">Geometry in Action</A>,\na collection of applications of computational geometry.<BR>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/\">David Eppstein</A>,\n<A HREF=\"http://www.ics.uci.edu/~theory/\">Theory Group</A>,\n<A HREF=\"http://www.ics.uci.edu/\">ICS</A>,\n<A HREF=\"http://www.uci.edu/\">UC Irvine</A>.<P>\n<SMALL>Last update: <!--#flastmod file=\"kern.html\" -->.</SMALL>\n</BODY></HTML>\n", "encoding": "ascii"}