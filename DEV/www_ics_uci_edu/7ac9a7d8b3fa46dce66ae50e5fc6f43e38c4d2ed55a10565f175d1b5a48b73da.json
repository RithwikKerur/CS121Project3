{"url": "https://www.ics.uci.edu/~eppstein/261/s13-hw7.txt", "content": "CS 261, Spring 2013, Homework 7, Due Thursday, May 30\n\n\n1. The standard deviation of a collection of n data values x_i may be\ncalculated by the formula\n\n          n sum(x_i^2) - (sum x_i)^2\ns = sqrt( -------------------------- ).\n                  n (n-1)\n\n(a) Give an example that shows that the standard deviation is not\ndecomposable.\n\n(b) Describe a decomposable range querying problem such that the\nstandard deviation of the data values within a query range can be\ncomputed in constant time from the answer to your query.\n(We went through a similar example for the average in the lecture.)\n\n\n2. In class we saw how to compute the average of any contiguous subarray\nof a one-dimensional matrix by looking up two sums of prefixes of the\nmatrix. Suppose that we have a two-dimensional matrix A (such as the\npixels in a grayscale image), and we store another matrix B of the same\ndimensions, such that the value in B[i,j] is the sum of all entries\nA[x,y] with 0 <= x <= i and 0 <= y <= j. Give a formula that uses the\nvalues in B to compute the average of any rectangular subarray of A in\nconstant time.\n\n\n3. Recall that in the dynamic prefix sum problem, we are maintaining an\narray of data values, subject to operations that update a single cell in\nthe array or that query the sum of a prefix of the array. There is a\nsolution that takes time O(log n) per operation and there is a lower\nbound showing that the problem cannot be solved more quickly than O(log\nn) per operation (in the cell probe model measuring the amount of\ncommunication between main memory and CPU needed to solve the problem)\n\nNow suppose that we are given a sequence of n operations in a batch,\nrather than individual operations one at a time. Does the lower bound\nimply that solving this batched problem requires Omega(n log n) time, in\nthe same cell probe model? Why or why not?", "encoding": "ascii"}