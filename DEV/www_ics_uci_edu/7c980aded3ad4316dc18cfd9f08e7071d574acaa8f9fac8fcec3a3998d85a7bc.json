{"url": "https://www.ics.uci.edu/~theory/269/070223.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, Feb 23, 2007</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"\n521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a>\n\n<h2>CompSci 269S, Winter 2007: Theory Seminar</h2>\n\n<h3>Feb 23, 2007, 1:00pm, in CS 243</h3>\n\n<h1>\nOn-Line Arithmetic and Real-Time Rounding\n</h1>\n\n<h2>Nicholas Pippenger, Harvey Mudd College</h2>\n\n<p>\n<b>Abstract:</b>\n<p>\nArithmetic operations such as addition and multiplication are usually\nperformed in \"batch\" mode, with the inputs being available in their\nentirety before computation begins, and with no attempt being made to\nproduce any output until computation ends. This mode of operation\ncontrasts with \"on-line\" computation, in which inputs arrive\nincrementally as computation proceeds, and outputs are produced\nincrementally as well.  We will examine the problem of performing\narithmetic operations on-line. To do this we must first consider\nvarious input-output conventions and discuss alternative\ncomputational models.  The seemingly mundane problem of \"rounding\"\nbrings key issues into focus,\ngiving rise to new open questions as well as new results. \n</body>\n</html>\n", "encoding": "ascii"}