{"url": "https://www.ics.uci.edu/~pattis/ICS-46/lectures/notes/dijkstraexample.txt", "content": "Here is a trace of the Maps needed to run Dijkstra's Extended Shortest Paths\r\nalgorithm. You need to look at the equivalent graph to follow the logic below.\r\nThe result is answer_map, from which we can find the shortest path cost (and\r\nthe nodes on this route) from the given node (here \"BWI\"). Note that we show\r\nthe info_map and answer_map as sorted to make them easier to read; of course\r\nthre is no special ordering in these maps. We will NOT show the info_pq, but\r\ninstead just \"notice\" which cost is minimal and remove it when required.\r\n\r\nSee the algorithm described in the accompanying lecture.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\", +inf, \"?\"]\t\t  empty\r\n  \"BWI\" --> [\"BWI\", +inf, \"?\"]\r\n  \"DFW\" --> [\"DFW\", +inf, \"?\"]\r\n  \"JFK\" --> [\"JFK\", +inf, \"?\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"]\r\n  \"MIA\" --> [\"MIA\", +inf, \"?\"]\r\n  \"ORD\" --> [\"ORD\", +inf, \"?\"]\r\n  \"PVD\" --> [\"PVD\", +inf, \"?\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"]\r\n\r\nChoose \"BWI\" as\" the start node; update info_map \"BWI\" --> [\"BWI\", 0, \"?\"]\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\", +inf, \"?\"]\t\t  empty\r\n  \"BWI\" --> [\"BWI\",    0, \"?\"]\r\n  \"DFW\" --> [\"DFW\", +inf, \"?\"]\r\n  \"JFK\" --> [\"JFK\", +inf, \"?\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"]\r\n  \"MIA\" --> [\"MIA\", +inf, \"?\"]\r\n  \"ORD\" --> [\"ORD\", +inf, \"?\"]\r\n  \"PVD\" --> [\"PVD\", +inf, \"?\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"BWI\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\", +inf, \"?\"]\t\t  \"BWI\" --> [\"BWI\",    0, \"?\"]\r\n  \"DFW\" --> [\"DFW\", +inf, \"?\"]\r\n  \"JFK\" --> [\"JFK\", +inf, \"?\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"]\r\n  \"MIA\" --> [\"MIA\", +inf, \"?\"]\r\n  \"ORD\" --> [\"ORD\", +inf, \"?\"]\r\n  \"PVD\" --> [\"PVD\", +inf, \"?\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"]\r\n\r\nIts destination nodes are \"JFK\", \"MIA\", \"ORD\"; none are in answer_map, so all\r\n  will be processed.\r\nRetrieve the distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"BWI\" in answer_map (0) + distance (in Graph) to each.\r\nIf the sum is smaller (they all are), update info_map (with distance and new\r\n  predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"]\r\n  \"DFW\" --> [\"DFW\", +inf, \"?\"  ]\r\n  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \"PVD\" --> [\"PVD\", +inf, \"?\"  ]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"  ]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"JFK\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"DFW\" --> [\"DFW\", +inf, \"?\"  ]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \"PVD\" --> [\"PVD\", +inf, \"?\"  ]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"  ]\r\n\r\nIts destination nodes are \"BOS\", \"BWI\", \"DFW\", \"ORD\", \"PVD\"; \"BWI\" is in the\r\n  answer map (so it will not be processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"JFK\" in answer__map (184) + distance (in Graph) to each.\r\nIf the sum is smaller (they all are but \"ORD\"), update info_map (with distance\r\n  new predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"DFW\" --> [\"DFW\", 1575, \"JFK\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"  ]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"PVD\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"DFW\" --> [\"DFW\", 1575, \"JFK\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"  ]\r\n\r\nIts destination nodes are \"ORD\", \"JFK\"; \"JFK\" is in the answer map (so it will\r\n  not be processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"PVD\" in answer_map (328) + distance (in Graph) to each.\r\nIf the sum is smaller (none are) update info_map (with distance and new\r\n  predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"DFW\" --> [\"DFW\", 1575, \"JFK\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"  ]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"BOS\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"DFW\" --> [\"DFW\", 1575, \"JFK\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n  \"SFO\" --> [\"SFO\", +inf, \"?\"  ]\r\n\r\nIts destination nodes are \"JFK\", \"MIA\", \"ORD\", \"SFO\"; \"JFK\" is in the answer\r\n  map (so it will not be processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"BOS\" in info_map (371) + distance (in Graph) to each.\r\nIf the sum is smaller (only \"SFO\" is) update info_map (with distance and new\r\n  predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"DFW\" --> [\"DFW\", 1575, \"JFK\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n  \"SFO\" --> [\"SFO\", 3075, \"BOS\"]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"ORD\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"DFW\" --> [\"DFW\", 1575, \"JFK\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"SFO\" --> [\"SFO\", 3075, \"BOS\"]\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\r\nIts destination nodes are \"BOS\", \"BWI\", \"DFW\", \"JFK\", \"PVD\", \"SFO\";\r\n  \"BOS\", \"BWI\", \"JFK\", and \"PVD\" are in the answer map (so they will not be\r\n   processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"ORD\" in info_map (621) + distance (in Graph) to each.\r\nIf the sum is smaller (only \"DFW\", \"SFO\" are) update info_map (with distance\r\n  and new predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"MIA\" --> [\"MIA\",  946, \"BWI\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"MIA\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"LAX\" --> [\"LAX\", +inf, \"?\"  ]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\r\n\r\nIts destination nodes are \"BOS\", \"BWI\", \"DFW\", \"JFK\", \"LAX\"; \"BOS\", \"BWI\", and\r\n  \"JFK\" are in the answer map (so they will not be processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"MIA\" in info_map (946) + distance (in Graph) to each.\r\nIf the sum is smaller (only \"LAX\" is) update info_map (with distance and new\r\n  predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"LAX\" --> [\"LAX\", 3288, \"MIA\"]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"DFW\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"LAX\" --> [\"LAX\", 3288, \"MIA\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \t    \t    \t  \t\t  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\r\n\t\t\t\t\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\r\nIts destination nodes are \"JFK\", \"LAX\", \"MIA\", \"ORD\", \"SFO\";  \"JFK\", \"MIA\", and\r\n  \"ORD\" are in the answer map (so they will not be processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"DFW\" in info_map (1423) + distance (in Graph) to each.\r\nIf the sum is smaller (only \"LAX\" is) update info_map (with distance and new\r\n  predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"LAX\" --> [\"LAX\", 2658, \"DFW\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \t    \t    \t  \t\t  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\r\n\t\t\t\t\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the minimum cost in info_pq: \"DFW\". It is already in the answer_map so\r\nskip it. Recall from the algorithm that many nodes will appear multiple times\r\nin the priority queue.\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the  minimum cost in info_map: \"SFO\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"LAX\" --> [\"LAX\", 2658, \"DFW\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n\t\t\t\t\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \t    \t    \t  \t\t  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\r\n\t\t\t\t\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\t\t\t\t\t  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\r\n\r\nIts destination nodes are \"BOS\", \"DFW\", \"LAX\", \"ORD\"; \"BOS\", \"DFW\", and \"ORD\"\r\n  are in the answer map (so they will not be processed).\r\nRetrieve distance to each in info_map (smallest distance so far) and\r\n  compute distance to \"SFO\" in info_map (2467) + distance (in Graph) to each.\r\nIf the sum is smaller (none are) update info_map (with distance and new\r\n  predecessor) and update them in the adjustable info_pq.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n  \"LAX\" --> [\"LAX\", 2658, \"DFW\"]\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n\t\t\t\t\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \t    \t    \t  \t\t  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\r\n\t\t\t\t\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\t\t\t\t\t  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\r\n\r\n------------------------------------------------------------------------------\r\n\r\nFind the  minimum cost in info_map: \"LAX\". Move it to answer_map.\r\n\r\ninfo_map     \t     \t   \t \tanswer_map\r\n\t\t\t\t\t  \"BOS\" --> [\"BOS\",  371, \"JFK\"]\r\n\t\t\t\t\t  \"BWI\" --> [\"BWI\",    0, \"?\"  ]\r\n  \t    \t    \t  \t\t  \"DFW\" --> [\"DFW\", 1423, \"ORD\"]\r\n\t\t\t\t\t  \"JFK\" --> [\"JFK\",  184, \"BWI\"]\r\n\t\t\t\t\t  \"LAX\" --> [\"LAX\", 2658, \"DFW\"]\r\n  \t    \t    \t  \t\t  \"MIA\" --> [\"MIA\",  946, \"BWI\"]  \r\n  \t    \t    \t  \t\t  \"ORD\" --> [\"ORD\",  621, \"BWI\"]\r\n  \t    \t    \t  \t\t  \"PVD\" --> [\"PVD\",  328, \"JFK\"]\r\n\t\t\t\t\t  \"SFO\" --> [\"SFO\", 2467, \"ORD\"]\r\n\r\nIts destination nodes are \"DFW\", \"MIA\", \"SFO\"; all are in the answer_map (so\r\n  they will not be processed).\r\n\r\n------------------------------------------------------------------------------\r\n\r\nThe info_map is empty so the algorithm stops.\r\n\r\n------------------------------------------------------------------------------\r\n\r\nSay we want to know the shortest path from \"BWI\" to \"LAX\".\r\nWe push \"LAX\" on a stack and look up predecessor \"DFW\".\r\nWe push \"DFW\" on a stack and look up predecessor \"ORD\".\r\nWe push \"ORD\" on a stack and look up predecessor \"BWI\".\r\nWe push \"BWI\" on a stack and look up predecessor \"?\"; so we stop.\r\n\r\nNow we pop off all the values in the stack and add them to a queue that shows\r\nthe shortest, route: queue[BWI,ORD,DFW,LAX].\r\n", "encoding": "ascii"}