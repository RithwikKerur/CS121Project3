{"url": "https://www.ics.uci.edu/~sgaffney/software/CCT/doc/demo.html", "content": "<html>\n<head>\n\n<style type=\"text/css\">\n  <! --\n  H { font-family: Arial, Helvetica, Modern; }\n  H1 { font-family:  Arial, Helvetica, Modern; font-size:large}\n  H2 { font-family: 10pt;  Arial,Helvetica,Modern;   \n       padding-top: 1; padding-bottom: 1; padding-left: 2; color:black}\n  H3 { font-family:    Arial,Helvetica,Modern; background:#aaccaa;  color:black;\n       padding-top: 1; padding-bottom: 1; padding-left: 2; font-size:medium }\n  P { font-family: Arial; font-size: small; color: black}\n  P.important { margin-left: 0.5cm; margin-right: 1cm; color: red }\n  LI { margin-left: 0.5cm; font-family: Arial; font-size: small }\n  B  { font-size: smaller }\n  table.indent { margin-left: 1cm }\n  -->\n</style>\n\n<title>The CCToolbox</title>\n\n</head>\n\n<body bgcolor=\"#eeeeee\">\n <H2 align=center>CCToolbox Tutorial/Demo</H2>\n\n\n<div align=center>\n<a href=\"http://www.ics.uci.edu/~sgaffney/software/CCT\">CCToolbox</a> |\n<a href=\"../#Down\">Download</a> |\n<a href=\"./\">Documentation</a> |\n<a href=\"http://www.ics.uci.edu/~sgaffney#contact\">Contact</a>\n</div>\n\n<!-- <a href=\"./\">Documentation home</a> > Tutorial/Demo -->\n\n\n\n <H3>Overview</H3>\n   <p>Curves are clustered with the CCToolbox by following five simple steps.\n   <ol>\n   <li><a href=\"#Init\">Initialize the toolbox</a>\n   <li><a href=\"#Data\">Load the appropriate curve data</a>\n   <li><a href=\"#ModelOps\">Set the cluster model options (e.g., number of clusters)</a>\n   <li><a href=\"#EMOps\">Set the EM algorithm options (e.g., number of EM starts)</a>\n   <li><a href=\"#Cluster\">Run <tt>model = curve_clust(trajs,options)</tt></a>\n   </ol>\n\n\n<h3 id=\"Init\">1. Initializing the toolbox</h3>\n<p>You must run <b>SetCCTPath()</b> each time you wish to use the\ntoolbox. This function sets the appropriate paths needed by the toolbox.\nYou can run this each time automatically by starting matlab with the\n-r option.</p>\n\n\n\n <H3 id=\"Data\">2. Loading the data</H3>\n <p>Curves can be represented in various ways \n(see <a href=\"curve_format.html\">curve formats</a> for more details). The standard way \nthat they are represented\n in the toolbox is by loading a set of curves into cell arrays. For example, suppose we have \n <em>n</em> curves, then the observations for each of these curves are stored in the \n <em>n</em>-by-1 cell array Y. The times (or whichever independent variable is of interest) \n at which these\n observations were made is stored in the cell array X of the same size. Thus, the <em>i</em>-th\n curve's observations Y{i} and observation times X{i} can be easily accessed using the index\n variable <em>i</em>. \n \n <p>Since observations can be multivariate (say, of dimension <em>D</em>)\n and curve lengths may vary (say, length <em>n<sub>i</sub></em> for curve <em>i</em>), \n the size of each Y{i} is  <em>n<sub>i</sub></em> by <em>D</em>, where the total\n number of observations in all curves is\n <em>N=n<sub>1</sub>+n<sub>2</sub>+...+n<sub>n</sub></em>. The size of each X{i} is \nalways <em>n<sub>i</sub></em> by 1 since time is univariate. However, often the times at \nwhich the curve observations were made are fixed and uniform across all curves. \nIn this case, X does not actually have to be specified, and the toolbox assumes that\nX{i} is equal to 0..(<em>n<sub>i</sub>&nbsp;-1</em>).\n \n <p>As an example, we demonstrate the structure of a set of curves representing actual\n observed cyclone tracks that originated in the North Atlantic from 1995-2001.\n Each track consists of <em>n<sub>i</sub></em>\n observations of cyclone latitude and longitude position, and there are 296 total tracks. \n The size of the cell array Y as output by Matlab can be seen below.\n \n <PRE>\n >> whos Y\n  Name      Size                   Bytes  Class\n\n  Y       296x1                    87152  cell array\n </PRE>\n\n <p>The cells for the first 10 tracks can be listed as follows.\n <pre>\n >> Y(1:10)\nans = \n    [13x2 double]\n    [10x2 double]\n    [21x2 double]\n    [11x2 double]\n    [18x2 double]\n    [14x2 double]\n    [14x2 double]\n    [10x2 double]\n    [10x2 double]\n    [19x2 double]\n </pre>\n\n <p>Notice that, for example, the first track Y{1} has 13 observations, each being\n two-dimensional (i.e., both a latitude and longitude observation). The first track\n can be listed as follows.\n <pre>\n >> Y{1}\nans =\n  -57.2177   51.2200\n  -55.5783   53.1028\n  -54.8666   55.2942\n  -55.0624   57.3329\n  -56.4487   58.9460\n  -57.2662   59.2198\n  -57.9229   59.5291\n  -57.8100   59.3403\n  -57.1867   59.6936\n  -57.5489   60.9830\n  -55.9977   61.8928\n  -62.3653   65.1744\n  -62.8327   67.4031\n </pre>\n\n <p> The first dimension here is longitude and the second is latitude, although this\n ordering is insignificant. (Negative longitude numbers mean west of zero degrees and\n positive latitude numbers mean north of zero degrees.) A plot of the first 10 cyclone\n tracks on a map of the North Atlantic is given below. The small circles indicate \n the genesis point (the origin) for each cyclone track.</p>\n\n <img src=\"imgs/mapoften.gif\" border=\"1\">\n\n <p>For this data set there is no need for an X cell array since each cyclone track\n was observed uniformly at 6-hour intervals from time zero (the instant at which it was\n detected) to time <em>n<sub>i</sub></em> (the end of its lifetime). In the absence of\n a provided X cell array, the toolbox simply\n assumes that X{i} is equal to 0..(<em>n<sub>i</sub>&nbsp;-1</em>).\n\n\n\n\n\n\n <H3 id=\"ModelOps\">3. Setting the model options</H3>\n<p>Depending on the particular cluster model that is used (see \n<a href=\"cluster_models.html\">cluster models</a> for complete list), there are a number of \ndifferent model options. For example, knots are required for spline regression but\nnot for polynomial regression. In any case, all options are set by using one large\noptions structure. \n\n<p class=\"important\">You can retrieve the default options for any cluster model by\ncalling the clustering function associated with that model and passing-in the single\nstring argument of 'options'. For example, <tt>ops = lrm('options')</tt> will return the\ndefault options for linear/polynomial regression mixtures in <tt>ops</tt>.\n\n<p>Most cluster models only require the most common options. These are listed below.<p>\n\n <table class=\"indent\" cellspacing=\"0\">\n   <tr><td>ops.method<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <td>: select clustering method; see <b>listmodels()</b> for all methods\n   <tr><td>ops.K<td>       <td>: number of clusters\n   <tr><td>ops.order<td>   <td>: order of regression; specify 1 for linear, 2 for quadratic, etc.\n   <tr><td>ops.zero<td>    <td>: select data normalization; see <b>trajs2seq()</b> for values\n </table>\n\n<p>The help message at the beginning of each clustering function\nshould list any other required options for that model. For example, ops.knots is\nrequired for <b>srm()</b>; however, even in this case it is possible to enable \nautomatic knot selection, and thus dispense with specifying ops.knots.\n\n<p>For our current demo using the cyclone track data, we set only the basic options\nas follows.\n<pre>\nops = \n    method: 'lrm'\n         K: 3\n     order: 2\n      zero: 'none'\n</pre>\n\n<p>We are going to use standard linear/polynomial regression mixtures as specified by\n'lrm', and we are seeking three groups in the data. We choose to use quadratic polynomial\nregression, and we do not want to perform any preprocessing or normalization of the data.\n\n\n\n\n\n\n <H3 id=\"EMOps\">4. Setting the EM options</H3>\n<p>Unlike the cluster model options, the EM options of this section are all truly\noptional. These options are more technical in nature and usually apply to all EM\nalgorithms in general, regardless of the cluster model. Some of the more common\noptions are listed below.<p>\n \n <table class=\"indent\" cellspacing=\"0\">\n   <tr><td>ops.NumEMStarts<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <td>: number of random EM starts to perform\n   <tr><td>ops.IterLimit<td> <td>: maximum number of possible iterations to perform\n   <tr><td>ops.stopval<td>   <td>: value used in EM stopping criterion function (e.g., see <b>lrm()</b>)\n   <tr><td>ops.ShowGraphics<td> <td>: {0,1} enable iterative graphics output during EM\n </table>\n\n<p>For our current demo, we only set the number of random EM starts.\n<pre>\n>> ops.NumEMStarts = 5;\n</pre>\n\n\n\n\n\n <H3 id=\"Cluster\">5. Performing the clustering</H3>\n<p>The clustering is carried out by calling <b>curve_clust()</b> and passing-in the \ncurve data and the options structure.\n<pre>\n>> model = curve_clust(Y,ops);\n</pre>\n\n<p>When the clustering is finished, a learned model structure is returned.\nThe format of this structure is detailed extensively in the \n<a href=\"model_structure.html\">model structure</a> section of the documentation.\nFor the sake of completeness, we list this structure here.\n<pre>\n>> model\nmodel = \n                 K: 3\n             order: 2\n           Options: [1x1 struct]\n              zero: 'none'\n            method: 'lrm'\n               Pik: [296x3 double]\n             Alpha: [3x1 double]\n                Mu: [3x3x2 double]\n             Sigma: [2x2x3 double]\n             scale: 5.3632e-004\n             Lhood: [1x30 double]\n                 C: [296x1 double]\n         NumPoints: 8674\n        TrainLhood: -3.0850e+004\n    TrainLhood_ppt: -3.5565\n      NumIndParams: 26\n             state: [35x1 double]\n            nstate: [2x1 double]\n</pre>\n\n<p>Of the five random EM starts, the one with maximum likelihood is always returned.\nThis maximal run consisted of 30 iterations as can be seen by the size of <tt>model.Lhood</tt>,\nwhich gives the log-likelihood achieved at each iteration of EM. The final log-likelihood\nvalue is -3.0850e+004 (as given by <tt>model.TrainLhood</tt>) and the final per-point\nlog-likelihood value is -3.5565 as shown by <tt>model.TrainLhood_ppt</tt>.\n\n<p>The regression coefficients are stored in <tt>model.Mu</tt>. For example, \n<tt>model.Mu(:,1,1)</tt> holds the longitudinal coefficients for cluster one, \nwhile <tt>model.Mu(:,2,1)</tt> holds them for cluster two. Finishing up, we note\nthat the actual clustering is given by reading the labels stored in <tt>model.C</tt>.\nFor example, the labels for the first ten tracks are as shown below.\n<pre>\n>> model.C(1:10)\nans =\n     2\n     1\n     1\n     1\n     3\n     1\n     1\n     1\n     1\n     2\n</pre>\n\n<p>You can visualize the results of the clustering by calling <b>showmodel()</b>.\n<pre>\n>> showmodel(model,Y);\n</pre>\n<img src=\"imgs/results_dims.gif\" border=\"1\">\n\n<p>The left plot shows the longitude vs. time profiles for all of the tracks, \nand the right plot shows the latitude vs. time profiles. The learned cluster groups\nare color-coded, and the mean curves for each group are bolded. \nThere are many options that can be used to change the type of plot produced with\n<b>showmodel()</b>. The function is set up like a large script with all of the\noptions laid out and explained, line-by-line. The user is encouraged to actively\nedit and re-edit this function/script to produce the desired plots.\n\n<p>Since this data is inherently geographic, it can be effective to view the\nclustering on top of the map from whence the data originated.\nThis type of plot can be produced with the \n<a href=\"http://www.ics.uci.edu/~sgaffney/cyctrack\">Cyclone Tracking Toolbox</a>.</p>\n\n<img src=\"imgs/results_map.gif\" border=\"1\">\n\n<p>Notice that the clusters appear to be heavily influenced by initial cyclone track\nposition (or genesis position). This can be seen as a benefit or a nuisance. One\ncan remove this dependence by using advanced options. This will be briefly discussed\nin the next section.\n\n\n\n<h3>Some advanced topics</h3>\n<p>In the previous exercise, we used standard polynomial regression mixtures to\nperform the clustering. We might like to try other methods that allow for continuous\nalignment in time, such as <b>lrm_b()</b> (see <a href=\"cluster_models.html\">cluster \nmodels</a> for a complete list of models). This will allow for two cyclone tracks\nthat are similar but translated in time to be simultaneously aligned and \nclustered. This clustering method can be tried by simply changing the value of ops.method\nas follows.\n<pre>\n>> ops.method = 'lrm_b';\n</pre>\n\n<p>That's it. Now you can just run <b>curve_clust()</b> directly as before.\n\n<p>Suppose we now would like to remove initial starting position as a possible source \nof variation. We can easily do this by changing the value of ops.zero.\nOne setting for this option is the string 'zero'. This will take each cyclone track\nand subtract the first lat-lon position from each of the measurements for that cyclone.\nThis will force all cyclones to begin at the relative position of (0,0), and hence\nremove initial starting position as a possible source of variation.\n<pre>\n>> ops.zero = 'zero'\nops = \n         method: 'lrm'\n              K: 3\n          order: 2\n           zero: 'zero'\n    NumEMStarts: 5\n</pre>\n\n<p>Now we simply run the clustering and plot the results again.\n<pre>\n>> model_zero = curve_clust(Y,ops);\n>> showmodel(model_zero,Y);\n</pre></p>\n\n<p><img src=\"imgs/results_zero_dims.gif\" border=\"1\">\n\n<p><img src=\"imgs/results_zero_map.gif\" border=\"1\">\n\n<p>Now we have clearly removed initial starting position as a source of variation.\nThe clustering is more concentrated on cyclone track shape as a result. This can\nbetter be seen in the following three cluster plots.\n\n<p><img src=\"imgs/results_zero_map1.gif\" border=\"1\"><br>\n<img src=\"imgs/results_zero_map2.gif\" border=\"1\"><br>\n<img src=\"imgs/results_zero_map3.gif\" border=\"1\"></p>\n\n<p>This concludes the tutorial. More information can be found on the main\n<a href=\"./\">documentation</a> page.\n\n<h3></h3>\n<div align=center>\n<a href=\"#top\">Top</a> |\n<a href=\"http://www.ics.uci.edu/~sgaffney/software/CCT\">CCToolbox</a> |\n<a href=\"../#Down\">Download</a> |\n<a href=\"./\">Documentation</a> |\n<a href=\"http://www.ics.uci.edu/~sgaffney#contact\">Contact</a>\n</div>\n\n\n\n\n</body>\n\n</html>\n", "encoding": "ascii"}