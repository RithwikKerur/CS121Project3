{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/overview/mser.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n\n  <!-- Page title -->\n  <title>VLFeat - Tutorials > MSER feature detector</title>\n\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  \n\n  <!-- Scripts-->\n  \n\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li class='active'><a href=\"tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"hog.html\">HOG features</a>\n</li>\n<li><a href=\"sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"liop.html\">LIOP local descriptor</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li><a href=\"../api/index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n<ul>\n<li><a href=\"../man/mser.html\">mser</a>\n</li>\n<li><a href=\"../man/sift.html\">sift</a>\n</li>\n<li><a href=\"../man/vlfeat.html\">vlfeat</a>\n</li>\n</ul></li>\n</ul></li>\n</ul>\n\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"tut.html\">Tutorials</a></span><span class='separator'>></span><span class='page'><a href=\"mser.html\">MSER feature detector</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n        \n    \n\n<div class='toc'>\n<h3>Table of Contents</h3><ul><li class=\"level1\"><a href=\"#tut.mser.extract\">Extracting MSERs</a></li>\n<li class=\"level1\"><a href=\"#tut.mser.param\">MSER parameters</a></li>\n<li class=\"level1\"><a href=\"#tut.mser.conventions\">Conventions</a></li>\n</ul>\n</div><!-- Table of contents -->\n\n\n<p><em>Maximally Stable Extremal Regions (MSER)</em> is a feature\ndetector; Like the <a shape=\"rect\" href=\"tut.sift\">SIFT detector</a>, the MSER\nalgorithm extracts from an image <code/>I</code> a number of co-variant\nregions, called MSERs. An MSER is a <em>stable</em> connected\ncomponent of some level sets of the image <code/>I</code>. Optionally,\nelliptical frames are attached to the MSERs by fitting ellipses to the\nregions. For a more in-depth explanation of the MSER detector, see\nour <a shape=\"rect\" href=\"../api/mser_8h.html\">API reference for\nMSER</a></p>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.mser.extract\">Extracting MSERs</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>Each MSERs can be identified uniquely by (at least) one of its\npixels <code/>x</code>, as the connected component of the level set at\nlevel <code/>I(x)</code> which contains <code/>x</code>. Such a pixel is\ncalled <em>seed</em> of the region.</p>\n\n<p>To demonstrate the usage of the MATLAB command <code/><a href=../matlab/vl_mser.html>vl_mser</a></code>\nwe open MATLAB and load a test image</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">pfx</span> <span class=\"p\">=</span> <span class=\"n\">fullfile</span><span class=\"p\">(</span><span class=\"n\">vl_root</span><span class=\"p\">,</span><span class=\"s\">&#39;data&#39;</span><span class=\"p\">,</span><span class=\"s\">&#39;spots.jpg&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">I</span> <span class=\"p\">=</span> <span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">pfx</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">image</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<div class=\"figure\">\n<image src=\"../demo/mser_basic_0.jpg\"></image>\n<div class=\"caption\">\n<span class=\"content\">\nA test image.\n</span>\n</div>\n</div>\n\n<p>We then convert the image to a format that is suitable for the\n<code/><a href=../matlab/vl_mser.html>vl_mser</a></code> command.</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">I</span> <span class=\"p\">=</span> <span class=\"n\">uint8</span><span class=\"p\">(</span><span class=\"n\">rgb2gray</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">))</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>We compute the region seeds and the elliptical frames by</p>\n\n<div class=\"highlight\"><pre><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">f</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_mser</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"s\">&#39;MinDiversity&#39;</span><span class=\"p\">,</span><span class=\"mf\">0.7</span><span class=\"p\">,</span><span class=\"c\">...</span>\n                <span class=\"s\">&#39;MaxVariation&#39;</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"c\">...</span>\n                <span class=\"s\">&#39;Delta&#39;</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>We plot the region frames by</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">f</span> <span class=\"p\">=</span> <span class=\"n\">vl_ertr</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">vl_plotframe</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p><code/><a href=../matlab/vl_ertr.html>vl_ertr</a></code> transposes the elliptical frame and is\nrequired here because the <code/><a href=../matlab/vl_mser.html>vl_mser</a></code> code assumes that the row index\nis the first index, but the normal image convention assumes that this is the\n<code/>x</code> (column) index.</p>\n\n<p>Plotting the MSERs themselves is a bit more involved as they have\narbitrary shape.  To this end, we exploit two\nfunctions: <code/><a href=../matlab/vl_erfill.html>vl_erfill</a></code>, which, given an image and a region\nseed, returns a list of the pixels belonging to that region, and\nthe MATLAB built-in <code/>contour</code>, which draws the contour lines\nof a function. We start by</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">M</span> <span class=\"p\">=</span> <span class=\"nb\">zeros</span><span class=\"p\">(</span><span class=\"nb\">size</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">))</span> <span class=\"p\">;</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">=</span><span class=\"n\">r</span><span class=\"o\">&#39;</span>\n <span class=\"n\">s</span> <span class=\"p\">=</span> <span class=\"n\">vl_erfill</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n <span class=\"n\">M</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">M</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"k\">end</span>\n</pre></div>\n\n\n<p>which computes a matrix <code/>M</code> whose value are equal to the\nnumber of overlapping extremal regions. Next, we use <code/>M</code>\nand <code/>contour</code> to display the region boundaries:</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">clf</span> <span class=\"p\">;</span> <span class=\"n\">imagesc</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">)</span> <span class=\"p\">;</span> <span class=\"n\">hold</span> <span class=\"n\">on</span> <span class=\"p\">;</span> <span class=\"n\">axis</span> <span class=\"n\">equal</span> <span class=\"n\">off</span><span class=\"p\">;</span> <span class=\"n\">colormap</span> <span class=\"n\">gray</span> <span class=\"p\">;</span>\n<span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">,</span><span class=\"n\">h</span><span class=\"p\">]=</span><span class=\"n\">contour</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,(</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">(:)))</span><span class=\"o\">+</span><span class=\"p\">.</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span><span class=\"s\">&#39;color&#39;</span><span class=\"p\">,</span><span class=\"s\">&#39;y&#39;</span><span class=\"p\">,</span><span class=\"s\">&#39;linewidth&#39;</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<div class=\"figure\">\n<image src=\"../demo/mser_basic_contours.jpg\"></image>\n<image src=\"../demo/mser_basic_frames.jpg\"></image>\n<div class=\"caption\">\n<span class=\"content\">\nExtracted MSERs (left) and fitted ellipses (right).\n</span>\n</div>\n</div>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.mser.param\">MSER parameters</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>In the original formulation, MSERs are controlled by a single\nparameter <code/>&Delta;</code>, which controls how the stability is\ncalculated. Its effect is shown in the figure below.</p>\n\n<div class=\"figure\">\n<image src=\"../demo/mser_delta_0.jpg\"></image>\n<image src=\"../demo/mser_delta_1.jpg\"></image>\n<image src=\"../demo/mser_delta_2.jpg\"></image>\n<image src=\"../demo/mser_delta_3.jpg\"></image>\n<image src=\"../demo/mser_delta_4.jpg\"></image>\n<div class=\"caption\">\n<span class=\"content\">\n  <b>Effect of <code/>&Delta;</code>.</b> We start with a synthetic\n  image which has an intensity profile as shown.  The bumps have\n  heights equal to 32, 64, 96, 128 and 160. As we increase\n  <code/>&Delta;</code>, fewer and fewer regions are detected until\n  finally at <code/>&Delta;=160</code> there is no region\n  <code/>R</code> which is stable at <code/>R(+&Delta;)</code>.\n</span>\n</div>\n</div>\n\n<p>The stability of an extremal region <code/>R</code> is the inverse\nof the relative area variation of the region <code/>R</code> when the\nintensity level is increased by <code/>&Delta;</code>. Formally, the\nvariation is defined as:</p>\n\n<div class=\"highlight\"><pre><span class=\"o\">|</span><span class=\"n\">R</span><span class=\"p\">(</span><span class=\"o\">+</span>\u00ce\u201d<span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">R</span><span class=\"o\">|</span>\n<span class=\"o\">-----------</span>\n    <span class=\"o\">|</span><span class=\"n\">R</span><span class=\"o\">|</span>\n</pre></div>\n\n\n<p>where <code/>|R|</code> denotes the area of the extremal region\n<code/>R</code>, <code/>R(+&Delta;)</code> is the extremal region\n<code/>+&Delta;</code> levels up which contains <code/>R</code> and\n<code/>|R(+&Delta;) - R|</code> is the area difference of the two\nregions. </p>\n\n<p>A stable region has a small variation. The algorithm finds regions which\nare &quot;maximally stable&quot;, meaning that they have a lower variation\nthan the regions one level below or above. Note that due to the\ndiscrete nature of the image, the region below / above may be\ncoincident with the actual region, in which case the region is still\ndeemed maximal.</p>\n\n<p>However, even if an extremal region is maximally stable, it might be\nrejected if:</p>\n\n<ul>\n<li>it is too big (see the parameter <code/>MaxArea</code>);</li>\n<li>it is too small (see the parameter <code/>MinArea</code>);</li>\n<li>it is too unstable (see the parameter <code/>MaxVariation</code>);</li>\n<li>it is too similar to its parent MSER (see the\nparameter <code/>MinDiversity</code>).</li>\n</ul>\n\n<p>By default, MSERs are extracted for both dark-on-bright regions and bright-on-dark regions. To control this, parmeters <code/>BrightOnDark</code> and <code/>DarkOnBright</code> which take values 0 or 1 to enable or disable the regions. For example:\n</p>\n\n<div class=\"highlight\"><pre><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">f</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_mser</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">,</span><span class=\"s\">&#39;MinDiversity&#39;</span><span class=\"p\">,</span><span class=\"mf\">0.7</span><span class=\"p\">,</span><span class=\"c\">...</span>\n                <span class=\"s\">&#39;MaxVariation&#39;</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"c\">...</span>\n                <span class=\"s\">&#39;Delta&#39;</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"c\">...</span>\n                <span class=\"s\">&#39;BrightOnDark&#39;</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"s\">&#39;DarkOnBright&#39;</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>computes the regions in green in the figure below.</p>\n\n<div class=\"figure\">\n<image src=\"../demo/mser_basic_contours_both.jpg\"></image>\n<image src=\"../demo/mser_basic_frames_both.jpg\"></image>\n<div class=\"caption\">\n<span class=\"content\">\nExtracted MSERs (left) and fitted ellipses (right) for both bright-on-dark\n(green) and dark-on-bright (yellow).\n</span>\n</div>\n</div>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.mser.conventions\">Conventions</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n\n<p>As mentioned in the introduction, <code/><a href=../matlab/vl_mser.html>vl_mser</a></code> uses\nmatrix indices as image coordinates. Compared to the usual MATLAB\nconvention for images, this means that the <code/>x</code>\nand <code/>y</code> axis are swapped (this has been done to make the\nconvention consistent with images with three or more dimensions). Thus\nthe frames computed by the program may need to be &quot;transposed&quot; as\nin:</p>\n\n<div class=\"highlight\"><pre><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">f</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_mser</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">f</span> <span class=\"p\">=</span> <span class=\"n\">vl_ertr</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>On the other hand, the region seeds <code/>r</code> are already in\nrow major format, which is the standard MATLAB format for pixel\nindices.</p>\n\n<p>Instead of transposing the frames, one can start by transposing\nthe image. In this case, the frames <code/>f</code> have the standard\nimage convention, but the region seeds are in column-major format and\nmay need to be &quot;transposed&quot; as in:</p>\n\n<div class=\"highlight\"><pre><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">f</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_mser</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"o\">&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"p\">[</span><span class=\"nb\">i</span><span class=\"p\">,</span><span class=\"nb\">j</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"nb\">sub2ind</span><span class=\"p\">(</span><span class=\"nb\">size</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"o\">&#39;</span><span class=\"p\">),</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">r</span>  <span class=\"p\">=</span> <span class=\"nb\">ind2sub</span><span class=\"p\">(</span><span class=\"nb\">size</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">),</span><span class=\"nb\">j</span><span class=\"p\">,</span><span class=\"nb\">i</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>The command line utility <code/>mser</code> uses the normal image\nconvention (because images are rasterized in column-major\norder). Therefore the image frames are in the standard format, and the\nregion seeds are in column major format.</p>\n\n<p>In order to convert from the command line utility convention to\nthe MATLAB convention one needs also to recall that MATLAB coordinates\nstarts from (1,1), but the command line utility uses the more common\nconvention (0,0). For instance, let the files <code/>image.frame</code>\nand <code/>image.seed</code> contain the feature frames and seeds in\nASCII format as generated by the command line utility. Then</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">r_</span> <span class=\"p\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s\">&#39;image.seed&#39;</span><span class=\"p\">)</span><span class=\"o\">&#39;</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">;</span>\n<span class=\"n\">f_</span> <span class=\"p\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s\">&#39;image.frame&#39;</span><span class=\"p\">)</span><span class=\"o\">&#39;</span> <span class=\"p\">;</span>\n<span class=\"n\">f_</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,:)</span> <span class=\"p\">=</span> <span class=\"n\">f_</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,:)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">;</span>\n<span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">f</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_mser</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"o\">&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span> <span class=\"c\">% notice the transpose</span>\n</pre></div>\n\n\n<p>produces identical (up to numerical noise) region\nseeds <code/>r</code> and <code/>r_</code> and frames <code/>f</code>\nand <code/>f_</code>.</p>\n\n\n  \n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n ", "encoding": "Windows-1252"}