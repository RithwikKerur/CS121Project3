{"url": "https://www.ics.uci.edu/~eppstein/163/s15-hw2.html", "content": "<html>\n<head>\n<title>CompSci 163/265, Spring 2015, Homework 2</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n</head>\n<body>\n<h1>CompSci 163/265, Spring 2015, Homework 2</h1>\n<ol>\n<li><p>Describe a linear time algorithm that takes as input a directed\ngraph and partitions its edges into two subsets such that each of the\ntwo subsets forms a directed acyclic graph.</p></li>\n<li><p>Suppose that $G$ is a directed acyclic graph with $n$ vertices,\nwith the special property that there is only one way to place the\nvertices of $G$ into a topological order.</p>\n<ol type=\"a\"><li><p>How many edges can the transitive closure of $G$\nhave, as a function of $n$?</p></li>\n<li><p>How many edges can the transitive reduction of $G$ have, as a\nfunction of $n$?</p></li>\n</ol></li>\n<li><p>(For 163 students:)\nIf $G$ is a directed acyclic graph without any redundant edges (it is\nits own transitive reduction), is it always possible to assign the\nvertices to layers in such a way that each edge goes downwards from one layer\nto the next consecutive layer? For this problem, there is no limit on\nthe number of vertices per layer. If the answer is yes, explain why. If\nthe answer is no, find a counterexample.</p>\n<p>(For 265 students:)\nFind an example of a directed acyclic graph for which the\nCoffman&ndash;Graham algorithm, with three vertices per layer, can use\nmore layers than the optimum layering. Show both the optimum layering\nand the layering found by the algorithm.</p></li>\n<li><p>Suppose we are given as input a directed graph (not necessarily\nacyclic) and we want to add one edge to the graph so that the augmented\ngraph is strongly connected. Describe a linear time algorithm for\nfinding such an edge, if it exists. (Hint: use the condensation, and\nlook at the numbers of incoming and outgoing edges of the nodes in the\ncondensation.)</p></li>\n</ol>\n</body>\n</html>\n", "encoding": "ascii"}