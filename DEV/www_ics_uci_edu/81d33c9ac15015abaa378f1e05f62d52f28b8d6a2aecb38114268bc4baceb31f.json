{"url": "https://www.ics.uci.edu/~taylor/ics125_fq99//requirements.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<HTML>\n<HEAD>\n   <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n   <META NAME=\"GENERATOR\" CONTENT=\"Mozilla/4.07 (Macintosh; I; PPC) [Netscape]\">\n   <TITLE>Deliverable 2: Requirements</TITLE>\n</HEAD>\n<BODY BGCOLOR=\"#FFFFF0\">\n\n<CENTER>\n<H2>\nICS 125:<BR>\nProject in Software System Design</H2></CENTER>\n\n<CENTER>\n<H3>\nFall Quarter 1999</H3></CENTER>\n\n<CENTER>\n<H1>\nRequirements</H1></CENTER>\n\n<H3>\nDue Date</H3>\n\nAs described  on the course syllabus.\n\n<P><B>This document must be signed by your customer.&nbsp; </B>This will\nhelp ensure that he has agreed that you have met all his needs.&nbsp;\nThis is, after all, a contract with your customer.\n<P>\n<HR>\n<h3> Overview </h3>\n\n<P>After completing your prospectus, your team must develop a software\nrequirements document that satisfies the needs of your customer.  This\ndocument will consist of two primary components: a requirements\nspecification and a system test plan.  Your design must also include a\nglossary, or data dictionary, which defines all terms used that are\nspecific to the application you are developing.  Other accompanying\ndocumentation may be included as well.\n\n<P>In conjunction with this requirements specification, your team must\ndevelop an acceptance statement and an initial system test plan covering the\nrequirements. The system test plan must cover all basic software capabilities\nto be provided by the system by applying functional test heuristics (black\nbox) to each capability described in the requirements specification and\ndeveloping a test case for each interaction between capabilities.\n\n<P>As has been discussed in class, you have substantial flexibility in\nchoosing the specific form for the various sections of your deliverables. You've\ndone these before, in ICS 52 and ICS 121, so you have plenty of \"model\ndocuments\" to draw from, to help you determine how to structure this statement.\n\n<P>A list of the standard items that must be turned in with <em> each </em>\nICS 125 assignment and posted on the team's web site are in the course syllabus.\nRequired sections of this document are described below.\n\n<HR>\n<H3>\nDeliverable Objectives/Requirements Qualities</H3>\nKeep in mind that key objectives of a requirements document are to:\n<UL>\n<LI> Document the customer's needs</LI>\n<LI> Identify functional capabilities to be provided</LI>\n<LI> Identify non-functional and environmental constraints that must be \nsatisfied</LI>\n<LI> Provide a definitive basis for testing and verification</LI>\n<LI> Identify lifecycle considerations such as incremental sub-system \ndevelopment</LI>\n<LI> Provide a reference tool readable by customer, developer, and \nmaintainer</LI>\n<LI> Serve as a contract between customer and developer</LI>\n</UL>\n\nIn addition, keep in mind that a requirements document should possess the\nfollowing qualities:\n<UL>\n<LI> Complete: everything that is essential is described</LI>\n<LI> Understandable:  the \"customer\" can read it and be convinced that all his\nobjectives and needs are adequately and accurately described</LI>\n<LI> Utility: the information in the document can be used effectively to help\nin the design phase (e.g., an OO requirements analysis can aid in development\nof an OO design)</LI>\n<LI> Unambiguous: every reader will come away with the same understanding</LI>\n<LI> Consistent: no contradictions</LI>\n<LI> Abstract: one model, many realizations, and no implementation details</LI>\n<LI> Feasible: the requirements can be satisfied within resource constraints</LI>\n<LI> Even: the entire document is at same level of detail</LI>\n<LI> Effectively modifiable: this is a living document</LI>\n<LI> Concise and appropriate: no extraneous details and not more than required</LI>\n<LI> Verifiable and testable: you can tell when you've met the requirements</LI>\n</UL>\n\n<HR>\n<H3> Required Document Contents</H3>\n\n<H4> Introduction</H4>\nProvide an introduction that discusses the scope and purpose of this document\nas well as your specific approaches related to the requirements of the\nsystem. This introduction should also discuss the organization of\nthis document and guide the reader.\n\n<H4> Understanding</H4>\nExpand the understanding section of your original document\n(prospectus).  Make sure to add descriptions of what steps or actions\nyou took to understand each technology or software during this phase.\nIf you make changes to this section, add text describing why the change\nwas necessary, and why it more accurately reflects your new\nunderstanding. This section need not be different if your understanding\nhasn't changed.\n\n<H4> Project Plan</H4>\nThis will be an iterative expansion of your previous submission. Expand\nyour project plan to represent how you have accomplished the work so far.\nReassess the project risks. Expand your task network or work breakdown\nstructure to include the effort expended to complete this task. Based on\nthe work you have done, revise your estimates on how much your team can\naccomplish and deliver.\n\n<P>If you make changes, add text describing why the change was necessary\nor why it will improve the ability of your team to accomplish the work\nyou have proposed.\n\n<H4> Requirements Specification</H4>\nYou must, of course, provide a requirements specification. \nUse diagrams to help give appropriate overviews and understanding.\nNote that pictures may well be an <I>essential </I> element of the\ncomplete description of any graphical interface.\nSome suggested contents follow.\n\n<UL>\n<LI> Overview of System Requirements</LI>\n<BR>Provides a brief discussion of basic needs and proposed usage. \n\n<LI> Environment Characteristics</LI>\n<BR>Describes hardware, software, and users of the system.\n\n<LI> Fixed Interfaces</LI>\n<BR>Documents any interfaces to the environment that are fixed and hence\nnot part of the design of the system (e.g. an external database).\n\n<LI> Software Capabilities</LI>\n<BR>Specifies functionality in groups of related capabilities.\nA diagram is helpful to show the relationship between capability groups.\n<BR>For each capability, at least the following should be\nspecified:  Description (functionality of the capability group), Input, Output, \nPersistent Data (that lasts from one invocation of the system to the\nnext). Considerations specific to the application domain and other relevant\nfields may be provided too.\n\n<LI> Sample I/O or Scenario</LI>\n<BR>Provides a sample input/output stream describing user interaction with\nthe system, or similar usage scenario.\n<BR>NOTE: if useful, the streams can be grouped with the capability group\nto which they apply.\n\n<LI> Constraints</LI>\n<BR>Non-functional constraints, including safety and security\nconstraints.\n<BR>Quantifiable constraints (e.g., timing and precision).\n\n<LI> Goals</LI>\n<BR>Documents any guidance for evaluating alternatives.\n\n</UL>\n\n<h4> Lifecycle Considerations</h4>\n\nDiscusses capability subsets and/or product families for the purposes of\nincremental development and potential changes.\n\n<h4> Acceptance Requirements</h4>\n\nDescribes minimal requirements for system acceptance by the client, such\nas the minimum capabilities that must be provided in the delivered system.\n\n<h4> System Test Plan</h4>\n<P>Include a test plan capable of demonstrating minimal functionality\nof all system elements:\ntest cases should be specified for each software capability specified.\n\n<P>NOTE: if desired, the test cases can be grouped with the capability\ngroup to which they apply, otherwise a cross reference listing of some\nsort should be provided.\n\n<UL>\n<LI> For each test case</LI>\n   <UL>\n   <LI> Test Case ID</LI>\n   <LI> Purpose of test case</LI>\n   <LI> Item(s) being tested</LI>\n   <LI> Input specification</LI>\n   <LI> Output specification</LI>\n      <UL>\n      <LI> Expected Results or Test Oracle Mechanism</LI>\n      </UL>\n   <LI> Test environmental needs or special test procedures</LI>\n   </UL>\n</UL>\n\n<h4> Glossary</h4>\nDefines all non-obvious terms used in the specifications above.\nMay include a detailed data dictionary.\n\n<h4> Documentation</h4>\n\nThis section is reserved for any documentation you may have developed during\nthis phase of the project. Specifically, if during the course of developing\nthe your understanding of the various technologies involved in the project,\nyou discovered items that were not documented, but which were important,\nthen you should include that here.\n\n<P>Additionally you should list here the major background sources of information\nthat you used during this phase or any that you plan to use during the\nremainder of the project. This would include references to similar systems\nand/or procedures.\n\n<hr>\n<h3>Requirements Presentations/Reviews.</h3>\nSee the syllabus for dates.\n\n<P>Each team should prepare a 15 minute presentation, after which we will\nallow up to 5 minutes of questions. Your customer should be present.&nbsp;\n\n<p>\nPrepare your presentation appropriately. Your presentation should include\nthe following:\n<UL>\n<LI> Overview of your system;</LI>\n<LI> Current state of your project plan;</LI>\n<LI> Environment and interfaces;</LI>\n<LI> Highlights of your requirements specification including</LI>\n   <UL>\n   <LI> Summary of required capabilities, with a diagram if available;</LI>\n      <BR>one or more detailed requirements for the most important capabilities\n      <BR>(pick the key issues to discuss in detail);\n   </UL>\n<LI> Lifecycle considerations</LI>\n<BR>(how you intend to develop the system throughout the lifecycle);\n<LI> System test plan</LI>\n<BR>how you intend to both demonstrate that the system should be accepted\nas well as how you intend to convince yourselves that it is more than acceptable!).\n</UL>\n\n<p>  Be <em> sure </em> to focus your presentation on the key issues.  Don't\nspend time with the obvious things.  If there's something in your presentation\nthat you find boring, so will your audience.  Don't gloss over problems. Your\ncustomer wants you to succeed, your instructors want you to succeed.   They can't\nhelp you unless you tell them where you think the problems are, or are likely to\nbe.\n\n<p>\nYou should also ask your customer what he would like to see presented.\n\n\n</BODY>\n</HTML>\n", "encoding": "ascii"}