{"url": "https://www.ics.uci.edu/~theory/269/130412.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, April 12, 2012</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Spring 2013: Theory Seminar</a><br>\nBren Hall, Room 1423, 1pm\n\n<hr>\nApril 12, 2013:</h2>\n<h1>\nPretending to factor large numbers on a quantum computer\n</h1>\n<h2>\nby John A. Smolin, Graeme Smith and Alex Vargo \n</h2>\n<h2>\nPresented by Jenny Lam\n</h2>\n\n<p>\nShor\u0092s algorithm for factoring in polynomial time on a quantum \ncomputer gives an enormous advantage over all known classical \nfactoring algorithm. We demonstrate how to factor products of large \nprime numbers using a compiled version of Shor\u0092s quantum factoring \nalgorithm. Our technique can factor all products of p, q such that \np, q are unequal primes greater than two, runs in constant time, and \nrequires only two coherent qubits. This illustrates that the correct \nmeasure of difficulty when implementing Shor\u0092s algorithm is not \nthe size of number factored, but the length of the period found. \n</p>\n\n</body>\n</html>\n\n", "encoding": "utf-8"}