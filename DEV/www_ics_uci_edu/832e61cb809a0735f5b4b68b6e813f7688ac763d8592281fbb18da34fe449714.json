{"url": "https://www.ics.uci.edu/~stasio/winter06/lab_intro.html", "content": "<html>\r\n\t<head>\r\n\t\t<title>Getting Started with Lab Assignments</title></head>\r\n\t<body bgcolor=\"#dcfbfb\">\r\n\t\t<h2 align=\"center\">Getting Started with Lab Assignments</h2>\r\n\t\t<h2 align=\"center\">ICS H22</h2>\r\n\t\t<h2 align=\"center\">Winter&nbsp;2006</h2>\r\n\t\t<h2>Handing in Lab Assignments</h2>\r\n\t\t<p>\r\n\t\t\tEach new lab assignment will be made available by&nbsp;Wednesday morning \r\n\t\t\tthrough the class home page. An electronic copy of the lab will be due the \r\n\t\t\tfollowing&nbsp;Wednesday at midnight. To turn in the lab, log in to the <A href=\"http://eee.uci.edu/\">\r\n\t\t\t\tUCI Electronic Educational Environment</A>, and upload the requested files \r\n\t\t\tfollowing the link you should have for the ICS.H22 class.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\tEach .java file must include a comment template at the top. This comment should \r\n\t\t\thave the following form:\r\n\t\t</p>\r\n\t\t<pre>// NAME: Your full name\r\n// STUDENT ID: Your UCI student ID\r\n</pre>\r\n\t\tUse the following ID for each submission: your UCI ID number '_HW' homework \r\n\t\tnumber '_S' submission number (starting with 1). E.G., 12345678_HW3_S1. Only \r\n\t\tyour highest numbered submission will be considered for grading although all \r\n\t\tcopies will be checked for plagerism. Please only submit the .java source code \r\n\t\tfiles (not your .class files or .vep files or any other files generated by the \r\n\t\tcompiler).\r\n\t\t<p>\r\n\t\t</p>\r\n\t\t<h2>Grading of Lab Assignments</h2>\r\n\t\tNo late lab or homework assignments will be accepted. For this reason, I \r\n\t\tstrongly recommend that you get started on your homework assignment early in \r\n\t\torder to avoid unexpected delays. In particular, you should read through the \r\n\t\tlab assignment on the day that it is given and make sure that you understand \r\n\t\tthe instructions.\r\n\t\t<p></p>\r\n\t\t<p>\r\n\t\t\tEach program you submit (on homework, quiz, or the final exam) will be graded \r\n\t\t\ton the following components: Program Design, Algorithmic Correctness, Coding \r\n\t\t\tStyle, Efficiency. You should review each assignment after it is returned to \r\n\t\t\tmake sure that you understand the reason for any deducted points and can \r\n\t\t\timprove your performance accordingly.\r\n\t\t</p>\r\n\t\t<h2>Programming Environment</h2>\r\n\t\tYou are free to select any programming environment of your choice. Many people \r\n\t\tlike to use the command-line compiler <strong>javac </strong>and virutal \r\n\t\tmachine <strong>java </strong>. This is what Minh will use in grading and \r\n\t\ttesting your code. The machines in the lab all come equipped with TextPad and \r\n\t\tby default, use the compiler that comes with Sun Java 2 Standard Edition SDK.\r\n\t\t<p>\r\n\t\t\tWorking in the lab is a good idea since help is more readily available there. \r\n\t\t\tHowever, many of you may want to work on your programming assignments from \r\n\t\t\thome. You are responisble for installing the necessary software on your own \r\n\t\t\tmachines. It is not realistic to expect us to provide support for your home \r\n\t\t\tinstallations. Here is the software you will need to get started:\r\n\t\t</p>\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<strong>A Text Editor. </strong>There are many to choose from. You can purchase \r\n\t\t\t\tTextPad at <a href=\"http://www.textpad.com/\">www.textpad.com </a>\r\n\t\t\t.<li>\r\n\t\t\t\t<strong>Sun Java 2 Standard Edition SDK </strong>. This is available for free \r\n\t\t\t\tat <a href=\"http://www.java.sun.com/\">www.java.sun.com </a>. It contains the \r\n\t\t\t\tjava compiler <strong>javac </strong>and the virtual machine java and all the \r\n\t\t\t\tlibraries you will need for programming in Java for this course. We will be \r\n\t\t\t\tusing version 1.5. The following link is to the Java API for version 1.5 and \r\n\t\t\t\twill be invaluable in using Java's wealth of pre-defined classes <a href=\"http://java.sun.com/j2se/1.5.0/docs/api/\">\r\n\t\t\t\t\tJava API </a>. If you are interested in some documentation on the new \r\n\t\t\t\tversion of Java, an over view can be found at <a href=\"http://java.sun.com/developer/technicalArticles/releases/j2se15/\">\r\n\t\t\t\t\thttp://java.sun.com/developer/technicalArticles/releases/j2se15/ </a>. More \r\n\t\t\t\tdetails can be found at <a href=\"http://java.sun.com/j2se/1.5.0/docs/relnotes/features.html\">\r\n\t\t\t\t\thttp://java.sun.com/j2se/1.5.0/docs/relnotes/features.html </a>.\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\tFor more on setting up Java on your home machine, see Prof. Alex Thorntons web \r\n\t\tpage <a href=\"http://www.ics.uci.edu/%7Ethornton/ics22/LabManual/SettingUpJava.html\">\r\n\t\t\tSetting Up Java On Your Home Machine </a>.\r\n\t\t<p>\r\n\t\t\tMany people also like to use an integrated development environment (IDE). These \r\n\t\t\tprovide an editor, compiler, virtual machine and usually other tools, such as a \r\n\t\t\tdebugger. A relatively easy one to get started with is BlueJ. BlueJ is \r\n\t\t\tavailable on all the machines in the labs and can be downloaded for free from <a href=\"http://www.bluej.org/\">\r\n\t\t\t\twww.bluej.org </a>. There is a very good tutorial available at that web \r\n\t\t\tsite as well. I will be using BlueJ when presenting and writing code in class.\r\n\t\t</p>\r\n\t\t<h2>\r\n\t\t\tJava Coding Style Rules\r\n\t\t</h2>\r\n\t\tThe following are the coding style rules that we will be using for this class. \r\n\t\tYou may lose some points in your lab assignments if your code does not adhere \r\n\t\tto these rules.\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\tAlign all curly braces vertically to allow easy visual matching.<li>\r\n\t\t\tUse four (4) spaces for each indentation.<li>\r\n\t\t\tIndent all statements contained within compound statements (if, for, while, {}, \r\n\t\t\tetc).<li>\r\n\t\t\tUse meaningful names for variables, parameters, subprograms, and classes. (You \r\n\t\t\tmay use simple names like i, c, s, or f for general integers, characters, \r\n\t\t\tstrings, or floats respectively.)<li>\r\n\t\t\tDefine and use names for all constants, e.g., PI instead of 3.14159, and \r\n\t\t\tBUF_SIZE instead of 1024.<li>\r\n\t\t\t\tUse the following conventions for letter-case of identifiers:\r\n\t\t\t\t<table border=\"3\">\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tIdentifier\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tConvention\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tExamples\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tclass names\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tcapitalize first word, capitalize all other words (no underscores)</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tCircle, FilledCircle, ShadedFilledCircle\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tclass member names\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tlowercase first word, capitalize all other words (no underscores)\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tdraw(), drawLine(), centerX, centerY, radius\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tfunction names\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tlowercase first word, capitalize all other words (no underscores)\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tfindIndex(), factorial(), toLowerCase(), isUpperCase()\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tnamed constants\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tall caps, use underscores to separate words\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\tPI, MAX_BUFFER_SIZE\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody></table>\r\n\t\t\t<li>\r\n\t\t\tUse whitespace around every binary operator (e.g, x + y instead of x+y) and \r\n\t\t\taround function arguments (e.g, put( x, y ) instead of put(x,y)).<li>\r\n\t\t\tComment each class, each method, and each class variable (describing it's \r\n\t\t\tpurpose) using a form similar to the example at the very end. (Note I only \r\n\t\t\tcommented a few members to avoid cluttering up the Class example.)<li>\r\n\t\t\t\tComments should convey some additional information not immediate from the code. \r\n\t\t\t\tThey should not simply reiterate what is obvious from the code.\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<h3>\r\n\t\t\tExamples of Class Definitions\r\n\t\t</h3>\r\n\t\t<pre>\r\n     import java.awt.*;\r\n\r\n     /*\r\n         class Triangle defines a two dimmensional Triangle\r\n     */\r\n\r\n     class Triangle\r\n     {\r\n\r\n         // the x,y coordinates of the origin of this Triangle\r\n\r\n         private int x, y;\r\n\r\n         // draws this Triangle on the display\r\n\r\n         public void draw()\r\n         {\r\n            // ...\r\n         }\r\n\r\n         // inverts this Triangle along a horizontal line\r\n\r\n         public void flip()\r\n         {\r\n            // ...\r\n         }\r\n\r\n         // rotates this Triangle by number of degrees specified by angle\r\n\r\n         public void rotate( int angle )\r\n         {\r\n            // ...\r\n         }\r\n\r\n     }\r\n\r\n</pre>\r\n\t</body>\r\n</html>\r\n", "encoding": "ascii"}