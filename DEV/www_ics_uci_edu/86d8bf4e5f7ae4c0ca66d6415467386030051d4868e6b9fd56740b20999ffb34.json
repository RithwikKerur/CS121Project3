{"url": "https://www.ics.uci.edu/~kay/courses/h21/hw/hw5menus.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<!-- TemplateBeginEditable name=\"doctitle\" -->\n<!-- TemplateEndEditable -->\n<!-- TemplateBeginEditable name=\"head\" -->\n<!-- TemplateEndEditable -->\n\n\n\n\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\">\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\">\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Wednesday, November 2, 2005 12:58 PM\">\n<TITLE>Restaurants with Menus</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERXDATA\" CONTENT=\"D23C3977\">\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"CS 1, CS1, assignment, Scheme\">\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"An assignment for ICS H21, an honors first-quarter course in computer science in Information and Computer Science, UC Irvine, using How to Design Programs by Matthias Felleisen et al.\">\n<META HTTP-EQUIV=\"COPYRIGHT\" CONTENT=\"Copyright &#169; 2001-2004 by David G. Kay.  All rights reserved.\">\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<A NAME=\"_top\"></A>\n<A NAME=\"Restaurants with Menus\"></A>\n<P>\n<FONT FACE=\"AGaramond\" SIZE=4>Steps for modifying the restaurants program to include\nrestaurants with a menu field:</FONT></P>\n<OL TYPE=\"1\">\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>You need data definitions for three classes\nto replace the one rrant class:  One for the new rrant class (a structure\nwith four fields, a name, cuisine, phone, and menu), one for the menu (a\nlist of dishes), and one for a dish (a structure with two fields, a name\nand a price).</FONT>\n<BR><BR>\n<FONT FACE=\"AGaramond\" SIZE=4>By separating out each of these classes, you\nhave a way of thinking about which type of data each function (and each\nhelper function) you write needs to act on.</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>You need to handle the input of the new restaurants.\n This involves three things:  Asking the user for a single dish (name and\nprice), asking the user for a menu (i.e., repeatedly asking for individual\ndishes), and creating the new restaurant with the entered menu.  For the\nmiddle task, you need some way to let the user indicate he or she is finished\nentering dishes.  One way would be to ask the user to enter the empty string\n(&quot;&quot;) instead of a name when there are no more dishes to enter.\n Another would be to have a separate (sub-)menu command to add a new dish\n(and a command to quit adding new dishes).</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>To print out a restaurant, you need to print\nits menu (which means you need a way to print a nicely formatted dish).</FONT></LI>\n<BR><BR>\n<LI>\n<FONT FACE=\"AGaramond\" SIZE=4>The change-prices function needs to work on\na list of dishes.  One good approach would be to write a </FONT><FONT FACE=\"Courier New\">dish-adjust-price</FONT><FONT FACE=\"AGaramond\" SIZE=4>\nfunction that takes a dish and a percentage and returns the dish with the\nprice changed by the specified percentage (up or down, as before).  Then\nyou can apply </FONT><FONT FACE=\"Courier New\">dish-adjust-price</FONT><FONT FACE=\"AGaramond\" SIZE=4>\nto a whole menu.</FONT></LI>\n</OL>\n<BR CLEAR=ALL>\n<BR>\n<P>\n</P>\n<HR>\n<FONT FACE=\"Garamond\"><A HREF=\"http://www.ics.uci.edu/~kay/\">David G. Kay</A>, <a href=mailto:kay@uci.edu>kay@uci.edu</A> </FONT><span><br>\n<font size=\"2\" face=\"Garamond\">\n<!-- #BeginDate format:fcAm1a -->Friday, October 24, 2008 7:03 AM<!-- #EndDate -->\n</font></span>\n</BODY>\n</HTML>", "encoding": "ascii"}