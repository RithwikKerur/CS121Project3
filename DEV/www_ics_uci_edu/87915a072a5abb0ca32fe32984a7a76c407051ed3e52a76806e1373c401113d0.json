{"url": "https://www.ics.uci.edu/~eppstein/261/w18-hw7-soln.html", "content": "<!DOCTYPE html>\n<html>\n<head>\n<title>CompSci 261, Winter 2018, Homework 7</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n</head>\n<body>\n<h1>CompSci 261, Winter 2018, Homework 7</h1>\n<ol>\n\n<li><p>Construct a Cartesian tree for the sequence 10 3 9 2 8 6 1 5 4.</p>\n\n<p style=\"color:#bc1e47;background-color\"#fff\">Solution:</p>\n\n<pre style=\"color:#bc1e47;background-color\"#fff\">         1\n        / \\\n       /   \\\n      2     \\\n     / \\     \\\n    /   \\     \\\n   3     6     4\n  / \\   /     /\n10   9 8     5</pre></li>\n\n<li><p>Give the sequence of depths in the Euler tour for the Cartesian tree from your answer to question 1. If we wished to find the minimum value in the subsequence 3 9 2 8 (from the second to fifth positions in the original sequence) which subsequence of the Euler tour depth sequence would this query translate to?</p>\n\n<p style=\"color:#bc1e47;background-color\"#fff\">Solution: 1 2 3 4 3 4 3 2 3 4 3 2 1 2 3 2 1. If we number the positions of this solution sequence starting with 0, then the first position of node 3 in the Cartesian tree is at index 2, and the first position of node 8 is at index 9, so the subsequence of the depth sequence would be between those positions: 3 4 3 4 3 2 3 4. The minimum depth in this subsequence, 2, is the depth of node 2 in the Cartesian tree.</p></li>\n\n<li><p>In an unrooted tree (a connected undirected graph with no cycles) the median $m(a,b,c)$ of three vertices $a$, $b$, and $c$ is the unique tree vertex that lies on each of the three shortest paths between the three pairs of nodes. Describe how to use lowest common ancestors to design a data structure that can represent an unrooted tree in $O(n)$ space and answer median queries in $O(1)$ time.</p>\n\n<p style=\"color:#bc1e47;background-color\"#fff\">Solution: There are two possibilities. If $\\mathrm{LCA}(a,b)=\\mathrm{LCA}(b,c)=\\mathrm{LCA}(a,c)$ (all three LCA's are the same) then that is also the median. Otherwise, two of the LCA's will be equal and one will be different than the other two. The median is the one that is different. (If the nodes are represented as index numbers then you could take their bitwise exclusive or but most programming languages won't let you do that with other kinds of data.)</p></li>\n\n<li><p>Suppose that you wish to perform lowest common ancestor queries in rooted tree $T$, but that it has been stored in a data structure that can only answer level ancestor queries (given as arguments a vertex of $T$ and a depth $d$ of the ancestor to be found) in time $O(1)$ per query. Describe how to answer a lowest common ancestor query using $O(\\log n)$ level ancestor queries.</p>\n\n<p style=\"color:#bc1e47;background-color\"#fff\">Solution: Binary search for the largest $d$ such that both arguments to the LCA query have equal level ancestors at depth $d$.</p></li>\n\n</ol>\n</body>\n</html>", "encoding": "ascii"}