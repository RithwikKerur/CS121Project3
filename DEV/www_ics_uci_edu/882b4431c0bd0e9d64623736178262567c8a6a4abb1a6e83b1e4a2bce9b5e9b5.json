{"url": "https://www.ics.uci.edu/~dan/class/267P/rfc2301/chapter3.html#sub3", "content": "<html>\n   <head>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n   \n      <title>Zvon - RFC 2301 - Minimal Black-and-White Fax Mode</title>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n   </head>\n   <body>\n      <table width=\"100%\" class=\"hangingMenu\">\n         <tr>\n            <td style=\"text-align:right\"><a class=\"naviBlack\" target=\"_top\" href=\"http://www.zvon.org\">ZVON</a> &gt; <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC Repository</a> &gt; <b>RFC 2301</b></td>\n         </tr>\n      </table>\n      <table class=\"bar\" width=\"750px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n         <tr>\n            <td class=\"naviBlue\"><a class=\"naviWhite\" target=\"_top\" href=\"index.html\"> Frontpage </a> / <a class=\"naviWhite\" href=\"longContents.html\"> Contents </a></td>\n         </tr>\n      </table>\n      <table class=\"hangingMenu\" border=\"0\" cellpadding=\"1\" cellspacing=\"0\" width=\"100%\">\n         <tr>\n            <td><a class=\"naviBlack\" href=\"chapter2.html\">Prev</a> | <a class=\"naviBlack\" href=\"chapter4.html\">Next</a> | <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC index</a> | <a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/titleSearch.php\">RFC search</a></td>\n            <td><a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/download.php?rfc=2301\">Download as zip/tar.gz</a></td>\n         </tr>\n      </table>\n      <h2>3. Minimal Black-and-White Fax Mode</h2>\n      <p>\n            This section defines the minimal black-and-white subset of TIFF for\n            facsimile. This subset is designated Profile S. All implementations\n            of TIFF for facsimile SHALL support the minimal subset.\n         \n      </p>\n      <p>\n            Black-and-white mode is the binary fax application most users are\n            familiar with today. This mode is appropriate for black-and-white\n            text and line art. Black-and-white mode is divided into two levels of\n            capability. This section describes the minimal interchange set of\n            TIFF fields that must be supported by all implementations in order to\n            assure that some form of image, albeit black-and-white, can be\n            interchanged. This minimum interchange set is a strict subset of the\n            fields and values defined for the extended black-and-white mode\n            (TIFF-F or Profile F) in Section 4, which describes extensions to the\n            minimal interchange set of fields that provide a richer set of\n            black-and-white capabilities.\n         \n      </p><a name=\"sub1\"></a><h3>3.1. Overview</h3>\n      \n      \n      <p>\n            The minimal interchange portion of the black-and-white facsimile mode\n            supports 1-dimensional Modified Huffman (MH) compression, with the\n            original Group 3 fax resolutions, commonly called \"standard\" and\n            \"fine.\"\n         \n      </p>\n      <p>\n            To assure interchange, this mode uses the minimal set of fields, with\n            a minimal set of values. There are no recommended fields in this\n            mode. Further, the TIFF file is required to be \"little endian,\" which\n            means that the byte order value in the TIFF header is \"II\". This mode\n            defines a required ordering for the pages in a fax document and for\n            the IFDs and image data of a page. It also requires that a single\n            strip contain the image data for each page; see Section 3.5. The\n            image data may contain RTC sequences, as specified in Section 3.4.\n         \n      </p>\n      <a name=\"sub2\"></a><h3>3.2. Required TIFF Fields</h3>\n      \n      \n      <p>\n            Besides the fields listed in Section 2.2.1, the minimal black-and-\n            white fax mode requires the following fields. The fields listed in\n            Section 2.2.1 and the fields and fax-specific values specified in\n            this sub- section must be supported by all implementations.\n         \n      </p>\n      <a name=\"sub2sub1\"></a><h3>3.2.1. Baseline fields</h3>\n      \n      <pre>\n\nBitsPerSample(258) = 1.                                            SHORT\n    RequiredByTIFFBaseline\n    Binary data only.\n    Default = 1 (field may be omitted if this is the value)\n\nCompression(259) = 3.                                              SHORT\n    RequiredByTIFFBaseline\n    3 = 1- or 2- dimensional coding.\n    The value 3 is a TIFF extension value [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>]. The T4Options field\n    must be specified and its value specifies that the data is encoded\n    using the Modified Huffman (MH) encoding of [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>].\n\nFillOrder(266) = 2.                                                SHORT\n    RequiredByTIFFBaseline\n    2 = Least Significant Bit first\n\n   NOTE: Baseline TIFF readers are only required to support FillOrder =\n   1, where the lowest numbered pixel is stored in the MSB of the byte.\n   However, because many devices, such as modems, transmit the LSB first\n   when converting the data to serial form, it is common for black-and-\n   white fax products to use the second FillOrder =2, where the lowest\n   numbered pixel is stored in the LSB. Therefore, this value is\n   specified in the minimal black-and-white mode.\n\nImageWidth(256) = 1728.                                    SHORT or LONG\n    RequiredByTIFFBaseline\n    This mode only supports a page width of 1728 pixels. This width\n    corresponds to North American Letter and Legal and to ISO A4 size\n    pages.\n    No default, must be specified.\n\nNewSubFileType(254) = (Bit 1=1).                                    LONG\n    RequiredByTIFFforFAX\n    Bit 1 is 1 if the image is a single page of a multi-page document.\n    Default = 0 (no subfile bits on, so may not be omitted for fax)\n\nPhotometricInterpretation(262) = 0.                                SHORT\n    RequiredByTIFFBaseline\n    0 = pixel value 1 means black\n    No default, must be specified\n\nResolutionUnit(296) = 2.                                           SHORT\n    RequiredByTIFFBaseline\n    The unit of measure for resolution. 2 = inch.\n    Default = 2 (field may be omitted if this is the value)\n\nSamplesPerPixel(277) = 1.                                          SHORT\n    RequiredByTIFFBaseline\n    The number of components per pixel; 1 for black-and-white\n    Default =1 (field may be omitted if this is the value)\n\nXResolution(282) = 200, 204.                                    RATIONAL\n    RequiredByTIFFBaseline\n\n    The horizontal resolution of the image is expressed in pixels per\n    resolution unit. In pixels/inch, the allowed values are 200 and 204,\n    which may be treated as equivalent. See Section 2.2.2 for inch-\n    metric equivalency.\n    No default, must be specified\n\nYResolution(283) = 98, 100, 196, 200.                           RATIONAL\n    RequiredByTIFFBaseline\n    The vertical resolution of the image is expressed in pixels per\n    resolution unit. In pixels/inch, the allowed values are 98, 100,\n    196 and 200; 98 and 100 may be treated as equivalent, and 196 and\n    200 may be treated as equivalent. See Section 2.2.2 for inch-metric\n    equivalency.\n    No default, must be specified\n</pre>\n      \n      <a name=\"sub2sub2\"></a><h3>3.2.2. Extension fields</h3>\n      \n      <pre>\nT4Options(292) = (Bit 0 = 0, Bit 1 = 0, Bit 2 = 0, 1)               LONG\n    RequiredTIFFExtension (when Compression = 3)\n    Bit 0 = 0 indicates MH encoding.\n    Bit 1 must be 0\n    Bit 2 = 1 indicates that EOLs are byte aligned, = 0 EOLs not byte\n    aligned\n    Default is all bits are 0 (applies when EOLs are not byte aligned)\n\n   Note: The T4Options field is required when the Compression field has\n   a value of 3. Bit 0 of this field specifies the encoding used (MH\n   only in this mode) and Bit 2 indicates whether the EOL codes are\n   byte-aligned or not. If they are byte aligned, then fill bits have\n   been added as necessary so that the End of Line (EOL) codes always\n   end on byte boundaries. See Section 3.4 for details.\n</pre>\n      \n      <a name=\"sub2sub3\"></a><h3>3.2.3. New Fields</h3>\n      \n      <pre>\n   None.\n</pre>\n      \n      <a name=\"sub3\"></a><h3>3.3. Recommended TIFF Fields</h3>\n      \n      \n      <pre>\n   None.\n</pre>\n      <a name=\"sub4\"></a><h3>3.4. End of Line (EOL) and Return to Control (RTC)</h3>\n      \n      <pre>\n   The handling of End of Line (EOL) codes and Return to Control (RTC)\n   sequences illustrate the differences between conventional fax, which\n   is bit and stream oriented, and TIFF, which is byte and file\n   oriented. Conventional fax, Baseline TIFF and TIFF extensions for fax\n   all handle EOLs and RTCs differently.\n\n   In conventional fax, an MH-compressed fax data stream for a page\n   consists of the following sequence:\n\n      EOL, compressed data (first line), EOL, compressed data, ... ,\n      EOL, compressed data (last line), RTC (6 consecutive EOL codes)\n\n   Baseline TIFF does not use EOL codes or Return to Control (RTC)\n   sequences for MH-compressed data. However, the TIFF extension field\n   T4Options used in this specification for MH compression (Compression\n   = 3) requires EOLs.\n\n   Furthermore, Bit 2 in the T4Options field indicates whether or not\n   the EOL codes are byte aligned. If Bit 2 = 1, indicating the EOL\n   codes are byte aligned, then fill bits have been added as necessary\n   before EOL codes so that an EOL code always ends on a byte boundary,\n   and the first bit of data following an EOL begins on a byte boundary.\n   Without fill bits, an EOL code may end in the middle of a byte. Byte\n   alignment relieves application software of the burden of bit-shifting\n   every byte while parsing scan lines for line-oriented image\n   manipulation (such as writing a TIFF file). Not all TIFF readers\n   historically used for fax are able to deal with non-byte aligned\n   data.\n\n   While TIFF extension requires EOL codes, TIFF in fax applications has\n   traditionally prohibited RTC sequences. Implementations that want\n   common processing and interfaces for fax data streams and Internet\n   fax files would prefer that the TIFF data include RTC sequences.\n\n   To reconcile these differences, RTCs are allowed in cases where EOL\n   codes are not byte aligned and no fill bits have been added to the\n   data. This corresponds to situations where the fax data is simply\n   inserted in a strip without being processed or interpreted. RTCs\n   should not occur in the data when EOLs have been byte aligned. This\n   is formally specified in the next sub-section.\n</pre>\n      <a name=\"sub4sub1\"></a><h3>3.4.1. RTC Exclusion</h3>\n      \n      \n      <pre>\n   Implementations which wish to maintain strict conformance with TIFF\n   and compatibility with the historical use of TIFF for fax SHOULD NOT\n   include the RTC sequence when writing TIFF files. However,\n   implementations which need to support \"transparency\" of T.4-generated\n   image data MAY include RTCs when writing TIFF files if the flag\n   settings of the T4Options field are set for non-byte aligned data,\n   i.e. Bit 2 is 0. Implementors of TIFF readers should be aware that\n   there are some existing TIFF implementations for fax that include the\n   RTC sequence in MH image data. Therefore, minimal set readers MUST be\n   able to process files which do not include RTCs and SHOULD be able to\n   process files which do include RTCs.\n</pre>\n      \n      <a name=\"sub5\"></a><h3>3.5. File Structure</h3>\n      \n      <pre>\n   The TIFF header, described in Section 2.1.1, contains two bytes which\n   describe the byte order used within the file. For the minimal black-\n   and- white mode, these bytes SHALL have the value \"II\" (0x4949),\n   denoting that the bytes in the TIFF file are in LSByte-first order\n   (little- endian). The first or 0th IFD immediately follows the\n   header, so that offset to the first IFD is 8. The headers values are\n   shown in the following table:\n\n          +--------+-------------------+--------+-----------+\n          | Offset |   Description     |     Value          |\n          +--------+-------------------+--------+-----------+\n          |   0    |   Byte Order      |  0x4949 (II)       |\n          +--------+-------------------+--------+-----------+\n          |   2    |   Identifier      |  42 decimal        |\n          +--------+-------------------+--------+-----------+\n          |   4    | Offset of 0th IFD |  0x 0000 0008      |\n          +--------+-------------------+--------+-----------+\n\n   The minimal black-and-white mode SHALL order IFDs and image data\n   within a file as follows: 1) there SHALL be an IFD for each page in a\n   multi- page fax document; (2) the IFDs SHALL occur in the same order\n   in the file as the pages occur in the document; (3) the IFD SHALL\n   precede the image data to which it has offsets; (4) the image data\n   SHALL occur in the same order in the file as the pages occur in the\n   document; (5) the IFD, the value data and the image data it has\n   offsets to SHALL precede the next image IFD; and (6) the image data\n   for each page SHALL be contained within a single strip.\n\n   As a result of (6), the StripOffsets field will contain the pointer\n   to the image data. With two exceptions, the field entries in the IFD\n   contain the field values instead of offsets to field values located\n   outside the IFD. The two exceptions are the values for the\n   XResolution and YResolution fields, both of which are type RATIONAL\n   and require 2 4- byte numbers. These \"long\" field values SHALL be\n   placed immediately after  the IFD which contains the offsets to them,\n   and before the image data pointed to by that IFD.\n\n   The effect of these requirements is that the IFD for the first page\n   SHALL come first in the file after the TIFF header, followed by the\n   long field values for XResolution and YResolution, followed by the\n   image data for the first page, then the IFD for second page, etc.\n   This is shown in the following figure. Each IFD is required to have a\n   PageNumber field, which has value 0 for the first page, 1 for the\n   second page, and so on.\n\n                   +-----------------------+\n                   |         Header        |------------+\n                   +-----------------------+            | First IFD\n                   |      IFD (page 0)     | &lt;----------+ Offset\n               +---|                       |------------+\n               |   |                       |--+         |\n         Value |   +-----------------------+  |         |\n        Offset +--&gt;|      Long Values      |  |         |\n                   +-----------------------|  | Strip   |\n                   |  Image Data (page 0)  |&lt;-+ Offset  |\n                   +-----------------------+            | Next IFD\n                   |      IFD (page 1)     | &lt;----------+ Offset\n               +---|                       |------------+\n               |   |                       |--+         |\n         Value |   +-----------------------+  |         |\n        Offset +--&gt;|      Long Values      |  |         |\n                   +-----------------------|  | Strip   |\n                   |  Image Data (page 1)  |&lt;-+ Offset  |\n                   +-----------------------+            | Next IFD\n                   |      IFD (page 2)     | &lt;----------+ Offset\n                   +-----------------------+\n                   |          :            |\n\n   Using this file structure may reduce the memory requirements in\n   implementations. It is also provides some support for streaming, in\n   which a file can be processed as it is received and before the entire\n   file is received.\n</pre>\n      <a name=\"sub6\"></a><h3>3.6. Minimal Black-and-white Mode Summary</h3>\n      \n      <pre>\n   The table below summarizes the TIFF fields that comprise the minimal\n   interchange set for black-and-white facsimile. The Baseline and\n   Extension fields and field values MUST be supported by all\n   implementations. For convenience in the table, certain fields which\n   have a value that is a sequence of flag bits are shown taking integer\n   values that correspond to the flags that are set. An implementation\n   should test the setting of the relevant flag bits individually,\n   however, to allow extensions to the sequence of flag bits to be\n   appropriately ignored. (See, for example, T4Options below.)\n\n      +---------------------------+--------------------------------+\n      | Baseline Fields           |  Values                        |\n      +---------------------------+--------------------------------+\n      | BitsPerSample             | 1                              |\n      +---------------------------+--------------------------------+\n      | Compression               | 3: 1D Modified Huffman coding  |\n      |                           |     set T4Options = 0 or 4     |\n      +------------------------------------------------------------+\n\n      +---------------------------+--------------------------------+\n      | FillOrder                 | 2: least significant bit first |\n      +---------------------------+--------------------------------+\n      | ImageWidth                | 1728                           |\n      +---------------------------+--------------------------------+\n      | ImageLength               | n: total number of scanlines   |\n      |                           | in image                       |\n      +---------------------------+--------------------------------+\n      | NewSubFileType            | 2: Bit 1 identifies single     |\n      |                           | page of a multi-page document  |\n      +---------------------------+--------------------------------+\n      | PageNumber                | n,m: page number n followed by |\n      |                           | total page count m             |\n      +---------------------------+--------------------------------+\n      | PhotometricInterpretation | 0: pixel value 1 means black   |\n      +---------------------------+--------------------------------+\n      | ResolutionUnit            | 2: inch                        |\n      +---------------------------+--------------------------------+\n      | RowsPerStrip              | number of scanlines per strip  |\n      |                           | = ImageLength, with one strip  |\n      +---------------------------+--------------------------------+\n      | SamplesPerPixel           | 1                              |\n      +---------------------------+--------------------------------+\n      | StripByteCounts           | number of bytes in TIFF strip  |\n      +---------------------------+--------------------------------+\n      | StripOffsets              | offset from beginning of       |\n      |                           | file to single TIFF strip      |\n      +---------------------------+--------------------------------+\n      | XResolution               | 204, 200 (pixels/inch)         |\n      +---------------------------+--------------------------------+\n      | YResolution               | 98, 196, 100, 200 (pixels/inch)|\n      +---------------------------+--------------------------------+\n      | Extension Fields                                           |\n      +---------------------------+--------------------------------+\n      | T4Options                 | 0: MH coding, EOLs not byte    |\n      |                           |               aligned          |\n      |                           | 4: MH coding, EOLs byte aligned|\n      +---------------------------+--------------------------------+\n</pre>\n      <p></p>\n      <table width=\"100%\" class=\"hangingMenu\">\n         <tr>\n            <td style=\"text-align:right\"><a class=\"naviBlack\" target=\"_top\" href=\"http://www.zvon.org\">ZVON</a> &gt; <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC Repository</a> &gt; <b>RFC 2301</b></td>\n         </tr>\n      </table>\n      <table class=\"bar\" width=\"750px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n         <tr>\n            <td class=\"naviBlue\"><a class=\"naviWhite\" target=\"_top\" href=\"index.html\"> Frontpage </a> / <a class=\"naviWhite\" href=\"longContents.html\"> Contents </a></td>\n         </tr>\n      </table>\n      <table class=\"hangingMenu\" border=\"0\" cellpadding=\"1\" cellspacing=\"0\" width=\"100%\">\n         <tr>\n            <td><a class=\"naviBlack\" href=\"chapter2.html\">Prev</a> | <a class=\"naviBlack\" href=\"chapter4.html\">Next</a> | <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC index</a> | <a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/titleSearch.php\">RFC search</a></td>\n            <td><a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/download.php?rfc=2301\">Download as zip/tar.gz</a></td>\n         </tr>\n      </table>\n   </body>\n</html>", "encoding": "ascii"}