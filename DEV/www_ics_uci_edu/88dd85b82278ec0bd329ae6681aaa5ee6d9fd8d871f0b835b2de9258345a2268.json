{"url": "https://www.ics.uci.edu/~theory/269/100507a.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, May 7, 2010</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"\n521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a>\n<h2> May 7, Spring Quarter 2010: Theory Seminar </h2>\n<h3>1:00pm in ICS 243</h3>\n\n<h1> \nSelective Replicated Declustering for Arbitrary Queries\n</h1>\n\n<h2> \nKerim Yasin Oktay\n</h2>\n\n<p>\nAbstract: \nData declustering is used to minimize query response times\nin data intensive applications. In this technique, query retrieval\nprocess \nis parallelized by distributing the data among several disks and it\nis useful in applications such as geographic information systems that\naccess \nhuge amounts of data. Declustering with replication is an extension\nof \ndeclustering with possible data replicas in the system. Many\nreplicated \ndeclustering schemes have been proposed. Most of these schemes generate \ntwo or more copies of all data items. However, some applications\nhave \nvery large data sizes and even having two copies of all data items\nmay \nnot be feasible. In such systems selective replication is a\nnecessity. \nFurthermore, existing replication schemes are not designed to utilize\nquery \ndistribution information if such information is available. In this\nstudy \nwe propose a replicated declustering scheme that decides both on the\ndata items to be replicated and the assignment of all data items to\ndisks \nwhen there is limited replication capacity. We make use of available\nquery \ninformation in order to decide replication and partitioning of the\ndata \nand try to optimize aggregate parallel response time. We propose and\nimplement a Fiduccia-Mattheyses-like iterative improvement algorithm\nto obtain a two-way replicated declustering and use this algorithm in\na \nrecursive framework to generate a multi-way replicated declustering.\nExperiments conducted with arbitrary queries on real datasets show\nthat, \nespecially for low replication constraints, the proposed scheme\nyields \nbetter performance results compared to existing replicated\ndeclustering \nschemes.\n</body>\n</html>\n", "encoding": "ascii"}