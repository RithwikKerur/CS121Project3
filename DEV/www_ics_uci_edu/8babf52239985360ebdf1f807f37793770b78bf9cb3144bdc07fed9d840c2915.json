{"url": "https://www.ics.uci.edu/~eppstein/pubs/exponential.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nExponential-time algorithmics\n</h2>\n<ul>\n<li><b>3-Coloring in time O(1.3446<sup><i>n</i></sup>): a no-MIS algorithm</b>.<br>\n<a href=\"//www.cis.temple.edu/~beigel/\">R. Beigel</a>\nand D. Eppstein.<br>\n<a href=\"ftp://ftp.eccc.uni-trier.de/pub/eccc/reports/1995/TR95-033/index.html\">\nTech. Rep. 95-033</a>, Electronic Coll. Computational Complexity, 1995.<br>\n<i>36th IEEE Symp. Foundations of Comp. Sci.</i>, 1995, pp. 444&ndash;453.<br>\n<a href=\"//www.cis.temple.edu/~beigel/FESNP/\">DIMACS\nWorksh. Faster Exact Solutions for NP-Hard Problems</a>, 2000.\n<p>\nSpeeds up 3-coloring by solving a harder problem:\nconstraint satisfaction in which each variable can take on\none of three values and each constraint forbids a pair of\nvariable assignments.  The detailed solution involves\nseveral long hairy case analyses.\nSimilar methods apply also to 3-list-coloring,\n3-edge-coloring, and 3-SAT.  The 3-SAT algorithm is fixed-parameter tractible in that it is polynomial time when the number of 3-variable clauses is O(log n).\nMerged into\n<a href=\"p-3color2.html\">3-coloring in time O(1.3289^n)</a>\nfor the journal version.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#3-coloring in time $O(1.3446^n)$: a no-MIS algorithm\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/3-coloring-in-time-O(1.3446^n)-a-no-MIS-algorithm.html\">Citations</a> &ndash;\n<a href=\"//1013seopc.eecs.uic.edu/FESNP/abstracts.html#eppstein\">DIMACS\nabstract</a> and <a href=\"BeiEpp-DIMACS-00.pdf\">slides</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/beigel95coloring.html\">CiteSeer</a>)\n<p>\n<li><b>3-coloring in time O(1.3289^n)</b>.<br>\n<a href=\"//www.cis.temple.edu/~beigel/\">R. Beigel</a>\nand D. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.DS/0006046\">arXiv:cs.DS/0006046</a>.<br>\n<a href=\"//doi.org/10.1016/j.jalgor.2004.06.008\"><i>J. Algorithms</i>\n54:2 (2005) 168-204.</a>\n<p>\nJournal paper combining <a href=\"graph-color.html\">3-coloring algorithms</a>\nfrom our\n<a href=\"p-3color.html\">FOCS '95 paper</a> with improved bounds from our\n<a href=\"p-3color3.html\">SODA '01 paper</a>.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#3-coloring in time $O(1.3289^n)$\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/3-coloring-in-time-O(1.3289^n).html\">Citations</a>)\n<p>\n<li><b>Improved algorithms for 3-coloring, 3-edge-coloring, and constraint\nsatisfaction</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.DS/0009006\">arXiv:cs.DS/0009006</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=365471\"><i>12th ACM-SIAM Symp. Discrete Algorithms,</i>\nWashington, 2001, pp. 329&ndash;337</a>.\n<p>\nSummarizes recent improvements to\n\"<a href=\"p-3color.html\">3-Coloring in time\nO(1.3446<sup><i>n</i></sup>): a no-MIS algorithm</a>\".\nMerged with that paper for the\n<a href=\"p-3color2.html\">journal version</a>.\n<p>\n(<a href=\"Epp-SODA-01-slides.pdf\">SODA talk slides</a> &ndash;\n<a href=\"/~eppstein/bibs/eppstein.html#Improved algorithms for 3-coloring, 3-edge-coloring, and constraint satisfaction\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-01.pdf\">SODA paper</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein01improved.html\">CiteSeer</a>)\n<p>\n<li><b>Small maximal independent sets and faster exact graph coloring</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.DS/0011009\">arXiv:cs.DS/0011009</a>.<br>\n<a href=\"Epp-WADS-01.pdf\"><i>7th Worksh. Algorithms and Data\nStructures,</i> Providence, Rhode\nIsland, 2001</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 2125, 2001, pp. 462&ndash;470.<br>\n<a href=\"//doi.org/10.7155/jgaa.00064\"><i>J. Graph\nAlgorithms and Applications</i>\n(special issue for WADS'01) 7 (2): 131&ndash;140, 2003</a>.\n<p>\nWe show that any graph can be\n<a href=\"graph-color.html\">colored</a> in time O(2.415<sup>n</sup>),\nby a dynamic programming procedure in which we extend partial colorings\non subsets of the vertices by adding one more color for\na maximal independent set.  The time bound follows from limiting\nour attention to maximal independent subsets that are small relative to\nthe previously colored subset, and from bounding the number of small\nmaximal independent subsets that can occur in any graph.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Small maximal independent sets and faster exact graph coloring\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Small-maximal-independent-sets-and-faster-exact-graph-coloring.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein01small.html\">CiteSeer</a> &ndash;\n<a href=\"Epp-WADS-01-slides.pdf\">WADS talk slides</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=673363\">ACM DL</a>)\n<p>\n<li><b>The traveling salesman problem for cubic graphs</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0302030\">arXiv:cs.DS/0302030</a>.<br>\n<i>8th Worksh. Algorithms and Data\nStructures,</i> Ottawa, 2003.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 2748, 2003, pp. 307&ndash;318.\n<i>J. Graph Algorithms and Applications</i> 11 (1): 61&ndash;81, 2007.\n<p>\nWe find improved <a href=\"exponential.html\">exponential-time\nalgorithms</a> for exact solution of the\n<a href=\"tsp.html\">traveling salesman problem</a>\non graphs of maximum degree three and four.\nWe also consider related problems including counting the number of\nHamiltonian cycles in such graphs.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#The traveling salesman problem for cubic graphs\">BibTeX</a> &ndash;\n<a href=\"Epp-WADS-03-talk.pdf\">WADS talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/The-traveling-salesman-problem-for-cubic-graphs.html\">Citations</a>)\n<p>\n<li><b>Quasiconvex analysis of backtracking algorithms</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0304018\">arXiv:cs.DS/0304018</a>.<br>\n<i>15th ACM-SIAM Symp. Discrete Algorithms,</i>\nNew Orleans, 2004, pp. 781&ndash;790.<br>\n<a href=\"//doi.org/10.1145/1198513.1198515\"><i>ACM Trans. Algorithms</i> 2 (4): 492&ndash;509 (special issue for SODA 2004), 2006</a>.\n<p>\nWe consider a class of multivariate recurrences frequently arising\nin the worst case analysis of Davis-Putnam-style\n<a href=\"exponential.html\">exponential time\nbacktracking algorithms</a> for NP-hard problems. We describe a\ntechnique for proving asymptotic upper bounds on these recurrences,\nby using a suitable weight function to reduce the problem to that of\nsolving univariate linear recurrences; show how to use <a\nhref=\"geom-lp.html\">quasiconvex programming</a> to determine the weight\nfunction yielding the smallest\nupper bound; and prove that the resulting upper bounds are within a\npolynomial factor of the true asymptotics of the recurrence. We\ndevelop and implement a multiple-gradient descent algorithm for the\nresulting quasiconvex programs, using a real-number arithmetic\npackage for guaranteed accuracy of the computed worst case time\nbounds. \n<p>\nThe journal version uses the longer title \"Quasiconvex analysis of\nmultivariate recurrence equations for backtracking algorithms\".\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Quasiconvex analysis of backtracking algorithms\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-04-qaba.pdf\">SODA talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Quasiconvex-analysis-of-backtracking-algorithms.html\">Citations</a>)\n<p>\n<li><b>Quasiconvex programming</b>.<br>\nD. Eppstein.<br>\nInvited talk at DIMACS Worksh. on Geometric Optimization, New Brunswick,\nNJ, 2003.<br>\nPlenary talk at <a href=\"//www.ii.uib.no/algo2004/\">ALGO 2004</a>,\nBergen, Norway, 2004.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0412046\">arXiv:cs.CG/0412046</a>.<br>\n<i>Combinatorial and Computational Geometry</i>, Goodman, Pach, and\nWelzl, eds., MSRI Publications 52, 2005, pp. 287&ndash;331.\n<p>\nDefines <i>quasiconvex programming</i>, a form of generalized linear\nprogramming in which one seeks the point minimizing the pointwise\nmaximum of a collection of quasiconvex functions.\nSurveys algorithms for solving quasiconvex programs either numerically\nor via generalizations of the dual simplex method from linear\nprogramming, and describe varied applications of this geometric\noptimization technique in meshing, scientific computation, information\nvisualization, automated algorithm analysis, and robust statistics.\n<p>\n(<a href=\"Epp-DIMACS-03-QCP.pdf\">DIMACS talk slides</a> &ndash;\n<a href=\"Epp-ALG-04.pdf\">ALGO talk slides</a>)\n<p>\n<li><b>All maximal independent sets and dynamic dominance for sparse\ngraphs.</b><br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0407036\">arXiv:cs.DS/0407036</a>.<br>\n<i>16th ACM-SIAM Symp. Discrete Algorithms,</i>\nVancouver, 2005, pp. 451&ndash;459.<br>\n<a href=\"//doi.org/10.1145/1597036.1597042\"><i>ACM Trans. Algorithms</i> 5(4):A38, 2009</a>.\n<p>\nWe show how to apply reverse search to list all maximal independent sets\nin bounded-degree graphs in constant time per set, in graphs from minor\nclosed families in linear time per set, and in sparse graphs\nin subquadratic time per set.  The latter two results rely on new\ndata structures for maintaining a dynamic vertex set in a graph\nand quickly testing whether the set dominates all other vertices.\n<p>\n(<a href=\"Epp-SODA-05-talk.pdf\">SODA05 talk slides</a> &ndash;\n<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#All maximal independent sets and dynamic dominance for sparse graphs\">BibTeX</a>)\n<p>\n<li><b>Listing all maximal cliques in sparse graphs in near-optimal time</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>, and\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>.<br>\n<a href=\"//arxiv.org/abs/1006.5440\">arXiv:1006.5440</a>.<br>\nWorkshop on Exact Algorithms for NP-Hard Problems, Dagstuhl, Germany, 2010.<br>\n<i>Proc. 21st International Symposium on Algorithms and Computation\n(ISAAC 2010)</i>, Jeju, Korea, 2010.<br>\n<a href=\"//doi.org/10.1007/978-3-642-17517-6_36\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 6506, 2010, pp. 403&ndash;414</a>.<br>\n<p>\nWe describe an algorithm for finding all maximal cliques in a graph, in\ntime O(dn3<sup>d/3</sup>) where n is the number of vertices and d is the\ndegeneracy of the graph, a standard measure of its sparsity. This time\nbound matches the worst-case output size for these parameters. The\nalgorithm modifies the Bron-Kerbosch algorithm for maximal cliques by\nordering the vertices by degree in the outer recursive call of the algorithm.\n<p>\nFor the journal version, see \"<a href=\"p-clique-journal.html\">Listing all\nmaximal cliques in large sparse real-world graphs in near-optimal\ntime</a>,\" which combines results from this and a different conference paper.\n<p>\n<li><b>Listing all maximal cliques in large sparse real-world graphs</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>.<br>\n<i>10th Int. Symp. Experimental Algorithms</i>, Crete, 2011.<br>\n<a href=\"//doi.org/10.1007/978-3-642-20662-7_31\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 6630, 2011, pp. 364&ndash;375</a>.<br>\n<a href=\"//arxiv.org/abs/1103.0318\">arXiv:1103.0318</a>.\n<p>\nWe experiment with our <a href=\"p-bron-kerbosch.html\">degeneracy-based\nalgorithm for listing maximal cliques in sparse graphs</a> and show that\nit works well on large graphs drawn from several repositories of\nreal-world social networks and bioinformatics networks.\n<p>\nFor the journal version, see \"<a href=\"p-clique-journal.html\">Listing all\nmaximal cliques in large sparse real-world graphs in near-optimal\ntime</a>\", which combines results from this and a different conference paper.\n<p>\n<li><b>Listing all maximal cliques in large sparse real-world graphs in\nnear-optimal time</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>, and\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>.<br>\n<i><a href=\"//doi.org/10.1145/2543629\">J. Experimental\nAlgorithmics</i> 18 (3): 3.1, 2013</a>.\n<p>\nThis paper combines our theoretical results on clique-finding algorithms\nfrom ISAAC 2010 with our experimental results on the same algorithms\nfrom SEA 2011.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}