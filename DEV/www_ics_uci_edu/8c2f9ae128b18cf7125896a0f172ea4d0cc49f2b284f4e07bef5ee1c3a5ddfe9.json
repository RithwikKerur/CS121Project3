{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0081.html", "content": "<!-- received=\"Tue Jun 11 11:54:00 1996 PDT\" -->\n<!-- sent=\"Tue, 11 Jun 1996 14:54:10 -0500\" -->\n<!-- name=\"Fabio Vitali\" -->\n<!-- email=\"vitali@cis.njit.edu\" -->\n<!-- subject=\"Re: First cut at Functional Requirements document\" -->\n<!-- id=\"v0300710cade3601e13c0@[206.139.57.64]\" -->\n<!-- inreplyto=\"First cut at Functional Requirements document\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: First cut at Functional Requirements document</title>\n<h1>Re: First cut at Functional Requirements document</h1>\n<b>Fabio Vitali</b> (<a href=\"mailto:vitali@cis.njit.edu\"><i>vitali@cis.njit.edu</i></a>)<br>\n<i>Tue, 11 Jun 1996 14:54:10 -0500</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#81\">[ date ]</a><a href=\"thread.html#81\">[ thread ]</a><a href=\"subject.html#81\">[ subject ]</a><a href=\"author.html#81\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0082.html\">Fabio Vitali: \"Re: Version identifier in URL\"</a>\n<li> <b>Previous message:</b> <a href=\"0080.html\">Fabio Vitali: \"Re: Re2: what's doable in Web version control\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0067.html\">David J. Fiander: \"First cut at Functional Requirements document\"</a>\n<!-- nextthread=\"start\" -->\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nHi!\n\nFeeling like I'd like to make a fool of myself again, today, and to be\nflamed about the real meaning of my life and reasons for freeing the world\nof my presence, or even worse to be disdainfully ignored.\n\n&gt;\tF.R. for Web Access to Version Control Systems\n\nPersonally, I don't like this title very much. It gives a certain slant to\nit,  which I am uneasy with: that VCS are an external reality, an\nindipendent variable, and that more or less the ones to be interested in\nversion control on the WWW are the VCS people. That is: \"guys, this is not\na WWW issue, it's a bunch of people from a specific interest group who is\ninterested in using the Web for their own little tricks. As such, we should\ngive them the same attention and interest of those proposing F.R. for Web\naccess to Coke vending machines or F.R for Web access to astronomical\ninstruments\".\n\nWell, to me versioning on the Web IS definitely a Web issue, not a VCS\nissue. It might be solved (it *should* be solved) by VCS people, it should\neven help VCS people to provide a natural distributed extension to their\nproducts, but it should be clear who's giving and who's receiving here. We\nHAVE to make clear that this is something that the WWW as a WHOLE is\ngetting advantages out of.\n\nI can't think of a \"perfect\" title right now, but this one definitely means\n\"would you mind that we do our little things here, if we do not disturb\ngrown-ups?\".\n\nTherefore,\n\nFIRST we have to understand and agree WHY is versioning important for the\nWWW. And, no, \"being able to sell more copies of our XY product\" is not a\nreason.\n\nSECOND come up with a title that somehow reflects this insight, and more or\nless would force the WWW people to listen to our proposals\n\nTHIRD define what are the Functional Requirements to versioning FOR the\nweb, rather than the syntactical requirements for embedding version\ninformation within URLs, HTTP headers, or HTML tags.\n\nFOURTH deal with the requirements on syntax and stuff.\n\nTherefore, here's a few ideas I have, more or less\n\n   Functional requirements for version support for the World Wide Web\n\nRationale:\n\n- Versioning of WWW resources is useful for several reasons (collaborative\nauthoring, document management, external link-bases, awareness of the past,\nlegal requirements, you name it).\n- Versioning introduces a new level of specification for resources, since\nwe want to be able to specify not just a resource, but a specific state of\nthat resource as well (a specific version). Whether this state is in itself\nan autonomous resource, or not, is not something that we are allowed to\ndecide.\n\nDefinitions\n- What a resource is (what is a version of a cgi application?)\n- What a version of a resource is (is it a resource itself? And if so, can\nit be versioned?).\n- What a configuration is (is it a complex entity? What are the relations\nbetween configurations and other complex entities that are already defined\nand used in the WWW?)\n\nRequirements\n- Each VCS will provide the user with a vast and relevantly different set\nof operations on versions and configurations of resources\n- Operations can be divided in three classes (thanks, Christopher):\n\n&gt;1)      GET -- browsing versioned entities.\n&gt;\n&gt;2)      PUT -- \"checking in\" a newly authored version of an entity.\n&gt;\n&gt;3)      VC -- doing all the ancilliary configuration management activities.\n\nAs far as the GET class is concerned, there are three types of operations\nsupported:\n- Access to versions of resources (surf across the past)\n- Access to version-defined ancillary resources of a version (surf into the\npast)\n- Access to a \"default\" version (as defined by VCS policies), when no\nversion information are given or needed.\n\nCan we discuss what kind of operations we *should* support as far as PUT\nand VC operations are concerned?\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0082.html\">Fabio Vitali: \"Re: Version identifier in URL\"</a>\n<li> <b>Previous message:</b> <a href=\"0080.html\">Fabio Vitali: \"Re: Re2: what's doable in Web version control\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0067.html\">David J. Fiander: \"First cut at Functional Requirements document\"</a>\n<!-- nextthread=\"start\" -->\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}