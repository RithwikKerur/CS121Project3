{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node70.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Mode Declarations</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Mode Declarations\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html3093 HREF=\"node71.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html3091 HREF=\"node63.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html3085 HREF=\"node69.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html3095 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html3094 HREF=\"node71.html\"> Compiler Pragmas</A>\r\n<B>Up:</B> <A NAME=tex2html3092 HREF=\"node63.html\"> The Compiler</A>\r\n<B> Previous:</B> <A NAME=tex2html3086 HREF=\"node69.html\"> Module Compilation</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION00670000000000000000> Mode Declarations</A></H1>\r\n<P>\r\n<A NAME=1005>&#160;</A>\r\n<A NAME=1006>&#160;</A>\r\nMode declarations are a way for the user to give some additional\r\ninformation to the compiler, thus enabling it to do a better job.\r\nThe <A NAME=tex2html284 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  compiler makes use of the mode information mainly to\r\nimprove indexing and to reduce code size.\r\n<P>\r\nMode declarations are optional. They specify the argument instantiation\r\npatterns that a predicate will be called with at runtime, for example:\r\n<blockquote> <PRE>:- mode p(+), q(-), r(++, ?).\r\n</PRE>\r\n</blockquote>\r\nThe possible argument modes and their meaning are:\r\n<DL ><DT>+\r\n<DD> - The argument is instantiated, i.e. it is not a variable.\r\n<P>\r\n<DT>++\r\n<DD> - The argument is ground.\r\n<P>\r\n<DT><b>-</b>\r\n<DD> - The argument is not instantiated, it must be a free variable\r\nwithout any constraints, especially it must not occur in any other\r\nargument and it cannot be a suspending variable.\r\n<P>\r\n<DT>?\r\n<DD> - The mode is not known or it is neither of the above ones.\r\n<P>\r\n </DL>\r\n<P>\r\nNote that, if the actual instantiation of a predicate call violates\r\nits mode declaration, the behaviour is undefined.\r\nUsually, an unexpected failure occurs in this case.\r\n<P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}