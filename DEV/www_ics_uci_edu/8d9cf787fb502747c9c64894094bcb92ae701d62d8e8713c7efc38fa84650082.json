{"url": "https://www.ics.uci.edu/~kay/courses/h21/hw/hw4.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\" />\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\" />\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Thursday, October 13, 2005 12:04 PM\" />\n<TITLE>Fourth Homework</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERDATA\" CONTENT=\"D2C1C98C\" />\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"CS 1, CS1, assignment, Scheme\" />\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"An assignment for ICS H21, an honors first-quarter course in computer science in Information and Computer Science, UC Irvine, using How to Design Programs by Matthias Felleisen et al.\" />\n<META HTTP-EQUIV=\"COPYRIGHT\" CONTENT=\"Copyright &#169; 2001 by David G. Kay.  All rights reserved.\" />\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<P><font size=\"2\" face=\"Garamond\">ICS H21 &bull; UC IRVINE &bull; DAVID G. KAY &bull; FALL 2009</font></P>\n<P><FONT FACE=\"Garamond\" SIZE=6><B>Fourth<font face=\"Garamond\"> Homework </font></B></FONT></P>\n<P>\n<FONT FACE=\"Garamond\" SIZE=4>This assignment is due at the start of lab on\nMonday, October 19.</FONT></P>\n<P>\n<FONT FACE=\"Garamond\" SIZE=4><B>(1)  </B>In Chapter 12 of the HtDP text,\ndo exercise 12.2.2 (noting that both functions, search and search-sorted,\nare examples of linear search because they look through the list, item by\nitem, in a straight line)</FONT></P>\n<P>\n<FONT FACE=\"Garamond\" SIZE=4><B>(2)</B>  In Intermezzo 2 (Chapter 13),\ndo the manipulations in exercises 13.0.3 through 13.0.7.</FONT></P>\n\n<P>\n<FONT FACE=\"Garamond\" SIZE=4><B>(3)</B> The code for the restaurants program\nwe will do in class is available at </FONT><FONT FACE=\"Courier New\"><A HREF=\"http://www.ics.uci.edu/~kay/scheme/restaurants1.scm\">http://www.ics.uci.edu/~kay/scheme/restaurants1.scm</A></FONT><FONT FACE=\"Garamond\" SIZE=4>\n.  The teachpack for text input and output is at </FONT><FONT FACE=\"Courier New\"><A HREF=\"http://www.ics.uci.edu/~kay/scheme/simple-text-io.ss\">http://www.ics.uci.edu/~kay/scheme/simple-text-io.ss</A></FONT><FONT FACE=\"Garamond\" SIZE=4>.   If you're using your own machine, download and install these files so you can run the restaurants program. (Download the teachpack rather than just copying and pasting its text; to do this, right-click or control-click on the link and then choose to download or save the linked file into the folder where you'll be storing your own code. Then you can add the teachpack via the Language menu in DrScheme. Be sure to change the language level to Intermediate Student.)  [Technical problems are always possible when installing new software; as always, let us know if things don't work as you think they should.] </FONT></P>\n<P><FONT size=\"4\" FACE=\"Garamond\">Look over the\n  restaurants code to become familiar with how it&#39;s organized. The first time you see a few pages of code, it can be daunting, but learning to find your way through a whole program is an important skill and now's the time to start developing it. (Real programs, of course, are hundreds of pages long.) So don't just glance at it and say, &quot;Yeah, whatever.&quot; Spend some time studying it. Reading code is an excellent (and under-appreciated) way to build your own programming skills.</FONT></P>\n<P><FONT size=\"4\" FACE=\"Garamond\">Recognize that this code is divided into parts: One part describes individual restaurants and the operations on them; another part describes the <em>collection</em> of restaurants and operations on the collection; another part (that starts on the first page) controls the whole program, presenting the menu to the user and accepting the commands. In model-view-controller terms, the restaurant and collection parts make up the model, and the first page (plus the </FONT><FONT FACE=\"Garamond\"><font face=\"Courier New, Courier, monospace\">get-it</font></FONT><FONT size=\"4\" FACE=\"Garamond\"> function at the end) make up the view and controller.</FONT></P>\n<P><FONT size=\"4\" FACE=\"Garamond\">Now, try these\n  two tasks.</FONT></P>\n<UL>\n  <LI><font size=\"4&quot;\" face=\"Garamond\">Change the command for adding a new restaurant to <CODE><font face=\"Courier New, Courier, monospace\">'n'</font></CODE> instead of\n      <CODE><font face=\"Courier New, Courier, monospace\">'a'</font></CODE>.</font></LI>\n  <LI><font size=\"4&quot;\" face=\"Garamond\">See if you know how to add an additional menu choice: <CODE><font face=\"Courier New, Courier, monospace\">e: Remove (erase) all the\n      restaurants from the collection</font></CODE>.\n      If the user types <CODE><font face=\"Courier New, Courier, monospace\">'e'</font></CODE> and then <CODE><font face=\"Courier New, Courier, monospace\">'p'</font></CODE>, for example, nothing would\n      be printed.  [This will require modifications or additions in a few places. You can do the\n      main part of the work very easily indeed, with a single procedure call. The key is to think\n      functionally, not of changing values but of describing or creating the new value.]</font></LI>\n</UL>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=1>Based in part on ICS H21assignments by David\nG. Kay from Fall 2001; modified by David G. Kay, Fall 2004&ndash;Fall 2009.</FONT></P>\n<HR />\n<FONT FACE=\"Garamond\"><A HREF=\"http://www.ics.uci.edu/~kay/\">David G. Kay</A>, <a href=mailto:kay@uci.edu>kay@uci.edu</A> </FONT><span><br />\n<font size=\"2\" face=\"Garamond\">\n<!-- #BeginDate format:fcAm1a -->Sunday, October 18, 2009 4:53 PM<!-- #EndDate -->\n</font></span>\n</BODY>\n</HTML>\n", "encoding": "ascii"}