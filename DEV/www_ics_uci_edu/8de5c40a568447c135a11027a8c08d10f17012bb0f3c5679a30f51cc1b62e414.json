{"url": "https://www.ics.uci.edu/~eppstein/261/w09-hw3.txt", "content": "1. Suppose that we create a binary tree on n items by inserting the\nitems one at a time, with each permutation of the items equally likely,\nand each new item inserted at a leaf of the tree. Are all distinct\nbinary trees equally likely to be generated by this process? Why or why\nnot?\n\n2. (CLRS 13.2-4): Show that any arbitrary n-node binary search tree can\nbe transformed into any other arbitrary n-node binary search tree using\nO(n) rotations. (Hint: first show that at most n-1 right rotations\nsuffice to transform the tree into a right-going chain.)\n\n3. (CLRS 14.1-7): Find an O(n log n) time algorithm that takes as input\na sequence of numbers and outputs the number of pairs x,y such that x<y\nand x occurs before y in the sequence, using binary search trees\naugmented with the number of descendants of each node.\n\n4. (CLRS 14.3-6): Suppose we wish to maintain a set of numbers, subject\nto insertion and deletion operations; after each operation we wish to\nknow the distance between the closest two numbers in the set. Describe\nhow to do this using only a binary search tree with a constant amount of\nadditional information at each tree, in logarithmic time per operation.\n", "encoding": "ascii"}