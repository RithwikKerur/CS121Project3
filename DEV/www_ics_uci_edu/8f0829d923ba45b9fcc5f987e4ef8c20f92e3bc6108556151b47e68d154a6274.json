{"url": "https://www.ics.uci.edu/~irus/wisen/twist99/breakouts/breakout2.html", "content": "<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\n<META NAME=\"Generator\" CONTENT=\"Microsoft Word 98\">\n<TITLE>Globality vs</TITLE>\n</HEAD>\n<BODY TEXT=\"#000000\">\n\n<I><FONT FACE=\"Univers 57 Condensed\" SIZE=4><P \nALIGN=\"CENTER\">Globality vs. Locality: a matter of context</P>\n</I><P>What's Global?</P>\n</FONT><I><FONT FACE=\"Univers 57 Condensed\"><P>Bcn: we can have \nmultiple global namespaces for different kinds of names. </P>\n</I><P>IP#s and DNS hostnames are <I>both</I> global</P>\n<I><P>Dll: there's always a local context we talk about within</P>\n</I><P>Public vs. private is just one kind of context (mm)</P>\n<P>Mm: all names are local to a context already</P>\n<I><P>Gb: all names should be dynamically assigned, based on context \nof use. Humans are very good at using names like \"that\" and \"this\"</P>\n<P>BM: how many people participate in the namespace is a good metric</P>\n</I><P>e.g. IP# is global to all of us outside of NATs</P>\n<I><P>bcn: maybe it's a question of how explicitly one specifies the \nnamespace one's in. The API, say, tells you what's in the domain and \nrange. A filesystem -- what happens in a 'cd'? in Prospero, you \nexplicitly spec the root of the ns</P>\n<P>Gb: there's no good automated way to close the context -- \nimplementation constructs in place of social ones?</P>\n<P>RK: two aspects: globality (large scope) in the domain, range, or \nboth; and <U>breadth of adoption</U> (global \"trust\")</P>\n<P>MM: a global namespace is <U>anything you can resolve completely \nwith itself</U>; without any external type/context/... bits. </P>\n<P>CME: in a global namespaces, everyone uses the same symbols to \nrefer to the same objects</P>\n<P>BCN: \"at a given time/place/observer, the same name will resolve \nto the same object for any time/place/observer\" -- so globality is a \n<U>measure of invariance</P>\n</U><P>MG: a namespace is really a pair of things (references, \nresolver)... could be the identity function and still be useful. \nGlobality is where <U>people implictly understand the resolver</U>.. \nno wait, logic has lots of examples of resolvers which do not exist. \nNamespaces can exist indepently, even with <B>multiple</B> competing \nresolvers </P>\n<P>MM: consider XML tag namespaces, which have no resolver (identity)</P>\n<P>LM: I don't think the resolver has anything to do with it: \nMerriam-Webster does not <B>define</I> </B><I>the English language -- \nglobality is the <U>community of users</U>. URLs continue to have \nmeaning even after their resolvers are long gone (Internet Archive, \nGoogle). </P>\n<P>Nico: the resolution service is just part of the context. </P>\n<P>Dll: what's the meaning of a name? All possible ways of resolving it?</P>\n</I></FONT><FONT FACE=\"Univers 57 Condensed\" SIZE=4><P>Recap: who's \non first?</P>\n</FONT><I><FONT FACE=\"Univers 57 Condensed\"><P>LM: a typical problem \nis multiple contending resolvers</P>\n<P>ED: I'll resolve \"mother\" differently from you, \"dog\" probably the \nsame, but there's still a lot of slack: I could be imagining a \ndifferent <B>kind</B> of dog</P>\n<P>EJW: Category fault! Category fault! The difficulty may indicate a \nfalse dichotomy between them</P>\n</I></FONT><FONT FACE=\"Univers 57 Condensed\" SIZE=4><P>OK, so what's \nlocality?</P>\n</FONT><I><FONT FACE=\"Univers 57 Condensed\"><P>MG: Locality is just \nthe intersection of namespaces, an algebraic operation</P>\n</I><B><P>I want to send all my email addresses to all the people in \nthis room, and we get this local TWIST99 namespace...</P>\n<I><P>BCN: Reasons to localize 1) simplification, mental model 2) \ncustomization/personalization 3) deferred binding (e.g. \"the local \nprinter\" when time comes to print)</P>\n</B><P>HR: Localize for learning advantage: familiarity, frequency of use</P>\n<P>SH:  In fact, \"domain name\" is a really abstract term -- and it \nvaries whether you're fetching an MX record, SOA, etc, etc. </P>\n<P>DLL: Location itself is a distinction from local to global</P>\n</FONT><B><FONT FACE=\"Lucida Bright\"><P>What are some practical \nexamples of context delimiters?</P>\n</B></I></FONT><FONT FACE=\"Univers 57 Condensed\"><P>MM: Geographic, \nTemporal, Demographic...</P>\n<P>EJW: Task (Domain) based -- RK objects to ask what's the namespace \nof the context itself!</P>\n<P>MG: Organizational (employer-designated hierarchy). Social \n(self-defined: everyone who's my friend and yours)</P>\n<P>RK: Resources: result depends on the resources of the machine you \nask (caching, completeness of index, etc -- different answers on desk \nand lap)</P>\n<P>Dll: any Attribute of the result space or its metadata (e.g. \nretreiving car registrations, and finding that make, model, color are \nadditional keys...</P>\n<P>EJW: which of these are more or less global?</P>\n<P>LM: Context-delimiters are used to 1) change the set of bindings \n(not any McDonalds, but the closest one) and 2) base relative \nresolution ('Mom')</P>\n<P>EJW: Is globality vs locality a property of the 1) namespace or 2) \nthe resolver</P>\n<P>Nico: \"Pepe LaPew\" : do I want a person, movie, fragrance...?</P>\n<P>BobM: Locality is a property of use -- how do I intend to use it?</P>\n<P>EJW: Is it possible to <B>design</B> a global namespace -- or does \nit just emerge from popular acclaim of local namespace. </P>\n<P>MG: is GPS a global service? Arguably, but not indoors, not in \ndeep space</P>\n<P>RK: Again, distinction between global domain/range: intended to \naddress the entire universe of some thing; and widely used/adopted</P>\n<P>HR: 911 is a global number, but resolves to a local emergency \nnumber in a local switching system. GB: that scales very \ngracefully...</P>\n<P>Dll: global iff it has a 'killer app' -- every namespace is born \nlocal....</P>\n<P>RK: Advertising is a good metric of globality HG: it's a way to \nbuy your way into someone's personal namespace. </P>\n</FONT><FONT FACE=\"Times\"><P>&nbsp;</P>\n</FONT><FONT FACE=\"Lucida Sans\"><P>IS HIERARCHY EVEN NECCESSARY?</P>\n<P>Nico: resolving a flat name in some context (england), isn't that \nhierarchy by another name? </P>\n<P>ED: you can have something locally hierarchical; heterogenous; not \nall flat. RK: e.g. .com, which is a flat second level, but \nhierarchical within each company?</P>\n<P>Bob: intersection of multiple contexts: english, airline, green </P>\n<P>Nico: partition IS possible without hierarchy</P>\n<P>SH: you can always impose a hierarchy (ordering) on a set. That's \nmechanically scalable, but maybe not socially. </P>\n<P>BCN: two perspectives: 1) user's experience: \"English things\" 2) \nsystem's experience: as mapped onto servers, say, a resolver in \nEngland.</P>\n<P>DLL: the 1) identifier being structured or the 2) context being \nstructured</P>\n<P>Bill: Human Language is nonexhaustible, but nonhierarchical</P>\n<P>Sami: hierarchy sacrifices network bandwidth (more rtts)</P>\n<P>EJW: I sense the room thinks \"hierarchy\" is bad -- as a quality of \na namespace or a resolver?</P>\n<P>LM: there are 3 mechanisms at least 1) name assignment 2) name \nmaintenance 3) name resolution. Over time, 2) diverges from 1) as \nindividuals move and organizations change. And 3) may be completely \nseparate. The <I>Problem</I> is that the design of many namespaces \nties these three together. </P>\n<P>RK: PGP is an exception</P>\n<P>HFN: Delegation: who owns the namespace ; how can I find the \nnamespace. Stability in ownership; dynamism in lookup.</P>\n<P>DLL: Internet philosophy -- anarchy -- argues against hierarchy</P>\n<P>ED: freedom is a better word than anarchy</P>\n<P>CME: it's a better express of real-life: I establish relationships \nwithout consulting a central authority. Introducers, maybe, but no \nprior restraint.</P>\n<P>Central authority does not imply hierarchy. Authority and Power \nare not synonymous</P>\n<P>EJW: fear that over time, name-support institutions will gain \npower over time as 1) single point of failure and 2) divergence from \nusers' interests. </P>\n<P>ED: The power that ICANN has derives from contracts with \nregistrars and registries -- all we can do is cut them off. Those say \nNOTHING about privacy, IPR, whatever; no one can petition us to shut \nsomeone else down. </P>\n<P>RK: what are the <U>engineering</U> obstacles to multiple roots? \nMultiple GTLDs?</P>\n<P>MarkK: dnssec, for example, moves to TCP to establish security, \nbut also breaks the single-packet barrier to publish far more root \nserver IP addrs. As yet, new roots are operated in an amorphous \nfashion. </P>\n<P>RK: what are the performance implications?</P>\n<P>MarkK: We're already up from 1 to 2 updates a day (12 hr cycle). \nIXFR, incremental zone update is not operational yet, but on the \nhorizon. </P>\n<P>SH: some things come down to deployed software: BIND is outgrowing \nits origins as grad student code. But an ns built on an Oracle \ndatabase can update .com in 15 minutes. Multiple registries, multiple \nroots -- what kind of scaling are you asking about? </P>\n<P>MM: conflict-resolution on the client side; IP hijacking -- lots \nof consequences of multiple roots</P>\n<P>SH: the nice thing about a common root is that Ford <I>doesn't</I> \nhave to track down a dozen spaces to add itself.</P>\n<P>DLL: can you even have a non-hierarchical space if it's not \nresolved hierarchically.</P>\n<P>CME: you may want it just for assignment, uniqueness. I have a \nstrictly local algorithm for delivering packets over the early net</P>\n<P>DLL: the early UUCP days -- what were the real obstacles?</P>\n<P>MG: I had to keep a map in my head! (SoCal UUCP hubs). It was a \nlot of wizards passing along personal namespaces of routes... that \ncould even be automated. It also worked like 6DOS, because there were \na few highly-connected \"celebrity\" machines...</P>\n<P>SH: a routing hub system (IS-IS routing). Hierarchy emerged \nsocially, self-organizing, based on economic capacity, too. See Mike \nSchwatz's \"dispersity routing\" -- just throw out info to your \nneighbors, and it forms an ever-expanding breadth-first search.</P>\n<P>BCN: Cheriton's V system did that too, with a fallback directory \nbetween regions.</P>\n<P>SH: Check if Bill Manning is doing research at ISI on \ntopology-informed domain search</P>\n<P>EJW: what about, with enough disk, doing satellite-based global \nARP, a billion roots on every watch?</P>\n<P>A full zone transfer is 600Mb, uncompressed at this point. </P>\n<P>Problem is thinner international links. Roots with poor \nconnectivity have to be able to complete a zone transfer before \nbeginning the next one. </P>\n<P>HR: can we do without roots and hierarchy? Well, what will be do \nif the roots go off the air in two weeks, and everyone has to run \ntheir own root, and will market anarchy prevail? I bet hierarchy will \nredevelop quickly. </P>\n<P>BCN: UUCP routes were propagated this way...</P>\n<P>SH: I've heard that 5-10% of domain name traffic (by packets) is \nDNS queries -- been consistent since NSFnet days. Suppose we go to a \ndecentralized system, 5x more transactions, 2x size with digital \nsignatures, you could saturate the network...</P>\n<P>EJW: what are other Iscale architectures for doing something like DNS?</P>\n<P>July 1999 56,218,00 hosts advertising DNS. </P>\n<P>ED: open or closed gTLDs?</P>\n<P>GB: I would personally love to be able to set up a server and see \nwho uses it. There's plenty of marketing opportunities... </P>\n<P>ED: but what happens when .pepsi shows up in Japan and means \nsomething else... what if someone else starts up another .pepsi?</P>\n<P>LM: I don't see that adding TLDs solves anything. It creates a lot \nof confusing noise. It's like adding all this landfill to the .com \nbeachfront in a vain effort to create more waterfront property. </P>\n<P>RK: Usenet analogy: private, directly-connected nntp news servers \nnow outnumber the public commons. So what if anyone could set up a \ndns: server and boostrap off of the current DNS. </P>\n<P>Stef: if a few are good, why not many?</P>\n<P>GB: separation of concerns: if you want to make a new tldspace for \na business-to-business ecommerce connection, then ihit seems \nlegitimate to group that aspect in one TLD</P>\n<P>MarkK: to counter a technical objection, we certainly <I>can</I> \nhave a very, very large number of TLDs, just as well as we run \nsecond-level domains today.</P>\n<P>BCN: leads to an epidemic of either 1) re-registration or 2) \nsearching in many TLDs. </P>\n<P>&nbsp;</P></FONT></BODY>\n</HTML>\n", "encoding": "ascii"}