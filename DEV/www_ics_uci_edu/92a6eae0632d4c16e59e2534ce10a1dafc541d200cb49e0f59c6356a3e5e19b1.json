{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/ui/CHI93_abstract.html", "content": "<HTML>\n<!-- $Id: CHI93_abstract.html,v 1.1 1995/04/11 23:48:02 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"ftp://liege.ics.uci.edu/pub/arcadia/chiron/CHI93_paper.ps.Z\">\n\"<b>Supporting Separations of Concerns and Concurrency in the Chiron-1\nUser Interface System</b>\"</A>,\nby Richard N. Taylor and Gregory F. Johnson in\n<i> Proceedings of the Conference on Human Factors in Computing Sytems,</i>\npages 367-374, Amsterdam, April 1993. Association for Computing Machinery.\n\n<H2> Abstract </H2>\n\nThe development of user interfaces for large applications is subject to a\nseries of well-known problems including cost, maintainability, and sensitivity\nto changes in the operating environment.  The Chiron user interface development\nsystem has been built to address these software engineering concerns.\nChiron introduces a series of layers that insulate components of an application\nfrom other components that may experience change.  To separate application code\nfrom user interface code, user interface agents called <i>artists</i> are\nattached to application abstract data types.  Operations on\nabstract data types within the application implicitly trigger user interface\nactivities.\nChiron also provides insulation between the user interface layer and the \nunderlying system; artist code is written in terms of abstract depiction\nlibraries that insulate the code from the specifics of particular windowing\nsystems and toolkits.\nConcurrency is pervasive in the Chiron architecture.\nInside an application there can\nbe multiple execution threads; there is no requirement for a user interface\nlistening/dispatching routine to have exclusive control.\nMultiple artists can be attached to a\nsingle application abstract data type, providing alternative forms of access by\na single user or coordinated access and manipulation by multiple users.\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Fri Nov 11 14:44:27 1994\n</ADDRESS>\n</BODY></HTML>\n\n", "encoding": "ascii"}