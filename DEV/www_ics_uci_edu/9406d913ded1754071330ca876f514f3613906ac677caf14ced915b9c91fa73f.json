{"url": "https://www.ics.uci.edu/~eppstein/pubs/geom-dyn.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nDynamic computational geometry\n</h2>\n<ul>\n<li><b>Dynamic three-dimensional linear programming</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-91-53.pdf\">Tech. Rep. 91-53</a>, ICS, UCI, 1991.<br>\n<i>32nd IEEE Symp. Foundations of Comp. Sci.,</i>\nSan Juan, Puerto Rico, 1991, pp. 488&ndash;494.<br>\n<i>ORSA J. Computing</i> 4: 360&ndash;368, 1992\n(special issue on computational geometry).\n<p>\nUses Dobkin-Kirkpatrick hierarchies to perform\n<a href=\"geom-lp.html\">linear programming</a>\nqueries in the intersection of several convex polyhedra.\nBy maintaining a collection of halfspaces as several subsets,\nrepresented by polyhedra, this leads to algorithms for a dynamic\nlinear program in which updates change the set of constraints.\nThe fully dynamic results have largely been subsumed\nby Agarwal and Matou&#353;ek, but this paper also includes\npolylog time results for semi-online problems,\nand uses them to give a fast randomized algorithm for the planar\n2-center problem (later improved by various authors, most recently\nin \"<a href=\"p-2c.html\">Faster Construction of Planar Two-Centers</a>\",\nwhich re-uses the data structures described here).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic three-dimensional linear programming\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-three-dimensional-linear-programming.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92dynamic.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=123359\">ACM DL</a>)\n<p>\n<li><b>Offline algorithms for dynamic minimum spanning tree problems</b>.<br>\nD. Eppstein.<br>\n<i>2nd Worksh. Algorithms and Data Structures,</i> Ottawa, Canada, 1991.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 519, 1991, pp. 392&ndash;399.<br>\n<a href=\"Epp-TR-92-04.pdf\">Tech. Rep. 92-04</a>, ICS, UCI, 1992.<br>\n<a href=\"//doi.org/10.1006/jagm.1994.1033\">\n<i>J. Algorithms</i> 17: 237&ndash;250, 1994</a>.\n<p>\nGiven a sequence of edge insertions and deletions in a graph,\nfinds the corresponding sequence of minimum spanning tree changes,\nin logarithmic time per update.\nSimilarly solves the planar geometric version of the problem\n(using a novel \"mixed MST\" formulation in which part of the input\nis a graph and part is a point set) in time\nO(log<sup>2</sup> <i>n</i>) for the Euclidean metric and\nO(log <i>n</i> log log <i>n</i>) for the rectilinear metric.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Offline algorithms for dynamic minimum spanning tree problems\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Offline-algorithms-for-dynamic-minimum-spanning-tree-problems.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein94offline.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=185278\">ACM DL (JA)</a>)\n<p>\n<li><b>Dynamic Euclidean minimum spanning trees and extrema of binary functions</b>.<br>\nD. Eppstein.<br>\n<a href=\"tr.html\">Tech. Rep. 92-05</a>, ICS, UCI, 1992.<br>\n<a href=\"tr.html\">Tech. Rep. 92-88</a>, ICS, UCI, 1992.<br>\n<a href=\"Epp-DCG-95.pdf\"><i>Disc. Comp. Geom.</i> 13: 111&ndash;122, 1995</a>.\n<p>\nShows that bichromatic nearest neighbors can be maintained under point\ninsertion and deletion essentially as quickly as known solutions to the\npost office problem, and that the\n<a href=\"mst.html\">minimum spanning tree</a> can be\nmaintained in the same time except for an additive O(sqrt <i>n</i>) needed for\nsolving the corresponding graph problem.\nTR 92-88's title was actually \"Fully dynamic maintenance of Euclidean\nminimum spanning trees and maxima of decomposable functions\".\nTR 92-05's title left out the part about maxima; that version gave a slower\nalgorithm superseded by the result in 92-88.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic Euclidean minimum spanning trees and extrema of binary functions\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-Euclidean-minimum-spanning-trees-and-extrema-of-binary-functions.html\">Citations</a> &ndash;\n<a href=\"/~eppstein/projects/pairs/\">Closest pair project page</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95dynamic.html\">CiteSeer</a>)\n<p>\n<li><b>Dynamic algorithms for half-space reporting, proximity problems, and\ngeometric minimum spanning trees</b>.<br>\n<a href=\"//www.cs.duke.edu/~pankaj/\">P.K. Agarwal</a>,\nD. Eppstein, and\n<a href=\"//www.ms.mff.cuni.cz/acad/kam/matousek/\">J. Matou&#353;ek</a>.<br>\n<a href=\"AgaEppMat-FOCS-92.pdf\"><i>33rd IEEE Symp. Foundations of\nComp. Sci.,</i> Pittsburgh, 1992, pp. 80&ndash;89</a>.\n<p>\nThis conference paper merged my results from\n\"<a href=\"p-dynmst.html\">Dynamic Euclidean minimum\nspanning trees</a>\" with results of my co-authors on nearest neighbors\nand halfspace range searching.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic algorithms for half-space reporting, proximity problems, and geometric minimum spanning trees\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-algorithms-for-half-space-reporting-proximity-problems-and-geometric-minimum-spanning-trees.html\">Citations</a>)\n<p>\n<li><b>Average case analysis of dynamic geometric optimization</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-93-18.pdf\">Tech. Rep. 93-18</a>, ICS, UCI, 1993.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314481\">\n<i>5th ACM-SIAM Symp. Discrete Algorithms,</i> Arlington, 1994, pp. 77&ndash;86</a>.<br>\n<a href=\"//doi.org/10.1016/0925-7721(95)00018-6\">\n<i>Comp. Geom. Theory &amp; Applications</i> 6: 45&ndash;68, 1996</a>.\n<p>\nThe Tech. Report used the more informative title\n\"Updating widths and maximum spanning trees using the rotating caliper graph\",\nwhich I also used for the journal submission,\nbut the referees made me change it back.\nDynamic geometry in a model of Mulmuley and Schwarzkopf in which insertions\nand deletions are chosen randomly among a worst-case pool of points.\nThis paper introduces several fundamental techniques\nincluding the <a href=\"/~eppstein/junkyard/rcg.html\">rotating caliper\ngraph</a> of a point set and a method for performing\ndecomposible range queries in the average case setting.\nIt has also since inspired the use of a similar model in dynamic graph\nalgorithms.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Average case analysis of dynamic geometric optimization\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-94-dyngeom.pdf\">SODA paper</a> &ndash;\n<a href=\"Epp-CGTA-96.pdf\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Average-case-analysis-of-dynamic-geometric-optimization.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96average.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=228291\">ACM DL</a>)\n<p>\n<li><b>Dynamic geometric optimization</b>.<br>\nD. Eppstein.<br>\nInvited talk,\n<a href=\"ftp://ams.sunysb.edu/pub/geometry/msi-workshop/93/CG-workshop-abstracts-93.ps.Z\">\n<i>3rd MSI Worksh. Computational Geometry</i>, 1993, p. 14</a>.<br>\n<p>\n<li><b>Computing the discrepancy</b>.<br>\n<a href=\"//www.cs.Princeton.EDU/~dpd/\">\nD. P. Dobkin</a> and D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=160997\"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 47&ndash;52.</a>\n<p>\nMeasures how well a sample of points from a set works as a discrete\napproximation to the continuous measure of shapes in the set,\nusing algorithms based on Overmars and van Leeuwen's dynamic convex hull\ndata structure.\nSome versions of the problem also involve subroutines\nfor finding the deepest point in an arrangement of quadrants or orthants.\n<p>\nThis paper was merged with results of Mitchell to form the journal version,\n\"<a href=\"p-supersample.html\">Computing the discrepancy with applications\nto supersampling patterns</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Computing the discrepancy\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Computing-the-discrepancy.html\">Citations</a>)\n<p>\n<li><b>Computing the discrepancy with applications to supersampling patterns</b>.<br>\n<a href=\"//www.cs.Princeton.EDU/~dpd/\">D. P. Dobkin</a>,\nD. Eppstein, and\n<a href=\"//www.mentallandscape.com/Index.htm\">D. P. Mitchell</a>.<br>\n<a href=\"//doi.org/10.1145/234535.234536\"><i>ACM Trans. on Graphics</i> 15 (4): 354&ndash;376, 1996.</a>\n<p>\nCombines \"<a href=\"p-disc.html\">Computing the discrepancy</a>\"\nwith experimental results of Mitchell on the discrepancies of various point sets,\nemphasizing the application of low-discrepancy sets to anti-aliasing in\nraytraced graphics.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Computing the discrepancy with applications to supersampling patterns\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Computing-the-discrepancy-with-applications-to-supersampling-patterns.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/dobkin96computing.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=234536\">ACM DL</a>)\n<p>\n<li><b>Fast hierarchical\nclustering and other applications of dynamic closest pairs</b>.<br>\nD. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=315030\">\n<i>9th ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1998, pp. 619&ndash;628</a>.<br>\n<a href=\"//arXiv.org/abs/cs.DS/9912014\">arXiv:cs.DS/9912014</a>.<br>\n<a href=\"//doi.org/10.1145/351827.351829\"><i>J. Experimental\nAlgorithmics</i> 5 (1): 1&ndash;23, 2000</a>.\n<p>\nThis paper shows how to use my dynamic closest pair data structure\nfrom \"<a href=\"p-dynmst.html\">Dynamic Euclidean minimum\nspanning trees</a>\" for some non-geometric problems including\nhierarchical clustering,\n<a href=\"graph-match.html\">greedy matching</a>,\nand <a href=\"tsp.html\">TSP heuristics</a>.\nExperiments show variants of my data structures to be faster than\npreviously used heuristics.\n<p>(<a href=\"../projects/pairs/\">Source code and experimental data</a> &ndash; \n<a href=\"/~eppstein/bibs/eppstein.html#Fast hierarchical clustering and other applications of dynamic closest pairs\">BibTeX</a> &ndash;\n<a href=\"/~eppstein/projects/pairs/Papers/Epp-SODA-98.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Fast-hierarchical-clustering-and-other-applications-of-dynamic-closest-pairs.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein98fast.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=351829\">ACM DL</a> &ndash;\n<a href=\"//www.jea.acm.org/2000/EppsteinDynamic/\">JEA home page</a>)\n<p>\n<li><b>Raising roofs, crashing cycles, and playing pool: applications of\na data structure for finding pairwise interactions</b>.<br>\nD. Eppstein and \n<a href=\"//compgeom.cs.uiuc.edu/~jeffe/\">J. Erickson</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=276891\">\n<i>14th ACM Symp. Comp. Geom.,</i> Minneapolis, 1998, pp. 58&ndash;67</a>.<br>\n<i>Disc. Comp. Geom.</i> 22 (4): 569&ndash;592, 1999 (special issue for SCG 1998).\n<p>\nWe use my dynamic closest pair data structure\nfrom \"<a href=\"p-dynmst.html\">Dynamic Euclidean minimum\nspanning trees</a>\" to detect collisions among a collection of moving\nobjects in sublinear time per collision.  As one application, we can\nconstruct the <a href=\"geom-ss.html\">straight skeleton</a> of Aichholzer et al (and the mitered\noffset curves from which it is defined) in subquadratic time.\n<p>(<a href=\"//compgeom.cs.uiuc.edu/~jeffe/pubs/cycles.html\">Jeff's publications page and copy of the journal version</a> &ndash; \n<a href=\"/~eppstein/bibs/eppstein.html#Raising roofs, crashing cycles, and playing pool: applications of a data structure for finding pairwise interactions\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Raising-roofs-crashing-cycles-and-playing-pool-applications-of-a-data-structure-for-finding-pairwise-interactions.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein98raising.html\">CiteSeer</a>)\n<p>\n<li><b>Incremental and decremental maintenance of planar width</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809038\">arXiv:cs.CG/9809038</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=315077\">\n<i>10th ACM-SIAM Symp. Discrete Algorithms,</i>\nBaltimore, 1999, pp. S899-S900</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.2000.1107\"><i>J.\nAlgorithms</i> 37 (2): 570&ndash;577, 2000</a>.\n<p>\nWe show how to maintain the width of a planar point set, subject to\ninsertions or deletions (but not both) in time\nO(<i>n</i><sup><i>c</i></sup>) per update for any <i>c</i>&nbsp;&gt;&nbsp;0.\nThe idea is to apply our <a href=\"p-dynmst.html\">dynamic closest pair\ndata structure</a> to an appropriate measure of distance between\npairs of convex hull features.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Incremental and decremental maintenance of planar width\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Incremental-and-decremental-maintenance-of-planar-width.html\">Citations</a> &ndash;\n<a href=\"Epp-SODA-99-slides.pdf\">SODA talk slides</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=363331\">ACM DL</a>)\n<p>\n<li><b>Graphs for dynamic geometry</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-UVic-00.pdf\">Invited talk</a>,\nWorksh. Dynamic Graph Algorithms, Victoria, Canada, 2000.\n<p>\nThis talk surveys work on computational geometry algorithms that use\n<a href=\"graph-dyn.html\">dynamic graph</a> data structures, and the\ndifferent kinds of geometric graph arising in\nthis work.\n<p>\n<li><b>Lazy algorithms for dynamic closest pair with arbitrary distance\nmeasures</b>.<br>\n<a href=\"//www.ulb.ac.be/di/scsi/jcardin/\">J. Cardinal</a> and\nD. Eppstein.<br>\nTech. Rep. 502,\nUniv. Libre de Bruxelles, Computer Science Dept., 2003.<br>\n<a href=\"//www.siam.org/meetings/alenex04/abstacts/JCardinal.pdf\">Worksh. Algorithm Engineering and\nExperiments (ALENEX), New Orleans, 2004, pp. 112&ndash;119</a>.\n<p>\nWe modify my previous data structures for dynamic closest pairs, to use\na lazy deletion mechanism, and show in experiments that the results are\nan improvement on the unmodified structures.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Lazy algorithms for dynamic closest pair with arbitrary distance measures\">BibTeX</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/cardinal04lazy.html\">CiteSeer</a>)\n<p>\n<li><b>Finding all maximal subsequences with hereditary properties</b>.<br>\n<a href=\"//www.bokal.net/\">D. Bokal</a>,\n<a href=\"//www.fmf.uni-lj.si/~cabello/\">S. Cabello</a>,\nand D. Eppstein.<br>\n<i>Proc. 31st Int. Symp. on Computational Geometry</i>, Eindhoven, the\nNetherlands, June 2015.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.SOCG.2015.240\">Leibniz International\nProceedings in Informatics (LIPIcs) 34, pp. 240&ndash;254</a>.\n<p>\nWe study problems in which the input is a sequence of points in the\nplane and we wish\nto find, for each position in the sequence, the longest contiguous\nsubsequence that begins at that position and has some geometric\nproperty. For many natural properties we can find all such maximal\nsubsequences in linear or near-linear time.\n<p>\n(<a href=\"BokCabEpp-GD-15-slides.pdf\">Slides</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"geom.html\">Geometry</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}