{"url": "https://www.ics.uci.edu/~theory/269/961115.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, 15 Nov 1996</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width= \n\"521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a> \n\n<h1>ICS 269, Fall 1996: Theory Seminar</h1>\n\n<hr>\n<h2>15 Nov 1996:<br>\nBSP Trees: From Introduction to New Results<br>\nJason Cahill, ICS, UC Irvine</h2>\n\n<p>I have always been fascinated by visibility problems arising in\nboth computational geometry and computer graphics. In computer game\ndevelopment, an area I watch fervently, we have seen an enormous\ngrowth in the number and type of 3D entertainment products. The\nquality of these titles are often judged not just by their\nentertainment value, but also on the sheer performance of their\ngraphics engine. While inexpensive 3D hardware is capable of\nrasterizing (or drawing) more polygons than ever before, a basic\nproblem still remains: How do we represent complex 3D worlds for\nefficient rendering. The BSP tree proves to be a very practical\ndata-structure for performing visibility amongst static data sets,\nwhen given an arbitrary viewing position. As a result, it has been\nused by all of the best 3D entertainment products to date.</p>\n\n<p>The focus of my talk will begin with a introduction to\ngeneral-case BSP trees, and we will see how these magnificent\nstructures can be used to store models which can then be\ndepth-sorted and rasterized in linear time. From here, I will turn\nmy discussion to a new result from the FOCS '96 Proceedings, which\nexamines the construction of BSP trees when we are confined to 2D\nrectangles in axis-aligned 3D space.</p>\n\n<p>(Based on Material By: Foley, et al. [Computer Graphics:\nPrinciples and Practice 2nd Ed.], Abrash [a talk at CGDC '96: the\nComputer Game Developer's Conference], and Agarwal, Grove, Murali,\nand Vitter [FOCS '96: \"BSP Trees for Fat Rectangles\"])</p>\n</body>\n</html>\n\n", "encoding": "ascii"}