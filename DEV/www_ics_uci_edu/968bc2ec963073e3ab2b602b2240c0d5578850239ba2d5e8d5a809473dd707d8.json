{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/om/type_evol_abstract.html", "content": "<HTML>\n<!-- $Id: type_evol_abstract.html,v 1.1 1995/04/11 23:45:14 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"ftp://ftp.cs.umass.edu/pub/techrept/techreport/1994/UM-CS-1994-071.ps\">\n\"<b>Type Evolution Support for Complex Type Changes</b>\"</A>,\nby Barbara Staudt Lerner in Technical Report 94-071, \nDepartment of Computer Science, University of Massachusetts at Amherst, 1994.\n\n<H2> Abstract </H2>\n\nType evolution is a serious problem for programs that use persistent data. \nType changes are required during software maintenance, but can make persistent \ndata inaccessible.  Existing systems that support type evolution severely \nrestrict the ways in which a type can be changed, thereby limiting what can \nbe accomplished during maintenance. Tess is a system to automate type \nevolution for a collection of more complex type changes while providing \na more natural editing environment for the programmer. Tess uses a \ncomparative approach to identify type changes rather than a specialized \nediting process.  Experimental results on real data indicate that Tess can \naccurately identify more complex type changes than those supported by \nexisting systems relying on specialized editing.\n\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Thu Jan 26 11:51:31 1995\n</ADDRESS>\n</BODY></HTML>\n\n", "encoding": "ascii"}