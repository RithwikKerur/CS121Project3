{"url": "https://www.ics.uci.edu/~ihler/code/adaptive.html", "content": "<html>\n<head>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../ihler.css\">\n</head>\n\n<body>\n<div id=\"navleft\">\r\n<CENTER>\r\n   <H2>Code Packages</H2>\r\n</CENTER>\r\n<HR noShade>\r\n<p style=\"text-indent:-1em; margin-left:1em\">\r\n<a href=\"kde.html\">KDE Toolbox</a>\r\n<p style=\"text-indent:-1em; margin-left:1em\">\r\n<a href=\"event.html\">Event Detection</a>\r\n<p style=\"text-indent:-1em; margin-left:1em\">\r\n<a href=\"adaptive.html\">Adaptive Inference</a>\r\n<p style=\"text-indent:-1em; margin-left:1em\">\r\n<a href=\"http://sli.ics.uci.edu/Code/GPRTimeshift/\">Gaussian Process Regression with Time-shifts</a>\r\n</p>\r\n<hr noShade>\r\n</div>\r\n<div class=\"content\">\n\n<head>\n<LINK rel=\"stylesheet\" type=\"text/css\" href=\"../ihler.css\">\n</head>\n\n<font face=\"Arial, Helvetica, sans-serif\" size=5 color=\"#000000\"> \nAdaptive Inference in Graphical Models</font><br><br>\n<h1>About Adaptive Inference</h1>\n<p>Adaptive inference refers to the task of <i>recomputing</i> the results\nof an inference problem which is only slightly different from one which has\nalready been solved.  It uses concepts from incremental computing, in which\nthe amount of work we expect to do to solve a problem is (hopefully)\nproportional to the amount of <i>change</i> in the problem from our\nalready-solved version.  In particular, we use rake and compress trees\n(RC-Trees) to cache sufficient statistics of the inference process\nin such a way that a large fraction of them are guaranteed to be reusable\nno matter what (small) changes are made to the original graphical model,\nincluding changing factors or potential functions, adding or removing variables,\nor modifying the graph connectivity.\n\nFor a system of <i>N</i> variables, the sum-product version of the code can update \nthe marginal distribution of\n<i>K</i> specified variables in <i>O(K log N/K)</i> time.  \nThe max-product version of the code keeps track of an optimal configuration of variables\n(the MPE or MAP configuration), and after any change which induces <i>K</i> changes\nin the optimal configuration, finds all those changes in <i>O(K log N/K)</i> time,\nwithout the locations needing to be specified.\n\n<p>For more information, please see our publications on the subject:\n<ul>\n<li><a href=\"http://sli.ics.uci.edu/~ihler/papers/abs.html#nips07\">Adaptive Bayesian Inference</a>, NIPS 2007\n<li><a href=\"http://sli.ics.uci.edu/~ihler/papers/abs.html#uai08\">Adaptive Inference in General Graphical Models</a>, UAI 2008\n<li><a href=\"http://sli.ics.uci.edu/~ihler/papers/abs.html#ssp09\">Adaptive Updates for MAP Configurations with Applications\nto Bioinformatics</a>, SSP 2009\n</ul>\n\n<p><a href=\"adaptive.tar.gz\">The code can be downloaded here.</a> Please read the\nshort usage and disclaimer statements that follow, however.\n\n<h1>Using the Code</h1>\n<p>This code is mainly intended for educational purposes, to provide a working implementation\nfor anyone wishing to make use of the algorithms in their own work.  It is not optimized,\nnor does it have the greatest of user interfaces.\n\n<p>The Matlab functions given here were used in the NIPS 2007 publication, and assume that the\nunderlying graph is tree-structured.  The SSP 2009 paper also used mainly tree-structured\ngraphs, including HMMs, and the code should work for these problems as well, but I haven't tried it.\n\n<p>The code includes versions for sum-product (computing marginal distributions) and dynamic\nprogramming for optimization (max-product to compute sufficient statistics, then selecting\na configuration of the variables in the downward pass).  The functions corresponding to each\nare designated \"SP\" and \"MP\", respectively.\n\n<h1>Using the MEX Functions</h1>\n<p>The algorithms involved in this work rely heavily on pointers and memory re-allocation, \nneither of which is a strong point of the Matlab programming environment.  To make the\nalgorithms scale in the proper way, certain aspects of Matlab's memory management system\nwere bypassed; this is done using MEX files to directly access and change the array and\ncell array contents.  However, these functions are undocumented and are not guaranteed;\nthey worked for me but may not work for you.  Here is the disclaimer in the C files:\n\n<p>WARNING! WARNING! WARNING!  This MEX file is not for the faint of heart.\nIt attempts to circumvent Matlab's memory-handling functions in order\nto give more efficient code, and uses undocumented functions to do so.\nIt comes with no guarantees whatsoever.  It may not work on other\nversions of Matlab, or other platforms, or even at all.  It may result\nin memory leaks, segmentation faults, destroy data, set your computer on \nfire, or suck it into a black hole, for all I know.  If you do not accept \nthese possible risks, do not use this MEX file.\n\n<p>If that doesn't deter you, assuming you have MEX properly set up (see my KDE toolbox\npage for some pointers on that subject) you should be able to compile the functions\nusing the \"buildmex\" script.\n\n\n<h1> COPYRIGHT / LICENSE </h1>\n<p>The adaptive inference code for Matlab was written by Alexander Ihler, and \n  are copyrighted under the (lesser) GPL: </p>\n<blockquote>\n  <p>Copyright (C) 2007-2008 Alexander Ihler </p>\n</blockquote>\n<p>This program is free software; you can redistribute it and/or modify it under \n  the terms of the GNU Lesser General Public License as published by the Free \r\n  Software Foundation; version 2.1 or later. This program is distributed in the \n  hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied \n  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU \n  Lesser General Public License for more details. You should have received a copy \n  of the GNU Lesser General Public License along with this program; if not, write \n  to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, \n  MA 02111-1307, USA. </p>\n<p>The authors may be contacted via email at: <i>ihler (at) alum (.) mit (.) edu</i> </p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<h1>CHANGELOG </h1>\n<pre>\n</pre>\n<p></p>\n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}