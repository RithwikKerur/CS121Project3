{"url": "https://www.ics.uci.edu/~eppstein/pubs/a-loffler.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nPublications with\n<a href=\"//www.ics.uci.edu/~mloffler/\">\nMaarten L&ouml;ffler\n</a>\n</h2>\n<ul>\n<li><b>Listing all maximal cliques in sparse graphs in near-optimal time</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>, and\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>.<br>\n<a href=\"//arxiv.org/abs/1006.5440\">arXiv:1006.5440</a>.<br>\nWorkshop on Exact Algorithms for NP-Hard Problems, Dagstuhl, Germany, 2010.<br>\n<i>Proc. 21st International Symposium on Algorithms and Computation\n(ISAAC 2010)</i>, Jeju, Korea, 2010.<br>\n<a href=\"//doi.org/10.1007/978-3-642-17517-6_36\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 6506, 2010, pp. 403&ndash;414</a>.<br>\n<p>\nWe describe an algorithm for finding all maximal cliques in a graph, in\ntime O(dn3<sup>d/3</sup>) where n is the number of vertices and d is the\ndegeneracy of the graph, a standard measure of its sparsity. This time\nbound matches the worst-case output size for these parameters. The\nalgorithm modifies the Bron-Kerbosch algorithm for maximal cliques by\nordering the vertices by degree in the outer recursive call of the algorithm.\n<p>\nFor the journal version, see \"<a href=\"p-clique-journal.html\">Listing all\nmaximal cliques in large sparse real-world graphs in near-optimal\ntime</a>,\" which combines results from this and a different conference paper.\n<p>\n<li><b>Drawing graphs in the plane with a prescribed outer face and\npolynomial area</b>.<br>\n<a href=\"//mathcs.slu.edu/~chambers/\">E. Chambers</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>.<br>\n<i>Proc. 18th Int. Symp. Graph Drawing</i>, Konstanz, Germany, 2010.<br>\n<a href=\"//doi.org/10.1007/978-3-642-18469-7_12\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 6502, 2011, pp. 129&ndash;140</a>.<br>\n<a href=\"//arxiv.org/abs/1009.0088\">arXiv:1009.0088</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00257\"><i>J. Graph\nAlgorithms and Applications</i> 16 (2): 243&ndash;259, 2012</a>.\n<p>\nTutte's method of spring embeddings allows any triangulated planar graph\nto be drawn so that the outer face has any pre-specified convex shape,\nbut it may place vertices exponentially close to each other. Alternative\ngraph drawing methods provide polynomial-area straight line drawings but\ndo not allow the outer face shape to be specified. We describe a drawing\nmethod that combines both properties: it has polynomial area, and can\nmatch any pre-specified shape of the outer face, even a shape in which\nsome of the vertices have 180 degree angles. We apply our results to\ndrawing polygonal schemas for graphs embedded on surfaces of positive genus.\n<p>\n<li><b>Optimal 3D angular resolution for low-degree graphs</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>,\nE. Mumford, and\n<a\nhref=\"//www.ac.tuwien.ac.at/people/noellenburg/\">M. N&ouml;llenburg</a>.<br>\n<i>Proc. 18th Int. Symp. Graph Drawing</i>, Konstanz, Germany, 2010.<br>\n<a href=\"//doi.org/10.1007/978-3-642-18469-7_19\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 6502, 2011, pp. 208&ndash;219</a>.<br>\n<a href=\"//arxiv.org/abs/1009.0045\">arXiv:1009.0045</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00290\"><i>J. Graph Algorithms\nand Applications</i> 17 (3): 173&ndash;200, 2013</a>.\n<p>\nWe show how to draw any graph of maximum degree three in three\ndimensions with 120 degree angles at each vertex or bend, and any graph of\nmaximum degree four in three dimensions with the angles of the diamond\nlattice at each vertex or bend. In each case there are no crossings and\nthe number of bends per edge is a small constant.\n<p>\n<li><b>Bounds on the complexity of halfspace intersections when the\nbounded faces have small dimension</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>.<br>\n<i>Proc. 27th ACM Symp. on Computational Geometry</i>, Paris, 2011, pp. 361&ndash;368.<br>\n<a href=\"//arxiv.org/abs/1103.2575\">arXiv:1103.2575</a>.<br>\n<a href=\"//doi.org/10.1007/s00454-013-9503-3\"><i>Discrete Comput. Geom.</i> 50 (1): 1&ndash;21, 2013</a>.\n<p>\nSuppose that <i>P</i> is the intersection of <i>n</i> halfspaces in\n<i>D</i> dimensions, but that the bounded faces of <i>P</i> are at most\n<i>d</i>-dimensional, for some <i>d</i> that is much smaller than\n<i>D</i>. Then in this case we show that the number of vertices of\n<i>P</i> is <i>O</i>(<i>n</i><sup><i>d</i></sup>), independent\nof&nbsp;<i>D</i>. We also investigate related bounds on the number of\nbounded faces of all dimensions of&nbsp;<i>P</i>, and algorithms for\nefficiently listing the vertices and bounded faces of&nbsp;<i>P</i>.\n<li><b>Adjacency-preserving spatial treemaps</b>.<br>\n<a href=\"//www.win.tue.nl/~kbuchin/\">K. Buchin</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>,\n<a\nhref=\"//www.ac.tuwien.ac.at/people/noellenburg/\">M. N&ouml;llenburg</a>, and\n<a href=\"//www-ma2.upc.edu/rsilveira/\">R. I. Silveira</a>.<br>\n<a href=\"//arxiv.org/abs/1105.0398\">arXiv:1105.0398</a>.<br>\n<i>12th International Symposium on Algorithms and Data Structures (WADS 2011)</i>, New York,\n2011.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 6844, 2011, pp. 159&ndash;170.<br>\n<a href=\"//doi.org/10.20382/jocg.v7i1a6\"><i>J. Computational Geometry</i> 7 (1): 100&ndash;122, 2016</a>.\n<p>\nWe study the recursive partitions of rectangles into sets of rectangles,\nand partitions of those rectangles into smaller rectangles, to form\nstylized visualizations of hierarchically subdivided geographic regions.\nThere are several variations of varying difficulty depending on how much\nof the geographic information from the input we require the output to preserve.\n<p>\n<li><b>Tracking moving objects with few handovers</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>.<br>\n<a href=\"//arxiv.org/abs/1105.0392\">arXiv:1105.0392</a>.<br>\n<i>12th International Symposium on Algorithms and Data Structures (WADS 2011)</i>, New York,\n2011.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 6844, 2011, pp. 362&ndash;373.\n<p>\nWe apply competitive analysis to the problem of deciding online which cell\nphone tower to change to when a phone moves out of the coverage region\nof the tower it is connected to. We show that, when the coverage regions\nhave constant ply (at most a constant number of them overlap any point\nof the plane) it is possible to get within a constant factor of the\nminimum possible number of handovers that an offline algorithm could achieve.\n<p>\n<li><b>Category-based routing in social networks: membership dimension and the small-world phenomenon</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>,\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>, and\n<a href=\"//www.ics.uci.edu/~ltrott/\">L. Trott</a>.<br>\n<i>Workshop on Graph Algorithms and Applications</i>, Z&uuml;rich,\nSwitzerland, July 2011.<br>\n<i>International Conference on Computational\nAspects of Social Networks (CASoN 2011)</i>, Salamanca, Spain, October\n2011.<br>\n<a href=\"//arxiv.org/abs/1108.4675\">arXiv:1108.4675</a>.<br>\n<a href=\"//doi.org/10.1016/j.tcs.2013.04.027\"><i>Theor. Comput. Sci.</i> 514: 96&ndash;104, 2013</a>. (Special issue on Graph\nAlgorithms and Applications: in Honor of Professor Giorgio Ausiello)<br>\n<p>\nWe investigate greedy routing schemes for social networks, in which\nparticipants know categorical information about some other participants\nand use it to guide message delivery by forwarding messages to neighbors\nthat have more categories in common with the eventual destination.\nWe define the membership dimension of such a scheme to be the maximum\nnumber of categories that any individual belongs to, a natural measure\nof the cognitive load of greedy routing on its participants.\nAnd we show that membership dimension is closely related to the small\nworld phenomenon: a social network can be given a category system with\npolylogarithmic membership dimension that supports greedy routing if,\nand only if, the network has polylogarithmic diameter.\n<p>\n<li><b>Planar and poly-arc Lombardi drawings</b>.<br>\n<a href=\"//www2.latech.edu/~duncan/\">C. Duncan</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.cs.arizona.edu/~kobourov/\">S. Kobourov</a>, and\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>, and\n<a\nhref=\"//www.ac.tuwien.ac.at/people/noellenburg/\">M. N&ouml;llenburg</a>.<br>\n<i>Proc. 19th Int. Symp. Graph Drawing</i>, Eindhoven, The Netherlands, 2011.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 7034, 2012, pp. 308&ndash;319.<br>\n<a href=\"//arxiv.org/abs/1109.0345\">arXiv:1109.0345</a>.<br>\n<a href=\"//doi.org/10.20382/jocg.v9i1a11\"><i>J. Computational Geometry</i> \n9 (1): 328&ndash;355, 2018</a>.\n<p>\nWe extend Lombardi drawing (in which each edge is a circular arc and\nthe edges incident to a vertex must be equally spaced around it) to\ndrawings in which edges are composed of multiple arcs, and we\ninvestigate the graphs that can be drawn in this more relaxed framework.\n<p>\n<li><b>Strict confluent drawing</b>.<br>\nD. Eppstein,\n<a href=\"//www.win.tue.nl/~dholten/\">D. Holten</a>,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>,\n<a\nhref=\"//www.ac.tuwien.ac.at/people/noellenburg/\">M. N&ouml;llenburg</a>, and\n<a href=\"//www.win.tue.nl/~speckman/\">B. Speckmann</a>, and\n<a href=\"//www.tue.nl/staff/k.a.b.verbeek\">K. Verbeek</a>.<br>\n<a href=\"//arxiv.org/abs/1308.6824\">arXiv:1308.6824</a>.<br>\n<i>21st Int. Symp. Graph Drawing</i>, Bordeaux, France, 2013.<br>\n<a href=\"//doi.org/10.1007/978-3-319-03841-4_31\">Springer, <i>Lecture Notes in Comp. Sci.</i> 8242, 2013, pp. 352&ndash;363</a>.<br>\n<a href=\"//doi.org/10.20382/jocg.v7i1a2\"><i>J. Computational Geometry</i> 7 (1): 22&ndash;46, 2016</a>.\n<p>\nA confluent drawing of a graph is a set of points and curves in the\nplane with the property that two vertices are adjacent in the graph if\nand only if the corresponding points can be connected to each other by\nsmooth paths in the drawing. We define a variant of\nconfluent drawing, strict confluent drawing, in which a smooth path\nbetween two vertices (if it exists) must be unique.\nWe show that it is NP-complete to test whether such drawings exist,\nin contrast to unrestricted confluence for which the complexity remains open.\nAdditionally, we show that finding outerplanar drawings (in which the points\nare on the boundary of a disk and the curves are interior to it) with a fixed\ncyclic vertex ordering can be performed in polynomial time.\nWe use circle packings to find nice versions of these drawings in which\nall tracks are represented by piecewise-circular curves.\n<p>\n<li><b>Listing all maximal cliques in large sparse real-world graphs in\nnear-optimal time</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>, and\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>.<br>\n<i><a href=\"//doi.org/10.1145/2543629\">J. Experimental\nAlgorithmics</i> 18 (3): 3.1, 2013</a>.\n<p>\nThis paper combines our theoretical results on clique-finding algorithms\nfrom ISAAC 2010 with our experimental results on the same algorithms\nfrom SEA 2011.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"auth.html\">Co-authors</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}