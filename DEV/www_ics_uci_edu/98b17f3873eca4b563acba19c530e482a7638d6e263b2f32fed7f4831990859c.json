{"url": "https://www.ics.uci.edu/~thornton/ics32/ProjectGuide/Project0/InstallWindows.html", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!DOCTYPE html PUBLIC\r\n \"-//W3C//DTD XHTML 1.1//EN\"\r\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\r\n\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\r\n\r\n<head>\r\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\r\n<link rel=\"stylesheet\" href=\"../../course.css\" type=\"text/css\" />\r\n\r\n<title>ICS 32 Winter 2019, Project #0: Square One, Installation and Configuration on Windows</title>\r\n</head>\r\n\r\n<body>\r\n\r\n<div class=\"navbar\">\r\n\r\n<p>\r\nICS 32 Winter 2019 |\r\n<a href=\"../../index.html\">News</a> |\r\n<a href=\"../../CourseReference.html\">Course Reference</a> |\r\n<a href=\"../../Schedule.html\">Schedule</a> |\r\n<a href=\"../../ProjectGuide\">Project Guide</a> |\r\n<a href=\"../../Notes\">Notes and Examples</a> |\r\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\r\n</p>\r\n\r\n<hr />\r\n\r\n</div>\r\n\r\n<div class=\"header\">\r\n\r\n<p>ICS 32 Winter 2019<br />\r\n   Project #0: <i>Square One</i><br />\r\n   Installation and Configuration on Windows</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Introduction</p>\r\n\r\n<p>This document explains how to install the ICS 32 development environment on a machine running the Windows operating system.  You'll need to be sure you pay attention to small details as you follow through them; as with many technical tasks, misspelling words, leaving out punctuation, or other seemingly minor mistakes can have fairly major consequences.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Step 1: Show file name extensions</p>\r\n\r\n<p>The first step is not to install a software package at all, but to reconfigure a Windows default that is fine for everyday users, but very troublesome for those of us who write programs or do other serious work.  By default, when Windows displays a list of filenames (e.g., in File Explorer, Windows Explorer, or on the desktop), it hides the \"file name extension\" (i.e., the part of the filename that follows the last dot), so that a file named <b>alex.txt</b> will simply have its name displayed as <b>alex</b> instead, with an icon used to visually differentiate one \"type\" of file from another.</p>\r\n\r\n<p>This default is fine for casual users, but is certain to cause us problems in this course &mdash; and routinely causes my students problems in courses where there is programming involved &mdash; so everyone needs to turn this off, which is easy to do:</p>\r\n\r\n<ul>\r\n  <li><i>Windows 10:</i> From the desktop, start File Explorer by holding down the Windows key and pressing E.  In the ribbon at the top of the window, click <b>View</b>.  In the ribbon, you'll then find a checkbox titled <b>File name extensions</b>; check that box, then close File Explorer.</li>\r\n  <li><i>Windows 8:</i> From the desktop, start File Explorer by holding down the Windows key and pressing E.  In the ribbon at the top of the window, click <b>View</b>, then select <b>Options</b>, then choose <b>Change folder and search options</b> from the dropdown menu.  On the window that pops up, click the <b>View</b> tab, uncheck <b>Hide extensions for known file types</b>, then click <b>OK</b>.</li>\r\n  <li><i>Windows 7 or Vista:</i> Start Windows Explorer by holding down the Windows key and pressing E.  Near the upper left corner of the window is a button that says <b>Organize</b>.  Click that button and select <b>Folder and Search Options</b> from the dropdown menu.  On the window that pops up, click the <b>View</b> tab, uncheck <b>Hide extensions for known file types</b>, then click <b>OK</b>.</li>\r\n  <li><i>Windows XP:</i> Start Windows Explorer by holding down the Windows key and pressing E.  From the <b>Tools</b> menu, select <b>Folder Options...</b>.  On the window that pops up, click the <b>View</b> tab, uncheck <b>Hide extensions for known file types</b>, then click <b>OK</b>.</li>\r\n</ul>\r\n\r\n<p><i>Seriously!  Do this!</i>  You'll be very glad you did; as a programmer, it is important to see filenames as they are.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Step 2: Downloading and installing Python</p>\r\n\r\n<p>If you've taken previous coursework in Python, you may already have a version of Python installed on your machine, but it will be important that you use the right version in this course.  What you need is <b>Python 3.7.2 64-bit for Windows</b>, which is available at the following link.</p>\r\n\r\n<ul>\r\n  <li><a href=\"https://www.python.org/ftp/python/3.7.2/python-3.7.2-amd64.exe\">Python 3.7.2 64-bit for Windows</a></li>\r\n</ul>\r\n\r\n<p><i>Before you run this</i>, it's not a bad idea to uninstall any other version you already have installed.  While different versions of Python can safely coexist on a system in some cases, they do cause some confusion, so if you don't have a specific reason to maintain multiple versions, it's easiest to keep just one.  You can uninstall Python just as you would any other Windows application (e.g., Add/Remove Programs, Programs and Features, etc., depending on your Windows version).</p>\r\n\r\n<p>The file linked above is a standard Windows installer, so you should be able to simply download and run it.  The most important question you'll be asked along the way is where you want to install Python; otherwise, accept all defaults.  I'd suggest a short installation path of <b>C:\\Python37</b>, which may differ from the default that's offered to you, but anything will do, so long as (a) the path does not contain any spaces, and (b) you make a note of what you chose, as you'll need to refer back to that location again.  We'll call that location your <i>Python root</i> from now on.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Step 3: Configuring your Python installation</p>\r\n\r\n<p class=\"subtitle\">Starting a Command Prompt</p>\r\n\r\n<p>Many of you may never have used a Command Prompt in Windows before, but we will have a need for it in this course.  Whenever I specify that you should start a Command Prompt on any version of Windows, you can most easily do this by holding down the Windows key and pressing R, which will pop up a dialog asking you what you would like to run.  Type <b>cmd</b> into the text field and click <b>OK</b>.  (You can also create shortcuts, find it in your Start Menu, or pin it to your taskbar, but <b>cmd</b> will work if you have no other way to do it.)</p>\r\n\r\n<p class=\"subtitle\">Understanding the PATH environment variable</b>\r\n\r\n<p>A Command Prompt offers a way to navigate the folders on your storage devices (such as your hard drive(s)) manually and run programs and other commands by typing their names.  For example, there is a command-line version of the Python interpreter; the program is called <b>python.exe</b>, and you can execute it by simply typing its name (and the .exe is not necessary, so you can just type <b>python</b>).  However, you can only run a program from the Command Prompt if Windows can find it.  Rather than searching your entire hard drive for the program, it will search only in the places it's been told to search.  The <b>PATH</b> environment variable specifies all of the folders that will be searched.</p>\r\n\r\n<p>Because we will sometimes need to run Python programs from a Command Prompt, we'll need to configure the PATH environment variable to include a couple of new folders in the search.</p>\r\n\r\n<p class=\"subtitle\">Configuring your PATH environment variable</p>\r\n\r\n<p>The PATH environment variable is a list of folders, separated by semicolons, in which Windows will look for a program whenever you try to execute one by typing its name at a Command Prompt.  You can see the current value of your PATH by typing this command at a Command Prompt:</p>\r\n\r\n<blockquote><pre>\r\necho %PATH%\r\n</pre></blockquote>\r\n\r\n<p>Notice that you'll get back a list of folders separated by semicolons, so you might see something like this &mdash; though it will be different, depending on what software you've installed previously.  Mine has 20 or so entries, some of which look like this:</p>\r\n\r\n<blockquote><pre>\r\nC:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\WiFi\\bin\\\r\n</pre></blockquote>\r\n\r\n<p>Our goal is to add two new folders to this list, while being sure to remove previously-installed versions of Python from it (if there are any).</p>\r\n\r\n<p>The easiest way to permanently change environment variables is to bring up the built-in environment variable editor in Windows.  How you get to this editor is slightly different on different versions of Windows.</p>\r\n\r\n<ul>\r\n  <li><i>On Window 10:</i> Right-click the Start button in the lower-left corner of the screen and select <b>System</b>.  A dialog box will pop up.  Click <b>Advanced system settings</b>, which will pop up another dialog box.  In that dialog box, click the <b>Environment Variables</b> button.</li>\r\n  <li><i>On Windows 8:</i> Press the Windows key and type <b>Control Panel</b> to search for the Windows control panels.  Once you've selected the Control Panel, select <b>View by: Large Icons</b>, then click on <b>System</b>.  In the window that pops up, click the <b>Advanced System Settings</b> link, then click the <b>Environment Variables...</b> button.</li>\r\n  <li><i>On Windows 7 or Vista:</i> Click the Start button in the lower-left corner of the screen, move your mouse over <b>Computer</b>, right-click, and select <b>Properties</b> from the pop-up menu.  Click the <b>Advanced System Settings</b> link, then click the <b>Environment Variables...</b> button.</li>\r\n  <li><i>On Windows XP</i>: Right-click the <b>My Computer</b> icon on your desktop and select <b>Properties</b>.  Select the <b>Advanced</b> tab, then click the <b>Environment Variables...</b> button.</li>\r\n</ul>\r\n\r\n<p>Once you've brought up the environment variable editor, you'll do something similar regardless of which version of Windows you're running.  Under <b>System variables</b> in the bottom half of the editor, find a variable called <b>PATH</b>.  If there is is one, select it, click <b>Edit...</b>.  Assuming your Python root is <b>C:\\Python37</b>, add these two directories to your path:</p> \r\n<blockquote><pre>\r\nC:\\Python37\r\nC:\\Python37\\Scripts\r\n</pre></blockquote>\r\n\r\n<p>How you edit the path is slightly different, depending on which version of Windows you're running.</p>\r\n\r\n<ul>\r\n  <li><i>On Windows 10:</i> You'll be shown a list of the folders, and given buttons like <b>New</b>, <b>Edit</b>, and <b>Delete</b>.  Use the <b>New</b> button to create the two new entries in the list.</li>\r\n  <li><i>On any older version of Windows:</i> You'll be shown a long string of folders separated by semicolons, so you'll have to be sure you get the semicolons right; there should be a semicolon <i>between</i> each folder in the list when you're done.</li>\r\n</ul>\r\n\r\n<p>Also, if you see folders belonging to another Python installation (e.g., <b>C:\\Python36</b>), remove them to avoid conflicts.  After making your edits, press <b>OK</b>.</p>\r\n\r\n<p>If you don't have a PATH environment variable at all, add it by clicking <b>New...</b>, specifying the <b>Variable name</b> as <b>PATH</b>, and adding these two directories to it:</p>\r\n\r\n<blockquote><pre>\r\nC:\\Python37\r\nC:\\Python37\\Scripts\r\n</pre></blockquote>\r\n\r\n<p class=\"subtitle\">Testing your Python installation</p>\r\n\r\n<p>Now that you've come this far, you should be ready to test your Python installation.  Start a Command Prompt and type the command <b>python</b> and hit the <b>Enter</b> key.  You should see something more or less like this show up in the Command Prompt window as a result:</p>\r\n\r\n<blockquote><pre>\r\nPython 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"copyright\", \"credits\" or \"license()\" for more information.\r\n&gt;&gt;&gt;\r\n</pre></blockquote>\r\n\r\n<p>If so, type <b>quit()</b> and press Enter to stop the interpreter, then close the Command Prompt window; you're good to go and are ready to launch IDLE!</p>\r\n\r\n<p>If you see a different version &mdash; don't worry too much about the date or the funny-looking \"9a3ffc0492\" numbering; as long as you see \"3.7.2\", you're where you need to be &mdash; that means you have another version of Python installed and its folder appears earlier in your PATH environment variable than the new one does.  If instead you see an error message like this (note that it varies a bit from one version of Windows to another):</p>\r\n\r\n<blockquote><pre>\r\n'python' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n</pre></blockquote>\r\n\r\n<p>then the likeliest cause is that you didn't configure your PATH environment variable correctly, so Windows isn't searching for <b>python.exe</b> in the right place.</p>\r\n\r\n<p class=\"subtitle\">Starting IDLE</p>\r\n\r\n<p>Lastly, you'll want to be sure that you try starting IDLE and verify that it, too, is running the right version of Python.  The easiest way to launch IDLE is to find it in your Start Menu &mdash; there should be a program group called <b>Python 3.7</b>, in which you'll find a link called <b>IDLE (Python GUI)</b>.  Click that link; you should see a window pop up, in which will appear the same message you saw when you started Python from the Command Prompt:</p>\r\n\r\n<blockquote><pre>\r\nPython 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"copyright\", \"credits\" or \"license()\" for more information.\r\n&gt;&gt;&gt;\r\n</pre></blockquote>\r\n\r\n<p>If so, you're ready to roll!</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Congratulations!</p>\r\n\r\n<p>Nice work!  You should now be ready to proceed with your work this quarter.  We will likely need additional tools later in the quarter, but this will be sufficient to get started.</p>\r\n\r\n</div>\r\n\r\n<div class=\"history\">\r\n\r\n<hr />\r\n\r\n<ul class=\"nomarker\">\r\n  <li>Details for Windows 10 clarified by Alex Thornton, Winter 2016.</li>\r\n  <li>New details for Windows 10 added by Alex Thornton, Fall 2015.</li>\r\n  <li>Originally written by Alex Thornton, Winter 2013.</li>\r\n</ul>\r\n\r\n</div>\r\n\r\n</body>\r\n</html>\r\n", "encoding": "ascii"}