{"url": "https://www.ics.uci.edu/~eppstein/163/s12-hw6.html", "content": "<html><body>\n<h2>CS 163, Spring 2012, Homework 6, due Thursday, May 24</h2>\n<ol>\n<li><p>Suppose that an undirected and weighted graph <i>G</i> has the property that its minimum spanning tree is a path.</p>\n<ol type=\"a\">\n<li><p>How will the cycle found by Christofides' heuristic differ from this path?</p></li>\n<li><p>In this case, is it always true that the cycle found by Christofides' heuristic is the optimal traveling salesman tour? If so, explain why; if not, draw a counterexample.</p></li>\n</ol></li>\n\n<li><p>In the lecture we looked at two algorithms for finding the optimal solution to the traveling salesman problem: a brute force search algorithm that takes time <i>O</i>(n&nbsp;&minus;&nbsp;1)!</i> on <i>n</i>-vertex graphs and a dynamic programming algorithm that takes time <i>O</i>(<i>n</i><sup>2</sup>&nbsp;&times;&nbsp;2<sup><i>n</i></sup>).<ol type=\"a\">\n<li><p>Assuming the constant factors within the <i>O</i>-notation are the same for both algorithms, for which values of <i>n</i> will the brute force search be faster, and for which values of <i>n</i> will the dynamic program be faster?</p></li>\n<li><p>Suppose more precisely that the brute force algorithm takes (n&nbsp;&minus;&nbsp;1)!/10<sup>9</sup> seconds and that the dynamic program takes (<i>n</i><sup>2</sup>&nbsp;&times;&nbsp;2<sup><i>n</i></sup>) /10<sup>9</sup> seconds to run. You are willing to spend one hour of processing time to get an answer. What is the largest <i>n</i> for which each algorithm will run within that time limit?</p></li>\n<li><p>Supposing that we store tour lengths as 64-bit floating point numbers, the dynamic programming algorithm needs 8<i>n</i>2<sup><i>n</i></sup> bytes of memory to store the intermediate results of the algorithm. For your answer in part b, how many bytes is that?</p></li></ol>\n\n<li><p>Draw a flow problem that is equivalent to finding a maximum matching in the bipartite graph shown below. You do not have to solve the flow problem.</p>\n<p align=center><img src=\"s12-hw6-grid.png\"></p></li>\n\n<li><p>In the following network, the vertices represent countries that might be involved in smuggling nuclear weapons from China to Iran, and the edge capacities represent how expensive it would be (in billions of dollars) to shut down all smuggling between the two countries connected by the edge. In this network, find a minimum cut separating China from Iran (representing the cheapest set of borders to target in order to prevent the weapons from getting to Iran) and a maximum flow with the same value as your minimum cut. For the flow you found, show also the residual graph.</p>\n<p align=center><img src=\"s12-hw6-risk.png\"></p></li>\n</ol>\n</body>\n</html>\n\n", "encoding": "ascii"}