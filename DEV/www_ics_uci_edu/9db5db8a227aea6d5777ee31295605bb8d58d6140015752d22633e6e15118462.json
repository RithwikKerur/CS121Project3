{"url": "https://www.ics.uci.edu/~kay/courses/i41/hw/lab1.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\" />\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\" />\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Friday, October 7, 2005 6:25 PM\" />\n<TITLE>Lab Assignment 1</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERDATA\" CONTENT=\"D2DE5051\" />\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"CS 1, CS1, assignment, Scheme\" />\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"An assignment for ICS H21, an honors first-quarter course in computer science in Information and Computer Science, UC Irvine, using How to Design Programs by Matthias Felleisen et al.\" />\n<META HTTP-EQUIV=\"COPYRIGHT\" CONTENT=\"Copyright &#169; 2004, 2005 by David G. Kay.  All rights reserved.\" />\n<link href=\"/~kay/courses/i41/code.css\" rel=\"stylesheet\" type=\"text/css\" />\n<style type=\"text/css\">\n<!--\n.style4 {font-size: 10pt; font-family: \"Courier New\", Courier, monospace; }\n.style6 {font-size: 10pt}\n.ccode {\n\tfont-family: \"Courier New\", Courier, monospace;\n}\n-->\n</style>\n</HEAD>\n</HTML>\n<HTML>\n<HEAD>\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<P><FONT size=\"2\" FACE=\"Goudy Old Style\">INFORMATICS 41 &bull; DAVID G. KAY &bull; UC IRVINE &bull; FALL 2011</FONT></P>\n<P><FONT FACE=\"Goudy Old Style\" SIZE=6><B>Lab Assignment 1 </B></FONT></P>\n<P>\n<FONT FACE=\"Goudy Old Style\">This assignment is due at the end of lab on\nFriday, September 30.</FONT></P>\n<P>\n<FONT FACE=\"Goudy Old Style\">Choose a partner for this assignment, someone\nyou haven&#39;t worked with already, and make sure the TA knows who your partner is (by using his <a href=\"http://www.ics.uci.edu/~mchan5/Lab1Partners.html\">online signup sheet</a>). Refer back to the <a href=\"http://www.ics.uci.edu/~kay/courses/i41/hw/pair.html\">pair programming guidelines</a> for tips on choosing partners.</FONT></P>\n<P><font face=\"Goudy Old Style\"><b>(a)</b> With your partner, do these exercises\n  from the Chapter 1 of the PP textbook: 1.5.4, 1.5.5. Type your solutions into the definitions (top) window of DrRacket. Remember to follow the pair programming model: Two people, one computer; the &quot;driver&quot; types, the &quot;navigator&quot; contributes questions and suggestions; the partners change roles frequently. This is how you will do all your work in the lab, all quarter long; the partners just change every week.</font></P>\n<p><font face=\"Goudy Old Style\"><b>(b)</b> Do exercises\n  3.3.5 and 3.3.6, for which there isn't anything to turn in. Then do exercises 3.3.7, 3.5.5, 3.5.8, and 3.5.9.</font></p>\n<p><font face=\"Goudy Old Style\"><strong>(c)</strong> Do exercises 4.2.2, 4.3.1 (because knowing and using the right technical terminology is important), 4.4.2 (for which there's nothing to turn in), and 4.6.3 (you don't have to turn this one in, either, since it's a pencil-and-paper exercise, but you do have to try it; check with the TA or tutor if you run into trouble)</font><font face=\"Goudy Old Style\">.</font></p>\n<p><font face=\"Goudy Old Style\">Now that you are writing functions, it is absolutely essential that you follow the design recipe. Even if many of the answers come easily now, it's important to get into the habit. In particular, every function you write should have a contract/signature, a purpose statement, some examples of the expected results (using <code>check-expect</code>, at least for the non-graphic functions)\u2014all of these come before you write the function itself\u2014then a skeleton or function header (<code>(define f (lambda (a b) ...))</code>), an inventory (this is the one part that you can treat as optional, if you really already know how to write the function; if not, it's helpful to lay out all the possibly useful components), the function body (finally), and tests (which are just the examples you created earlier).</font></p>\n<p><font face=\"Goudy Old Style\"><strong>(d) </strong>Do exercises 5.3.7, 5.4.7, 5.8.6, 5.9.7, 5.11.5, 5.14.1, and 5.14.2. Follow the design recipe, as described above, for every function you define all quarter long.</font></p>\n<p><font face=\"Goudy Old Style\"><strong>(e)</strong> Do exercises 6.1.3, 6.2.3, 6.4.2, 6.4.4, 6.5.2 (note that the stick figure is available on the textbook web site, but you're free to use whatever other image you like), 6.6.2, and 6.7.1.</font></p>\n<p><font face=\"Goudy Old Style\"><strong>(f)</strong> If you have more time, go back and experiment with some other exercises or animations, especially the ones (like 3.5.6 and 3.5.11) that suggest that you &quot;go wild.&quot;</font></p>\n<p><font face=\"Goudy Old Style\"><strong>(g) </strong>You should be able to place all the definitions\nand tests into one definitions file.  Click Run and make sure all the tests still pass. (If you run into problems, it's probably because you have more than one function with the same name. Change one of the names [everywhere necessary] and try to Run again.) It's essential that the definitions file you submit doesn't produce any error messages, because that will keep us from evaluating any of your work that appears after the error-producing code.</font></p>\n<p><font face=\"Goudy Old Style\">Include your name and your partner&#39;s\n  in a comment at the top, save the file, and submit it via Checkmate.</font></p>\n<P><FONT FACE=\"Goudy Old Style\"><B>(h)</B>  Remember that each partner must\n  complete a partner evaluation form and submit it individually using the Survey tool at </FONT><FONT FACE=\"Courier New\" SIZE=2>eee.uci.edu</FONT><font face=\"Goudy Old Style\">. Do this by the end of the day on Friday. Remember that your participation score suffers if you don't do it. </font></P>\n<BR />\n<P>\n<FONT FACE=\"Helvetica\" SIZE=1>Written by David G. Kay to reflect <em>Picturing Programs</em> by Stephen Bloch, Fall 2010.</FONT></P>\n<HR />\n<FONT FACE=\"Goudy Old Style\"><A HREF=\"http://www.ics.uci.edu/~kay/\">David G. Kay</A>, <a href=mailto:kay@uci.edu>kay@uci.edu</A> </FONT><span><br />\n<font size=\"2\" face=\"Goudy Old Style\">\n<!-- #BeginDate format:fcAm1a -->Monday, October 3, 2011 7:08 AM<!-- #EndDate -->\n</font></span>\n</BODY>\n</HTML>\n", "encoding": "utf-8"}