{"url": "https://www.ics.uci.edu/~feldman/LEC15.htm", "content": "<HTML>\r\n<HEAD>\r\n<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=windows-1252\">\r\n<META NAME=\"Generator\" CONTENT=\"Microsoft Word 97\">\r\n<TITLE>lec15</TITLE>\r\n</HEAD>\r\n<BODY>\r\n\r\n<U><FONT FACE=\"Geneva,Arial\"><P>Lecture Fifteen--ICS 131--Win 2000--28 Feb 00</P>\r\n\r\n<P>Review of Lecture Fourteen</P>\r\n<DIR>\r\n<DIR>\r\n<DIR>\r\n\r\n</U><P>\u2022&#9;What are the problems?</P>\r\n<P>\u2022&#9;What are the security breaches?</P>\r\n\r\n<P>\u2022&#9;Who are the hackers?</P>\r\n\r\n<P>\u2022&#9;What can be done about computer security?</P>\r\n\r\n<P>\u2022&#9;What can you do on your PC?</P>\r\n\r\n<P>\u2022&#9;Any role for government?</P>\r\n<U></DIR>\r\n</DIR>\r\n</DIR>\r\n\r\n</U><P>-------------------------------------------------------------</P>\r\n\r\n<U><P>Safety-critical applications</P>\r\n</U>\r\n<P>The Therac-25 Disaster</P>\r\n\r\n<P>A computer based device for administering </P>\r\n<P>radiation therapy to cancer victims.</P>\r\n\r\n<P>Involved in six known accidents</P>\r\n<P>three deaths directly attributable </P>\r\n<P>to radiation overdoses</P>\r\n<P> ---------------------------------------------------------------------</P>\r\n<P><BR>\r\n</P>\r\n\r\n<P>Three flaws were identified:</P>\r\n\r\n<P>1.  Poor interface design--</P><DIR>\r\n<DIR>\r\n\r\n<P>the machine could deliver a radiation dose</P>\r\n<P>before the operator could change the dose </P>\r\n<P>(e.g., lower it)</P>\r\n</DIR>\r\n</DIR>\r\n\r\n<P>2.  Software failure--</P><DIR>\r\n<DIR>\r\n\r\n<P>safety checks bypassed whenever </P>\r\n<P>a  6-bit program counter reached zero</P>\r\n</DIR>\r\n</DIR>\r\n\r\n<P>3.  Software failure--</P><DIR>\r\n<DIR>\r\n\r\n<P>certain hardware safety interlocks</P>\r\n<P>installed in an earlier version of the Therac</P>\r\n<P>were replaced by software interlocks in the 25</P>\r\n</DIR>\r\n</DIR>\r\n\r\n<P>---------------------------------------------------------</P>\r\n<P>Complex systems are going to fail.</P>\r\n\r\n<P>No such thing as a perfect system</P>\r\n\r\n<P>-----------------------------------------------------------------</P>\r\n\r\n<P>&nbsp;</P>\r\n<P>Some definitions</P>\r\n\r\n<P>A risk is a potential problem, with causes and effects.  </P>\r\n<P>... avoiding risks is an exceedingly difficult task </P>\r\n<P>that poses a pervasive problem.</P>\r\n\r\n<P>Reliability implies that a systems </P>\r\n<P>performs functionally as is expected,</P>\r\n<P>and does so consistently over time</P>\r\n\r\n<P>Security implies freedom from danger,</P>\r\n<P>or more specifically, freedom from </P>\r\n<P>undesirable events such as</P>\r\n<P>malicious and accidental misuse.</P>\r\n\r\n<P>Integrity implies that certain desirable </P>\r\n<P>conditions are maintained over time.</P>\r\n\r\n<P>--------------------------------------------------</P>\r\n<P>Hardware, software, and people </P>\r\n<P>are all sources of difficulties</P>\r\n<P>Human safety and personal well-being </P>\r\n<P>are of special concern.</P>\r\n\r\n<P>--------------------------------------------------</P>\r\n<P><BR>\r\n</P>\r\n\r\n<P>&nbsp;</P>\r\n<P>What can be done?  A list of some things from JF and Neumann</P>\r\n\r\n<P>1.  Testing and verification</P>\r\n\r\n<P>2.  Duplex the hardware</P>\r\n\r\n<P>3.  Software backups</P>\r\n\r\n<P>4.  Software engineering</P>\r\n\r\n<P>5.  Operator training</P>\r\n\r\n<P>6.  Attitude</P>\r\n\r\n<P>Pessimistic</P>\r\n<P>Cautious</P>\r\n<P>Near Misses--keeping track</P>\r\n<P>Recording and reporting problems</P>\r\n<P>------------------------------------------------------------</P>\r\n\r\n<P>Techniques for Increasing Reliability</P><DIR>\r\n<DIR>\r\n<DIR>\r\n<DIR>\r\n\r\n<P>Fault tolerance</P>\r\n<P>Forward error recovery</P>\r\n<P>Backward error recovery</P></DIR>\r\n</DIR>\r\n\r\n<P>Error-Detecting and Error-Correcting Codes</P>\r\n<P>Applicability and Limitations of Reliability Techniques</P>\r\n<P>(table on p 231)</P>\r\n\r\n<P>&nbsp;</P></DIR>\r\n</DIR>\r\n\r\n<P>Techniques of Software Development</P><DIR>\r\n<DIR>\r\n\r\n<P>System-Engineering and Software-Engineering Practice</P><DIR>\r\n<DIR>\r\n\r\n<P>Concept formation</P>\r\n<P>Criteria for system evaluation</P>\r\n<P>Requirements definition</P>\r\n<P>System design</P>\r\n<P>Object-oriented design</P>\r\n<P>Consistency</P>\r\n<P>Implementation</P>\r\n<P>Correctness of Implementation</P>\r\n<P>Evaluation</P>\r\n<P>Management of development</P>\r\n<P>Management of system build</P>\r\n<P>System operations</P>\r\n<P>System maintenance</P>\r\n<P>Overview</P>\r\n\r\n<P>&nbsp;</P></DIR>\r\n</DIR>\r\n</DIR>\r\n</DIR>\r\n\r\n<P>Neumann, Computer Related Risks</P>\r\n\r\n<P>Chapter 9--Implications and Conclusions</P>\r\n\r\n<P>9.1  Where to Place the Blame</P>\r\n\r\n<P>\"...[M]ost system problems are ultimately </P>\r\n<P>and legitimately attributable to people.  </P>\r\n<P>However, human failings are often blamed </P>\r\n<P>on \"the computer\"--</P>\r\n<P>perhaps to protect the individuals.  </P>\r\n\r\n<P>&nbsp;</P>\r\n<P>This attributionof blame seems to be </P>\r\n<P>common in computers affecting consumers, </P>\r\n<P>where human shortcomings are frequently </P>\r\n<P>attributed to \"a computer glitch.\"  </P>\r\n<P>Computer system malfunctions are often due to</P>\r\n<P>underlying causes attributable to people; </P>\r\n<P>if the technology is faulty, the faults frequently </P>\r\n<P>lie with people who create it and use it.\"</P>\r\n\r\n<P>\"Most accidents involving complex technology</P>\r\n<P>are caused by a combination of</P>\r\n<P>organizational,</P>\r\n<P>managerial,</P>\r\n<P>technical and, </P>\r\n<P>sometimes sociological or political factors;</P>\r\n\r\n<P>preventing accidents requires paying attention</P>\r\n<P>to all the root causes,</P>\r\n<P>not just the precipitating event </P>\r\n<P>in a particular circumstance.\"</P>\r\n\r\n<P>Leveson and Turner</P>\r\n\r\n<P>-------------------------------------------------------------------------------</P>\r\n<P>Littlewood and Strigini,  The Risks of Software, </P>\r\n<P>Sci American, The Computer in the 21st Century,</P>\r\n<P>1995</P>\r\n\r\n<P>Formal proofs and</P>\r\n<P>Fault tolerance</P>\r\n<P>won't solve all of the problems</P>\r\n\r\n<P>Three ways of coping with the problem</P>\r\n<P>1.  non-quantifiable risks</P>\r\n<P>2.  software not too critical</P>\r\n<P>3.  accept limitations and live with them</P>\r\n\r\n<P>&nbsp;</P>\r\n<P>&nbsp;</P></FONT></BODY>\r\n</HTML>\r\n", "encoding": "Windows-1252"}