{"url": "https://www.ics.uci.edu/~dechter/publications/r15.html", "content": "<html>\r\n    <head>\r\n      <title>\r\n        Dr. Rina Dechter @ UCI\r\n      </title>\r\n     <LINK REL=\"Stylesheet\" HREF=\"/~dechter/basic.css\">\t\t\r\n  </HEAD>\r\n  \r\n  <BODY bgcolor=\"#ffffff\" alink=\"00aaaa\" link=\"008080\" vlink=\"008080\">\r\n  \r\n<!-- Begin Header -->\r\n\r\n  [an error occurred while processing this directive]\r\n\r\n  <!-- End Header -->\r\n  \r\n  <!-- Begin Body -->\r\n  \r\n  <br><br><center>\r\n<table width=90%>\r\n<tr>\r\n<td class=title>Publications & Technical Reports</td>\r\n<tr>\r\n  <td colspan=2><img width=\"100%\" height=\"2\"  src=\"/~dechter/images/black-fill.gif\"></td>\r\n</tr>\r\n</tr>\r\n</table>\r\n</center> \r\n\r\n<center>\r\n<table width=\"80%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n<tr valign=top>\r\n<td><b>R15</td>\r\n | \r\n<br></td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=2><div class=title>Self-Stabilizing Distributed Constraint Satisfaction</div>\r\n<tt>\r\nZeev Collin (<A href=\"mailto:zeev@cs.technion.ac.il\">zeev@cs.technion.ac.il</A>), \r\nRina Dechter (<A href=\"mailto:dechter@ics.uci.edu\">dechter@ics.uci.edu</A>) & \r\nShmuel Katz (<A href=\"mailto:katz@cs.technion.ac.il\">katz@cs.technion.ac.il</A>)\r\n\r\n</tt></td></tr>\r\n</table>\r\n\r\n<table width=\"80%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n<tr><td>\r\n<br><div class=abstract>\r\n<b>Abstract</b><BR>\r\nDistributed architectures and solutions are described for classes of constraint\r\nsatisfaction problems, called network consistency problems. An inherent assumption \r\nof these architectures is that the communication network mimics the structure\r\nof the constraint problem. The solutions are required to be self-stabilizing and to\r\ntreat arbitrary networks, which makes them suitable for dynamic or error-prone\r\nenvironments. We first show that even for relatively simple constraint networks,\r\nsuch as rings, there is no self-stabilizing solution that guarantees convergence\r\nfrom every initial state of the system using a completely uniform, asynchronous\r\nmodel (where all processors are identical). An almost-uniform , asynchronous,\r\nnetwork consistency protocol with one specially designated node is shown and\r\nproven correct. We also show that some restricted topologies such as trees can\r\naccommodate the uniform, asynchronous model when neighboring nodes cannot\r\ntake simultaneous steps.\r\n</div><br>\r\n\r\n<A href=\"r15.ps\">\r\n<img align=left border=\"0\" src=\"/~dechter/images/down.gif\">&nbsp;&nbsp;<b>[ps] </b></a>\r\n<A target=blank href=\"r15.pdf\">\r\n<b>[pdf]</b></a>\r\n</td></tr></table></center><br>\r\n\r\n<!-- End Body-->\r\n\r\n<!--- Begin Footer -->\r\n     <div id=\"footer\"><centeR>\r\n<A HREF=\"http://www.ics.uci.edu\">School of Information and Computer Science</A>\r\n<A HREF=\"http://www.uci.edu\">University of California, Irvine, CA 92697-3435</a>\r\n<A HREF=\"http://www.ics.uci.edu/~dechter\">Dr. Rina Dechter</A>\n\r\n<A HREF=\"mailto:dechter_at_ics.uci.edu\">dechter at ics.uci.edu</A>\r\n\n</center></div>\r\n<!--- End Footer -->\r\n\r\n</body>\r\n<html>\r\n", "encoding": "ascii"}