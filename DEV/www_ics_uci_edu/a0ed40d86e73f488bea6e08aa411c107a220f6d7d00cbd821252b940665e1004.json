{"url": "https://www.ics.uci.edu/~jmoorkan/vhdlref/procedur.html", "content": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n<!-- base href=\"http://www.vdlande.com/VHDL/procedur.html\" --><title>VHDL Reference Guide - Procedures</title></head><body bgcolor=\"mintcream\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: -1px -1px 0pt; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: 12px; padding: 8px; background: rgb(221, 221, 221) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-family: arial,sans-serif; font-style: normal; font-variant: normal; font-size: 13px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; color: rgb(0, 0, 0); font-weight: normal; text-align: left;\">This is Google's cache of <a href=\"http://www.vdlande.com/VHDL/procedur.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">http://www.vdlande.com/VHDL/procedur.html</a>. It is a snapshot of the page as it appeared on Oct 7, 2009 23:06:31 GMT. The <a href=\"http://www.vdlande.com/VHDL/procedur.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Learn more</a><br><br><div style=\"float: right;\"><a href=\"http://74.125.155.132/search?q=cache:8SxywBl9mhIJ:www.vdlande.com/VHDL/procedur.html+site:www.vdlande.com+VHDL+reference+guide+vdlande&amp;hl=en&amp;client=firefox-a&amp;gl=us&amp;strip=1\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background: rgb(255, 255, 102) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-weight: bold;\">vhdl</span>&nbsp;These terms only appear in links pointing to this page: <span style=\"font-weight: bold;\">reference</span>&nbsp;<span style=\"font-weight: bold;\">guide</span>&nbsp;<span style=\"font-weight: bold;\">vdlande</span>&nbsp;&nbsp;</div></div></div><div style=\"position: relative;\">\n\n\n\n\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\">\n<caption><b>Procedures</b></caption>\n<tbody><tr><td colspan=\"3\"><hr></td></tr>\n<tr>\n<td bgcolor=\"lightcyan\">Declaration</td>\n<td>---- used in ----&gt;</td>\n<td bgcolor=\"lightgreen\">Package<br>Entity<br>Architecture<br>Process<br>Procedure<br>Function</td>\n</tr>\n</tbody></table>\n\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Syntax</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td><pre>procedure procedure_name (parameter_list) is\n\tdeclarations\nbegin\n\tsequential statements\nend procedure_name;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n\n\n<div align=\"center\">\nSee LRM sections 2.1, 2.2, 8.5 and 9.3\n\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Rules and Examples</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"60%\">\n<tbody><tr>\n<td>Procedures may have <b>in</b>, <b>out</b> or <b>inout</b>\nparameters. These may be <b>signal</b>, <b>variable</b> or\n<b>constant</b>. the default for <b>in</b> parameters is constant. For\n<b>out</b> and <b>inout</b> it is variable. In fact, a <b>constant\nin</b> parameter can be associated with a signal, variable constant or\nexpression when the procedure is called:\n<pre>procedure DISPLAY_MUX\n (ALARM_TIME, CURRENT_TIME : in digit;\n  SHOW_A              : in std_ulogic;\n  signal DISPLAY_TIME : out digit) is \nbegin\n  if (SHOW_A = '1') then\n    DISPLAY_TIME &lt;= ALARM_TIME;\n  else\n    DISPLAY_TIME &lt;= CURRENT_TIME;\n  end if;\nend DISPLAY_MUX;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>Procedures may be called concurrently or sequentially. A concurrent\nprocedure call executes whenever any of its <b>in</b> or <b>inout</b>\nparameters change:\n<pre>architecture SUBPROG of DISP_MUX is\n  ...\nbegin\n  DISPLAY_MUX (ALARM_TIME, CURRENT_TIME,\n                  SHOW_A, DISPLAY_TIME);\nend SUBPROG;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>A procedure may declare local variables. These do not retain their\nvalues between successive calls, but are re-initialised each time.\nArray-type parameters may be <a href=\"http://www.vdlande.com/VHDL/arrays.htm\">unconstrained</a>\n<pre>procedure PARITY\n   (signal X : in std_ulogic_vector;\n    signal Y : out std_ulogic) is\n  variable TMP : std_ulogic := '0';\nbegin\n  for J in X'range loop\n    TMP := TMP xor X(J);\n  end loop; -- works for any size X\n  Y &lt;= TMP;\nend PARITY;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"right\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td>A procedure <b>can</b> contain <a href=\"http://www.vdlande.com/VHDL/waits.htm\">wait\nstatements</a>, <b>unless</b> it is called from a\n<a href=\"http://www.vdlande.com/VHDL/process.htm\">process</a> with a sensitivity list, or from\nwithin a <a href=\"http://www.vdlande.com/VHDL/function.htm\">function</a>.</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>If a procedure is defined in a <a href=\"http://www.vdlande.com/VHDL/package.htm\">package</a>,\nits body (the algorithm part) must be placed in the\n<a href=\"http://www.vdlande.com/VHDL/packageb.htm\">package body</a>.\n<pre>package REF_PACK is\n  procedure PARITY\n   (signal X : in std_logic_vector;\n    signal Y : out std_logic);\nend REF_PACK;\n\npackage body REF_PACK is\n  procedure PARITY\n   (signal X : in std_logic_vector;\n    signal Y : out std_logic) is  \n  begin\n    -- procedure code\n  end PARITY;\nend REF_PACK;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n\n\n<div align=\"center\">\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Synthesis Issues</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\nProcedures are usually supported for synthesis, providing they do not\ncontain any <a href=\"http://www.vdlande.com/VHDL/waits.htm\">wait statements</a>.\n\n<div align=\"center\">\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Whats New in '93</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\nIn <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93, the keyword <b>end</b> may be followed by the keyword\n<b>procedure</b> for clarity and consistancy.\n</p><p>\nAny procedure may be given an optional label.\n</p><p>\nA concurrent procedure call can be specified to run as a\n<a href=\"http://www.vdlande.com/VHDL/process.htm\">postponed process</a>.\n</p></div>\n\n<hr width=\"80%\">\n</div></body></html>", "encoding": "ascii"}