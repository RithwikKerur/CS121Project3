{"url": "https://www.ics.uci.edu/~eppstein/pubs/2018.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\n2018\n</h2>\n<ul>\n<li><b>Planar and poly-arc Lombardi drawings</b>.<br>\n<a href=\"//www2.latech.edu/~duncan/\">C. Duncan</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.cs.arizona.edu/~kobourov/\">S. Kobourov</a>, and\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>, and\n<a\nhref=\"//www.ac.tuwien.ac.at/people/noellenburg/\">M. N&ouml;llenburg</a>.<br>\n<i>Proc. 19th Int. Symp. Graph Drawing</i>, Eindhoven, The Netherlands, 2011.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 7034, 2012, pp. 308&ndash;319.<br>\n<a href=\"//arxiv.org/abs/1109.0345\">arXiv:1109.0345</a>.<br>\n<a href=\"//doi.org/10.20382/jocg.v9i1a11\"><i>J. Computational Geometry</i> \n9 (1): 328&ndash;355, 2018</a>.\n<p>\nWe extend Lombardi drawing (in which each edge is a circular arc and\nthe edges incident to a vertex must be equally spaced around it) to\ndrawings in which edges are composed of multiple arcs, and we\ninvestigate the graphs that can be drawn in this more relaxed framework.\n<p>\n<li><b>Parameterized complexity of 1-planarity</b>.<br>\n<a href=\"//michaeljbannister.com/\">M. J. Bannister</a>,\n<a href=\"//www.fmf.uni-lj.si/~cabello/\">S. Cabello</a>,\nand D. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1304.5591\">arXiv:1304.5591</a>.<br>\n13th Int. Symp. Algorithms and Data Structures (WADS 2013), London, Ontario<br>\n<a href=\"//doi.org/10.1007/978-3-642-40104-6_9\">Springer, <i>Lecture Notes in Comp. Sci. 8037</i>, 2013, pp. 97&ndash;108</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00457\"><i>J. Graph Algorithms and\nApplications</i> 22 (1): 23&ndash;49, 2018</a>. (Special issue on Graph\nDrawing Beyond Planarity.)<br>\n<p>\nWe show that testing whether a graph is 1-planar (drawable with at most\none crossing per edge) may be performed in polynomial and\nfixed-parameter tractable time for graphs of bounded circuit rank,\nvertex cover number, or tree-depth. However, it is NP-complete for\ngraphs of bounded treewidth, pathwidth, or bandwidth.\n<p>\n(<a href=\"BanCabEpp-WADS-13-slides.pdf\">Slides</a>)\n<p>\n<li><b>Crossing minimization for 1-page and 2-page drawings of graphs\nwith bounded treewidth</b>.<br>\n<a href=\"//michaeljbannister.com/\">M. J. Bannister</a> and\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1408.6321\">arXiv:1408.6321</a>.<br>\n<i>22nd Int. Symp. Graph Drawing</i>, W&uuml;rzburg, Germany, 2014.<br>\n<a href=\"//doi.org/10.1007/10.1007/978-3-662-45803-7_18\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 8871, 2014, pp. 210&ndash;221.</a><br>\n<a href=\"//doi.org/10.7155/jgaa.00479\"><i>J. Graph Algorithms &\nApplications</i> 22 (4): 577&ndash;606, 2018</a>.\n<p>\nWe show how to express in monadic second-order logic the problems of\ndrawing a graph with a fixed\nnumber of crossings on a one or two page book layout.\nBy applying Courcelle's theorem, we obtain fixed-parameter tractable\nalgorithms for these problems, parameterized by treewidth.\n<p>\n<li><b>Flat foldings of plane graphs with prescribed angles and edge lengths</b>.<br>\n<a href=\"//zacharyabel.com/\">Z. Abel</a>,\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\n<a href=\"//martindemaine.org/\">M. Demaine</a>,\nD. Eppstein,\n<a href=\"//cs.uwaterloo.ca/~alubiw/Site/Anna_Lubiw.html\">A. Lubiw</a>, and\n<a href=\"//www.jaist.ac.jp/~uehara/index-e.html\">R. Uehara</a>.<br>\n<a href=\"//arxiv.org/abs/1408.6771\">arXiv:1408.6771</a>.<br>\n<i>22nd Int. Symp. Graph Drawing</i>, W&uuml;rzburg, Germany, 2014.<br>\n<a href=\"//doi.org/10.1007/978-3-662-45803-7_23\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 8871, 2014, pp. 272&ndash;283.</a><br>\n<a href=\"//doi.org/10.20382/jocg.v9i1a3\"><i>J. Computational\nGeometry</i> 9 (1): 74&ndash;93, 2018</a>.\n<p>\nGiven a plane graph with fixed edge lengths, and an assignment of the\nangles 0, 180, and 360 to the angles between adjacent edges, we show how\nto test whether the angle assignment can be realized by an embedding of\nthe graph as a flat folding on a line. As a consequence, we can\ndetermine whether two-dimensional cell complexes with one vertex can be\nflattened. The main idea behind the result is to show that each face of\nthe graph can be folded independently of the other faces.\n<p>\n<li><b>The parametric closure problem</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1504.04073\">arXiv:1504.04073</a>.<br>\n14th Algorithms and Data Structures Symp. (WADS 2015), Victoria, BC.<br>\n<a href=\"//doi.org/10.1007/978-3-319-21840-3_27\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9214 (2015), pp. 327&ndash;338</a>.<br>\n<a href=\"//doi.org/10.1145/3147212\"><i>ACM Trans. Algorithms</i> 14 (1):\nArticle 2, 2018</a>.\n<p>\nWe consider the minimum weight closure problem for a partially ordered\nset whose elements have weights that vary linearly as a function of a\nparameter. For several important classes of partial orders the number of\nchanges to the optimal solution as the parameter varies is near-linear,\nand the sequence of optimal solutions can be found in near-linear time.\n<p>\n(<a href=\"Epp-WADS-15-slides.pdf\">Slides</a>)\n<p>\n<li><b>Folding polyominoes into (poly)cubes</b>.<br>\n<a href=\"//www.ist.tugraz.at/aichholzer/\">O. Aichholzer</a>,\n<a href=\"//www.swarthmore.edu/profile/michael-biro\">M. Biro</a>,\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\n<a href=\"//martindemaine.org/\">M. Demaine</a>,\nD. Eppstein,\n<a href=\"//www.ibr.cs.tu-bs.de/users/fekete/?lang=en\">S. P. Fekete</a>,\n<a href=\"//math.mit.edu/directory/profile.php?pid=1468\">A. Hesterberg</a>,\n<a href=\"//www.win.tue.nl/~ikostits/\">I. Kostitsyna</a>, and\n<a href=\"//www.cs.huji.ac.il/~cschmidt/\">C. Schmidt</a>.<br>\n<a href=\"//www.cccg.ca/proceedings/2015/37.pdf\"><i>27th Canadian Conference on Computational Geometry</i>, Kingston, Ontario,\nCanada, 2015, pp.&nbsp;101&ndash;106</a>.<br>\n<a href=\"//arxiv.org/abs/1712.09317\">arXiv:1712.09317</a>.<br>\n<a href=\"//doi.org/10.1142/S0218195918500048\"><i>Int. J. Comp. Geom. &amp;\nAppl.</i> 28 (3): 197&ndash;226, 2018</a>.\n<p>\nWe classify the polyominoes that can be folded to form the surface of a\ncube or polycube, in multiple different folding models that incorporate\nthe type of fold (mountain or valley), the location of a fold (edges of\nthe polycube only, or elsewhere such as along diagonals), and whether\nthe folded polyomino is allowed to pass through the interior of the\npolycube or must stay on its surface.\n<p>\n<li><b>On the planar split thickness of graphs</b>.<br>\nD. Eppstein,\n<a href=\"//www1.informatik.uni-wuerzburg.de/en/staff/kindermann_philipp/\">P. Kindermann</a>,\n<a href=\"//www.cs.arizona.edu/~kobourov/\">S. G. Kobourov</a>,\n<a href=\"//www.diei.unipg.it/STAFF/liotta.htm\">G. Liotta</a>,\n<a href=\"//cs.uwaterloo.ca/~alubiw/Site/Anna_Lubiw.html\">A. Lubiw</a>,\n<a href=\"//www-ljk.imag.fr/membres/Aude.Maignan/\">A. Maignan</a>,\n<a href=\"//www.cs.umanitoba.ca/~jyoti/research.html\">D. Mondal</a>,\n<a href=\"//cs.uwaterloo.ca/~hvosough/\">H. Vosoughpour</a>,\nS. Whitesides, and\n<a href=\"//www.cs.uleth.ca/~wismath/\">S. Wismath</a>.<br>\n<a href=\"//arxiv.org/abs/1512.04839\">arXiv:1512.04839</a>.<br>\n<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN\n2016)</i>, Ensenada, Mexico</i>.<br>\n<a href=\"//doi.org/10.1007/978-3-662-49529-2_30\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 403&ndash;415</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0328-y\"><i>Algorithmica</i> 80\n(3): 977&ndash;994 (special issue for LATIN), 2018</a>.\n<p>\nWe study the problem of splitting the vertices of a given graph into a\nbounded number of sub-vertices (with each edge attaching to one of the\nsub-vertices) in order to make the resulting graph planar.\nIt is NP-complete, but can be approximated to within a constant factor,\nand is fixed-parameter tractable in the treewidth.\n<p>\n(<a href=\"EppKinKob-LATIN-16-slides.pdf\">Slides</a>)\n<p>\n<li><b>From discrepancy to majority</b>.<br>\nD. Eppstein\nand <a href=\"//www.ics.uci.edu/~dan/\">D. S. Hirschberg</a>.<br>\n<a href=\"//arxiv.org/abs/1512.06488\">arXiv:1512.06488</a>.<br>\n<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN\n2016)</i>, Ensenada, Mexico.<br>\n<a href=\"//doi.org/10.1007/978-3-662-49529-2_29\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 390&ndash;402</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0303-7\"><i>Algorithmica</i> 80\n(4): 1278&ndash;1297, 2018</a>.\n<p>\nWe provide upper and lower bounds on the query complexity of a problem\nin which the input is a collection\nof two-colored items, and the problem is to either find an item of the\nmajority color or to determine that there is no majority,\nby performing queries that determine the discrepancy of fixed-size\nsubsets of the items.\n<p>\n(<a href=\"EppHir-LATIN-16-slides.pdf\">Slides</a>)\n<p>\n<li><b>Spanning trees in multipartite geometric graphs</b>.<br>\n<a href=\"//cglab.ca/~biniaz/\">A. Biniaz</a>,\n<a href=\"//jitbose.ca/\">P. Bose</a>,\nD. Eppstein,\n<a href=\"//people.scs.carleton.ca/~maheshwa/\">A. Maheshwari</a>,\n<a href=\"//cglab.ca/~morin/\">P. Morin</a>, and\n<a href=\"//people.scs.carleton.ca/~michiel/\">M. Smid</a>.<br>\n<a href=\"//arxiv.org/abs/1611.01661\">arXiv:1611.01661</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0375-4\"><i>Algorithmica</i> 80\n(11): 3177&ndash;3191, 2018</a>.\n<p>\nWe provide near-linear-time algorithms for minimum and maximum spanning\ntrees on Euclidean graphs given by multicolored point sets, where each\npoint forms a vertex, and each bichromatic pair of points forms an edge\nwith length equal to their Euclidean distance.\n<p>\n<li><b>Forbidden configurations in discrete geometry</b>.<br>\nD. Eppstein.<br>\nPaul Erd&#337;s Memorial Lecture, 29th Canadian Conference on\nComputational Geometry, Ottawa, Canada, 2017.<br>\nInvited talk, 20th Japan Conference on Discrete\nand Computational Geometry, Graphs, and Games, Tokyo, 2017.<br>\nInvited talk, 5th International Combinatorics Conference, Melbourne,\nAustralia, 2017.<br>\nInvited talk, Southern California Theory Day, Irvine, California, 2018.<br>\n<a href=\"//www.cambridge.org/eppstein\">Cambridge University Press, 2018</a>.\n<p>\nWe survey problems on finite sets of points in the Euclidean plane that\nare monotone under removal of points and depend only on the order-type\nof the points, and the subsets of points (forbidden configurations) that\nprevent a point set from having a given monotone property.\n<p>\n(<a href=\"Epp-CCCG-17.pdf\">CCCG talk slides</a> &ndash;\n<a href=\"//youtu.be/E-7cmjqEbbY?list=PL7Q1MpbNe0pnan3gYPHK_-GEdpnvpRUfi\">CCCG\ntalk video</a> &ndash;\n<a href=\"Epp-SCTD-18.pdf\">SCTD talk slides</a> &ndash;\n<a href=\"//www.ics.uci.edu/~eppstein/forbidden/\">Updates and errata</a> &ndash;\n<a href=\"//www.maa.org/press/maa-reviews/forbidden-configurations-in-discrete-geometry\">Review by Darren Glass for <i>MAA Reviews</i></a>)\n<p>\n<li><b>Triangle-free penny graphs: degeneracy, choosability, and edge count</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1708.05152\">arXiv:1708.05152</a>.<br>\n<i>Proc. 25th Int. Symp. Graph Drawing</i>, Boston, Massachusetts, 2017.<br>\n<a href=\"//doi.org/10.1007/978-3-319-73915-1_39\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 10692 (2018), pp. 506&ndash;513</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00463\"><i>J. Graph Algorithms &\nApplications</i> 22 (3): 483&ndash;499 (special issue for GD 2017), 2018</a>.\n<p>\nA penny graph is the contact graph of unit disks: each disk represents a\nvertex of the graph, no two disks can overlap, and each tangency between\ntwo disks represents an edge in the graph.\nWe prove that, when this graph is triangle free, its degeneracy is at most two.\nAs a consequence, triangle-free penny graphs have list chromatic number\nat most three.\nWe also show that the number of edges in any such graph is at most\n2<i>n</i>&nbsp;&minus;&nbsp;&Omega;(&radic;<i>n</i>).\nThe journal version uses the alternative title \"Edge Bounds and Degeneracy of Triangle-Free Penny Graphs and Squaregraphs\".\n<p>\n(<a href=\"Epp-GD-17-penny-slides.pdf\">Slides</a>)\n<p>\n<li><b>The effect of planarization on width</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1708.05155\">arXiv:1708.05155</a>.<br>\n<i>Proc. 25th Int. Symp. Graph Drawing</i>, Boston, Massachusetts, 2017.<br>\n<a href=\"//doi.org/10.1007/978-3-319-73915-1_43\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 10692 (2018), pp. 560&ndash;572</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00468\"><i>J. Graph Algorithms &\nApplications</i> 22 (3): 461&ndash;481 (special issue for GD 2017), 2018</a>.\n<p>\nWe study what happens to nonplanar graphs of low width\n(for various width measures) when they are made planar by\nreplacing crossings by vertices.\nFor treewidth, pathwidth, branchwidth, clique-width, and tree-depth,\nthis replacement can blow up the width from constant to linear.\nHowever, for bandwidth, cutwidth, and carving width,\ngraphs of bounded width stay bounded when we planarize them.\n<p>\n(<a href=\"Epp-GD-17-planarization-slides.pdf\">Slides</a>)\n<p>\n<li><b>Quadratic time algorithms appear to be optimal for sorting\nevolving data</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.ics.uci.edu/~tujohnso/\">T. Johnson</a>.<br>\n<a href=\"//doi.org/10.1137/1.9781611975055.8\"><i>Proc. Algorithm\nEngineering &amp; Experiments (ALENEX 2018)</i>, New Orleans, 2018,\npp. 87&ndash;96</a>.<br>\n<a href=\"//arxiv.org/abs/1805.05443\">arXiv:1805.05443</a>.\n<p>\nWe experiment with sorting algorithms in the evolving data model,\nin which, at the same time as the algorithm compares pairs of elements\nand possibly chooses a new ordering based on the results of the comparison,\nan adversary randomly chooses two adjacent elements in the sorted order\nand swaps them. As we show, bubble sort and its variants appear to\nmaintain an order that is within inversion distance of optimal.\n<p>\n<li><b>Grid peeling and the affine curve-shortening flow</b>.<br>\nD. Eppstein,\n<a href=\"//sarielhp.org/\">S. Har-Peled</a>, and\n<a href=\"//www.gabrielnivasch.org/\">G. Nivasch</a>.<br>\n<a href=\"//doi.org/10.1137/1.9781611975055.10\"><i>Proc. Algorithm\nEngineering &amp; Experiments (ALENEX 2018)</i>,\nNew Orleans, 2018, pp. 109&ndash;116</a>.<br>\n<a href=\"//doi.org/10.1080/10586458.2018.1466379\"><i>Experimental Mathematics</i>, to appear</a>.\n<p>\nWe conjecture, based on experiments, that approximating a convex shape\nby the set of grid points inside it, for a fine enough grid, and then\nfinding the convex layers of the resulting point set, produces curves\nthat are close to those produced by affine curve-shortening, a\ncontinuous process on smooth curves.\n<p>\n<li><b>NC algorithms for perfect matching and maximum flow in\none-crossing-minor-free graphs</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~vazirani/\">V. V. Vazirani</a>.<br>\n<a href=\"//arxiv.org/abs/1802.00084\">arXiv:1802.00084</a>.<br>\n<i>Proc. 30th ACM Symposium on Parallelism in \nAlgorithms and Architectures (SPAA 2019)</i>, Phoenix, Arizona, 2019, to appear.<br>\n<p>\nWe extend Anari and Vazirani's parallel algorithm for perfect matching\nin planar graphs to the graph families with a forbidden minor with\ncrossing number one, by developing a concept of mimicking networks for\nperfect matching.\n<p>\n(<a href=\"Epp-SPAA-19-slides.pdf\">Slides</a>)\n<p>\n<li><b>Reactive proximity data structures for graphs</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nN. Mamano.<br>\n<a href=\"//arxiv.org/abs/1803.04555\">arXiv:1803.04555</a>.<br>\n<i>Proc. 13th Latin American Theoretical Informatics Symposium (LATIN\n2018)</i>, Buenos Aires, Argentina.<br>\n<a href=\"//doi.org/10.1007/978-3-319-77404-6_56\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 10807 (2018), pp. 777&ndash;789</a>.\n<p>\nWe develop data structures for solving nearest neighbor queries for\ndynamic subsets of vertices in a planar graph, or more generally for a\ngraph in any graph class with small separators (polynomial expansion).\n<p>\n<li><b>Subexponential-time and FPT algorithms for embedded flat clustered\nplanarity</b>.<br>\nG. Da Lozzo,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nS. Gupta.<br>\n<a href=\"//arxiv.org/abs/1803.05465\">arXiv:1803.05465</a><br>\n<i>Proc. 44th International Workshop on Graph-Theoretic Concepts in\nComputer Science (WG 2018)</i>, L&uuml;bbenau, Germany.<br>\n<a href=\"//doi.org/10.1007/978-3-030-00256-5_10\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 11159 (2018), pp. 111&ndash;124</a>.\n<p>\nClustered planarity is the problem of simultaneously drawing a planar\ngraph and a clustering of its vertices (as Jordan curves surrounding the\ncluster) with no unnecessary crossings between edges or cluster\nboundaries; it remains unknown whether it can be solved in polynomial time.\nWe provide parameterized and subexponential exact algorithms for the\ncase where the planar embedding is fixed and the clusters form a\npartition of the vertices.\n<p>\n<li><b>Faster evaluation of subtraction games</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1804.06515\">arXiv:1804.06515</a>.<br>\n<i>Proc. 9th Int. Conf. Fun with Algorithms (FUN 2018)</i>, La\nMaddalena, Italy.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.FUN.2018.20\">Leibniz International Proceedings in Informatics (LIPIcs) 100, pp. 20:1&ndash;20:12</a>.<br>\n<p>\nWe show how to evaluate the set of winning heap sizes in subtraction\ngames like subtract-a-square in near-linear time, and how to compute\nthe nim-values more quickly than naive dynamic programming.\nAdditionally we perform computational experiments showing\nthat the set of winning positions forms an unexpectedly dense\nsquare-difference-free set.\n<p>\n(<a href=\"Epp-FUN-18-subtraction-slides.pdf\">Slides</a>)\n<p>\n<li><b>Making change in 2048</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1804.07396\">arXiv:1804.07396</a>.<br>\n<i>Proc. 9th Int. Conf. Fun with Algorithms (FUN 2018)</i>, La\nMaddalena, Italy.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.FUN.2018.21\">Leibniz International Proceedings in Informatics (LIPIcs) 100, pp. 21:1&ndash;21:13</a>.<br>\n<p>\nThe 2048 puzzle, modified to use any sequence of integer tile values\nthat has arbitrarily large gaps, always terminates. The proof relates\nthe puzzle to the greedy algorithm for making change (suboptimally)\nusing a given system of coins.\n<p>\n(<a href=\"Epp-FUN-18-2048-slides.pdf\">Slides</a>)\n<p>\n<li><b>Stable-matching Voronoi diagrams:\ncombinatorial complexity and algorithms</b>.<br>\n<a href=\"//www.cs.technion.ac.il/~barequet/\">G. Barequet</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nN. Mamano.<br>\n<a href=\"//arxiv.org/abs/1804.09411\">arXiv:1804.09411</a><br>\n<i>Proc. 45th International Colloquium on Automata, Languages, and\nProgramming (ICALP 2018)</i>, Prague.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.ICALP.2018.89\">Leibniz International\nProceedings in Informatics (LIPIcs) 107, pp. 89:1&ndash;89:14</a>.<br>\n<p>\nThe stable-matching Voronoi diagram of a collection of point sites in\nthe plane, each with a specified area, is a collection of disjoint\nregions of the plane, one for each site and having the specified area,\nso that no pair of a point and a site are closer to each other than to\nthe farthest other site and point that they may be matched to.\nWe prove nearly-matching upper and lower bounds on the combinatorial\ncomplexity of these diagrams and provide algorithms that can compute them\nin a polynomial number of primitive steps.\n<p>\n<li><b>Optimally sorting evolving data</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nT. Johnson.<br>\n<a href=\"//arxiv.org/abs/1805.03350\">arXiv:1805.03350</a><br>\n<i>Proc. 45th International Colloquium on Automata, Languages, and\nProgramming (ICALP 2018)</i>, Prague.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.ICALP.2018.81\">Leibniz International Proceedings in Informatics (LIPIcs) 107, pp. 81:1&ndash;81:13</a>.<br>\n<p>\nSuppose that a collection of objects has a linear order that is evolving\nby swaps of randomly chosen consecutive elements. We would like to\nmaintain an approximation to this order using an algorithm that performs\none comparison per swap. We show that repeated insertion sort can\nmaintain linear inversion distance from the underlying order, the best\npossible.\n<p>\n<li><b>Reconfiguration of satisfying assignments and subset sums: Easy\nto find, hard to connect</b>.<br>\n<a href=\"//www.ulb.ac.be/di/scsi/jcardin/\">J. Cardinal</a>,\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\nD. Eppstein,\n<a href=\"//groups.csail.mit.edu/mac/users/bob/\">R. Hearn</a>, and\n<a href=\"//andrewwinslow.com/\">A. Winslow</a>.<br>\n<a href=\"//arxiv.org/abs/1805.04055\">arXiv:1805.04055</a><br>\n<i>Proc. 24th International Computing and Combinatorics Conference\n(COCOON 2018)</i>, Qingdao, China.<br>\n<a href=\"//doi.org/10.1007/978-3-319-94776-1_31\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 10976 (2018), pp. 365&ndash;377</a>.<br>\n<i>Theor. Comput. Sci.</i>, to appear.\n<p>\nFor several problems with polynomial-time solutions, we show that\nfinding a sequence of steps that converts one solution into another\n(maintaining a valid solution at each step) is hard.\nThese include planar monotone not-all-equal 3-sat, subset sum on integers of\npolynomial magnitude, and 0-1 integer programming with a constant number\nof linear inequality constraints.\n<p>\n(<a href=\"CarDemEpp-COCOON-18-slides.pdf\">Slides</a>)\n<p>\n<li><b>Geometric fingerprint matching via\noriented point-set pattern matching</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\nJ. Jorgensen, and\nM. Torres.<br>\n<a href=\"//arxiv.org/abs/1808.00561\">arXiv:1808.00561</a><br>\n<a href=\"//www.cs.umanitoba.ca/~cccg2018/papers/proceedings.pdf\"><i>Proc. 30th Canadian Conference on\nComputational Geometry</i>, Winnepeg, Canada, 2018, pp. 98&ndash;113</a>.<br>\n<p>\nWhen matching fingerprints, the data involves planar points each of\nwhich has an associated direction. Motivated by this application, we\nconsider point matching problems\nin which the distance between points combines both their translational\ndistance and the rotation needed to make their directions align.\nWe provide fast and simple approximation schemes for matching oriented\npoint sets under the directed Hausdorff distance with different allowed\ngroups of transformations.\n<p>\n<li><b>Which women mathematicians get written about on Wikipedia, and\nwhy</b>.<br>\nD. Eppstein.<br>\n<a href=\"//drive.google.com/open?id=1oVk94BCbEXB4Kur8dwNuGcKP7Q8sVYzG\"><i>AWM\nNewsletter</i> 48 (4): 12&ndash;14, July&ndash;August 2018</a>.\n<p>\nThis short opinion piece explains Wikipedia's guidelines for inclusion\nof articles on academics, and outlines steps to help improve Wikipedia's\ncoverage of women in mathematics.\n<p>\n<li><b>Parameterized leaf power recognition via embedding into graph products</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~ehavvaei/\">E. Havvaei</a>.<br>\n<a href=\"//arxiv.org/abs/1810.02452\">arXiv:1810.02452</a>.<br>\n<i>Proc. 13th International Symposium on Parameterized and Exact\nComputation (IPEC 2018)</i>, Helsinki, Finland, 2018.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.IPEC.2018.16\">Leibniz International Proceedings in Informatics (LIPIcs) 115, 2018, pp. 16:1&ndash;16:14</a>.\n<p>\nA leaf power graph is the graph formed from the leaves of a tree by\nmaking two leaves adjacent when their tree distance is at most <i>k</i>.\nWe show that recognizing these graphs is fixed-parameter tractable\nin a combination of two parameters: <i>k</i> and the degeneracy of the graph.\n<p>\n<li><b>The parameterized complexity of finding point sets with\nhereditary properties</b>.<br>\nD. Eppstein and\nD. Lokshtanov.<br>\n<a href=\"//arxiv.org/abs/1808.02162\">arXiv:1808.02162</a><br>\n<i>Proc. 13th International Symposium on Parameterized and Exact\nComputation (IPEC 2018)</i>, Helsinki, Finland, 2018.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.IPEC.2018.11\">Leibniz International Proceedings in Informatics (LIPIcs) 115, 2018, pp. 11:1&ndash;11:14</a>.\n<p>\nWe exhibit a hereditary property of planar point sets (depending only on\nthe order type of a point set) such that under standard assumptions\nthere is no fixed-parameter-tractable algorithm to find a <i>k</i>-point\nsubset with the property. On the other hand, several natural classes of\nproperties have FPT algorithms for this problem, including the\nproperties that are true for all collinear point sets or false for at\nleast one convex polygon.\n<p>\n(<a href=\"EppLok-IPEC-18-slides.pdf\">Slides</a>)\n<p>\n<li><b>Realization and connectivity of the graphs of origami flat foldings</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1808.06013\">arXiv:1808.06013</a>.<br>\n<i>Proc. 26th Int. Symp. Graph Drawing</i>, Barcelona, 2018.<br>\n<a href=\"//doi.org/10.1007/978-3-030-04414-5_38\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 11282 (2018), pp. 541&ndash;554</a>.<br>\n<a href=\"//doi.org/10.20382/jocg.v10i1a10\"><i>J. Computational Geometry</i> 10 (1): 257&ndash;280, 2019</a>.\n<p>\nIf you fold a piece of paper flat and unfold it again, the resulting\ncrease pattern forms a planar graph. We prove that a tree can be\nrealized in this way (with its leaves as diverging rays that reach the\nboundary of the paper) if and only if all internal vertices have odd\ndegree greater than two. On the other hand, for a folding pattern on\nan infinite sheet of paper with an added vertex at infinity as the\nendpoint of all its rays, the resulting graph must be 2-vertex-connected\nand 4-edge-connected.\n<p>\n(<a href=\"Epp-GD-18.pdf\">Slides</a>)\n<p>\n<li><b>Stable-matching Voronoi diagrams</b>.<br>\nD. Eppstein.<br>\nInvited talk at 21st Japan Conference on Discrete and Computational Geometry, Graphs, and Games (JCDCG<sup>3</sup>), Manila, Philippines, 2018.<br>\n<p>\nWe survey the results from several of my earlier papers:\n<a href=\"p-stablegrid.html\">Algorithms for stable matching and clustering in a grid</a>,\n<a href=\"p-stableroad.html\">Defining equitable geographic districts in\nroad networks via stable matching</a>,\n<a href=\"p-graphnn.html\">Reactive proximity data structures for graphs</a>, and\n<a href=\"p-smvd.html\">Stable-matching Voronoi diagrams:\ncombinatorial complexity and algorithms</a>.\n<p>\n(<a href=\"Epp-JCDCG3-18-slides.pdf\">Slides</a>)\n<p>\n<li><b>Finding maximal sets of laminar 3-separators in planar graphs in\nlinear time</b>.<br>\nD. Eppstein and\nB. Reed.<br>\n<a href=\"//arxiv.org/abs/1810.07825\">arXiv:1810.07825</a>.<br>\n<a href=\"//doi.org/10.1137/1.9781611975482.37\"><i>30th ACM-SIAM Symp. on Discrete Algorithms</i>, San Diego, 2019, pp. 589&ndash;605</a>.<br>\n<p>\nGiven a 3-vertex-connected planar graph, we find a hierarchical\ndecomposition of the graph by 3-vertex separators, such that each piece\nof the decomposition is 4-vertex-connected, in linear time.\nThe result has applications to an algorithm of Kawarabayashi, Li, and\nReed for finding disjoint paths in nonplanar graphs.\n<p>\n(<a href=\"EppRee-SODA-19-slides.pdf\">Slides</a>)\n<p>\n<li><b>Minor-closed graph classes with bounded layered pathwidth</b>.<br>\n<a href=\"//engineering.uottawa.ca/eecs/people/dujmovic-vida\">V. Dujmovi&#263;</a>,\nD. Eppstein,\n<a href=\"//di.ulb.ac.be/algo/gjoret/\">G. Joret</a>,\n<a href=\"//cglab.ca/~morin/\">P. Morin</a>, and\n<a href=\"//users.monash.edu.au/~davidwo/\">D. R. Wood</a>.<br>\n<a href=\"//arxiv.org/abs/1810.08314\">arXiv:1810.08314</a>.<br>\n<i>SIAM J. Discrete Math</i>, to appear.\n<p>\nA minor-closed graph family has a functional relation between diameter and path\nwidth (bounded local pathwidth) if and only if it excludes an apex-tree.\nThe same graph families are also the ones with bounded layered pathwidth:\na simultaneous path decomposition and layering (sequence of subsets of\nvertices with all edges connecting the same subset or consecutive\nsubsets) so that the intersection of a bag and a layer has constant size.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"year.html\">Years</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}