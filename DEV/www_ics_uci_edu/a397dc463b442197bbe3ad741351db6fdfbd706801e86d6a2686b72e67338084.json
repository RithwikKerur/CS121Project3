{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0009.html", "content": "<!-- received=\"Wed May 29 06:45:00 1996 PDT\" -->\n<!-- sent=\"Wed, 29 May 1996 09:45:49 -0400\" -->\n<!-- name=\"David J. Fiander\" -->\n<!-- email=\"davidf@worf.mks.com\" -->\n<!-- subject=\"Re: Version identifier in URL\" -->\n<!-- id=\"ade24ff30c0210040484@[128.195.21.209]\" -->\n<!-- inreplyto=\"Version identifier in URL\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Version identifier in URL</title>\n<h1>Re: Version identifier in URL</h1>\n<b>David J. Fiander</b> (<a href=\"mailto:davidf@worf.mks.com\"><i>davidf@worf.mks.com</i></a>)<br>\n<i>Wed, 29 May 1996 09:45:49 -0400</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#9\">[ date ]</a><a href=\"thread.html#9\">[ thread ]</a><a href=\"subject.html#9\">[ subject ]</a><a href=\"author.html#9\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0010.html\">David J. Fiander: \"Re: Version identifier in URL\"</a>\n<li> <b>Previous message:</b> <a href=\"0008.html\">Marty Cagan/Continuus Software Corporation: \"Re: Version identifier in URL\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0002.html\">Jim Whitehead: \"Version identifier in URL\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0010.html\">David J. Fiander: \"Re: Version identifier in URL\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nI think, since Jim has generously offered the MKS implementation\nas the \"working hypothesis\" for the group, that I should give a\nlittle bit of the history and rationale behind it.\n\nLast fall, a small group of MKS put this together, mostly as a\nproof of concept.  The requirements of the time were that it had\nto integrate into the server easily (using the Netscape Server\nAPIs), and it had to provide a basic level of version control\n(VC) functionality for unmodified clients.  This latter\nrequirement was the more onerous--it's why we went with the\n\"decorated\" URL syntax for everything, including things that\nshould be methods, as Larry pointed out in his mail of Tue, 14\nMay 1996 10:54:18 PDT.\n\nI, too, am uncomfortable with Dan's \"heavy-weight\" proposal for\ndealing with versioning, because I still feel that, for the truly\nbasic functionality of \"get me revision 'foo' of this URL\", we\nneed to ensure that existing, unmodified clients work.  This does\nnot disallow Kenji's \"Content-Version\" implementation, which I\nexpect to be supported as an alternative access method in the\nfuture, and which will probably be critical for the more advanced\ndocument management (DM) and VC functionality that we're probably\ngoing to be working towards in this group.\n\nRobert's suggestion of creating a new attribute \"VERSION\"\nsimilarly requires version-aware clients before we can proceed.\nThe other problem is that creating new HTML/SGML attributes is\nnot as simple as just making up a new unique name for the\nattribute; there are tools out there today that won't allow you\ndo do this sort of thing without modifying the HTML DTD.\n\nWe selected the \";version=...\" syntax because both the HTTP 1.0\nand HTTP 1.1 specification have included, since the earliest\ndrafts, the concept of the \"URL parameter\" (see section 7.2.1 of\nHTTP 1.1 draft 3).  The URL parameters appear between the path\nand any appended query, and are separated from the path by a ';'.\nKenji's concern about semicolons embedded in UNIX filenames is\nvalid but, because the URL syntax has always reserved the\nsemicolon, any such filename semicolons must be encoded\nin the URL, using the character escape mechanism, as \"%3B\".\n\nI'm not sure that I understand Chris's concerns about \"version\"\nbeing a \"meta identifier\".  It's the name of the URL parameter\nstring that we're providing, nothing more.\n\nRobert asks some good questions:\n\n&gt;Is the versioning model constrained to be single threaded?  (i.e. unique\n&gt;answers to the queries below)\n\nI don't know.  I think that for some of the particulars the\nanswer will be yes, and for other it will be no.  In the\nfollowing, when I say \"the version \"URL(x)\", I mean \"the version\nspecified by URL(x)\".\n\n&gt;Fetch the version previous to URL(x).\n\nif \"URL(x)\" is a versioned URL, this boils down to\n\n        Fetch the version previous to the version \"foo\"\n\nwhich will clearly give the same answer all the time, since every\nversion of the document will only have one immediate predecessor.\n\nIf the question is, \"get me the version of this file that was\nactive before the \"current\" version, then I would say that there\nare always going to be race conditions.\n\n&gt;Fetch the version subsequent to URL(x).\n\nThis one is tricky.  Suppose there's a branch in the version\nhistory at the version URL(x).  Then which of the two or more\ndifferent descendants of URL(x) is \"the version subsequent\"?\n\n&gt;Fetch the version of URL(x) current at time t.\nGiven second granularity, this should always be deterministic.\n\n&gt;Fetch the version of URL(x) current as of the creation time of URL(y)\n\nGiven the answer to the previous question, this boils down to\n\n        Find t = the creation time of URL(y)\n        Fetch the version of URL(x) current at time t.\n\n&gt;Fetch the most recent version of URL(y)\n\nThis will be indeterminate, given that updates will always be\nasynchronous.\n\nJim said:\n\n&gt;Note that this convention only specifies the version of the entity, and\n&gt;does not specify the version of each directory in the heirarchy leading to\n&gt;that entity.\n\nWe should also note that the VC/DM work may also interact with\nthe content negotiation and generic/specific resource language in\nHTTP 1.1.  We need to ensure that we play well with that text.\n\n- David\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0010.html\">David J. Fiander: \"Re: Version identifier in URL\"</a>\n<li> <b>Previous message:</b> <a href=\"0008.html\">Marty Cagan/Continuus Software Corporation: \"Re: Version identifier in URL\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0002.html\">Jim Whitehead: \"Version identifier in URL\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0010.html\">David J. Fiander: \"Re: Version identifier in URL\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}