{"url": "https://www.ics.uci.edu/~jmoorkan/vhdlref/filedec.html", "content": "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=US-ASCII\">\n<base href=\"http://www.vdlande.com/VHDL/filedec.html\"><div style=\"margin:-1px -1px 0;padding:0;border:1px solid #999;background:#fff\"><div style=\"margin:12px;padding:8px;border:1px solid #999;background:#ddd;font:13px arial,sans-serif;color:#000;font-weight:normal;text-align:left\">This is Google&#39;s cache of <a href=\"http://www.vdlande.com/VHDL/filedec.html\" style=\"text-decoration:underline;color:#00c\">http://www.vdlande.com/VHDL/filedec.html</a>. It is a snapshot of the page as it appeared on Oct 26, 2009 15:47:46 GMT. The <a href=\"http://www.vdlande.com/VHDL/filedec.html\" style=\"text-decoration:underline;color:#00c\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration:underline;color:#00c\">Learn more</a><br><br><div style=\"float:right\"><a href=\"http://74.125.155.132/search?q=cache:1wiRMcZkss4J:www.vdlande.com/VHDL/filedec.html+site:www.vdlande.com+vhdl+file&amp;hl=en&amp;client=firefox-a&amp;gl=us&strip=1\" style=\"text-decoration:underline;color:#00c\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background:#ffff66;color:black;font-weight:bold\">vhdl</span>&nbsp;<span style=\"background:#a0ffff;color:black;font-weight:bold\">file</span>&nbsp;&nbsp;</div></div></div><div style=\"position:relative\">\n<HTML>\r\n<HEAD>\r\n<TITLE>VHDL Reference Guide - File Declaration</TITLE>\r\n</HEAD>\r\n<BODY BGCOLOR=\"mintcream\">\r\n\r\n<DIV ALIGN=CENTER>\r\n<TABLE BORDER=0 CELLPADDING=5>\r\n<CAPTION><B><b style=\"color:black;background-color:#a0ffff\">File</b> Declaration</B></CAPTION>\r\n<TR><TD COLSPAN=3><HR></TD></TR>\r\n<TR>\r\n<TD BGCOLOR=\"lightcyan\">Declaration</TD>\r\n<TD>---- used in ----></TD>\r\n<TD BGCOLOR=\"lightgreen\">Package<br>Process<br>Architecture<br>Procedure<br>Function</TD>\r\n</TR>\r\n</TABLE>\r\n\r\n<P><TABLE BORDER=0>\r\n<TR><TD><HR width=150></TD><TD>Syntax</TD><TD><HR width=150></TD></TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=center>\r\n<TABLE BORDER=1 CELLPADDING=5 WIDTH=40%>\r\n<TR>\r\n<TD><PRE><b style=\"color:black;background-color:#a0ffff\">file</b> logical_name : file_type is mode \"file_name\";</PRE></TD>\r\n</TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=CENTER>\r\nSee LRM sections 3.4, 4.3.2 and 14.3\r\n\r\n<P><TABLE BORDER=0 align=center>\r\n<TR><TD><HR width=150></TD><TD>Rules and Examples</TD><TD><HR width=150></TD></TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=center>\r\n<TABLE BORDER=1 CELLPADDING=5 WIDTH=90%>\r\n<TR>\r\n<TD>Usually, files of type <b>text</b> are used as they are portable\r\nbetween different <b style=\"color:black;background-color:#ffff66\">VHDL</b> simulators. The <b>mode</b> of the <b style=\"color:black;background-color:#a0ffff\">file</b> refers to\r\nthe direction of data flow, and may be either <b>in</b> (i.e. a\r\nread-only <b style=\"color:black;background-color:#a0ffff\">file</b>) or <b>out</b> (a write-only <b style=\"color:black;background-color:#a0ffff\">file</b>):\r\n<PRE>use std.textio.all;\r\npackage REF_PACK is\r\n  <b style=\"color:black;background-color:#a0ffff\">file</b> INFILE : text is in  \"in.dat\";\r\n  <b style=\"color:black;background-color:#a0ffff\">file</b> OUTFILE: text is out \"out.dat\";\r\nend REF_PACK;\r\n</PRE></TD>\r\n</TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=center>\r\n<TABLE BORDER=1 CELLPADDING=5 WIDTH=95%>\r\n<TR>\r\n<TD COLSPAN=2>Text files may be read by using the <b>endfile, readline</b> and\r\n<b>read</b> subprograms defined in the package <b>std.textio</b>:\r\n<PRE>READ_FILE: process\r\n  variable VEC_LINE : line;\r\n  variable VEC_VAR : bit_vector(0 to 7);\r\n  <b style=\"color:black;background-color:#a0ffff\">file</b> VEC_FILE : text is in \"stim.vec\";\r\nbegin\r\n  while not endfile(VEC_FILE) loop\r\n    readline (VEC_FILE, VEC_LINE);\r\n    read (VEC_LINE, VEC_VAR);\r\n    A_BUS <= VEC_VAR;\r\n    wait for 10 ns;\r\n  end loop;\r\n  wait;\r\nend process READ_FILE;\r\n</PRE></TD>\r\n</TR>\r\n<TR>\r\n<TD>The textio package <b>must</b> be made visible by the clause:<pre>\r\nuse std.textio.all;</pre></TD>\r\n<TD>Text files may be written by using the <b>write</b> and\r\n<b>writeln</b> subprograms, also defined in the textio package. Output\r\ndata may be formatted using optional parameters for <b>write</b> - see\r\nthe LRM section 14.3\r\n</TD>\r\n</TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=center>\r\n<TABLE BORDER=1 CELLPADDING=5 WIDTH=80%>\r\n<TR>\r\n<TD>Textio <b>read</b> and <b>write</b> procedures are defined for the\r\ntypes <b>bit, bit_vector, bolean, character, integer, real, string</b>\r\nand <b>time</b>. They are <b>not</b> compatible with user-defined types\r\nor std_logic_1164 types (although some vendors supply routines for the\r\nstd_logic_1164_types).</TD>\r\n</TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=CENTER>\r\n<TABLE BORDER=1 CELLPADDING=5 WIDTH=80%>\r\n<TR>\r\n<TD>Text files may be written by using the <b>writeln</b> and\r\n<b>write</b> subprograms defined in the package <b>std.textio</b>\r\n<PRE>\r\nWRITE_FILE: process (CLK)\r\n  variable VEC_LINE : line;\r\n  <b style=\"color:black;background-color:#a0ffff\">file</b> VEC_FILE : text is out \"results\";\r\nbegin\r\n  -- strobe OUT_DATA on falling edges \r\n  -- of CLK and write value out to <b style=\"color:black;background-color:#a0ffff\">file</b>\r\n  if CLK='0' then\r\n    write (VEC_LINE, OUT_DATA);\r\n    writeline (VEC_FILE, VEC_LINE);\r\n  end if;\r\nend process WRITE_FILE;\r\n</PRE></TD>\r\n</TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=center>\r\n<TABLE BORDER=1 CELLPADDING=5 WIDTH=60%>\r\n<TR>\r\n<TD>A <b style=\"color:black;background-color:#a0ffff\">file</b> (read or write) is opened in <b style=\"color:black;background-color:#ffff66\">VHDL</b> when the structure in which\r\nit is declared is elaborated. This means that files declared in\r\nprocesses or architectures are opened only once at the beginning of a\r\nsimulation. files declared in procedures are reopened at the beginning\r\nof the <b style=\"color:black;background-color:#a0ffff\">file</b> every time the procedure is elaborated (every time it is\r\nexecuted) and are closed every time the procedure finishes execution.\r\n</TD>\r\n</TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<DIV ALIGN=CENTER>\r\n<P><TABLE BORDER=0 align=center>\r\n<TR><TD><HR width=150></TD><TD>Synthesis Issues</TD><TD><HR width=150></TD></TR>\r\n</TABLE><P>\r\n</DIV>\r\n\r\n<b style=\"color:black;background-color:#a0ffff\">File</b> declarations and operations are not supported by logic synthesis\r\ntools.\r\n\r\n<DIV ALIGN=CENTER>\r\n<P><TABLE BORDER=0>\r\n<TR><TD><HR width=150></TD><TD>Whats New in '93</TD><TD><HR width=150></TD></TR>\r\n</TABLE><P>\r\n\r\n<b style=\"color:black;background-color:#ffff66\">VHDL</b>-93 allows files to be explicitly opened and closed during\r\nsimulation - this was not directly supported in <b style=\"color:black;background-color:#ffff66\">VHDL</b>-87. Consequently,\r\n<b><b style=\"color:black;background-color:#a0ffff\">file</b> declarations are not upwards-compatible between <b style=\"color:black;background-color:#ffff66\">VHDL</b>-87 and\r\n<b style=\"color:black;background-color:#ffff66\">VHDL</b>-93</b>. For instance, in <b style=\"color:black;background-color:#ffff66\">VHDL</b>-93 the equivalent declaration to the\r\nexample above would be:\r\n<PRE><b style=\"color:black;background-color:#a0ffff\">file</b> MYTEXT : text open read_mode is \"enum.txt\";</PRE>\r\nThe new attributes <b>'image</b> and <b>'value</b> make textio for\r\nenumerated types much easier - see <b>attributes</b>\r\n\r\n</DIV>\r\n\r\n<HR WIDTH=\"80%\">\r\n<div align=center>\r\n<a href=\"exits.htm\"><img border=0 src=\"../../images/left.gif\"></a>\r\n<a href=\"index.htm\"><img border=0 src=\"../../images/up.gif\"></a>\r\n<a href=\"for_loop.htm\"><img border=0 src=\"../../images/right.gif\"></a>\r\n</div>\r\n\r\n<HR WIDTH=\"80%\">\r\n</BODY>\r\n</HTML>\r\n", "encoding": "ascii"}