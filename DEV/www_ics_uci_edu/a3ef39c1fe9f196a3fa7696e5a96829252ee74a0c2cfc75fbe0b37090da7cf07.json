{"url": "https://www.ics.uci.edu/~taylor/ICS125_fq03/CandidateProjects.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r<html>\r<head>\r<title>Candidate ICS 125 Projects FQ2003</title>\r<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\r</head>\r\r<body>\r\r<h1>Candidate Projects, FQ 2003</h1>\r<p>\r<a href=\"#One\">Raytheon: Automatic Tracking Controller</a><br>\r<a href=\"#Two\">Raytheon Visualization Interface for Enhanced Analysis.</a><br>\r<a href=\"#Three\">Raytheon C++/Java Message Interoperability Tool.</a><br>\r<a href=\"#Four\">Raytheon Multilingual User Interface</a><br>\r<a href=\"#Five\">Raytheon On-line Content Management System</a>.<br>\r<a href=\"#Six\">Raytheon Web Services Implementation</a><br>\r<a href=\"#Seven\">UCI: The Web as Middleware<br>\r</a><a href=\"#Eight\">UCI: PACE #1: Coalition Forces Battlefield Management\rSystem</a><br>\r<a href=\"#Nine\">UCI PACE #2: Decentralized Calendaring</a><br>\r<a href=\"#Ten\">UCI PACE #3: Collaborative Information\rSpaces</a><br>\r<a href=\"#Unisys\">Unisys: System Telemetry Warehouse Monitor</a><br>\r<a href=\"#ScacchiWeb\">UCI:Scacchi: Web document compiler/composition system</a><br>\r<a href=\"#Scacchi3\">UCI:Scacchi: Virtual Interactive Development Environment for CS Education</a><br>\r<a href=\"#Wallace\">Wallace/IUSD: Developing a PDA System for Special Needs Students</a></p>\r<hr>\r<h3><a name=\"One\"></a>Raytheon: Automatic Tracking Controller. </h3>\r<p>Design and develop Java-based\r    automatic tracking controller component that is part of larger security system.\r  The controller will take geo-referenced position and velocity of subject tracks\r  and determine appropriate pointing commands for a tracking camera mounted on\r  a PTZ gimbal. Select and evaluate algorithms for camera control that will allow\r  smooth, predictive control of the camera given various scenarios of subject\r  movement.</p>\r<h3><br>\r  <a name=\"Two\"></a>Raytheon Visualization Interface for Enhanced Analysis. </h3>\r<p>Re-engineer an existing analysis component coded in Ada83 using OO design\r  and the C++ language. The existing analysis component produces numeric output\r  in a tabular form. Design and implement a visualization interface (e.g., using\r  browser-based thin-client) to enhance analysts' understanding of results.</p>\r<h3><br>\r  <a name=\"Three\"></a>Raytheon C++/Java Message Interoperability Tool. </h3>\r<p>Develop a tool that will accept a description of a message interface definition\r  via some defined Interface Description Language (IDL). The tool generates the<br>\r  corresponding C++ and Java classes to enable interoperability at the message\r  level between C++ and Java programs, including the logic for constructing the\r  actual messages that will be transmitted. This tool facilitates synchronization\r  between the two sides of the interface based on a simple interface definition.\r  The generated code should be portable and not dependent on any outside class\r  libraries, including CORBA libraries. The tool should be designed so that the\r  mapping from the IDL to the corresponding C++ and Java constructs is changeable\r  without modification\r  to the core of the tool.<br>\r</p>\r<h3><a name=\"Four\"></a>Raytheon Multilingual User Interface.</h3>\r<p> Enhance existing English-language user interface components, currently implemented\r  in Java/Swing, to allow real-time user selection of one of multiple languages\r  (including bi-directional support\r    for Arabic). Identify enhancements to the XML display description/data\r  mapping for these components in order to support multiple\r  languages. Evaluate services APIs to identify changes required to support multiple\r  languages. Implement prototype and evaluate display performance.<br>\r</p>\r<h3><a name=\"Five\"></a>Raytheon On-line Content Management System. </h3>\r<p>Identify candidate products and\r            tools for implementation of a web-based content management system.\r  The system will normalize user access to data sets hosted on a set of\r  diverse platforms and database products; facilitate user ability to supply\r  content; improve user\r  access to and awareness of available content through index and\r  search capabilities; and provide user and role-based access controls.\r  Implement\r  and evaluate a prototype system based on the selected products\r  and tools.</p>\r<h3><br>\r  <a name=\"Six\"></a>Raytheon Web Services Implementation. </h3>\r<p>Take set of existing tabular display components implemented in a J2EE framework\r  and re-implement using web services technologies. Evaluate HMI attributes of\r  the displays\r                and identify changes to enhance compatibility with web services\r  technologies. Evaluate and select appropriate Java technology for implementation\r  (e.g., JSP, servlets).\r  Document the design\r  patterns applied to achieve the implementation.</p>\r<h3><a name=\"Seven\"></a>UCI: The Web as Middleware</h3>\r<p><br>\r  Middleware is software that allows the interconnection of potentially heterogeneous\r    software components across process and network boundaries. Two of the most\r    prevalent 'flavors' of middleware are Remote Procedure Call (RPC) and Message-Oriented\r    Middleware (MOM). RPC is traditionally used for synchronous communication\r    between system components, while MOM supports asynchronous messaging. Each\r    of these types of middleware has advantages and disadvantages that make the\r    selection of one over the other a system-dependent process and each of them\r    have a variety of different competing implementations. The focus of this\r    project lies with middleware for component-based systems communicating using\r    asynchronous events; C2 architectures are an example of this class of system.<br>\r  Distributed event-based systems require a middleware communication mechanism\r  in order to transmit events from one part of the system to another. Given the\r  inherent event-based nature of such systems, MOM seems to be the most appropriate\r  selection. But, the use of one of the available 'industrial strength' middleware\r  solutions featuring similar functionality yet disparate implementations is\r  not necessarily the only approach. The Web is also a platform that can be used\r  as a simple but powerful middleware solution. Using the Web as a form of middleware\r  is not an entirely new idea: [1] discusses the possibilities of using the Common\r  Gateway Interface (CGI) as middleware between users and underlying applications,\r  while [2] presents an approach to mobile computing where applications are made\ravailable ubiquitously using the Web as middlware. </p>\r<p>In this project, students will implement a Web-based middleware solution for\r  C2 architectures; this will be a prototype implementation and a feasibility\r    study which examines the reality of using the Web as a MOM solution: web\r    servers will be used as the connectors which both send and receive asynchronous\r  messages in order to construct highly distributed event-based\rsystems.</p>\r<p>There are several advantages to using web servers as middleware connectors.\r  First, their simplicity &#710; compared to some middlware implementations,\r  web servers can be rather lightweight and simple to implement and maintain.\r  But, most importantly, web servers have the potential of providing\r  useful capabilities for a low cost: the ability of a web server\r  to arbitrarily manage its namespace, augment it with new information,\r  and present it to Web browsers can provide a very high level of visibility\r  into the operation of the middleware connector. For example, such\r  a connector can easily maintain a log of all messages received and sent\r  including\r  information about failures. Or, the URLs to which a particular\r  web server connector links to can be presented to users and dynamically\r  changed through HTML forms to easily implement a small measure\r  of dynamic system adaptation. Leveraging web connectors in this manner and\r  integrating them into an architecture-based approach to system development\ris, as far as I'm aware, a novel contribution.</p>\r Features and Criteria for Success\r <ul>\r  <li> A xADL 2.0 schema extension defining a C2 Web Connector.\r    This schema should make the URLs the connector links to and the types of\r    messages they transmit to each explicit.</li>\r  <li>A C2 connector wrapping around a lightweight, OTS web server. Students\r     must define and implement a clear interface encapsulating the\r    interaction of the C2 Connector with the web server &#710; this way, other\r  OTS servers can be used with less effort.\r  <ul>\r  <li>These connectors need to base their transmission behavior on the\r  architectural description, and update their behavior in response to the\r  description changing.</li>\r  <li>- These connectors must keep a log of all events received and transmitted.\r  </li></ul>\r   <li>A two-way translation from C2 events to an XML-based playload to be transmitted\r      over HTTP &#710; and vice versa.<br>\r    - This must be a seperate C2 component, which then tranmits the payload to\r    the Web Connector for transmission.<br>\r   </li>\r\t<li>Web front-end to C2 Web Connectors.<br>\r    - Users must be able to access the URL of the Web Connector and be provided\r      HTML pages which provide access to the following information (at least):<br>\r    - HTML formatted infromation from the C2&lt;-&gt;XML translator.<br>\r    - Logs of messages sent/received and errors.<br>\r    - The list of URLs the connector transmits to.<br>\r    - This list needs to be changeable (hint: use forms to gather input, modify\r    the architectural model, and update the inner workings accordingly).<br>\r\t</li>\r    <li>These components and connectors must be integrated into the C2/Archstudio\r      infrastructure for...<br>\r    </li>\r    <li>A demonstration of C2 Web Connectors using an existing C2 demonstration.<br>\r    - Students must distribute a previously non-distributed system to at least\r      three different network locations, and demonstrate its use. KLAX, or even\r      Archstudio itself could be used for this.<br>\r    </li>\r   <li> (Time permitting) Security for point-to-point connections.<br>\r    - Certificates? Students can explore this space on their own, and suggest\r    solutions.</li></li>\r   <br>\r   </li>\r  </ul>\r <p>Students working on this project will be exposed and acquire valuable experience\r  in the practical use of software architectures and accompanying research technologies\r  (C2, ArchStudio, c2.fw) as well as a collection of\r    popular and\rmarketable Web technologies (HTTP, HTML, XML, XSD, XSLT). </p>\r<p>Should they decide to pursue the security problem, they'll also acquire even\r  more marketable skills. Background preparation will also expose students to\rrelevant research literature.</p>\r<p>References<br>\r  [1] Faughnan, J.G. &#8222;Client-Server Computing: The Web as Middleware&#8240;,\rURL:<br>\rhttp://www.faughnan.com/papers/clservweb.html<br>\r[2] Vuong, S.T. And Li, N., &#8222;WebMC: A Web-Based Middleware for Mobile<br>\rComputing&#8240;, In International Conference on Internet Computing, 2000, p.<br>\r157-164.</p>\r<h3><a name=\"Eight\"></a>UCI: PACE #1: Coalition Forces Battlefield Management\rSystem</h3>\r<p>Battlefield management systems are a case of decentralized systems.&nbsp; In\r  a coalition of military forces, there are potentially different degrees of\r  trust between these coalitions.&nbsp; Information may only be partially shared\r  between battle forces or they may have differing degrees of reliability in\r  their reports.&nbsp; There may be no trusted, central, controlling authority\r  that determines what is 'right' and that enforces cooperation.&nbsp; Each independent\r  authority may have a wide range of assets that provide information that can\r  be relayed to others.&nbsp; Malicious forces may also attempt to compromise\r  the integrity of the communications between these well-meaning coalition parties.</p>\r<p>We are looking for a system that can model threats in such a system and evaluate\r  their effects.&nbsp; Information should be collected, evaluated, and presented\r  to an operator who can then issue commands to units present in the field.&nbsp; The\r  threats introduced can be direct attacks on the system, such as denial-of-service\r  attacks.&nbsp; These threats can also be indirect by the introduction of falsified\r  data.</p>\r<p>We already have a previously existing implementation of this application in\r  the C2 architectural style.&nbsp; However, this application lacks certain critical\r  features, and does not explicitly consider trust.&nbsp; We desire to extend\r  this application using PACE, a C2-based architectural style that explicitly\r  adds trust management.&nbsp; A framework designed to support applications in\r  PACE has already been written.&nbsp; While the framework is relatively new,\r  we believe it should provide guidance on how to write applications in this\r  style.</p>\r<p>We believe that this project offers several benefits:</p>\r<p>1.<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>An\r  introduction to component-based software architectures.</p>\r<p>2.<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>An\r  introduction to the effects of decentralization on a system.</p>\r<p>3.<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>An\r  introduction to the impact of trust and security on a system.</p>\r<p>Features: (a short bullet list of one-line descriptions of features or requirements)</p>\r<p>A coalition-based battlefield management system should:</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Conform\r  to a particular decentralized architecture style, PACE</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Extend\r  the previous C2 implementation, as desired</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Utilize\r  the PACE and C2 frameworks, and the ArchStudio environment</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Implement\r  multiple 'roles' in a system that fulfill the stated</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>obligations\r  (Each role may be on separate machines.)</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Allow\r  the introduction of threats into the system on demand</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Evaluate\r  the impact of these threats on the system</p>\r<h3><a name=\"Nine\"></a>UCI PACE  #2: Decentralized Calendaring</h3>\r<p>As social patterns emerge, groups often attempt to coordinate their activities.\r  One common task is scheduling meetings.&nbsp; However, these groups may be\r  formed on an ad hoc basis - there is no central authority that governs their\r  interaction.&nbsp; For example, students in a class may desire to hold meetings\r  related to their group project.&nbsp; Each user may have scheduled events that\r  they do not wish to share with others (i.e. a hot date on Friday night).&nbsp; However,\r  enough information must be communicated between these users to achieve coordination\r  to schedule a time that works 'best' for everyone.</p>\r<p>We are looking for a calendaring application that allows collaboration between\r  users who may or may not trust each other.&nbsp; Each user may have a variety\r  of calendars that they are only willing to share with other users. Additionally,\r  the system should be able to suggest times when all prospective attendees can\r  meet based on the visible information to the person creating the appointment.\r  Notifications (i.e. emails) should be transmitted when someone is scheduled\r  for an appointment.</p>\r<p>We desire to write this application in the PACE architectural style, a new\r  C2-based architectural style that introduces explicit trust management and\r  supports a variety of communication mechanisms.&nbsp; A framework designed\r  to support applications in PACE has already been written.&nbsp; While the framework\r  is relatively new, we believe it should provide guidance on how to write applications\r  in this style.</p>\r<p>We believe that this project offers several benefits:</p>\r<ol start=1 type=1>\r  <li>An introduction to component-based software architectures.</li>\r  <li>An introduction to the effects of decentralization on a system.</li>\r  <li>An introduction to creating effective user interfaces.</li>\r</ol>\r<p>Features: (a short bullet list of one-line descriptions of features or requirements)</p>\r<p>A decentralized calendaring system should:</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Conform\r  to a particular decentralized architecture style, PACE</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Utilize\r  the PACE and C2 frameworks, and the ArchStudio environment</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Provide\r  a usable interface that supports a variety of expertise levels</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Have\r  no central storage</p>\r<p>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Support\r  different degrees of notification and automation</p>\r<h3><a name=\"Ten\"></a>UCI PACE #3: Collaborative Information Spaces</h3>\r<p>Sharing information between people can be an important tool to increasing\r  productivity and knowledge.&nbsp; However, different sources of information\r  may represent varying levels of expertise about a topic.&nbsp; For example,\r  a person may be known to be a real expert on movies, but doesn't know a lot\r  about automobiles.&nbsp; Therefore, you may decide to place trust in his reviews\r  of movies, but not as much confidence about fixing your car. </p>\r<p>We desire the creation of a system that facilitates the creation, distribution,\r  annotation, and review of information without a central, trusted authority.&nbsp; This\r  information may be any free-form textual data. Users may encounter conflicting\r  reports about the evaluations of the reported data, and need the ability to\r  make accurate assessments of the correctness/worthiness of the data.</p>\r<p>We desire to write this application in the PACE architectural style, a new\r  C2-based architectural style that introduces explicit trust management and\r  supports a variety of communication mechanisms.&nbsp; A framework designed\r  to support applications in PACE has already been written.&nbsp; While the framework\r  is relatively new, we believe it should provide guidance on how to write applications\r  in this style.</p>\r<p>We believe that this project offers several benefits:</p>\r<p>1.<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>An\r  introduction to component-based software architectures.</p>\r<p>2.<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>An\r  introduction to the effects of decentralization on a system.</p>\r<p>3.<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>An\r  introduction to the concept of independent evaluations of data.</p>\r<p>Features: (a short bullet list of one-line descriptions of features or requirements)</p>\r<p>A collaborative information spaces system should:</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Conform\r  to a particular decentralized architecture style, PACE</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Utilize\r  the PACE and C2 frameworks, and the ArchStudio environment</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Provide\r  the ability to input notes about a topic or event</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Distribute\r  these notes to other users</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Allow\r  for the annotation of these notes by others (and redistribution)</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Provide\r  evaluations about the accuracy of these notes</p>\r<p class=CheckThis>-<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Provide\r  a usable interface for managing the received data</p>\r<h3 class=CheckThis><a name=\"Unisys\"></a>Unisys: System Telemetry Warehouse Monitor</h3>\r<p class=CheckThis>Summary - Provide\r  a GUI for monitoring system performance data stored in the System Telemetry\rWarehouse.</p>\r<p class=CheckThis><br>\r  Background &#8211; The System Telemetry Warehouse provides a consolidated system\r  log in the form of a data warehouse. The System Telemetry Warehouse can contain\r  data collected from traditional sources such as PerfMon counters and system\r  event logs. Additionally, information regarding application and system software\rcomponents can be collected.</p>\r<p class=CheckThis><br>\r  Desired Product &#8211; A graphical, time-based monitor of data contained in\r  the warehouse. When initiated, the monitor should show the values for a default\r  set of counters at the current time. Users should be able to change the counters\r  being displayed by selecting from a list of counters available in the warehouse.\r  They should also be able to change the default set of counters. Some counters\r  are aggregations, for example cpu usage for all processors. Users should be\r  able to drill down or expand such counters to their component values,\r  for example cpu usage for each processor. A slider should be provided allowing\r  users to change the time slice displayed. If the current time slice is displayed,\r  there should be an option to have it\r  updated automatically at periodic intervals. Users should also be able to start\r  at a prior point in time, and have the monitor move forward in an accelerated\ror &quot;time-lapse&quot; sort of mode.</p>\r<p class=CheckThis><br>\r  Deliverables<br>\r&#8721; \r  Monitor software<br>\r&#8721; \r  Installation instructions<br>\r&#8721; \r  Usage instructions<br>\r&#8721; \r  Design description<br>\r</p>\r<p class=CheckThis>Required &#8211; SQL Server 2000. The implementation language is at the students&#8217; discretion.<br>\r</p>\r<p class=CheckThis>Unisys provides &#8211; The System Telemetry Warehouse schema\r  and data collection subsystem for PerfMon counters and event logs. This includes\r  installation instructions\r  and help text.</p>\r<h3 class=CheckThis><a name=\"ScacchiWeb\"></a>Scacchi:Web document compiler/composition system</h3>\r<p class=CheckThis>Many people want to be able to create documents using materials/content\r  appearing in Web site pages. However, the Web is primarily a reading/browsing\r  medium,\r  rather than a writing medium. A Web document compiler is envisioned as an application\r  that allows a user to &quot;cut&quot; selected contents from a Web page (text,\r  images, embedded hyperlinks, mp3 files, etc.) and then &quot;paste&quot; the\r  selected content into a new document/Web page, that captures the selected content,\r  as well as the URL from where it was selected, information (anchors? tags?)\r  to indicate where the selected content begins and ends, and a timestamp when\r  it was cut-and-pasted as a way to maintain a relation to the source of the\r  document components. The composed document can also include new content entered/edited\r  by the user. The resulting document composition record (or &quot;build&quot; script)\r  might then function like a &quot;make&quot; file, allowing the user to rebuild\r  the composed document from its sources at a later time/place. This might allow\r  the user to then observe which document components have changed since a previous\r  compilation. Such a capability might then allow the user to also share their\r  document compilation scripts with their friends so that others could compile\r  the same document components, or compose new documents or modified versions\rof shared documents, when using the Web document compiler/composition system.</p>\r<p class=CheckThis>What do they really need to do? Build a simple compile/build\r  utility that processes an explicit representation of a multi-part or multi-component\r      document to produce\r  a compiled document.</p>\r<p class=CheckThis>What makes this project challenging? Users can already manually\r  compose a new document by selecting and cut-and-paste existing document contents.\r      This is\r      often not a repeatable or shareable technique, nor does it allow for new\r      versions of the composed document to be compiled/built on demand, given\r      that the source\r  content may have changed since the previous document build.</p>\r<p class=CheckThis>What makes it worth doing?<br>\r  More and more people want to create and shared Web-based documents whose\r        contents can be updated automaticaly, rather than manually. For instance,\r        if I want\r        to create a selection of sharable mp3/text files that can be burned on\r        a CD, then share my selection with a friend who wants most of the same\r        mp3/text\r        files,\r        but wants to add/remove one or more files, then it would be nice to have\r        easy way for sharing composable document scripts, rather than just sharing\r        the raw\r  mp3/text files.</p>\r<p class=CheckThis>&nbsp;</p>\r<h3 class=CheckThis><a name=\"Scacchi3\"></a>Scacchi: Virtual Interactive Development Environment for CS\rEducation</h3>\r<p class=CheckThis> What is it? An Interactive Development\r  Environment is usually an integrated collection of services, utilities, or\r  tools that\r      can be used to support the development of software application systems/programs.\r    Java-based IDEs like Visual Cafe, BlueJ for Java, and Rational Rose are large\r    commercial products, while NetBeans (from netbeans.org) and Eclipse (eclipse.org)\r    are free, open source IDEs implemented in Java, supporting the development\r    of Java applications. However, there are many other (open source) software\r    tools/utilities that may be useful for developing certain kinds of application\r    systems (e.g., database management systems, expert system shells, computer\r    graphics libraries, user interface development kits, computer-aided software\r    design, computer game engines, etc.). Furthermore, it now appears that it\r      should\r    be possible to find and collect dozens of open source tools, where one or\r      more tools might be of use in different CS undergraduate courses. </p>\r<p class=CheckThis>What do they really need to do? Find and collect a bunch of\r  open source tools. The tools may reside and operate on remote network servers,\r  rather than on\r  each user's computer.</p>\r<p class=CheckThis>Build a user interface that presents a end-user/student with\r  grouped sub-sets of tools associated with different CS course types (e.g.,\r  for a course in database\r  management, tools like MySQL, PostgreSQL, BerkeleyDB, and SAP-DB might be grouped,\r  together with tools for Java-SQL (or JODBC) dbms program development). In a\r  Virtual IDE, tool integration need only be realized at the user interface level,\r  (i.e., an &quot;integrated collection&quot;) rather than integrated via coding\r  at the API or middleware level as would be necessary in a conventional IDE.\r  So low-level systems programming may be avoided, since this is mostly a user\r  interface level, virtual IDE.</p>\r<p class=CheckThis><br>\r  What makes this project challenging? Supporting tools that execute on remote\r    servers. Managing the transfer of tool input/output between user-clients\r      and remote servers. Moving tool input/output in/out of distributed repositories/file\r    servers. Designing the user interface so that different collections of tools\r    can be organized and presented for different types of CS courses, and different\r  CS course instances.</p>\r<p class=CheckThis><br>\r  What makes it worth doing?<br>\r  Wouldn't it be nice to have one overall computing environment where all the\r      software tools you need to use in your CS courses could be found, collected,\r  organized, and used across the Internet.</p>\r<h3 class=CheckThis><a name=\"Wallace\"></a>Wallace/IUSD: <span\rstyle='font-size:18.0pt'><b>Developing a PDA System for Special Needs Students</b></span></h3>\r<p style='text-align:justify'>The Irvine Adult Transition Program (IATP) would\r  like to initiate a pilot project on the application of PDA technology to the\r  needs of developmentally disabled young adults who are transitioning from high\r  school to adult living and job situations.&nbsp; Three separate application\r  areas have been identified.&nbsp; Pilot projects will focus on applying or\r  developing software to meet the individual needs of a single student in each\r  application area.&nbsp; The results of these trial applications will be used\r  in future projects to expand the applications to be useful to a broader range\r  of students in the program and/or to target new application designs<span style='font-size:11.0pt'>.</span><span style='font-size:16.0pt'></span></p>\r<p><span style='font-size:14.0pt'><b>Description of the Irvine Adult Transition\r      Program (IATP)</b></span></p>\r<p>The Irvine Adult Transition Program (IATP) is a post-high school program for\r  developmentally disabled young adults who are between the ages of 19 and 22\r  years.&nbsp; The fifteen students in the program receive classroom instruction\r  in the morning at Irvine Valley College on life skills and vocational skills.&nbsp; In\r  the afternoon they work at<span style='font-size:14.0pt'> </span>various jobs\r  in Irvine with the support of job coaches.&nbsp; All of the students are currently\r  competent in the use of cell phone technology.&nbsp; Expanding the program\r  to include training in and use of PDA technology is a logical next step which\r  would be beneficial to students, staff, and employers.</p>\r<p>&nbsp;</p>\r<p align=center style='text-align:center'><img width=432 height=239\rsrc=\"image002.jpg\" v:shapes=\"_x0000_i1025\"></p>\r<p><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Irvine Adult Transition\r    Program (IATP) Students and Staff</b></p>\r<p><span style='font-size:14.0pt'><b>Potential PDA Applications to IATP</b></span></p>\r<p><span style='font-size:14.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>There\r  are initially three areas in which PDA technology and existing software which\r  IATP staff feel might be most useful to the needs of students in the IATP:\r  money management, memo or \u00d2to-do\u00d3 check lists and calendar and scheduling.&nbsp; </p>\r<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. <u>Money\r    management</u> should include such elements as calculating the expense of\r    an individual item or set of items including tax and/or tip; record keeping\r    of expenditures during an activity or over a period of time; storing and\r    managing bank account records; and long term budget planning and record keeping.</p>\r<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. <u>Memo\r    or \u00d2to-do\u00d3 check lists</u> should include systems for staff to enter lists\r    of job duties for students to perform in sequence and which students could\r    check-off as they were completed; lists or memos of behavioral goals for\r    students to monitor during the day; templates for regular record recording\r    by students of staff during the day concerning job or behavioral goals.</p>\r<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3. <u>Calendar\r    and scheduling</u> should begin with templates for transportation schedules\r    of an individual student to work and other activities during the day and\r    the week.&nbsp; It should also include a system for inputting the OCTA bus\r    schedules for those routes (from departure point to destination) for an individual\r    student.</p>\r<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Obviously,\r  there are many more complex and elaborate uses of the PDA technology and existing\r  or developed software which could benefit the students and the program.&nbsp; The\r  initial goal is to test the effectiveness for a few students with specific\r  goals as a guideline for future development.</p>\r<p><span style='font-size:14.0pt'><b>Proposed Steps in Pilot Study</b></span></p>\r<p>IATP staff has identified three students from the program whose needs will\r  serve as the model for purposes of developing pilot software in each of the\r  three application areas mentioned above (i.e., one student per application\r  area). Students from Dr. Taylor\u00d5s Computer Projects course at UCI will be invited\r  to select one of the three application areas.&nbsp; To avoid confusion, there\r  should be a maximum of three teams, each working on a separate application\r  area.</p>\r<p>The IATP, with the advice from UCI computer experts, will purchase the necessary\r  PDA\u00d5s for students and staff to use in the pilot project.&nbsp; It is expected\r  that one system will be selected for use, to avoid confusion and to allow the\r  eventual use of all applications by all IATP students as appropriate to their\r  needs.</p>\r<p>The UCI team(s) will meet with IATP staff and students at Irvine Valley College\r  to become acquainted with the program and with the specific student whose needs\r  are associated with the application they have chosen.&nbsp; UCI teams will\r  apply or develop software, test it with the IATP student and staff, modify\r  it if necessary on the basis of findings, and make proposals for further development\r  and applications. </p>\r</body>\r</html>\r", "encoding": "ISO-8859-1"}