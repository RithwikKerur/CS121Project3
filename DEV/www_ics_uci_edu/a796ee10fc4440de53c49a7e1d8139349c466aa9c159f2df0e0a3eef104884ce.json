{"url": "https://www.ics.uci.edu/~thornton/ics184/LabManual/SettingUpJava.html", "content": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC\n \"-//W3C//DTD XHTML 1.1//EN\"\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\n<link rel=\"stylesheet\" href=\"../course2.css\" type=\"text/css\" />\n\n<title>ICS 184 / EECS 116 Summer 2006, Setting Up Java On Your Computer</title>\n</head>\n\n<body>\n\n<div class=\"navbar\">\n\n<p>\nICS 184 / EECS 116 Summer 2006 |\n<a href=\"../index.html\">News</a> |\n<a href=\"../CourseReference.html\">Course Reference</a> |\n<a href=\"../Schedule.html\">Schedule</a> |\n<a href=\"../LabManual\">Lab Manual</a> |\n<a href=\"../LabManual/UsingNewsgroup.html\">ics.184 newsgroup</a> |\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\n</p>\n\n<hr />\n\n</div>\n\n<div class=\"header\">\n\n<p>ICS 184 / EECS 116 Summer 2006<br />\n   Setting Up Java On Your Computer</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">A word of warning</p>\n\n<p>One of the advantages of programming in Java is that it's possible to set up your own computer as a Java development environment easily and cheaply.  On the other hand, working in the lab has some genuine benefits, particularly for those of you who are fairly new to programming and/or fairly new to UCI.  In the lab, you'll find that help is more readily available when you get stuck, that your machine setup will generally be stable and designed well for the task of working on your assignments, and that you're free from the distractions of your home.</p>\n\n<p>Nevertheless, I'm aware that many of you, either out of want or need, will choose to do some percentage of your work at home.  What follows is enough information to turn your Windows-based or Macintosh computer into a Java development environment at little or no cost.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">What's in this document?</p>\n\n<p>Before you get started, be aware that this document only describes how to set up Java on a computer running Windows or Mac OS X.</p>\n\n<p>If you use Linux, J2SE 5.0 can be downloaded from <a href=\"http://java.sun.com/\">java.sun.com</a>, the same way it can for Windows.  You're on your own as far as installing it goes, but I assume you can handle that, or you wouldn't be Linux users.  :)</p>\n\n<p>The document is broken into separate sections detailing how to install Java on Windows and on Mac OS X; these sections follow.</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Setting up Java on Windows</p>\n\n<p class=\"subtitle\">Getting started</p>\n\n<p>First and foremost, you need a Java compiler and Java virtual machine, both of which must support Java 5.0.  A great option is to download the Java 2 Standard Edition (J2SE) JDK from <a href=\"http://java.sun.com/\">java.sun.com</a>.  <i>This is available absolutely free!</i>  The latest version is 5.0 Update 7.  Be sure you download the JDK and <i>not</i> the JRE!  The JDK includes a Java compiler (<b>javac</b>), a Java virtual machine (<b>java</b>), and all of the standard Java library components -- in other words, everything you need to write Java programs in a wide variety of problem domains, and more than enough firepower for the assignments we'll be giving you.  (The JRE is the Java Runtime Environment, which includes the necessary code to allow you to <i>run</i> Java programs, but not to write and compile them!  The JRE will not be sufficient for our work in this course.)</p>\n\n<p>Secondly, you'll need a <i>text editor</i>, which you'll use to write and edit your program code.  There are many inexpensive and/or free options available.  In the lab, we provide TextPad, which you can download from <a href=\"http://www.textpad.com/\">www.textpad.com</a>.  TextPad requires a modest registration fee, which you should pay if you plan to use it on a continuous basis.  You may be able to find free text editors, particularly those written in Java, at shareware/freeware download sites such as <a href=\"http://www.download.com/\">www.download.com</a>.</p>\n\n<p class=\"subtitle\">Installation: the easy part</p>\n\n<p>Presumably, your text editor will include an installation program to set it up and make it completely ready for your use.</p>\n\n<p>The JDK also includes an installation program, which places all of the files into the appropriate places and sets up some desktop shortcuts for you.  However, after running the installation program, you still won't be able to execute <b>javac</b> or <b>java</b>, without making a couple of modifications \"under the hood\" of your system.</p>\n\n<p>When asked what folder you should install the JDK into, the default will be:</p>\n\n<pre>\nC:\\Program Files\\Java\\jdk1.5.0\n</pre>\n\n<p>I suggest changing it to the following folder instead:</p>\n\n<pre>\nC:\\jdk5.0\n</pre>\n\n<p>The reason for this suggestion is that the next steps in the installation process will be simpler if the folder you choose has a shorter name that, importantly, has no spaces in it.</p>\n\n<p class=\"subtitle\">The (not all that) hard part: PATH and CLASSPATH</p>\n\n<p>You can execute programs from a Command Prompt (or, as Windows 95/98 call it, an \"MS-DOS prompt\") by simply typing their names, such as <b>javac</b> or <b>java</b>.  But there's a catch: Windows has to know where it can <i>find</i> these programs.  This is the job of the <b>PATH</b> environment variable.  PATH is a list of folders, separated by semicolons, in which Windows will look for a program whenever you try to execute one.</p>\n\n<p>Similarly, whenever the Java compiler or Java virtual machine need to be able to use a Java class (such as when you import a class from the Java library), the compiler or virtual machine needs to be able to know where to find it.  This is the job of the <b>CLASSPATH</b> environment variable.  CLASSPATH is a list of folders, separated by semicolons, in which the Java compiler or virtual machine will look for a Java class whenever it's trying to find one.</p>\n\n<p>So, to make the JDK work, you have to modify the PATH and CLASSPATH environment variables on your system, so that Windows will be able to find <b>javac</b> and <b>java</b>, and so that <b>javac</b> and <b>java</b> will be able to find all of the necessary Java classes.</p>\n\n<p>How you modify these variables depends on which version of Windows you're using.  In either case, I'll assume that you've installed the JDK into the folder I suggested during installation, which is <b>C:\\jdk5.0</b>.  If you installed it somewhere else, you'll need to use your installation directory instead of the one above.</p>\n\n<p><b>On Windows 2000 and XP.</b>  Right-click the <b>My Computer</b> icon on your desktop and select <b>Properties</b>.  Select the <b>Advanced</b> tab.  Click the <b>Environment Variables...</b> button.  Under \"System variables,\" find the <b>PATH</b> variable and add this to the <i>end</i> of it:</p>\n\n<pre>\n;C:\\jdk5.0\\bin\n</pre>\n\n<p>Then find the CLASSPATH variable.  If it doesn't exist (and it probably won't, if you've never used your system to develop Java code), click the <b>New...</b> button, specifying <b>CLASSPATH</b> as its name, and the following value:</p>\n\n<pre>\n.;C:\\jdk5.0\\lib\n</pre>\n\n<p>You may need to restart your system, or at least start up a new Command Prompt window, in order for these changes to take effect.</p>\n\n<p><b>On Windows 95, 98, and probably ME.</b>  (I say \"probably\" because I don't have a version of ME handy to test this with.)  On these versions of Windows, you can set the PATH and CLASSPATH by modifying the file <b>C:\\AUTOEXEC.BAT</b>.  Add the following two lines to the <i>end</i> of this file:</p>\n\n<pre>\nset PATH=%PATH%;C:\\jdk5.0\\bin\nset CLASSPATH=%CLASSPATH%;.;C:\\jdk5.0\\lib\n</pre>\n\n<p>You'll probably need to restart your system for these changes to take effect.</p>\n\n<p class=\"subtitle\">That's it!</p>\n\n<p>At this point, you should be good to go.  Enjoy!</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Setting up Java on Mac OS X</p>\n\n<p class=\"subtitle\">Getting started</p>\n\n<p>First, your Mac has to be running MacOS X 10.4.2 (Tiger) or later.  If you're running an earlier version, it's time to upgrade; the current Java won't run on your machine.  (On Mac OS X, you can find your version number by selecting About This Mac under the apple menu.)  If you're running MacOS 9, it's <i>really</i> time to upgrade &mdash; probably to a new machine.</p>\n\n<p class=\"subtitle\">Finding help if you get stuck during this process</p>\n\n<p>Because I'm not a Mac user, I unfortunately won't be able to help if you get stuck while following this process.  If you're having trouble, I'd encourage you to seek help from knowledgeable friends and/or other students, perhaps by posting a message to the <a href=\"UsingNewsgroup.html\">course newsgroup</a>.</p>\n\n<p class=\"subtitle\">Downloading and installing Java</p>\n\n<p>Download <a href=\"http://www.apple.com/support/downloads/java2se50release3.html\">the current version of J2SE 5.0</a> from Apple.  Double-click the installer package and follow the instructions to complete the installation.</p>\n\n<p class=\"subtitle\">Making J2SE 5.0 your default Java version</p>\n\n<p>MacOS X is perfectly happy to let different versions of Java coexist on your machine; installing J2SE 5.0 doesn't remove any earlier versions and doesn't even make J2SE 5.0 the default Java on your machine.</p>\n\n<p>To make J2SE 5.0 the default, follow these steps:</p>\n\n<ul>\n  <li>Open the Terminal application in the Utilities folder.  (When the terminal window opens up, you get what's called a \"Unix shell\" &mdash; a program that reads and responds to Unix commands you type.  This is the command line from which you'll be running all your Java programs, unless you start using an IDE.)</li>\n  <li>Copy the following two lines (using command-C or Copy on the Edit  \nmenu):\n<pre>\nalias javac=/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Commands/javac\nalias java=/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Commands/java\n</pre>\n</li>\n  <li>In the Terminal window, type the command\n<pre>\ncat >> .profile\n</pre>\n(be careful about the spacing and the period) and hit the Return key.</li>\n  <li>Now paste the two lines you just copied; then hit Return again.</li>\n  <li>Next, hit control-D (i.e., hold down the Ctrl key as you press  \nthe \"d\" key).</li>\n  <li>Then close the Terminal window (by command-W, by typing the  \ncommand <tt>logout</tt>, or by hitting control-D again.</li>\n</ul>\n\n<p class=\"subtitle\">Testing your Java installation</p>\n\n<p>To test your installation, first open a new Terminal window (by command-N or choosing New Shell on the File menu); then type this command:</p>\n\n<pre>\njava -version\n</pre>\n\n<p>You should see something like the following</p>\n\n<pre>\njava version \"1.5.0_05\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_05-83)\nJava HotSpot(TM) Client VM (build 1.5.0_05-48, mixed mode, sharing)\n</pre>\n\n<p>(If you see something without \"1.5\" and with \"1.4\" or some other  \nversion, then you'll need to get further assistance.)  One possible cause is that one or both of the two \"alias\" lines was copied with a carriage-return in the middle; each of the two lines needs to be unbroken.  A second possible cause is that you're using a different shell program than the current default.  To find out, choose Preferences from the Terminal menu in the Terminal application.  If you see <tt>/bin/bash</tt> in the first box, you're using the current default and you'll need to find an expert.  But if you see something else there, click the \"Execute this command\" button and type <tt>/bin/bash</tt> in the box.  Then quit Terminal, start it again, and check your Java version.)</p>\n\n<p>To test your Java version, you can also try to run this simple program:</p>\n\n<pre>\nimport java.util.*;\n\npublic class Java5Test\n{\n    public static void main(String[] args)\n    {\n        // This statement would make no sense to a pre-5.0 compiler\n        ArrayList&lt;String&gt; a = new ArrayList&lt;String&gt;();\n        a.add(\"Alex\");\n        a.add(\"is\");\n        a.add(\"happy\");\n\n        // This loop construct is also gibberish to a pre-5.0 compiler\n        for (String s : a)\n        {\n            System.out.println(s);\n        }\n    }\n}\n</pre>\n\n<p>If it runs successfully, you know you have J2SE 5.0 correctly installed.  If you see error messages, either (a) you copied or entered the program incorrectly or (b) your installation of J2SE 5.0 was not successful; in either case, you may need to seek additional assistance.</p>\n\n<p class=\"subtitle\">Running Java programs</p>\n\n<p>The procedure for running Java programs is described in detail elsewhere, but here is a synopsis:</p>\n\n<ul>\n  <li>Create a file named <tt>Java5Test.java</tt> that contains the  \nprogram text above.  You don't want to use a word processor (like  \nWord) for this; you want a <i>text editor</i> that will save the  \nfile in plain ASCII text format.  The program TextEdit that comes with your Mac would do; there are other, fancier programs that help you with indentation and coloring different parts of the text.</li>\n  <li>Save your file in a folder, ideally one created just for this program.</li>\n  <li>Launch a Terminal window and point it (\"change your directory\") to the folder where your program is stored.</li>\n  <li>Type the command <tt>javac Java5Test.java</tt> to compile your program.  If it returns silently, everything's fine; continue to the next step.  Otherwise, you'll see some error messages.  Use them as a guide to correct your code using your text editor, remembering to save the file when you're done.  Then repeat this step.</li>\n  <li>Once your program compiles successfully, type the command <tt>java Java5Test</tt> to run your program.  You should see some results.</li>\n</ul>\n\n<p class=\"subtitle\">What else you'll need to know</p>\n\n<p>If you're used to the Mac environment and not used to Unix or  \nother command-line processing systems, you'll want to learn at least  \na little Unix so you can find your way around.\nThose details are available elsewhere.</p>\n\n</div>\n\n<div class=\"history\">\n\n<hr />\n\n<ul class=\"nomarker\">\n  <li>Restructed by Alex Thornton to include information about setting up Java on Mac OS X, mostly written by David G. Kay, Winter 2006.</li>\n  <li>Brief information about Mac OS X and Linux added by Alex Thornton, Fall 2005.</li>\n  <li>A few minor changes by Alex Thornton, Winter 2005.</li>\n  <li>Several changes made (in light of the release of J2SE 5.0) by Alex Thornton, Fall 2004.</li>\n  <li>A few minor changes by Alex Thornton, Fall 2002.</li>\n  <li>Originally written by Alex Thornton for ICS 21 and ICS 22, Summer 2002.</li>\n</ul>\n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}