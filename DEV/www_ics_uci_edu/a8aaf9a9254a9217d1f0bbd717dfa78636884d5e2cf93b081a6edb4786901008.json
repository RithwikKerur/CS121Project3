{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node220.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Adding Externals</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Adding Externals\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html4893 HREF=\"node221.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4891 HREF=\"node215.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4885 HREF=\"node219.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4895 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4894 HREF=\"node221.html\"> User Initialisation</A>\r\n<B>Up:</B> <A NAME=tex2html4892 HREF=\"node215.html\"> External Language Interface</A>\r\n<B> Previous:</B> <A NAME=tex2html4886 HREF=\"node219.html\"> Argument Mapping</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION001930000000000000000> Adding Externals</A></H1>\r\n<P>\r\nTo create an external predicate,\r\nthe source file with its definition has to be compiled\r\nyielding an object file, the object file\r\nmust be <i> loaded</i> into the <A NAME=tex2html721 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  system, and the function must then be\r\nexplicitly <i> linked</i> to a Prolog predicate definition.\r\nThe source file with the external predicate definition must always\r\ninclude the line\r\n<blockquote> <PRE>#include &quot;external.h&quot;\r\n</PRE></blockquote>\r\nwhich contains the macros for Prolog interface.\r\nThe location of the file depends on the particular installation,\r\nnormally it is in the <tt> include</tt> subdirectory of the <A NAME=tex2html722 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n<P>\r\nlibrary directory.\r\nIf the <A NAME=tex2html723 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  include files are in /usr/local/eclipse/include, use\r\n<blockquote> <PRE>cc -c -I/usr/local/eclipse/include file.c\r\n</PRE></blockquote>\r\nto compile the source file and create the object file <tt> file.o</tt>.\r\n<A NAME=3288>&#160;</A>\r\n<P>\r\nA C object file may be loaded dynamically into the <A NAME=tex2html725 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  system by the\r\nuse of the predicate load/1<A NAME=tex2html726 HREF=\"footnode.html#3290\"><IMG ALIGN=BOTTOM ALT=\"gif\" SRC=\"http://www.ecrc.de/eclipse/new_icons//foot_motif.gif\"></A>. The goal <blockquote> <PRE>load(File)\r\n</PRE></blockquote> will\r\n<A NAME=3293>&#160;</A>\r\nload the object file <i> File</i> in this manner.\r\n<i> File</i> is a file specification of a\r\nfile in the machine environment, given as either an atom or a string.\r\nIt may also contain options to the dynamic loader.\r\nFor example to load the file\r\n<tt> functions.o</tt> specifying use of the mathematical library:\r\n<blockquote> <PRE>load(&quot;functions.o -lm&quot;)\r\n</PRE></blockquote>\r\nNote that when a debugger like <i> dbx</i>\r\n<A NAME=3300>&#160;</A>\r\nis to be used on the\r\nexternal predicate, the flag \r\n<blockquote> <PRE>&quot;-lg&quot;\r\n</PRE></blockquote> \r\nmust be specified in <b> load/1</b>,\r\nand <i> dbx</i> has to be started only after loading has been finished\r\nusing the process number <i> pid</i> of the <A NAME=tex2html729 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  process.\r\nIn this case it is also necessary to specify the file with\r\nthe new symbol table, which is always of the form\r\n<tt> /tmp/eclipse.pid.N</tt>, e.g.\r\n<A NAME=3307>&#160;</A>\r\n<blockquote> <PRE>dbx /tmp/eclipse.3562.0 3562\r\n</PRE>\r\n</blockquote>\r\nwhere <i> N</i> starts with zero and is incremented for each\r\ndynamic loading executed in this session.\r\nIf set, the environment variable ECLIPSELOADER specifies the loader\r\n<A NAME=3311>&#160;</A>\r\nto be used to dynamically load the object files.\r\nThe environment variable ECLIPSETMP may specify the directory\r\n<A NAME=3312>&#160;</A>\r\nto be used instead of /tmp to store the symbol tables.\r\n<P>\r\nOn newer UNIX platforms with shared library support, the dynamic loading\r\nfeature is built on top of them.\r\nOn these systems, the C source has to be compiled into a shared object,\r\ne.g. using\r\n<blockquote> <PRE>cc -G -c -I/usr/local/eclipse/include -o file.so file.c\r\n</PRE></blockquote>\r\nand then be loaded with\r\n<blockquote> <PRE>load(&quot;functions.so&quot;)\r\n</PRE></blockquote>\r\nIn this case, the <b> load/1</b> built-in does not accept nor need any options.\r\n<P>\r\nThe compiler flags that are necessary for producing shared object files\r\nvary for different machines and C compilers.\r\nAs a guideline, refer to the Makefile in the corresponding\r\nmachine-specific subdirectory of the boot-subdirectory of the\r\n<A NAME=tex2html733 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  installation directory.\r\n<P>\r\nOn UNIX systems that do not support dynamic loading of object files\r\nit is necessary to link the object file with the supplied file <i> sepia.o</i>,\r\nwhich is normally in the <tt> boot</tt> subdirectory of the installed <A NAME=tex2html734 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  system.\r\nThe result of the loading is then an executable program which contains\r\nthe <A NAME=tex2html735 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  system together with the external predicates.\r\nThis is achieved e.g. by the command\r\n<blockquote> <PRE>cc -I/usr/local/eclipse/include ext_file.c\r\n                    /usr/local/eclipse/boot/sepia.o -o myeclipse\r\n</PRE>\r\n</blockquote>\r\nor (which is easier) by modifying the Makefile in the <tt> boot</tt>\r\nsubdirectory of the <A NAME=tex2html736 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  installation directory which will\r\nalso boot the system and create\r\na user executable binary.\r\nWhen booting, the environment variable ECLIPSEDIR has to be set\r\n<A NAME=3323>&#160;</A>\r\nto the <A NAME=tex2html738 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  installation directory in the same way as when installing\r\n<A NAME=tex2html739 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  from the delivery tape.\r\n<P>\r\nOnce the object file containing the C function has been loaded, one\r\nof the predicates <b> external/2</b> and <b> b_external/2</b>\r\n(backtracking external) is used\r\n<A NAME=3326>&#160;</A>\r\n<A NAME=3327>&#160;</A>\r\n<A NAME=3328>&#160;</A>\r\nto link it with a predicate definition. If the function implements a\r\ndeterministic procedure, the predicate <b> external/2</b> is used.\r\nIf the function implements a non deterministic procedure, the predicate\r\n<b> b_external/2</b> is used. Both take the same form of arguments. A call\r\nto <b> external/2</b> takes the form\r\n<blockquote> <PRE>external(Name/Arity, CName)\r\n</PRE></blockquote>\r\n<i> Name</i> is the name of the Prolog predicate which is to be associated\r\nwith the function. <i> Arity</i> is the arity of this predicate; this will be\r\nnumerically half of the arity of the C function, for the reason explained\r\nearlier. <i> CName</i> is the name of the C function. The system will prefix\r\nthe underscore character to this name in order to find the\r\nname of the object code function loaded by <b> load/1</b>.\r\nThus to link the\r\nC function <tt> p_long</tt> which is held in the object file <tt> bam.o</tt> to a non\r\ndeterministic predicate <b> long/2</b> we use\r\n<blockquote> <PRE>load(&quot;bam.o&quot;), b_external(long/2, &quot;p_long&quot;)\r\n</PRE></blockquote>\r\n<P>\r\nSince deterministic externals use a different calling convention than Prolog\r\npredicates, it is necessary to inform the compiler <i> before</i> it compiles\r\nthe first call to a deterministic external.\r\nOtherwise the system will issue an &quot;inconsistent redefinition&quot; error.\r\nUsually this is no problem since the <b> external/2</b> declaration is given\r\ninitially.\r\nIf this is not wanted, it is at least necessary to submit the appropriate\r\nforward declaration (<b> external/1</b> or <b> b_external/1</b>) before the first\r\noccurrence of the predicate as a subgoal.\r\nWhich calling convention the system assumes for a given predicate can be\r\nchecked by looking at the <tt> call_type</tt> flag (using <b> get_flag/3</b> or\r\n<b> pred/1</b>). The possible values are <tt> prolog</tt>, <tt> external</tt> and\r\n<tt> b_external</tt>.\r\n<P>\r\nOn all machines the file <i> sepia.o</i> is supplied in the <i> boot</i>\r\nsubdirectory of the <A NAME=tex2html743 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  installation directory, and this file\r\ncan be used to obtain an executable <A NAME=tex2html744 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  with statically linked\r\n<A NAME=3355>&#160;</A>\r\n<A NAME=staticlink>&#160;</A>\r\nexternal files.\r\nTo link the executable <A NAME=tex2html746 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n , the file <i> libsepia.a</i>\r\nis also necessary.\r\nTo make a <A NAME=tex2html747 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  with KEGI, it is also necessary to link one of the files\r\n<i> tkegi.o</i> for an <A NAME=tex2html748 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n<P>\r\nthat works only with <i> kegitool</i>\r\nor <i> xkegi.o</i> for the\r\nX11 version of KEGI.\r\nAll these files are also available in the <i> boot</i>\r\ndirectory.\r\nThus, to make a <A NAME=tex2html749 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  version with external file <tt> ext_file.c</tt>\r\nand X11 KEGI, use the command\r\n<blockquote> <PRE>cc -I/usr/local/eclipse/include ext_file.c \\\r\n    /usr/local/eclipse/boot/sepia.o /usr/local/eclipse/boot/xkegi.o \\\r\n    /usr/local/eclipse/boot/libsepia.a -o myeclipse\r\n</PRE>\r\n</blockquote>\r\nSuch an executable <tt> myeclipse</tt> is not booted, and so when it is started,\r\nit will try to read boot files from the <i> boot</i> directory.\r\nTo start an unbooted <A NAME=tex2html750 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n , the environment variable ECLIPSEDIR\r\n<A NAME=3367>&#160;</A>\r\nmust be set to the <A NAME=tex2html752 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  installation directory, usually /usr/local/eclipse.\r\nNormally, after booting, a saved state is produced either with the\r\n-s option or with the <b> save/1</b> or <b> save_program/1</b> predicate.\r\n<P>\r\n<BR> <HR>\r\n<UL> \r\n<LI> <A NAME=tex2html4896 HREF=\"node221.html#SECTION001931000000000000000\"> User Initialisation</A>\r\n</UL>\r\n<BR> <HR><A NAME=tex2html4893 HREF=\"node221.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4891 HREF=\"node215.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4885 HREF=\"node219.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4895 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4894 HREF=\"node221.html\"> User Initialisation</A>\r\n<B>Up:</B> <A NAME=tex2html4892 HREF=\"node215.html\"> External Language Interface</A>\r\n<B> Previous:</B> <A NAME=tex2html4886 HREF=\"node219.html\"> Argument Mapping</A>\r\n<BR> <HR> <P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}