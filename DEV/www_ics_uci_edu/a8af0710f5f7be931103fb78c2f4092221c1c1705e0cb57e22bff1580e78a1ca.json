{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/compiling-unix.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n\n  <!-- Favicon -->\n  <link href=\"images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n\n  <!-- Page title -->\n  <title>VLFeat - Download > Compiling > Compiling on UNIX-like platforms</title>\n\n  <!-- Stylesheets -->\n  <link href=\"vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  \n\n  <!-- Scripts-->\n  \n\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"index.html\">Home</a>\n<ul>\n<li><a href=\"about.html\">About</a>\n</li>\n<li><a href=\"license.html\">License</a>\n</li>\n</ul></li>\n<li class='active'><a href=\"download.html\">Download</a>\n<ul>\n<li><a href=\"install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"xcode.html\">Xcode</a>\n</li>\n<li><a href=\"vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"gcc.html\">g++</a>\n</li>\n</ul></li>\n<li class='active'><a href=\"compiling.html\">Compiling</a>\n<ul>\n<li class='active' class='activeLeaf'><a href=\"compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li><a href=\"overview/tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"overview/frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"overview/covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"overview/hog.html\">HOG features</a>\n</li>\n<li><a href=\"overview/sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"overview/dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"overview/liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"overview/mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"overview/imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"overview/encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"overview/gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"overview/kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"overview/aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"overview/quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"overview/slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"overview/svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"overview/kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"overview/plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"overview/utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"overview/ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"overview/hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"applications/apps.html\">Applications</a>\n</li>\n<li><a href=\"doc.html\">Documentation</a>\n<ul>\n<li><a href=\"matlab/matlab.html\">MATLAB API</a>\n</li>\n<li><a href=\"api/index.html\">C API</a>\n</li>\n<li><a href=\"man/man.html\">Man pages</a>\n<ul>\n<li><a href=\"man/mser.html\">mser</a>\n</li>\n<li><a href=\"man/sift.html\">sift</a>\n</li>\n<li><a href=\"man/vlfeat.html\">vlfeat</a>\n</li>\n</ul></li>\n</ul></li>\n</ul>\n\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"download.html\">Download</a></span><span class='separator'>></span><span class='page'><a href=\"compiling.html\">Compiling</a></span><span class='separator'>></span><span class='page'><a href=\"compiling-unix.html\">Compiling on UNIX-like platforms</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n        \n\n<div class='toc'>\n<h3>Table of Contents</h3><ul><li class=\"level1\"><a href=\"#id-498\">General instructions</a></li>\n</ul>\n<ul><ul><li class=\"level2\"><a href=\"#id-509\">Compiling MATLAB support</a></li>\n</ul>\n</ul>\n<ul><ul><li class=\"level2\"><a href=\"#id-522\">Compiling Octave support</a></li>\n</ul>\n</ul>\n<ul><li class=\"level1\"><a href=\"#id-526\">Mac OS X troubleshooting</a></li>\n</ul>\n<ul><ul><li class=\"level2\"><a href=\"#id-527\">OS X 10.9 Mavericks, Xcode 5, clang, and GCC</a></li>\n</ul>\n</ul>\n<ul><ul><li class=\"level2\"><a href=\"#id-534\">OS X 10.6 Snow Leopard, 64-bit, and MATLAB 2009b.</a></li>\n</ul>\n</ul>\n</div><!-- Table of contents -->\n\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"id-498\">General instructions</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>Compiling for UNIX-like platforms (e.g. GNU/Linux, Mac OS X)\nassumes that the standard GNU toolchain is available. In particular,\nwhile compilers other than GCC can be used, the compilation scripts\nrequire GNU/make.</p>\n\n<p>To compile the library, it is usually sufficient to change to\nVLFeat root directory, denoted <code/>VLFEATROOT</code> in the\nfollowing, and type <code/>make</code>:</p>\n\n<div class=\"highlight\"><pre><span class=\"nv\">$ </span><span class=\"nb\">cd </span>VLFEATROOT\n<span class=\"nv\">$ </span>make\n</pre></div>\n\n\n<p>The make script attempts to automatically detect the host\narchitecture and configure itself accordingly. If the architecture is\nnot detected correctly, it can be specified manually. For instance</p>\n\n<div class=\"highlight\"><pre><span class=\"nv\">$ </span>make <span class=\"nv\">ARCH</span><span class=\"o\">=</span>glnx86\n</pre></div>\n\n\n<p>compiles for GNU/Linux 32-bit. <code/>make help</code> can be used\nto obtain a list of other useful options. You can also use <code/>make\ninfo</code> to obtain a list of the configuration parameters used by\nthe Makefile, which might allow you do debug any potential issue.</p>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h2 id=\"id-509\">Compiling MATLAB support</h2>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>In order for MATLAB support to be compiled, the\nMATLAB <code/>mex</code> script must be in the current path. If it is\nnot, its location must be passed to <code/>make</code> as\nfollows. First, determine MATLAB's root directory by running a MATLAB\nsession and issuing the <code/>matlabroot</code>\ncommand. Let <code/>MATLABROOT</code> denote the returned path\n(e.g. <code/>/Applications/MATLAB_R2009b.app/</code>). The <code/>mex</code>\nscript is usually located in <code/>MALTABROOT/bin/mex</code>. Then run\nthe compilation with the command</p>\n\n<div class=\"highlight\"><pre><span class=\"nv\">$ </span>make <span class=\"nv\">MEX</span><span class=\"o\">=</span>MATLABROOT/bin/mex\n</pre></div>\n\n\n<p>VLFeat must be compiled for the architecture used by MATLAB (run\nMATLAB's <code/>computer</code> command to obtain this information). On\nMac OS X it is often necessary to turn on 64-bit support explicitly by\nsetting <code/>ARCH=maci64</code> as both the 32 and 64 bit versions\nare plausible targets on 64-bit machines.</p>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h2 id=\"id-522\">Compiling Octave support</h2>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>Octave support is still experimental. Similarly to MATLAB, Octave\nrequires compiling MEX files. This can be turned on by passing to make\nthe path to the <code/>mkoctfile</code> command:</p>\n\n<div class=\"highlight\"><pre><span class=\"nv\">$ </span>make <span class=\"nv\">MKOCTFILE</span><span class=\"o\">=</span>/path/to/mkoctfile\n</pre></div>\n\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"id-526\">Mac OS X troubleshooting</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h2 id=\"id-527\">OS X 10.9 Mavericks, Xcode 5, clang, and GCC</h2>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>Recent changes to Mac OS X toolkit that ships with Xcode have made\ncompilation of VLFeat slightly more complex. Out of the box, Xcode 5.0\non Mac OS X Mavericks, for example, incorporates the clang compiler\nbut not the GCC compiler. While VLFeat has been updated to use clang\nin this case, it is worth noting that this compiler does not yet\nsupport the OpenMP standard, meaning that multi-core computations\nwould be disabled in this case.</p>\n\n<p>Compiling OpenMP can be achieved by using the GCC compiler, for\nexample obtaining it from MacPorts. However, anything more recent that\nGCC 4.2 will use the MacPorts runtime (C and C++). Since MATLAB links\nto the OS X native C and C++ runtime, this breaks the compatibility of\nVLFeat MEX files with MATLAB. In particular, while VLFeat does not use\nC++, MEX files do as the MEX API is coded in C++ internally (in\nparticular MEX files are coded with the <code/>-fexception</code>\noption as MEX API calls can throw exceptions, even though they look\nlike regular C functions). In short, mixing C++ runtimes will cause\nMATLAB MEX files to crash every time an error is generated.</p>\n\n<p>The easiest solution at present is to use\nthe <code/>gcc-apple-4.2</code> from MacPorts. Unfortunately, this\nversion does not support AVX instructions, but supports OpenMP and\ncreates binaries that are MATLAB compatible.</p>\n\n<div class=\"highlight\"><pre><span class=\"c\"># Compile VLFeat in a manner compatible with MATLAB and OpenMP support</span>\n<span class=\"nv\">$ </span>sudo port install apple-gcc42 <span class=\"c\"># Install MacPort&#39;s distribution of apple-gcc-42</span>\n<span class=\"nv\">$ </span>make <span class=\"nv\">CC</span><span class=\"o\">=</span>/opt/local/bin/gcc-apple-42 <span class=\"c\"># compile VLFeat using MacPort&#39;s GCC</span>\n</pre></div>\n\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h2 id=\"id-534\">OS X 10.6 Snow Leopard, 64-bit, and MATLAB 2009b.</h2>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>MATLAB 2009b for Snow Leopard has added 64 bit mex support and a\ncorresponding extension <code/>mexmaci64</code>. VLFeat now supports\ncompiling for this platform, but the architecture must be specified\nmanually when compiling, either like:</p>\n\n<div class=\"highlight\"><pre><span class=\"nv\">$ </span>make <span class=\"nv\">ARCH</span><span class=\"o\">=</span>maci64\n</pre></div>\n\n\n<p>or</p>\n\n<div class=\"highlight\"><pre><span class=\"nv\">$ </span>make <span class=\"nv\">ARCH</span><span class=\"o\">=</span>maci\n</pre></div>\n\n\n<p>Unfortunately, MATLAB 2009b's <code/>mex</code> script has a bug\nthat must be manually fixed in order for this procedure to work\ncorrectly. It is recommend to make backup of the <code/>mex</code>\nscript before attempting this. Th fix the bug, edit the\n<code/>MATLABROOT/bin/mex</code> script by cutting the line:</p>\n\n<div class=\"highlight\"><pre>get_arch    <span class=\"c\"># Call $MATLAB/bin/util/arch.sh</span>\n</pre></div>\n\n\n<p>and pasting it after the processing of options:</p>\n\n<div class=\"highlight\"><pre>...\n<span class=\"nb\">shift</span>\n<span class=\"k\">done</span>\n\n<span class=\"c\">#PASTE get_arch call here</span>\nget_arch    <span class=\"c\"># Call $MATLAB/bin/util/arch.sh</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$v7_compat</span> -eq <span class=\"m\">1</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"nv\">fc_flags</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"nv\">$fc_flags</span><span class=\"s2\"> -DMX_COMPAT_32&quot;</span>\n...\n</pre></div>\n\n\n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n ", "encoding": "ascii"}