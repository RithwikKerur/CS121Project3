{"url": "https://www.ics.uci.edu/~pattis/ICS-33/lectures/ebnfforpython.txt", "content": "\t\tEBNF: Lecture vs. Python Documentation\r\n\r\nThere are a few different typographic conventions used in the EBNF lecture,\r\ncompared to the EBNF used in actual Python Documentation. Here is a short\r\nsummary of the six differences, and a short and large example.\r\n\r\n1. Write <= (separating LHS from RHS) as ::=\r\n2. Italicized names (of rules) are just written as names\r\n3. Boxed characters (which stand for themselves) are written within quotes\r\n4. () do not stand for themselves; they are used for grouping (see rule 5)\r\n   write \"(\" and \")\" for parentheses in the EBNF used for Python Documentation\r\n5. {item} is written as item*; {item1 ... itemN} is written (item1 ... itemN)*\r\n6. Writing + superscript means repeat 1 or more times\r\n\r\nShort Example:\r\n\r\n  digit   ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\r\n  integer ::= [\"+\"|\"-\"]digit digit*\r\n\r\nthe last rule can be written as either:\r\n  integer ::= [\"+\"|\"-\"]digit(digit)*\r\nor\r\n  integer ::= [\"+\"|\"-\"](digit)+\r\n\r\nOnline:\r\n\r\n  See https://docs.python.org/3/reference/simple_stmts.html\r\n  \r\n  Questions: is it legal in Python to write a = b = 0\r\n             Also, see the import statement (and all its forms)\r\n\r\n\r\nLarge Example:\r\n\r\nThis is from Section 6.1.3.1 Format Specification Mini-Language of the Python\r\nLibrary. Format strings contain \u201creplacement fields\u201d surrounded by curly braces\r\n{}. Anything that is not contained in braces is considered literal text, which\r\nis copied unchanged to the output. If you need to include a brace character in\r\nthe literal text, it can be escaped by doubling: {{ and }}.\r\n\r\nThe grammar for a replacement field is as follows:\r\n\r\nreplacement_field ::=  \"{\" [field_name] [\"!\" conversion] [\":\" format_spec] \"}\"\r\nfield_name        ::=  arg_name (\".\" attribute_name | \"[\" element_index \"]\")*\r\narg_name          ::=  [identifier | integer]\r\nattribute_name    ::=  identifier\r\nelement_index     ::=  integer | index_string\r\nindex_string      ::=  <any source character except \"]\"> +\r\nconversion        ::=  \"r\" | \"s\" | \"a\"\r\n\r\nformat_spec ::=  [[fill]align][sign][#][0][width][,][.precision][type]\r\nfill        ::=  <a character other than '{' or '}'>\r\nalign       ::=  \"<\" | \">\" | \"=\" | \"^\"\r\nsign        ::=  \"+\" | \"-\" | \" \"\r\nwidth       ::=  integer\r\nprecision   ::=  integer\r\ntype        ::=  \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" |\r\n                 \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\"\r\n", "encoding": "utf-8"}