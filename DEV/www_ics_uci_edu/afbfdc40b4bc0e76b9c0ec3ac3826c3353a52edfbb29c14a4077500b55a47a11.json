{"url": "https://www.ics.uci.edu/~alspaugh/cls/shr/graph.html", "content": "<?xml version='1.1'?>\n<!DOCTYPE html\n     PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'\n     'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>\n<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>\n<head>\n  <title>Graphs</title>\n  <meta name='Author' content='Thomas A. Alspaugh'/>\n  <meta name='Description' content=\"Graphs\"/>\n  <meta http-equiv='content-type' content='text/html; charset=ISO-8859-1'/>\n  <meta http-equiv='Content-Style-Type' content='text/css'/>\n  <link href='../../alspaugh-uci.css' rel='stylesheet' type='text/css'/>\n  <!-- <link href='../alspaugh-uci-cls.css' rel='stylesheet' type='text/css'/> -->\n  <style type='text/css'>\n    @media screen {\n      body     {  background: url(\"img/bg-graph.png\") repeat-y;  }\n      #TMain   {  margin-left: 10.00em;  }\n    }\n  </style>\n</head>\n<body>\n\n<div id='TBg'>\n\n<div id='THeader'>\nGraphs\n<span class='newUrl'><a href='https://thomasalspaugh.org/pub/fnd/graph.html'\n  >thomasalspaugh.org/pub/fnd/graph.html</a></span>\n</div>\n\n<div id='TLinks1' class='Links'> <!-- - - - - - - - - - - - - - - - - - - - -->\n<p>  <a class='sc' href='../../index.html'>Home</a>\n</p>\n<div class='hr'> </div>\n<p>  <a href='index.html'>Foundations home</a>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='set.html'>Sets</a><br/>\n<a href='relation.html'>Relations</a><br/>\n<a href='correspondence.html'>Correspondences</a><br/>\n<a href='orderedSet.html'>Ordered Sets</a><br/>\n<a href='lattice.html'>Lattices</a><br/>\n<a href='graph.html'>Graphs</a><br/>\n<a href='powerset.html'>Powersets</a><br/>\n<a href='binaryString.html'>Binary Strings</a><br/>\n<a href='logicConcepts.html'>Logic</a><br/>\n<a href='allen.html'>AIA</a><br/><!-- -spell AIA -->\n<a href='greek.html'>Greek</a><br/>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='glossaryExternal.html'>Glossary</a><br/>\n<a href='goodAbstract.html'>Abstracts</a><br/>\n<a href='argument.html'>Argument</a><br/>\n<a href='inquiryCycle.html'>Inquiry Cycle</a><br/>\n<a href='hohfeld.html'>Legal Relations</a><br/>\n<a href='goodPresentation.html'>Presentations</a><br/>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='quickStart.html'>Elicitation</a><br/>\n<a href='ontology.html'>Glossaries</a><br/>\n<a href='goal.html'>Goals</a><br/>\n<a href='istar.html'>i*</a><br/>\n<a href='SCR.html'>SCR</a><br/>\n<a href='tracing.html'>Tracing</a><br/>\n</p>\n<div class='hr2'> </div>\n<p>\n<a href='alloy.html'>Alloy</a><br/>\n<a href='msc.html'>MSCs</a><br/>\n<a href='regularExpression.html'>Regular Exprs.</a><br/>\n</p><!-- -spell MSCs Exprs -->\n<div class='hr2'> </div>\n<p>\n<a href='java-designPattern.html'>Design Patterns</a><br/>\n<a href='javadoc.html'>Javadoc</a><br/>\n<a href='java-package.html'>Java Packages</a><br/>\n<a href='java-type.html'>Java Types</a><br/>\n</p>\n<div class='hr2'> </div>\n<p>\n<a href='html.html'>(X)HTML</a><br/>\n<a href='xmlSchema.html'>XML Schemas</a><br/>\n<a href='xslt.html'>XSLT</a><br/>\n</p><!-- -spell XSLT -->\n</div>\n\n\n<!-- No right column -->\n<div id='TMain'><!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->\n<!--xhtml -y -->\n\n\n<p>\nA <dfn>directed graph</dfn> is\na set of nodes (or vertices)\nand\na set of edges (disjoint from the nodes),\nwhere each edge has an initial node and a terminal node.&nbsp;\n</p>\n<p>\nMore formally,\na directed graph is a quadruple\n(<span class='m'>V</span>, <span class='m'>E</span>, <span class='M'>&alpha;</span>, <span class='M'>&beta;</span>), where\n</p>\n<ul>\n  <li> <span class='m'>V</span> is a (possibly infinite) set of nodes,\n  </li>\n  <li> <span class='m'>E</span> is a set of edges, disjoint from\n    <span class='m'>V</span>,\n  </li>\n  <li> <span class='M'>&alpha;</span> and <span class='M'>&beta;</span> are two mappings from each edge\n    <span class='m'>e</span> <span class='M'>&isin;</span> <span class='m'>E</span>,\n    with <span class='M'>&alpha;</span>(<span class='m'>e</span>) <span class='M'>&isin;</span> <span class='m'>V</span>\n    the <dfn>origin</dfn>\n    (or <dfn>initial vertex</dfn>) of <span class='m'>e</span>\n    and  <span class='M'>&beta;</span>(<span class='m'>e</span>)  <span class='M'>&isin;</span> <span class='m'>V</span>\n    the <dfn>terminal</dfn>\n    (or <dfn>end vertex</dfn>) of <span class='m'>e</span>.&nbsp;\n    <span class='M'>&alpha;</span>(<span class='m'>e</span>) and <span class='M'>&beta;</span>(<span class='m'>e</span>)\n    are the\n    <dfn>endpoints</dfn> of <span class='m'>e</span>.&nbsp;\n  </li>\n</ul>\n\n<p>\nAn <dfn>undirected graph</dfn> is\na set of nodes (or vertices)\nand\na set of edges (disjoint from the nodes),\nwhere each edge has two endpoints, not distinguished from each other.&nbsp;\n</p>\n<p>\nMore formally,\nan undirected graph is a triple\n(<span class='m'>V, E,</span> <span class='M'>&delta;</span>), where\n</p>\n<ul>\n  <li> <span class='M'>&delta;</span> is a mapping from each edge <span class='m'>e</span> <span class='M'>&isin;</span> <span class='m'>E</span>\n    to two nodes (not necessarily distinct)\n    <span class='m'>v1</span> <span class='M'>&isin;</span> <span class='m'>V</span> and\n    <span class='m'>v2</span> <span class='M'>&isin;</span> <span class='m'>V</span>.\n    <span class='m'>v1</span> and <span class='m'>v2</span>\n    are the\n    <dfn>endpoints</dfn> of <span class='m'>e</span>.&nbsp;\n  </li>\n</ul>\n\n<p>\nTwo directed graphs\n(<span class='m'>V, E,</span> <span class='M'>&alpha;</span>, <span class='M'>&beta;</span>) and\n(<span class='m'>V', E',</span> <span class='M'>&alpha;</span>', <span class='M'>&beta;</span>')\nare <dfn>isomorphic</dfn> if\nthere are bijections\n<span class='m'>g:V&rarr;V'</span> and\n<span class='m'>h:E&rarr;E'</span>\nsuch that for each <span class='m'>e</span><span class='M'>&isin;</span><span class='m'>E</span>,\n</p>\n<div class='eqn'>\n  <span class='M'>&alpha;</span>'(<span class='m'>h</span>(<span class='m'>e</span>))=<span\n  class='m'>g</span>(<span class='M'>&alpha;</span>(<span class='m'>e</span>))\nand\n  <span class='M'>&beta;</span>'(<span class='m'>h</span>(<span class='m'>e</span>))=<span\n  class='m'>g</span>(<span class='M'>&beta;</span>(<span class='m'>e</span>))\n</div>\n\n<p>\nA <dfn>loop</dfn> is an edge\nboth whose endpoints are equal.&nbsp;\n</p>\n<p>\nA graph contains <dfn>multiple edges</dfn>\nwhen two edges share corresponding endpoints.&nbsp;\nIf a directed graph has no multiple edges,\nthen for it <span class='m'>E</span><span class='M'>&sube;</span><span class='m'>V</span>&times;<span\nclass='m'>V</span>.\n</p>\n<p>\nA graph is <dfn>simple</dfn> if\nit contains neither loops nor multiple edges.&nbsp;\n</p>\n\n<p>\nInformally, a partial graph is obtained by deleting some edges,\nand a subgraph is obtained by deleting some nodes\nand any edges that are their endpoints.\n</p>\n<p>\n<span class='m'>G</span>'=(<span class='m'>V', E',</span> <span class='M'>&alpha;</span>', <span class='M'>&beta;</span>')\nis a <dfn>partial graph</dfn> of\n<span class='m'>G</span>=(<span class='m'>V, E,</span> <span class='M'>&alpha;</span>, <span class='M'>&beta;</span>)\nif\n</p>\n<ul>\n  <li> <span class='m'>V'</span>=<span class='m'>V</span>,\n  </li>\n  <li> <span class='m'>E'</span><span class='M'>&sube;</span><span class='m'>E</span>,\n    and\n  </li>\n  <li> &forall;e<span class='M'>&isin;</span>E' :\n  <span class='M'>&alpha;</span>'(<span class='m'>e</span>) = <span class='M'>&alpha;</span>(<span class='m'>e</span>) and\n  <span class='M'>&beta;</span>'(<span class='m'>e</span>) = <span class='M'>&beta;</span>(<span class='m'>e</span>)\n  </li>\n</ul>\n<p>\n<span class='m'>G'</span>\nis a <dfn>subgraph</dfn> of\n<span class='m'>G</span>\nif\n</p>\n<ul>\n  <li> <span class='m'>V'</span><span class='M'>&sube;</span><span class='m'>V</span>,\n  </li>\n  <li> <span class='m'>E'</span> = {<span class='m'>e</span><span class='M'>&isin;</span><span\n    class='m'>E</span> |\n    <span class='M'>&alpha;</span>(<span class='m'>e</span>)<span class='M'>&isin;</span><span class='m'>V'</span> and\n    <span class='M'>&beta;</span>(<span class='m'>e</span>)<span class='M'>&isin;</span><span class='m'>V'</span> },\n    and\n  </li>\n  <li> &forall;e<span class='M'>&isin;</span>E' :\n  <span class='M'>&alpha;</span>'(<span class='m'>e</span>) = <span class='M'>&alpha;</span>(<span class='m'>e</span>) and\n  <span class='M'>&beta;</span>'(<span class='m'>e</span>) = <span class='M'>&beta;</span>(<span class='m'>e</span>)\n  </li>\n</ul>\n\n\n</div>\n\n</div><!-- #TBg -->\n\n<div id='TFooter'>\n<div class='W3C'>\n  <a href='http://validator.w3.org/check?uri=referer'><img class='W3C'\n    src='../../img/valid-xhtml10-blue.png'\n    alt='Valid XHTML 1.0 Strict'/></a>\n  <br/>\n  <a href='http://jigsaw.w3.org/css-validator/check/referer'><img class='W3C'\n    src='../../img/vcss-blue.png'\n    alt='Valid CSS!'/></a>\n</div>\n<div class='timestamp'>2010Sep28Tu10:34</div>\n<div style='padding-top:1px;'>\n<a class='plain' href='./index.html' style='font-variant:small-caps;'\n>Thomas A. Alspaugh</a>\n<span style='padding-left:1em;'><span class='email ss sm'>alspaugh&nbsp;\n    <span class='ss sc sm'>at</span> &middot; ics &middot; uci &middot; edu</span>\n    <!-- -spell alspaugh uci edu --> </span>\n</div>\n</div>\n\n<!-- Google Analytics code -->\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol)\n  ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost +\n  \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-15281497-1\");\npageTracker._trackPageview();\n} catch(err) {}\n</script>\n\n</body>\n</html>\n\n", "encoding": "ascii"}