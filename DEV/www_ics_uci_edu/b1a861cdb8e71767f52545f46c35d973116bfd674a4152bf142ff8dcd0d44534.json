{"url": "https://www.ics.uci.edu/~wscacchi/Papers/KnowledgeWeb/", "content": "<!doctype html public \"-//w3c//dtd html 4.0 transitional//en\">\n<html>\n<head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n   <meta name=\"Generator\" content=\"Microsoft Word 97\">\n   <meta name=\"Template\" content=\"C:\\PROGRAM FILES\\MICROSOFT OFFICE\\OFFICE\\html.dot\">\n   <meta name=\"GENERATOR\" content=\"Mozilla/4.6 [en] (X11; U; SunOS 5.5.1 sun4m) [Netscape]\">\n   <title>Developing a Knowledge Web for Process Redesign</title>\n</head>\n<body link=\"#0000FF\" vlink=\"#800080\">\n\n<center><b><font face=\"Arial\"><font size=+1>Developing a Knowledge Web\nfor Business Process Redesign</font></font></b>\n<p><font size=-1>Walt Scacchi* and Andre Valente**</font>\n<br><font size=-1>*Information and Computer Science Dept.</font>\n<br><font size=-1>University of California at Irvine</font>\n<br><font size=-1>**Intelligent Systems Division, USC Information Sciences\nInstitute</font>\n<br><font size=-1>University of Southern California</font>\n<br><font size=-1>E-mail: wscacchi@ics.uci.edu, valente@isi.edu</font>\n<p><font size=-1>*** Draft for Review ***</font>\n<br><font size=-1>(c) Copyright, Walt Scacchi and Andre Valente 1999</font></center>\n\n<p><b><font face=\"Arial\"><font size=+1>Overview</font></font></b>\n<p><font size=-1>In this paper, we describe our effort at developing and\ndemonstrating a prototype knowledge-based Web environment for modeling,\ndiagnosing and redesigning complex business processes. Our goal was to\ninvestigate how a modern knowledge representation system, Loom [MB95],\ncan favorably leverage the development and evolution of a knowledge web\nthat links narrative, informal and formal descriptions of on-line cases\non business process redesign. In so doing, we demonstrate concepts, techniques\nand tools that facilitate the development of a <i>knowledge web management\nsystem</i> (KWMS) in an application domain of interest to enterprises throughout\nthe world.</font>\n<p><font size=-1>We start with a brief background discussion of commercial\napproaches to knowledge management, as well as to introduce our conception\nof knowledge webs and knowledge web management systems. We next describe\nthree problems that drive our investigation. The problems are:</font>\n<ul>\n<li>\n<font size=-1>how to acquire global knowledge for how to redesign complex\nbusiness processes,</font></li>\n\n<li>\n<font size=-1>how to develop knowledge representation and operationalization\nmethods that utilize Web resources and technologies, and</font></li>\n\n<li>\n<font size=-1>how to facilitate the continuing evolution and improvement\nof a knowledge web for business process reengineering.</font></li>\n</ul>\n<font size=-1>In response, we present a strategy for how to address these\nproblems in a way that combines the capabilities of a large knowledge acquisition\nteam with intelligent systems technologies and the Web. This includes how\nWeb resources and knowledge-based systems were used, the kinds of classification\ntaxonomies that were developed, and how relevant domain and instance-level\nknowledge was formally represented. In particular, we show how we used\nLoom and its corresponding Web browser interface, Ontosaurus, in developing\na KWMS. Our results demonstrate that an evolving <i>knowledge web</i> can\nbe developed and supported by automated reasoning, analysis and classification\nmechanisms to incrementally integrate new domain facts and to derive implied\nrelations. Our conclusions then follow.</font>\n<p><b><font face=\"Arial\"><font size=+1>Background</font></font></b>\n<p><font size=-1>Knowledge management (KM) within modern or virtual enterprises\nis an emerging area for research investigations, as well as for the development\nand deployment of commercially available systems [O98]. Commercial systems\nlike Lotus Notes focus on capturing and managing unstructured information\nthat is created and shared by people in enterprises. This information serves\nas a narrative knowledge base that is to be organized and managed. Other\nsystems from KM tool vendors such as Autonomy Inc. and InXight Inc. provide\ncomputational mechanisms that process unstructured information in a Lotus\nNotes text base or corporate Intranet repository. These mechanisms add\nvalue by automatically constructing category (word phrases or co-occurrences)\nhierarchies and hypertext indices/links that characterize a set of related\ndocuments. This is possible in that these mechanisms employ term clustering\nor classification techniques based on statistical, information theoretic\nand linguistic analyses of a text database. By their very nature, text\nanalysis techniques such as these provide their value through a shallow\nsyntactic or surface-level processing of a document or text base. However,\nthis value can be enhanced through use of synonym tables, thesauri, domain\nkeyword vocabularies or other weak models to augment the analyses. Nonetheless,\nthese significant capabilities are now commercially available to enterprises\nthat want to begin to manage their text-based knowledge assets.</font>\n<p><font size=-1>On the research front, much work in KM remains to be done\nthat builds on results from knowledge engineering, reasoning and problem-solving\nmechanisms, and other aspects of intelligent systems. Here classic problems\nin knowledge acquisition, representation and operationalization must be\naddressed, as they must by commercial KM systems. As noted above, commercial\nKM system can employ weak models to great success in acquiring and representing\n(via hypertext links) interrelated text documents that can be operationalized\n(distributed and navigated) through Web browsers and repository servers.\nBut there is little use of knowledge engineering, reasoning or intelligent\nsystems techniques in commercial KM tools. In contrast, our effort builds\nfrom these techniques.</font>\n<p><font size=-1>One of the keys to understanding the current emphasis\non unstructured information is to realize there is a wide range of levels\nof formalization in the ways knowledge is represented in KM systems. At\nthe same time, the level of formalization or structure of the knowledge\nsource restricts the mechanisms available to manipulate it, provide services\nand solve problems. This is presented in Figure 1.</font>\n<center>\n<p><img SRC=\"Image11.gif\" BORDER=0 height=138 width=704>\n<br><b><font size=-1>Figure 1</font>. </b><font size=-1>The Knowledge dimension:\nforms and mechanisms</font></center>\n\n<p><font size=-1>Along the top is a sort of the notational forms in which\nknowledge can be captured and represented. From left to right we increase\nthe formalization and precision of knowledge, while from right to left,\nwe accommodate more informality and ambiguity. Knowledge forms towards\nthe left end are relatively easy for people to create and update, while\nknowledge forms to the right increasingly demand knowledge engineering,\nincremental analysis and truth maintenance capability. Along the bottom\nis a sort of representative knowledge processing tools or mechanisms. From\nleft to right we note an increase in the ability to derive some semantic\ninterpretation from an associated knowledge form: from co-occurrence of\nspecified keywords to logical expressions and deductive assertions. Conversely,\nfrom right to left we increase the amount and diversity of information\nwe can search or browse for relevant knowledge. Clearly, most knowledge\nfound on the Web is towards the left end. Further, most of the KM tools\nconcentrate on the left half. In this study, we seek to broaden this scope\nby organizing, interrelating and managing business process redesign knowledge\nthat <i>spans</i> this dimension.</font>\n<p><font size=-1>The research in this article is focused on the domain\nof \"business process redesign\", or BPR. BPR involves the transformation\nof enterprise processes, information infrastructure, work situations and\nsurrounding resources into more optimal configurations. BPR is in many\nways a precursor of KM in enterprises from historical, organizational and\ntechnological perspectives [DP98]. Though much has been written about BPR\nand hundreds of BPR case studies have appeared (in print and on the Web),\nthere has been little effort at developing an underlying formalization\nas to what constitutes BPR. For example, an initial effort classify and\nretrieve relevant cases has been demonstrated using case-based reasoning\ntechniques on a set of eight cases represented as attribute-value tuples\n[KS96]. Other notable efforts employ knowledge-based capabilities to help\nredesign specific business processes [N97, ST96]. Nonetheless, there has\nbeen progress in developing concepts, techniques and tools for formalizing\nand engineering enterprise <i>processes</i> for business and software development\nfrom a knowledge-based perspective [MS96, N97, SM97]. In addition, this\nprogress with enterprise process technology has also led to the integration\nand use of Web technologies [SN97]. Finally, we have an existing process\nmodeling ontology available to us [MS96]. We thus use our existing enterprise\nprocess ontology and domain expertise as the starting point for representing\nknowledge about BPR. Subsequently, we choose to acquire and represent knowledge\nof BPR from case studies found on the Web.</font>\n<p><font size=-1>By combining formalized knowledge representations for\nenterprise processes with Web technologies, we make a move towards the\ndevelopment of intelligent support tools for managing BPR knowledge over\nthe Web. Our goal in this study is to acquire and represent a knowledge\nweb for BPR that is operationalized and managed by a prototype knowledge\nweb management system (KWMS). The knowledge web is the target knowledge\nbase we wish to acquire and represent; the environment for operationalizing\nand managing this knowledge works as a KWMS.</font>\n<p><b><font face=\"Arial\"><font size=+1>Problems</font></font></b>\n<p><font size=-1>In order to realize our research goal, we must address\nthree problems. The first problem is <i>how to acquire global knowledge\nfor how to redesign complex business processes</i>. Our solution entails\na number of activities. We start by using popular search engines and index\nservers available on the Web. Using keywords such as \"business process\nredesign\", \"process reengineering\" and \"case studies\", we quickly locate\nhundreds of links to possible sources of BPR knowledge cases. Of course,\ngiven the variability in the precision and recall of these information\nretrieval services, a substantial effort is needed to browse, filter and\nselect BPR narratives that can subsequently be coded and classified as\nuseful cases. As a result, we employed a group of 30 graduate students\nparticipating in a graduate seminar on BPR to browse, filter, select, code\nand classify the 200+ BPR cases we found on the Web. The commercial KM\ntool capabilities noted earlier were not available to us at the time. Thus\nwe could not avoid this problem. Furthermore, even if these tools were\navailable to us, browsing a rough sample of retrieved BPR links reveals\nthat some BPR narratives are short (1-2 printed pages), while others bring\nup long reports or online books (100-200+ pages). Similarly, some narratives\ndescribe <i>experience reports</i>, while others tell of <i>lessons learned</i>\nor prescribe <i>best practices</i> [O98]. Subsequently, there is a great\ndeal of variability and uncertainty with respect to the kind of results\none gets through a surface level analysis of BPR case texts found on the\nWeb, depending on what cases are used for analysis and categorization,\nand what order you choose to analyze them. As such, our team-based knowledge\nacquisition effort could produce models of BPR knowledge that might be\ninconsistent, logically incomplete, or inadequately traceable when integrated.\nWe therefore needed ways and means to enable the construction of a consistent,\nlogically complete and traceable knowledge web for BPR.</font>\n<p><font size=-1>The second problem we faced was <i>how to develop knowledge\nrepresentation and operationalization methods that utilize Web resources\nand technologies</i>. This problem is related to the preceding one. In\nparticular, our graduate student collaborators were organized into six\nteams who could openly discuss and share their emerging knowledge as to\nwhat knowledge they were finding in the Web-based BPR cases. Cases came\nfrom all over the world, though for practical reasons, we limited our efforts\nto those available in English and accessible without fee. All students\nwere trained for what to examine in each case, and each team was assigned\nto develop a specific BPR case taxonomy. Cases were examined for information\nthat could minimally conform to the ontology of objects, attributes, relations\nand constraints specified in the <i>process meta-model</i> [MS96]. In simple\nterms, students had to identify the organizational roles of the participants\nidentified in the case, the information processing tasks these participants\nperformed within the business process, the resources used or consumed in\nthe tasks, any off-line or on-line tools or applications, any Internet/Web\nelements, and what changes occurred to any of these as a result of the\nprocess redesign described in the case. Beyond this, the students then\nhad to identify one or more process redesign heuristics that could characterize\neach selected case. Open discussion and collaboration was again encouraged\nin identifying the process redesign heuristics, including a lecture discussion\nof one case study that identifies ten process redesign heuristics [SN97].\nOverall, more than 30 process redesign heuristics were identified and classified.</font>\n<p><font size=-1>Next, six taxonomies were identified for grouping and\norganizing access to the BPR cases discovered on the Web. These taxonomies\nclassified and indexed the cases according to:</font>\n<ul>\n<li>\n<font size=-1><i>Generic type of industry process: </i>financial, manufacturing,\nresearch and development, marketing, etc.</font></li>\n\n<li>\n<font size=-1><i>As-is \"problems\" with existing process: </i>off-line information\nprocessing, workflow delays, lack of information sharing, etc.</font></li>\n\n<li>\n<font size=-1><i>To-be \"solutions\" sought for redesigned process: </i>automate\noff-line information processing tasks, streamline workflow, use email and\ndatabases to share information, etc.</font></li>\n\n<li>\n<font size=-1><i>Use of intranet, extranet or Web-based process redesign\nsolutions: </i>build intranet portal for Human Resources information, use\nHTML form-EDI translators for procurement from Internet-based suppliers,\netc.</font></li>\n\n<li>\n<font size=-1><i>BPR how-to guidelines or lessons learned: </i>explicit\nmethods or steps for how to understand and model the as-is process, identify\nprocess redesign alternatives, involve process users in selecting redesign\nalternatives, etc.</font></li>\n\n<li>\n<font size=-1><i>BPR heuristics: </i>parallelize sequence of mutually exclusive\ntasks, unfold multi-stage review/approval loops, disintermediate or flatten\ninternal management structures, require and verify all data before processing,\netc.</font></li>\n</ul>\n<font size=-1>In turn, each of these taxonomies could then be represented\nas hierarchically nested indices of Web links to the corresponding cases\nin ways familiar to Web users. Typically, each taxonomy indexes 60-120\ncases out of the total set of more than 200. This means that some cases\ncould appear in one taxonomy but not another, while other cases might appear\nin more than one, and still others might not appear in any of these taxonomies\nif they were judged to not possess the minimal information needed for characterization\nand modeling.</font>\n<p><font size=-1>The last problem we addressed was <i>how to facilitate\nthe continuing evolution and improvement of a knowledge web for BPR</i>.\nProposing technically elegant solutions to the preceding two problems that\nwould be costly, take a long time, or produce inconsistent results would\ndefeat our purpose. Similarly, we cannot expect that a no-cost effort requiring\nlittle time will produce dramatic results, at least not in a research study.\nNonetheless, we wanted to find a means that could incorporate and integrate\nknowledge acquired from new BPR cases that might later be posted on the\nWeb in a streamlined, evolutionary and incremental manner.</font>\n<p><font size=-1>With these problems at hand, we now describe our approach\nto solving them using a formal knowledge system.</font>\n<p><b><font face=\"Arial\"><font size=+1>Approach</font></font></b>\n<p><font size=-1>A key factor in achieving the goals describe in the previous\nsection is the ability to handle knowledge in the more formal end of the\nspectrum shown in Figure 1. Representing knowledge about a business process\nusing an informal process model, graphic diagram, or in textual form is\nnot always adequate. If we want to automate reasoning with the model to\nperform some task, we need to use a richer and more structured representation.\nThere are a variety of languages and formalisms where we can represent\na business process model. For example, we find business process models\nexpressed using a markup language like XML or even HTML. This provides\nenough structure to build simple applications that can browse, summarize\nor search the model contents. However, for complex tasks like evaluating,\ndiagnosing or simulating a process model, however, we may need to perform\ntruly automated reasoning, and for that we need a formal knowledge representation\nlanguage [SM97].</font>\n<p><font size=-1>One of the reasons why formal knowledge representations\nare not used more frequently is that developing a formalized knowledge\nbase is generally not a casual undertaking. Instead, it is one where circumstances\nmotivate the use or reliance on formal models of domain knowledge and problem\nsolving expertise. In a domain such as Air Campaign Planning [VRMS99],\nthe inherently complexity of the task at hand together with the multiplicity\nof system applications users employ underscores the need to invest in a\ndeveloping a formalized knowledge based. Similarly, in a domain like BPR,\nthere is widespread opportunity to practice and reuse known concepts, techniques\nand tools to realize economic gain, organizational transformation or reinvention.\nThis justifies the investment in developing and engineering a formal knowledge\nbase for BPR interlinked to supporting cases and navigational indices on\nthe Web.</font>\n<p><font size=-1>In particular, this points to the need to develop knowledge\nbases that can be reused easily. Thus, our approach consisted of developing\na generic, reusable knowledge base or <i>ontology</i> [VRMS99] of business\nprocesses and then using it for creating specific knowledge bases of processes\nin a given industry or company. In turn, the reusable part of these some\nof these knowledge bases can be transformed into reusable ontologies, in\na layered approach.</font>\n<p><font size=-1>Once we have the knowledge of business processes formalized\nin a knowledge representation system we can use the reasoning mechanisms\nprovided by that system to develop applications that analyze a specific\nprocess model. In order to test these ideas, we used the ontology of business\nprocesses to build a tool to diagnose business process models. The tool\nreasons with a given process model using a classification mechanisms and\nlists the problems found. Its knowledge base contains a description of\na taxonomy of types of problems in business process models. We then tested\nthis tool by applying it to model cost accounting business processes in\na large utility company in California.</font>\n<br>&nbsp;\n<br>&nbsp;\n<p><b><font face=\"Arial\">Tools for handling formal knowledge</font></b>\n<p><font size=-1>In developing knowledge bases and ontologies for the domain\nof BPR we used two tools. First, in order to represent BPR knowledge formally\nand reason with it, we selected the Loom knowledge representation system\n[MB95]. Loom is a language and environment for constructing ontologies\nand intelligent applications [VRMS99]. It has been distributed to more\nthan 80 universities and corporations, and is being used in numerous DARPA-sponsored\nprojects in planning, software engineering and intelligent integration\nof information. Declarative knowledge in Loom consists of <i>definitions</i>\nof concept, relations and instances. A deductive engine called a <i>classifier</i>\nutilizes forward-chaining, semantic unification and object-oriented truth\nmaintenance technologies in order to compile the declarative knowledge\ninto a network designed to efficiently support on-line deductive query\nprocessing. By using Loom to re-implement the process meta-model ontology,\nwe can construct formal models of business processes, classification taxonomies\nand process redesign heuristics. In turn, we can then analyze, query, browse\nand identify relevant redesign alternatives for processes that have been\nmodeled in Loom and linked over the Web. Finally, we can take advantage\nof Loom's deductive classifier so that as new BPR cases are acquired, taxonomically\nclassified and formally modeled, our knowledge web can evolve with automated\nsupport.</font>\n<p><font size=-1>Second, in order to support the visualization of the knowledge\nbases constructed, we used Ontosaurus [ONTO], a Web browser interface to\nthe Loom system. Ontosaurus is a client-server tool in which a server (written\nin CommonLisp) with Loom and one or more knowledge bases loaded replies\nto queries and produces Web pages describing several aspects of the knowledge\nbase. It is also able to provide simple facilities for producing general\nqueries and editing the contents of knowledge bases. Figure 2 shows a typical\nbrowser window accessing Ontosaurus. The display consists of three window\npanels; Toolbar (top), Reference (left side) and Content (right side).\nThe Toolbar panel consists of buttons to perform various operations such\nas <i>select domain theory</i>, <i>display theory, save updates</i>, etc.\nThe Reference and Content panels are designed to display contents of a\nselected ontology. Links in both panels display their contents in the Content\nwindow. This facilitates exploring various links associated with a word\nor concept in the Reference window without the need to continuously go\nback and forth. The bookmark window holds user-selected links for Web pages\nto Ontosaurus pages, and is managed by the buttons in the bottom of the\nbookmark window.</font>\n<center>\n<p><img SRC=\"Ontosaurus.gif\" height=768 width=1024>\n<p><b><font size=-1>Figure 2</font>. </b><font size=-1>An Ontosaurus browser\ninterface display.</font></center>\n\n<p><b><font face=\"Arial\">Formally Representing Business Process Models\nand Process Redesign</font></b>\n<p><font size=-1>We now describe how we built a knowledge-based system\nto represent and diagnose models of BPR. The system is based on an ontology\nof business processes expressed in Loom. Loom provides a semantic network\nknowledge representation framework based on description logics. In Loom\nit is possible to define <i>concepts</i> that have roles or slots to specify\nits attributes. A key feature of description logic representations is that\nthe semantics of the representation language are very precisely specified.\nThis precise specification makes it possible for the classifier to determine\nwhether one concept <i>subsumes</i> another based solely on the formal\ndefinitions of the two concepts. The classifier is an important tool for\nevolving ontologies because it can be used to automatically organize a\nset of Loom concepts into a classification hierarchy or taxonomy based\nsolely on their definitions. This capability is particularly important\nas the ontology becomes large, since the classifier will find subsumption\nrelations that people might overlook, as well as modeling errors that could\nmake the knowledge base inconsistent.</font>\n<p><i><font face=\"Arial\"><font size=-1>Modeling Business Process Knowledge\nin Loom</font></font></i>\n<p><font size=-1>The specific process ontology (or meta-model) we employed\nis centered on the notion of resource [MS96]. There are three basic types\nof resource: process, agent and simple resource (which is a placeholder\nfor all non-agent resources that are not processes). In order to facilitate\ncommunication with a user community that is accustomed to object-oriented\nmodeling, we chose a modeling style in Loom that is closest to object-orientation.\nFor example, information about concepts is stored into roles, similarly\nto classes and properties in an object-oriented language. The definition\nof the concept </font><font face=\"Courier New\"><font size=-2>process</font></font><font size=-1>\nappears in the left frame of Figure 3.</font>\n<p><font size=-1>We also made use of Loom?s superior expressiveness. For\ninstance, in Loom, roles, slots or properties are first-class objects called\n<i>relations.</i>\nRelations are defined separately, and may contain not only type restrictions\nbut also cardinality restrictions. It also allows the definition of inverse\nrelations, such as in the example below, where we define the relation </font><font face=\"Courier New\"><font size=-2>intelligence-collective-role-own-resource</font></font><font size=-1>.\nNote also how we define the domain of the relation as a logical composition\nover some existing concepts (types).</font>\n<p><font face=\"Courier New\"><font size=-2>(defrelation intelligence-collective-role-own-resource</font></font>\n<br><font face=\"Courier New\"><font size=-2>:domain (:or intelligent-agent\nprocess-role collective-agent)</font></font>\n<br><font face=\"Courier New\"><font size=-2>:range resource</font></font>\n<br><font face=\"Courier New\"><font size=-2>:inverse resource-belong-to-intelligence-collective-role)</font></font>\n<p><font size=-1>To create a business process model entails creating a\nnumber of instances of the available concepts. This is done in a manner\nsimilar to how objects that are instances of classes are created in object-oriented\nlanguages. Instances are created in Loom with the command tellm. For example,\nthe following is the definition of a business process in a company where\nwe applied the system to support process modeling, analysis and redesign.\nThe definition specifies, for example, that the instance </font><font face=\"Courier New\"><font size=-2>Produce-work-order</font></font><font size=-1>\nhas the attribute </font><font face=\"Courier New\"><font size=-2>process-require-resource</font></font><font size=-1>\nfilled by the value </font><font face=\"Courier New\"><font size=-2>work-order-preparation-info</font></font><font size=-1>\n(which is itself an instance defined elsewhere).</font>\n<p><font face=\"Courier New\"><font size=-2>(tellm (:about Produce-work-order</font></font>\n<br><font face=\"Courier New\"><font size=-2>process</font></font>\n<br><font face=\"Courier New\"><font size=-2>(process-require-resource work-order-preparation-info)</font></font>\n<br><font face=\"Courier New\"><font size=-2>(process-require-resource work-order-data)</font></font>\n<br><font face=\"Courier New\"><font size=-2>(process-provide-resource work-order)</font></font>\n<br><font face=\"Courier New\"><font size=-2>(process-assigned-to-agent-role\nbusiness-unit)</font></font>\n<br><font face=\"Courier New\"><font size=-2>(process-require-tool-resource\naccounting-computer-system)))</font></font>\n<p><i><font face=\"Arial\"><font size=-1>Modeling Types of Problems in a\nBusiness Process Model</font></font></i>\n<p><font size=-1>We used the taxonomy of problems in business processes\nmodels described above and elsewhere [MS97]. There are three types of problems\nthat arise when modeling business processes. First, consistency problems\nrefer to conflicts in the specification of several properties of a given\nprocess. For example, a typical consistency problem is to have a process\nwith the same name as one of its outputs (something that occurs surprisingly\noften in practice, perhaps because the output is often the most visible\ncharacteristic of a process). Second, completeness problems cover incomplete\nspecifications of the process. For instance, a typical completeness problem\noccurs when we specify a process with no inputs (a \"miracle\", which can\nproduce outputs with no inputs) or no outputs (a \"black hole\", where inputs\ndisappear without generating any output). Third, traceability problems\nare caused by incorrect specification of the origin of the model itself:\nits author and responsible. Subsequently, a process model that is consistent,\ncomplete and traceable can be said to be internally correct.</font>\n<p><font size=-1>One of the main reasons that we selected Loom as a representation\nlanguage was its capability to represent easily and naturally abstract\npatterns of data that are the very definition of the problems we discussed\nabove. This capability is very handy to produce simple and readable representations\nof the types of problems with process models. For example, we can define\na </font><font face=\"Courier New\"><font size=-2>black-hole</font></font><font size=-1>\nin plain English as \"a process with no outputs\". This can be easily described\nin Loom as a process that provides exactly zero resources:</font>\n<p><font face=\"Courier New\"><font size=-2>(defconcept black-hole</font></font>\n<br><font face=\"Courier New\"><font size=-2>:is (:and process</font></font>\n<br><font face=\"Courier New\"><font size=-2>(:exactly 0 process-provide-resource)))</font></font>\n<center>\n<p><img SRC=\"bpr-kbs1.GIF\" height=997 width=1236>\n<p><b><font size=-1>Figure 3</font>. </b><font size=-1>Ontosaurus display\nwith</font><b> </b><font size=-1><font face=\"Courier New\">Process </font>concept\ndefinition loaded in the Reference window and a process redesign instance\nin the Contents window</font></center>\n\n<p><font size=-1>Many of the simple types of problems can be specified\nsimilarly. A more interesting example is the definition of a process with\nthe same name as one of its inputs. Here we use logical expressions to\ndescribe conditions that an instance must satisfy in order for a concept\nto apply. For instance, below we show the specification of <font face=\"Courier New\">process-and-input-with-same-name</font>\nin the ontology. The definition reads (roughly) that a process has input\nwith the same name if and only if it is a process and it satisfies the\ncondition that it requires itself.</font>\n<p><font face=\"Courier New\"><font size=-2>(defconcept process-and-input-with-same-name</font></font>\n<br><font face=\"Courier New\"><font size=-2>&nbsp;:is (:and process</font></font>\n<br><font face=\"Courier New\"><font size=-2>&nbsp;(:satisfies ?x (process-require-resource\n?x ?x))))</font></font>\n<br>&nbsp;\n<p><b><font face=\"Arial\">The diagnosis tool</font></b>\n<p><font size=-1>Using the representations discussed above, we built a\nsystem that diagnoses business processes. The system operation is very\nstraightforward. The user describes a process model through Ontosaurus\nfor processing by Loom as discussed above. Then the system diagnoses the\nmodel provided. One of the advantages of using Loom is that once we define\nan instance, Loom immediately (and automatically) applies its reasoning\nengine (the classifier) to find out what concepts apply to that instance.\nThis offers a big advantage, since there is no need to specify an algorithm\nfor the diagnosis process: the diagnosis occurs automatically as we define\nthe model. In addition, the classifier performs truth-maintenance: if we\nredefine a process to correct a problem found by the system, the classifier\nwill immediately retract the assertion that the problem applies to that\nprocess. Thus, we do not need to keep track of the state of the diagnosis\nas the model changes; instead, the classifier handles the processing activities.</font>\n<p><font size=-1>In order to provide a more direct interface to the diagnosis\nsystem, we extended the Ontosaurus browser to display two new types of\npages. The first displays a description of process in a less Loom-specific\nway (e.g., for reporting purposes). The second displays a list of all problems\nfound in the current process model we input.. The extension was rather\nsimple: all we had to do was to design two additional output page templates\nand code the appropriate responses in the Loom server. Figure 4 shows a\nscreenshot of the Web page constructed by the server to describe the problems\nfound in a model of a cost accounting process (see below).</font>\n<p><i><font face=\"Arial\"><font size=-1>Testing the system</font></font></i>\n<p><font size=-1>We tested the system with a team assigned the task of\nredesigning the cost accounting processes of a utility company in California\n(the name is omitted for confidentiality reasons). The team had to acquire\nknowledge of the processes, formally represent them, and then eventually\npropose a to-be solution that redesigned the processes. The team interviewed\nprocess experts, met with several employees, examined documentation, organizational\ncharts, etc. The first value-added provided by the KWMS was caused even\nbefore using the process diagnosis module. By modeling the process in more\nor less formal terms (i.e. using the process ontology embedded in the system),\nthe team was able to construct a more coherent model. The KWMS helped the\nBPR team to be more precise and detailed than when they just used graphic\ndiagrams and narrative text. The second value-added was provided by the\ndiagnosis system, since it helped catch errors early in the modeling process.\nAn example appears in Figure 4. In fact, in the beginning the diagnosis\nmodule helped the team to learn how to construct the formal representation\nof the process model by providing feedback in what they should not do.\nThe number of errors generated by entering new processes steadily diminished\nwith time, showing the value of the system.</font>\n<p><b><font face=\"Arial\"><font size=+1>Discussion and Conclusions</font></font></b>\n<p><font size=-1>Our investigation demonstrated and prototyped approach\nto integrate knowledge management and business process reengineering with\nglobal resources accessible over the Web. A knowledge web for BPR was acquired,\nrepresented and operationalized by a team of collaborating graduate students.\nWe prototyped a Loom-based knowledge web management system that supported\nthe development, use and incremental evolution of a knowledge web grounded\nin informal BPR case studies found on the Web. This KWMS provides the capability\nto browse, query, model, and diagnose a knowledge base of formal models\nof business processes, multiple BPR classification taxonomies, and process\nredesign heuristics. Subsequently, our team learned and practiced Web-based\nknowledge management and BPR through participation and contribution. However,\nthe KWMS at this stage lacks the capability to automatically redesign formalized\nbusiness processes.</font>\n<p><font size=-1>Automated redesign is a problem-solving task that represents\nthe next stage of development of our prototype. However, there are BPR\nsituations where automated redesign may not be a suitable goal or outcome.\nThis is in organizational settings where people seek empowerment and involvement\nin designing and controlling their process structures and workflow. In\nsettings such as these, the ability to access, search/query, select and\nevaluate possible process redesign alternatives through a KWMS may be more\ndesirable [cf. SN97]. Thus the ultimate purpose of the KWMS we describe\nmay be in <i>supporting</i> <i>and empowering</i> BPR participants rather\nthan in automating BPR.</font>\n<br>&nbsp;\n<br>&nbsp;\n<br>\n<center>\n<p><img SRC=\"bpr-kbs2.GIF\" height=977 width=861>\n<br><b><font size=-1>Figure 4</font>. </b><font size=-1>Generated report\nfrom Loom diagnosis of a process redesign case</font></center>\n\n<p><font size=-1>Overall, the problems identified and addressed by this\nresearch are generic and independent of specific business process types.\nNonetheless, we believe the approach we pursued is highly reusable and\ncan for the most part be replicated in other settings. Subsequently, we\nfind there are classes of research and practical problems whose solution\nmay span a knowledge dimension that covers informal, semi-structured, and\nformal representations of knowledge that must then be interlinked across\nthe Web and formal knowledge systems. This work thus represents one such\nsolution.</font>\n<br>&nbsp;\n<br>&nbsp;\n<p><b><font face=\"Arial\"><font size=+1>References</font></font></b>\n<p><font size=-1>[DP98] T.H. Davenport and L. Prusak. Working Knowledge:\nHow Organizations Manage What They Know. Harvard Business School Press,\nBoston, MA, 1998.</font>\n<p><font size=-1>[KS96] S. Ku, Y.-H. Suh, and G. Tecuci. Building an Intelligent\nBusiness Process Reengineering System: A Case-Based Approach. <i>Intelligent\nSystems in Accounting, Finance, and Management</i>, 5(1):25-39, 1996.</font>\n<p><font size=-1>[L96] D.B. Leake (ed.). <i>Case-Based Reasoning: Experiences,\nLesson and Future Directions</i>, AAAI/MIT Press, Menlo Park, CA, 1996.</font>\n<p><font size=-1>[MB95] MacGregor, R., and Bates, R. Inside the Loom description\nclassifier. <i>SIGART Bulletin 2(3):88-92</i></font>\n<p><font size=-1>[MS96] P. Mi and W. Scacchi. A Meta-Model for Formulating\nKnowledge-Based Models of Software Development. <i>Decision Support Systems</i>,\n17(3):313-330, 1996.</font>\n<p><font size=-1>[N97] M.E. Nissen. Reengineering the RFP Process through\nKnowledge-Based Systems. <i>Acquisition Review Quarterly</i>, 4(1):87-100,\n1997.</font>\n<p><font size=-1>[O98] D.E. O'Leary. Enterprise Knowledge Management. <i>Computer</i>,\n31(3):54-61, 1998.</font>\n<p><font size=-1>[ONTO] Ontosaurus Web Browser home page. http://www.isi.edu/isd/ontosaurus.html</font>\n<p><font size=-1>[SM97] W. Scacchi and P. Mi. Process Life Cycle Engineering:\nA Knowledge-Based Approach and Environment. <i>Intelligent Systems in Accounting,\nFinance and Management</i>, 6:83-107, 1997.</font>\n<p><font size=-1>[SN97] W. Scacchi and J. Noll. Process-Driven Intranets:\nLife Cycle Support for Process Reengineering. <i>IEEE Internet Computing</i>,\n1(4):42-49, 1997.</font>\n<p><font size=-1>[ST96] P.G. Selfridge and L.G. Terveen. Knowledge Management\nTools for Business Process Support and Reengineering. <i>Intelligent Systems\nin Accounting, Finance and Management</i>, 5:15-24, 1996.</font>\n<p><font size=-1>[VRMS99] A. Valente, T. Russ, R. MacGregor, and W. Swartout.\nBuilding and (Re)Using an Ontology for Air Campaign Planning. <i>IEEE Intelligent\nSystems</i>, 14(1):27-36, 1999.</font>\n</body>\n</html>\n", "encoding": "ascii"}