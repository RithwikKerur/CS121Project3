{"url": "https://www.ics.uci.edu/~theory/269/100211.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, February 11, 2010</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"\n521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a>\n<h2> February 11, Winter Quarter 2010: Theory Seminar </h2>\n<h3>1:00pm in 4011 Bren Hall</h3>\n<h1>   \nResource Oblivious Multicore Sorting\n</h1>\n<h2> Richard Cole, NYU </h2>\n\n<p>\nPresenting his paper with Vijaya Ramachandran\n\n<p>\nAbstract: \nMulticore chips, already the predominant desktop technology, are\nprojected to have increasing numbers of cores, perhaps as many as\n50--100 five years hence.\n\nEffectively exploiting this parallelism appears to call for parallel\nalgorithms with data locality. Over the last decade, data locality in\na sequential setting has been addressed in part via cache oblivious\nalgorithms.  (A cache oblivious algorithm does not know or use memory\nparameters such as block or page size, the time needed for a cache\nmiss, etc. It's virtue is simplicity. The algorithmic challenge is to\nmatch the performance of parameter aware algorithms, at least up to\nmodest constant factors. This has been achieved for many problems.)\n\nThe current work explores to what extent obliviousness may be\npossible in the multicore setting. We seek algorithms that are\noblivious to both memory parameters and to the number of cores.  We\nshow this is possible by developing oblivious algorithms for this\nsetting, including a new sorting algorithm which achieves\n(asymptotically) optimal operation and cache-miss count, and a\ncritical path length of O(log n log log n) for sorting n items.\n\n</body>\n</html>\n", "encoding": "ascii"}