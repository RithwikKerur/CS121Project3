{"url": "https://www.ics.uci.edu/~theory/269/970509.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>Theory Seminar, 9 May 1997</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width= \n\"521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a> \n\n<h1>ICS 269, Spring 1997: Theory Seminar</h1>\n\n<hr>\n<h2>9 May 1997:<br>\nRandomization in Online Computation<br>\nFinal Public Oral Dissertation Defense<br>\n<a href=\"http://www.ics.uci.edu/~sseiden/\">Steve Seiden</a>, ICS,\nUC Irvine</h2>\n\n<p>We study the use of randomization to improve the performance of\nonline algorithms. Two problems are examined.</p>\n\n<p>First we study the metrical task system problem of Borodin,\nLinial, and Saks. For this problem, these authors give a\ndeterministic (2<i>n</i>&nbsp;-&nbsp;1)-competitive algorithm.\nUsing a technique we call thresholding, we design a randomized\nalgorithm which is\n(<i>e</i>/(<i>e</i>&nbsp;-&nbsp;1)<i>n</i>&nbsp;-&nbsp;1/(<i>e</i>&nbsp;-&nbsp;1)&nbsp;<u>\n~</u>&nbsp;1.5820<i>n</i>&nbsp;-&nbsp;0.5820)-competitive. For\nuniform task systems, Borodin, Linial, and Saks present an\nalgorithm which is 2<i>H</i><sub><i>n</i></sub>-competitive, and\nshow a lower bound of <i>H</i><sub><i>n</i></sub>. Again using\nthresholding, we design a randomized algorithm which is\n(<i>H</i><sub><i>n</i></sub>/ln&nbsp;2&nbsp;<u>\n~</u>&nbsp;1.4427<i>H</i><sub><i>n</i></sub>&nbsp;+&nbsp;1)-competitive.\nUsing a different technique we design an algorithm which is\n(<i>H</i><sub><i>n</i></sub>&nbsp;+&nbsp;O(sqrt&nbsp;log&nbsp;<i>\nn</i>))-competitive.</p>\n\n<p>The second problem studied is online multiprocessor scheduling.\nThe problem of scheduling independent jobs on <i>m</i> machines\noriginates with Graham. While the deterministic case of this\nproblem has been studied extensively, little work has been done on\nthe randomized case. For <i>m</i>&nbsp;=&nbsp;2 a randomized\n4/3-competitive algorithm was found by Bartal, Fiat, Karloff and\nVohra. A randomized algorithm for <i>m</i>&nbsp;<u>&gt;</u>&nbsp;3\nis presented. It achieves competitive ratios of 1.55665, 1.65888,\n1.73376, 1.78295 and 1.81681, for <i>m</i>&nbsp;=&nbsp;3, 4, 5, 6,\n7 respectively. These competitive ratios are less than the best\ndeterministic lower bound for <i>m</i>&nbsp;=&nbsp;3, 4, 5 and less\nthan the best known deterministic competitive ratio for <i>\nm</i>&nbsp;=&nbsp;3, 4, 5, 6, 7. Two models of multiprocessor\nscheduling with rejection are studied. The first is the model of\nBartal, Leonardi, Marchetti-Spaccamela, Sgall and Stougie. Two\nrandomized algorithms for this model are presented. The first\nalgorithm performs well for small <i>m</i>, achieving competitive\nratios of 3/2,\n(7&nbsp;+&nbsp;sqrt&nbsp;129)/10&nbsp;&lt;&nbsp;1.83579,\n(5&nbsp;+&nbsp;2&nbsp;sqrt&nbsp;22)/7&nbsp;&lt;&nbsp;2.05441 for\n<i>m</i>&nbsp;=&nbsp;2,3,4, respectively. The second algorithm\noutperforms the first for <i>m</i>&nbsp;<u>&gt;</u>&nbsp;5. It\nbeats the deterministic algorithm of Bartal <i>et al.</i> for all\n<i>m</i>&nbsp;=&nbsp;5,&nbsp;...&nbsp;1000. It is conjectured that\nthis is true for all <i>m</i>. The second model differs in that\npreemption is allowed. For this model, randomized algorithms are\npresented which outperform the best deterministic algorithm for\nsmall&nbsp;<i>m</i>.</p>\n</body>\n</html>\n\n", "encoding": "ascii"}