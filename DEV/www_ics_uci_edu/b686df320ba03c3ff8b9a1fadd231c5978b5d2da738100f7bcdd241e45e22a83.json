{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/overview/ikm.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n\n  <!-- Page title -->\n  <title>VLFeat - Tutorials > Integer K-means</title>\n\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  \n\n  <!-- Scripts-->\n  \n\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li class='active'><a href=\"tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"hog.html\">HOG features</a>\n</li>\n<li><a href=\"sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"utils.html\">Miscellaneous utilities</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li><a href=\"../api/index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n<ul>\n<li><a href=\"../man/mser.html\">mser</a>\n</li>\n<li><a href=\"../man/sift.html\">sift</a>\n</li>\n<li><a href=\"../man/vlfeat.html\">vlfeat</a>\n</li>\n</ul></li>\n</ul></li>\n</ul>\n\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"tut.html\">Tutorials</a></span><span class='separator'>></span><span class='page'><a href=\"ikm.html\">Integer K-means</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n        \n    \n\n<div class='toc'>\n<h3>Table of Contents</h3><ul><li class=\"level1\"><a href=\"#tut.ikm.usage\">Usage</a></li>\n<li class=\"level1\"><a href=\"#tut.ikm.elkan\">Elkan</a></li>\n</ul>\n</div><!-- Table of contents -->\n\n\n<p><b>VLFeat</b> includes a basic implementation of k-means clustering\nand hierarchical k-means clustering. They are designed to be\nlightweight in order to work on large datasets. In particular, they\nassume that the data are vectors of unsigned chars (one byte). While\nthis is limiting for some application, it works well for clustering\nimage descriptors, where very high precision is usually unnecessary.\nFor more details, see the\n<a shape=\"rect\" href=\"../api/ikmeans_8h.html\">Integer k-means API\n  reference</a>.</p>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.ikm.usage\">Usage</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>Integer k-means (IKM) is run by the command\n<code/><a href=../matlab/vl_ikmeans.html>vl_ikmeans</a></code>. In order to demonstrate the usage of this\ncommand, we sample 1000 random points in the <code/>[0,255]^2</code>\ninteger square and use <code/><a href=../matlab/vl_ikmeans.html>vl_ikmeans</a></code> to get k=3\nclusters:</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">K</span> <span class=\"p\">=</span> <span class=\"mi\">3</span> <span class=\"p\">;</span>\n<span class=\"n\">data</span> <span class=\"p\">=</span> <span class=\"n\">uint8</span><span class=\"p\">(</span><span class=\"nb\">rand</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">255</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">,</span><span class=\"n\">A</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_ikmeans</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">K</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>The program returns both the cluster centers <code/>C</code> and the\ndata-to-cluster assignments <code/>A</code>. By means of the cluster\ncenters\n<code/>C</code> we can project more data on the same clusters</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">datat</span> <span class=\"p\">=</span> <span class=\"n\">uint8</span><span class=\"p\">(</span><span class=\"nb\">rand</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">255</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">AT</span> <span class=\"p\">=</span> <span class=\"n\">vl_ikmeanspush</span><span class=\"p\">(</span><span class=\"n\">datat</span><span class=\"p\">,</span><span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>In order to visualize the results, we associate to each cluster a\ncolor and we plot the points:</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">cl</span> <span class=\"p\">=</span> <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">gca</span><span class=\"p\">,</span><span class=\"s\">&#39;ColorOrder&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">ncl</span> <span class=\"p\">=</span> <span class=\"nb\">size</span><span class=\"p\">(</span><span class=\"n\">cl</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">=</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"n\">K</span>\n  <span class=\"n\">sel</span>  <span class=\"p\">=</span> <span class=\"nb\">find</span><span class=\"p\">(</span><span class=\"n\">A</span>  <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n  <span class=\"n\">selt</span> <span class=\"p\">=</span> <span class=\"nb\">find</span><span class=\"p\">(</span><span class=\"n\">AT</span> <span class=\"o\">==</span> <span class=\"n\">k</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n  <span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">sel</span><span class=\"p\">),</span>  <span class=\"n\">data</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">sel</span><span class=\"p\">),</span>  <span class=\"s\">&#39;.&#39;</span><span class=\"p\">,</span><span class=\"c\">...</span>\n       <span class=\"s\">&#39;Color&#39;</span><span class=\"p\">,</span><span class=\"n\">cl</span><span class=\"p\">(</span><span class=\"nb\">mod</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"n\">ncl</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,:))</span> <span class=\"p\">;</span>\n  <span class=\"n\">hold</span> <span class=\"n\">on</span> <span class=\"p\">;</span>\n  <span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">datat</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">selt</span><span class=\"p\">),</span><span class=\"n\">datat</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">selt</span><span class=\"p\">),</span><span class=\"s\">&#39;+&#39;</span><span class=\"p\">,</span><span class=\"c\">...</span>\n       <span class=\"s\">&#39;Color&#39;</span><span class=\"p\">,</span><span class=\"n\">cl</span><span class=\"p\">(</span><span class=\"nb\">mod</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"n\">ncl</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,:))</span> <span class=\"p\">;</span>\n<span class=\"k\">end</span>\n</pre></div>\n\n\n<div class=\"figure\">\n<image src=\"../demo/ikmeans_lloyd.jpg\"></image>\n<div class=\"caption\">\n<span class=\"content\">\n<b>Integer k-means.</b> We show clusters of 2-D points obtained by\ninteger k-means.  There are <code/>k=3</code> clusters represented with\ndifferent colors. The clusters have been estimated from 1000 points\n(displayed as dots). Then 10000 different points have been projected on\nthe same clusters (displayed as crosses). The three big markers\nrepresent the cluster centers.\n</span>\n</div>\n</div>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.ikm.elkan\">Elkan</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>VLFeat supports two different implementations of k-means. While\nthey produce identical output, the Elkan method requires fewer\ndistance computations.  The <code/>method</code> parameters controls\nwhich method is used. Consider the case when <code/>K=100</code> and our\ndata is now 128 dimensional (e.g. SIFT descriptors):</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">K</span><span class=\"p\">=</span><span class=\"mi\">100</span><span class=\"p\">;</span>\n<span class=\"n\">data</span> <span class=\"p\">=</span> <span class=\"n\">uint8</span><span class=\"p\">(</span><span class=\"nb\">rand</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span><span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">255</span><span class=\"p\">);</span>\n<span class=\"n\">tic</span><span class=\"p\">;</span>\n<span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">,</span><span class=\"n\">A</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_ikmeans</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">K</span><span class=\"p\">,</span><span class=\"s\">&#39;method&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;lloyd&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span> <span class=\"c\">% default</span>\n<span class=\"n\">t_lloyd</span> <span class=\"p\">=</span> <span class=\"n\">toc</span>\n<span class=\"n\">tic</span><span class=\"p\">;</span>\n<span class=\"p\">[</span><span class=\"n\">C</span><span class=\"p\">,</span><span class=\"n\">A</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">vl_ikmeans</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">K</span><span class=\"p\">,</span><span class=\"s\">&#39;method&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;elkan&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">t_elkan</span> <span class=\"p\">=</span> <span class=\"n\">toc</span>\n\n<span class=\"n\">t_lloyd</span> <span class=\"p\">=</span>\n\n   <span class=\"mf\">10.2884</span>\n\n<span class=\"n\">t_elkan</span> <span class=\"p\">=</span>\n\n    <span class=\"mf\">5.1405</span>\n</pre></div>\n\n\n\n\n  \n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n ", "encoding": "ascii"}