{"url": "https://www.ics.uci.edu/~eppstein/projects/pairs/Source/testbed/MultiFragment.cp", "content": "// Test of closest pair algorithms\n// David Eppstein, UC Irvine, 20 Apr 1997\n//\n// Multi-fragment TSP application\n//\n// Call by creating a MultiFragmentDistance from your original point set\n// and passing it with the other appropriate parameters to MultiFragment.\n// MultiFragment's behavior is undefined if not given a MultiFragmentDistance.\n\n#include \"MultiFragment.h\"\n#include \"Error.h\"\n#include <float.h>\n#include <iostream.h>\n\ndouble MultiFragment(unsigned long np, PointSet & ps, ClosestPairs & cp)\n{\n\tdouble total = 0.0;\n\tMultiFragmentDistance & mfd = (MultiFragmentDistance &) ps;\n\tpoint a, b, left, right;\n\twhile (np > 2) {\n\t\ttotal += cp(a,b);\n\t\tleft = mfd.partners[a];\t// find other endpoints of frags\n\t\tright = mfd.partners[b];\n\t\tmfd.interact(left,right);\t\t// merge frags keeping other endpts\n\t\tif (left != a) { cp -= a; np--; }\t// drop old endpts that now...\n\t\tif (right != b) { cp -= b; np--; }\t// ...are inside new fragment\n\t\tcp.UpdateDistance(left,right);\t// tell closest pairs about changed frags\n\t}\n\t// now down to one fragment with two endpoints.\n\t// form tour by adding one more edge\n\ttotal += mfd.base(left,right);\n\treturn total;\n}\n\nMultiFragmentDistance::MultiFragmentDistance(unsigned long npoints, PointSet & b)\n\t: PointSet(npoints), base(b), partners(new point[npoints])\n{\n\tif (partners == 0) error(\"MultiFragmentDistance: can't create partners\");\n\tfor (long i = 0; i < npoints; i++)\n\t\tpartners[i] = i;\n}\n\ndouble MultiFragmentDistance::operator() (point i, point j)\n{\n\tif (i == partners[j]) return MAX_DISTANCE;\n\telse return base(i,j);\n}\n\nvoid MultiFragmentDistance::interact(point i, point j)\n{\n\tpartners[i] = j;\n\tpartners[j] = i;\n}", "encoding": "ascii"}