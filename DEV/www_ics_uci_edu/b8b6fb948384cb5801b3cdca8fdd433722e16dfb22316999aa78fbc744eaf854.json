{"url": "https://www.ics.uci.edu/~eppstein/163/s10-hw4.txt", "content": "1. Let graph G have the six vertices a,b,c,d,e, and f, and the nine edges\n    ac with weight 15\n    ad with weight 10\n    ae with weight 1\n    bc with weight 3\n    bd with weight 20\n    be with weight 5\n    fc with weight 12\n    fd with weight 7\n    fe with weight 9\n\n(a) What is the minimum spanning tree of this graph?\n\n(b) In what order would the Prim-Dijkstra-Jarnik algorithm, starting\nfrom vertex a, add edges to form the MST?\n\n(c) In what order would Boruvka's algorithm add edges to form the MST?\n\n(d) In what order would Kruskal's algorithm add edges to form the MST?\n\n\n2. The following pseudocode for performing a find operation in the\nunion-find data structure does not correctly implement the data\nstructure. Explain what is wrong with it.\n\ndef find(x):\n    y = x\n    while y is not a root:\n        y = parent(y)\n    parent(x) = y\n    return y\n\n3. What is the running time for each of the three algorithms,\nPrim-Dijkstra-Jarnik, Boruvka, and Kruskal, when used to build a maze\nfrom a k-by-k grid of squares? For Prim-Dijkstra-Jarnik, use the\nanalysis for the variant of the algorithm that uses binary heaps, and\nfor Kruskal's algorithm, assume that the sorting stage of the algorithm\nis done using a comparison sorting algorithm.  Express your answers in\nO-notation, as a function of k.\n", "encoding": "ascii"}