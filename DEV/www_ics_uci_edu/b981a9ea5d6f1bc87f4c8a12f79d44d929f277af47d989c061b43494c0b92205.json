{"url": "https://www.ics.uci.edu/~amrm/slides/compiler/compiler/sld016.htm", "content": "\n<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->\n\n<HTML>\n<HEAD>\n\n<meta name=\"GENERATOR\" content=\"Microsoft Internet Assistant for Microsoft PowerPoint 97\">\n <TITLE>Compiler-Directed Aggressive Prefetching</TITLE> \n</HEAD>\n\n<BODY     >\n\n<CENTER>\n<TABLE WIDTH=100%> \n     <TR> <TD WIDTH=100% ALIGN=CENTER>\n         <IMG SRC=\"img016.gif\" usemap=\"#Objmap\" WIDTH=640 HEIGHT=480 BORDER=0>\n     </TD> </TR>\n     <TR> <TD WIDTH=100% ALIGN=CENTER>\n         <A HREF=\"sld001.htm\"><IMG SRC=\"first.gif\" BORDER=0 ALT=\"First\"></A>\n         <A HREF=\"sld015.htm\"><IMG SRC=\"prev.gif\" BORDER=0 ALT=\"Previous\"></A>\n         <A HREF=\"sld017.htm\"><IMG SRC=\"next.gif\" BORDER=0 ALT=\"Next\"></A>\n         <A HREF=\"sld024.htm\"><IMG SRC=\"last.gif\" BORDER=0 ALT=\"Last\"></A>\n         <IMG SRC=\"space.gif\" BORDER=0>\n         <A HREF=\"index.htm\"><IMG SRC=\"info.gif\" BORDER=0 ALT=\"Index\"></A>\n         <A HREF=\"http://www.ics.uci.edu/~nicolau\"><IMG SRC=\"home.gif\" BORDER=0 ALT=\"Home\"></A>\n         <A HREF=\"tsld016.htm\"><IMG SRC=\"text.gif\" BORDER=0 ALT=\"Text\"></A>\n     </TD> </TR>\n</TABLE>\n<P>Slide 16 of 24</P>\n</CENTER>\n<!-- <UL>\n<H2>Compiler-Directed Aggressive Prefetching</H2>\n</UL></P>\n<P><UL>\n<LI><H2>The compiler can facilitate prefetching  (e.g., by ensuring that data is prefetched well ahead of its use - possibly several iterations early). \n</H2>\n</UL><UL>\n<LI><H2>\n</H2>\n</UL><UL>\n<LI><H2>The compiler can also attempt to establish data-fetch patterns (e.g., stride regularity/size) and use it to generate either certain or speculative prefetches. \n</H2>\n</UL><UL>\n<LI><H2>\n</H2>\n</UL><UL>\n<LI><H2>To minimize memory bandwidth requirements, the compiler can prioritize prefetching in order of importance, based on global analysis of the code.\n</H2>\n</UL><UL>\n<LI><H2>\n</H2>\n</UL><UL>\n<LI><H2>This essentially requires the same information as ILP exploitation. </H2>\n</UL></P>\n<P>  -->\n</Body>\n</HTML>\n", "encoding": "ascii"}