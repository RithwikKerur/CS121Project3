{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/analysis/data_flow_abstract.html", "content": "<HTML>\n<!-- $Id: data_flow_abstract.html,v 1.1 1995/04/11 23:38:11 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"ftp://ftp.cs.umass.edu/pub/techrept/techreport/1994/UM-CS-1994-045.ps\">\n\"<b>Data Flow Analysis for Verifying Properties of Concurrent Programs</b>\"</A>,\nby Matthew B. Dwyer and Lori A. Clarke in\n<i>Proceedings of the Second ACM SIGSOFT Symposium on Foundations of \nSoftware Engineering</i>,\nNew Orleans, LA, December 1994, pp. 62-75.\n\n<H2> Abstract </H2>\nIn this paper we present an analysis approach based on data flow analysis \nthat has the potential to provide cost-effective analysis of concurrent \nprograms with respect to explicitly stated correctness properties. Using \nthis approach, developers specify properties of concurrent programs as \npatterns of selected program events and choose whether the analysis should \nattempt to verify that all or no program executions satisfy the given \nproperty. We have developed a family of polynomial-time, conservative \ndata flow analysis algorithms whose results can be used to address such \nquestions. \n<P>\n\nTo overcome the traditional inaccuracies of static analysis, we have also \ndeveloped a range of techniques for improving the accuracy of the results. \nPrior to analysis, refinements to the flow graph representation of the \nprogram, based on program and property specific information, increase the \nefficiency of the subsequent analysis and the accuracy of the results. \nDuring analysis, enforcement of feasibility constraints, which are based \non the program being analyzed and the programming language in which it \nis written, improves the accuracy of the results. One strength of our \napproach is the flexibility allowed in choosing and combining these \ntechniques so as to increase accuracy without making analysis time \nimpractical. \n\n<P>\n\nWe have implemented a prototype toolset that automates the analysis for \nprograms with explicit tasking and rendezvous style communication. We \npresent preliminary experimental results using this toolset.\n\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Thu Jan 26 13:36:13 1995\n</ADDRESS>\n</BODY></HTML>\n\n", "encoding": "ascii"}