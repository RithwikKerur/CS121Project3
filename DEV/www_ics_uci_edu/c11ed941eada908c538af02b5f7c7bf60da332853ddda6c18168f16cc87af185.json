{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node307.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Structures with Field Names</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Structures with Field Names\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html5939 HREF=\"node308.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html5937 HREF=\"node268.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html5931 HREF=\"node306.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html5941 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html5940 HREF=\"node308.html\"> Utility Libraries</A>\r\n<B>Up:</B> <A NAME=tex2html5938 HREF=\"node268.html\"> Libraries</A>\r\n<B> Previous:</B> <A NAME=tex2html5932 HREF=\"node306.html\"> Syntax differences</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION0022170000000000000000> Structures with Field Names</A></H1>\r\n<P>\r\n<A NAME=chapstruct>&#160;</A>\r\n<A NAME=7283>&#160;</A>\r\n<P>\r\nThis package allows the use of structures with field names.\r\nIt is intended to make programs more readable and easier\r\nto modify, without compromising efficiency (it is implemented\r\nusing <A NAME=tex2html1493 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  macros).\r\nThe library is loaded using\r\n<blockquote> <PRE>:- lib(structures).\r\n</PRE></blockquote>\r\nA structure is declared by specifying a template like:\r\n<A NAME=7286>&#160;</A>\r\n<blockquote> <PRE>:- define_struct( book(author, title, year, publisher) ).\r\n</PRE></blockquote>\r\nStructures with the functor book/4 can then be written as\r\n<A NAME=7289>&#160;</A>\r\n<blockquote> <PRE>book with []\r\nbook with title:'tom sawyer'\r\nbook with [title:'tom sawyer', year:1886, author:twain]\r\n</PRE></blockquote>\r\nwhich translate to the corresponding forms\r\n<blockquote> <PRE>book(_, _, _, _)\r\nbook(_, 'tom sawyer', _, _)\r\nbook(twain, 'tom sawyer', 1886, _)\r\n</PRE></blockquote>\r\nThis transformation is done by macro expansion, therefore it can\r\nbe used in any context and is as efficient as using the structures\r\ndirectly.\r\nThe argument index of a field in a structure can be obtained\r\nusing a term of the form\r\n<A NAME=7294>&#160;</A>\r\n<blockquote> <PRE>FieldName of StructName\r\n</PRE></blockquote>\r\nE.g. to access (ie. unify) a single argument of a structure,\r\nuse arg/3 like this:\r\n<blockquote> <PRE>arg(year of book, B, Y)\r\n</PRE></blockquote>\r\nwhich is translated into\r\n<blockquote> <PRE>arg(3, B, Y)\r\n</PRE></blockquote>\r\nFor printing structures as with/2 terms, use portray_struct/2:\r\n<blockquote> <PRE>portray_struct(output, B)\r\n</PRE></blockquote>\r\nwhich will print something like\r\n<blockquote> <PRE>book with [author : twain, title : tom sawyer,\r\nyear : 1886, publisher : _g117]\r\n</PRE></blockquote>\r\nRemove the structure declaration using\r\n<blockquote> <PRE>erase_struct(book).\r\n</PRE></blockquote><BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}