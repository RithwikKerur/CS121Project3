{"url": "https://www.ics.uci.edu/~eppstein/pubs/2017.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\n2017\n</h2>\n<ul>\n<li><b>Rooted cycle bases</b>.<br>\nD. Eppstein,\n<a href=\"//www.eng.uci.edu/users/j-michael-mccarthy\">J. M. McCarthy</a>, and\nB. E. Parrish.<br>\n<a href=\"//arxiv.org/abs/1504.04931\">arXiv:1504.04931</a>.<br>\n14th Algorithms and Data Structures Symp. (WADS 2015), Victoria, BC.<br>\n<a href=\"//doi.org/10.1007/978-3-319-21840-3_28\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9214 (2015), pp. 339&ndash;350</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00434\"><i>J. Graph Algorithms &\nApplications</i> 21 (4): 663&ndash;686, 2017</a>.\n<p>\nWe consider the problem of finding a cycle basis for a graph in which\nall basis cycles contain a specified edge. We characterize the graphs\nhaving such a basis in terms of their vertex connectivity, we show that\nthe minimum weight cycle basis with this constraint can be found in\npolynomial time and is weakly fundamental, and we show that finding a\nfundamental cycle basis with this constraint is NP-hard but\nfixed-parameter tractable.\n<p>\n(<a href=\"EppMcCPar-WADS-15-slides.pdf\">Slides</a>)\n<p>\n<li><b>Folding polyominoes into (poly)cubes</b>.<br>\n<a href=\"//www.ist.tugraz.at/aichholzer/\">O. Aichholzer</a>,\n<a href=\"//www.swarthmore.edu/profile/michael-biro\">M. Biro</a>,\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\n<a href=\"//martindemaine.org/\">M. Demaine</a>,\nD. Eppstein,\n<a href=\"//www.ibr.cs.tu-bs.de/users/fekete/?lang=en\">S. P. Fekete</a>,\n<a href=\"//math.mit.edu/directory/profile.php?pid=1468\">A. Hesterberg</a>,\n<a href=\"//www.win.tue.nl/~ikostits/\">I. Kostitsyna</a>, and\n<a href=\"//www.cs.huji.ac.il/~cschmidt/\">C. Schmidt</a>.<br>\n<a href=\"//www.cccg.ca/proceedings/2015/37.pdf\"><i>27th Canadian Conference on Computational Geometry</i>, Kingston, Ontario,\nCanada, 2015, pp.&nbsp;101&ndash;106</a>.<br>\n<a href=\"//arxiv.org/abs/1712.09317\">arXiv:1712.09317</a>.<br>\n<a href=\"//doi.org/10.1142/S0218195918500048\"><i>Int. J. Comp. Geom. &amp;\nAppl.</i> 28 (3): 197&ndash;226, 2018</a>.\n<p>\nWe classify the polyominoes that can be folded to form the surface of a\ncube or polycube, in multiple different folding models that incorporate\nthe type of fold (mountain or valley), the location of a fold (edges of\nthe polycube only, or elsewhere such as along diagonals), and whether\nthe folded polyomino is allowed to pass through the interior of the\npolycube or must stay on its surface.\n<p>\n<li><b>Structure of graphs with locally restricted crossings</b>.<br>\n<a href=\"//engineering.uottawa.ca/eecs/people/dujmovic-vida\">V. Dujmovi&#263;</a>,\nD. Eppstein, and\n<a href=\"//users.monash.edu.au/~davidwo/\">D. R. Wood</a>.<br>\n<a href=\"//arxiv.org/abs/1506.04380\">arXiv:1506.04380</a>.<br>\n<i>23rd Int. Symp. Graph Drawing</i>, Los Angeles, California, 2015.<br>\n<a href=\"//doi.org/10.1007/978-3-319-27261-0_8\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 9411 (2015), pp. 87&ndash;98</a>.<br>\n<a href=\"//doi.org/10.1137/16M1062879\"><i>SIAM J. Discrete Math.</i> 31 (2): 805&ndash;824, 2017</a>.\n<p>\nThe Graph Drawing version used the alternative title\n\"Genus, treewidth, and local crossing number\".\nWe prove tight bounds on the treewidth of graphs embedded on low-genus\nsurfaces with few crossings per edge, and nearly tight bounds on the\nnumber of crossings per edge for graphs with a given number of edges\nembedded on low-genus surfaces.\n<p>\n(<a href=\"DujEppWoo-GD-15-slides.pdf\">Slides</a>\n&mdash; <a href=\"DujEppWoo-SIDMA-17.pdf\">local copy of final version</a>)\n<p>\n<li><b>Maximizing the sum of radii of disjoint balls or disks</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1607.02184\">arXiv:1607.02184</a>.<br>\n<i>Proc. 28th Canadian Conference on Computational Geometry</i>, Vancouver, BC,\nCanada, 2016, pp. 260&ndash;265.<br>\n<a href=\"//doi.org/10.20382/jocg.v8i1a12\"><i>J. Computational Geometry</i> 8 (1): 316&ndash;339, 2017</a>.<br>\n<p>\nWe show how to find a system of disjoint balls with given centers,\nmaximizing the sum of radius of the balls. Our algorithm takes cubic\ntime in arbitrary metric spaces and can be sped up to subquadratic time\nin Euclidean spaces of any bounded dimension.\n<p>\n(<a href=\"Epp-CCCG-16-slides.pdf\">Slides</a>)\n<p>\n<li><b><i>K</i>-best solutions of MSO problems on tree-decomposable graphs</b>.<br>\nD. Eppstein and\n<a href=\"//ls11-www.cs.uni-dortmund.de/staff/kurz\">D. Kurz</a>.<br>\n<a href=\"//arxiv.org/abs/1703.02784\">arXiv:1703.02784</a>.<br>\n<i>Proc. 12th International Symposium on Parameterized and Exact\nComputation (IPEC 2017)</i>, Vienna, Austria, 2017.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.IPEC.2017.16\">Leibniz International\nProceedings in Informatics (LIPIcs) 89, pp. 16.1&ndash;16.13</a>\n<p>\nWe show that, on graphs of bounded treewidth, for any\noptimization problem definable in monadic second-order logic, we can\nfind the <i>k</i> best solutions in logarithmic time per solution.\n<p>\n<li><b>Algorithms for stable matching and clustering in a grid</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nN. Mamano.<br>\n<a href=\"//arxiv.org/abs/1704.02303\">arXiv:1704.02303</a><br>\n<i>Proc. 18th International Workshop on Combinatorial Image Analysis\n(IWCIA 2017)</i>, Plovdiv, Bulgaria, 2017.<br>\n<a href=\"//doi.org/10.1007/978-3-319-59108-7_10\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 10256 (2017), pp. 117&ndash;131</a>.\n<p>\nMotivated by redistricting, we consider geometric variants of the stable\nmatching problem in which points (such as the pixels of a discretization\nof the unit square) are to be matched to a smaller number of centers\nsuch that each center has the same number of matches and no match is\nunstable with respect to Euclidean distances. We show how to solve such\nproblems in polylogarithmic time per matched point, experiment with\npractical heuristics for solving these problems, and test methods for\nmoving the centers to improve the shape of the matched regions.\n<p>\n<li><b>2-3 cuckoo filters for faster triangle listing and set intersection</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.eecs.harvard.edu/~michaelm/\">M. Mitzenmacher</a>, and\nM. Torres.<br>\n<a href=\"//doi.org/10.1145/3034786.3056115\"><i>Proc. 36th ACM SIGMOD-SIGACT-SIGAI Symposium on Principles of\nDatabase Systems (PODS 2017)</i>, Chicago, 2017, pp. 247&ndash;260</a>.<br>\n<p>\nWe show that bit-parallel algorithm design techniques, on a machine of\nword size <i>w</i>, can speed up the time for sparse set intersection by\na factor of log&nbsp;<i>w</i>/<i>w</i>. The main data structure\nunderlying our algorithms is the cuckoo filter, a variant of cuckoo hash\ntables that has operations similar to a Bloom filter but outperforms\nBloom filters in several respects.\n<p>\n<li><b>Maximum plane trees in multipartite geometric graphs</b>.<br>\n<a href=\"//cglab.ca/~biniaz/\">A. Biniaz</a>,\n<a href=\"//jitbose.ca/\">P. Bose</a>,\n<a href=\"//cglab.ca/~jdecaruf/\">J.-L. De Carufel</a>,\nK. Crosbie,\nD. Eppstein,\n<a href=\"//people.scs.carleton.ca/~maheshwa/\">A. Maheshwari</a>,\n<a href=\"//people.scs.carleton.ca/~michiel/\">M. Smid</a>.<br>\n15th Algorithms and Data Structures Symp. (WADS 2017), St. John's, Newfoundland.<br>\n<a href=\"//doi.org/10.1007/978-3-319-62127-2_17\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> (2017), pp. 193&ndash;204</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-018-0482-x\"><i>Algorithmica</i> 81 (4): 1512&ndash;1534, 2019</a>.\n<p>\nWe consider problems of constructing the maximum-length plane (non-self-crossing) spanning\ntree on Euclidean graphs given by multicolored point sets, where each\npoint forms a vertex, and each bichromatic pair of points forms an edge\nwith length equal to their Euclidean distance.\nWe show that several such problems can be efficiently approximated.\n<p>\n<li><b>Using multi-level parallelism and 2-3 cuckoo filters for faster\nset intersection queries and sparse boolean matrix multiplication</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>.<br>\n<a href=\"//doi.org/10.1145/3087556.3087599\">Brief announcement, <i>Proc. 29th ACM Symposium on Parallelism in\nAlgorithms and Architectures (SPAA)</i>, Washington, DC, 2017, pp. 137&ndash;139.</a><br>\n<p>\nWe provide parallel versions of our bit-parallel algorithms from PODS\n2017 for sparse set intersection.\n<p>\n<li><b>Defining equitable geographic districts in road networks via stable matching</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\nD. Korkmaz, and\nN. Mamano.<br>\n<a href=\"//arxiv.org/abs/1706.09593\">arXiv:1706.09593</a><br>\n<a href=\"//doi.org/10.1145/3139958.3140015\"><i>Proc. 25th ACM SIGSPATIAL Int. Conf. Advances\nin Geographic Information Systems (ACM SIGSPATIAL 2017)</i>,\nRedondo Beach, California, pp. 52:1&ndash;52:4</a>.<br>\n<p>\nWe cluster road networks (modeled as planar graphs, or more generally as\ngraphs obeying a separator theorem) with a given set of cluster centers,\nby matching graph vertices to centers stably according to distance: no\nunmatched vertex and center should have smaller distances than the\nmatched pairs for the same points. We provide a separator-based data\nstructure for dynamic nearest neighbor queries in planar or separated\ngraphs, which allows the optimal stable clustering to be constructed in\ntime <i>O</i>(<i>n</i><sup>3/2</sup>log&nbsp;<i>n</i>).\nWe also experiment with heuristics for fast practical construction of\nthis clustering.\n<p>\n<li><b>Forbidden configurations in discrete geometry</b>.<br>\nD. Eppstein.<br>\nPaul Erd&#337;s Memorial Lecture, 29th Canadian Conference on\nComputational Geometry, Ottawa, Canada, 2017.<br>\nInvited talk, 20th Japan Conference on Discrete\nand Computational Geometry, Graphs, and Games, Tokyo, 2017.<br>\nInvited talk, 5th International Combinatorics Conference, Melbourne,\nAustralia, 2017.<br>\nInvited talk, Southern California Theory Day, Irvine, California, 2018.<br>\n<a href=\"//www.cambridge.org/eppstein\">Cambridge University Press, 2018</a>.\n<p>\nWe survey problems on finite sets of points in the Euclidean plane that\nare monotone under removal of points and depend only on the order-type\nof the points, and the subsets of points (forbidden configurations) that\nprevent a point set from having a given monotone property.\n<p>\n(<a href=\"Epp-CCCG-17.pdf\">CCCG talk slides</a> &ndash;\n<a href=\"//youtu.be/E-7cmjqEbbY?list=PL7Q1MpbNe0pnan3gYPHK_-GEdpnvpRUfi\">CCCG\ntalk video</a> &ndash;\n<a href=\"Epp-SCTD-18.pdf\">SCTD talk slides</a> &ndash;\n<a href=\"//www.ics.uci.edu/~eppstein/forbidden/\">Updates and errata</a> &ndash;\n<a href=\"//www.maa.org/press/maa-reviews/forbidden-configurations-in-discrete-geometry\">Review by Darren Glass for <i>MAA Reviews</i></a>)\n<p>\n<li><b>Triangle-free penny graphs: degeneracy, choosability, and edge count</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1708.05152\">arXiv:1708.05152</a>.<br>\n<i>Proc. 25th Int. Symp. Graph Drawing</i>, Boston, Massachusetts, 2017.<br>\n<a href=\"//doi.org/10.1007/978-3-319-73915-1_39\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 10692 (2018), pp. 506&ndash;513</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00463\"><i>J. Graph Algorithms &\nApplications</i> 22 (3): 483&ndash;499 (special issue for GD 2017), 2018</a>.\n<p>\nA penny graph is the contact graph of unit disks: each disk represents a\nvertex of the graph, no two disks can overlap, and each tangency between\ntwo disks represents an edge in the graph.\nWe prove that, when this graph is triangle free, its degeneracy is at most two.\nAs a consequence, triangle-free penny graphs have list chromatic number\nat most three.\nWe also show that the number of edges in any such graph is at most\n2<i>n</i>&nbsp;&minus;&nbsp;&Omega;(&radic;<i>n</i>).\nThe journal version uses the alternative title \"Edge Bounds and Degeneracy of Triangle-Free Penny Graphs and Squaregraphs\".\n<p>\n(<a href=\"Epp-GD-17-penny-slides.pdf\">Slides</a>)\n<p>\n<li><b>The effect of planarization on width</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1708.05155\">arXiv:1708.05155</a>.<br>\n<i>Proc. 25th Int. Symp. Graph Drawing</i>, Boston, Massachusetts, 2017.<br>\n<a href=\"//doi.org/10.1007/978-3-319-73915-1_43\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 10692 (2018), pp. 560&ndash;572</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00468\"><i>J. Graph Algorithms &\nApplications</i> 22 (3): 461&ndash;481 (special issue for GD 2017), 2018</a>.\n<p>\nWe study what happens to nonplanar graphs of low width\n(for various width measures) when they are made planar by\nreplacing crossings by vertices.\nFor treewidth, pathwidth, branchwidth, clique-width, and tree-depth,\nthis replacement can blow up the width from constant to linear.\nHowever, for bandwidth, cutwidth, and carving width,\ngraphs of bounded width stay bounded when we planarize them.\n<p>\n(<a href=\"Epp-GD-17-planarization-slides.pdf\">Slides</a>)\n<p>\n<li><b>Crossing patterns in nonplanar road networks</b>.<br>\nD. Eppstein and\nS. Gupta.<br>\n<a href=\"//arxiv.org/abs/1709.06113\">arXiv:1709.06113</a>.<br>\n<a href=\"//doi.org/10.1145/3139958.3139999\"><i>Proc. 25th ACM SIGSPATIAL Int. Conf. Advances\nin Geographic Information Systems (ACM SIGSPATIAL 2017)</i>,\nRedondo Beach, California, pp. 40:1&ndash;40:9</a>.<br>\n<p>\nWe show that, although an individual edge in a road network can have\nmany crossings, real-world road networks have the property that the\ncrossing graph of their edges is sparse.\nWe prove that networks with this property are themselves sparse and have\nsmall separators, allowing many fast algorithms to be generalized from\nplanar graphs to these networks.\n<p>\n<li><b>Square-contact representations of partial 2-trees and\ntriconnected simply-nested graphs</b>.<br>\n<a href=\"//www.dia.uniroma3.it/~dalozzo/\">G. Da Lozzo</a>,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein, and\n<a href=\"//www.ics.uci.edu/~tujohnso/\">T. Johnson</a>.<br>\n<a href=\"//arxiv.org/abs/1710.00426\">arXiv:1710.00426</a>.<br>\n<i>Proc. 28th Int. Symp. Algorithms and Computation (ISAAC 2017)</i>,\nPhuket, Thailand, 2017.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.ISAAC.2017.24\">Leibniz International\nProceedings in Informatics (LIPIcs) 92, pp. 24:1&ndash;24:16</a>.<br>\n<p>\nWe show that the <i>K</i><sub>1,1,3</sub>-free partial 2-trees and the\nHalin graphs other than <i>K</i><sub>4</sub> can all be\nrepresented as proper contact graphs of squares in the plane. Among partial\n2-trees and Halin graphs, these are exactly the ones that can be\nembedded without nonempty triangles, which form an obstacle to the\nexistence of square contact representations. However the graph\nof a square antiprism has no such representation despite being\nembeddable without any nonempty triangles.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"year.html\">Years</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}