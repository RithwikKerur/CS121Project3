{"url": "https://www.ics.uci.edu/~eppstein/pubs/j-cgta.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nComputational Geometry : Theory &amp; Applications\n</h2>\n<ul>\n<li><b>The farthest point Delaunay triangulation minimizes angles</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-90-45.pdf\">Tech. Rep. 90-45</a>, ICS, UCI, 1990.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(98)00031-5\">\n<i>Comp. Geom. Theory &amp; Applications</i> 1: 143&ndash;148, 1992</a>.\n<p>\nGiven a collection of points in convex position,\nthe sharpest angle determined by any triple can be found\nas a corner of a triangle\nin the farthest point Delaunay triangulation.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#The farthest point Delaunay triangulation minimizes angles\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/The-farthest-point-Delaunay-triangulation-minimizes-angles.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein90farthest.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=158945\">ACM DL</a>)\n<p>\n<li><b>Algorithms for proximity problems in higher dimensions</b>.<br>\n<a href=\"//www.middlebury.edu/~dickerso/\">\nM. T. Dickerson</a> and D. Eppstein.<br>\n<a href=\"//doi.org/10.1016/0925-7721(95)00009-7\">\n<i>Comp. Geom. Theory &amp; Applications</i> 5: 277&ndash;291, 1996</a>.\n<p>\nCombines a method from\n\"<a href=\"p-pgood.html\">Provably good mesh generation</a>\" for\nfinding sparse high-dimensional Delaunay triangulations,\na method of Dickerson, Drysdale, and Sack\n[\"<a href=\"//www.middlebury.edu/~dickerso/research/enum.html\">Simple\nalgorithms for enumerating interpoint distances</a>\", IJCGA 1992]\nfor using Delaunay\ntriangulations to search for nearest neighbors,\nand a method of Frederickson for speeding up tree-based searches.\nThe results are fast algorithms for several proximity problems\nsuch as finding the <i>k</i> nearest neighbors to each point\nin a given point set.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Algorithms for proximity problems in higher dimensions\">BibTeX</a> &ndash;\n<a href=\"DicEpp-CGTA-96.pdf\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Algorithms-for-proximity-problems-in-higher-dimensions.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/dickerson96algorithms.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=236474\">ACM DL</a>)\n<p>\n<li><b>Average case analysis of dynamic geometric optimization</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-93-18.pdf\">Tech. Rep. 93-18</a>, ICS, UCI, 1993.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314481\">\n<i>5th ACM-SIAM Symp. Discrete Algorithms,</i> Arlington, 1994, pp. 77&ndash;86</a>.<br>\n<a href=\"//doi.org/10.1016/0925-7721(95)00018-6\">\n<i>Comp. Geom. Theory &amp; Applications</i> 6: 45&ndash;68, 1996</a>.\n<p>\nThe Tech. Report used the more informative title\n\"Updating widths and maximum spanning trees using the rotating caliper graph\",\nwhich I also used for the journal submission,\nbut the referees made me change it back.\nDynamic geometry in a model of Mulmuley and Schwarzkopf in which insertions\nand deletions are chosen randomly among a worst-case pool of points.\nThis paper introduces several fundamental techniques\nincluding the <a href=\"/~eppstein/junkyard/rcg.html\">rotating caliper\ngraph</a> of a point set and a method for performing\ndecomposible range queries in the average case setting.\nIt has also since inspired the use of a similar model in dynamic graph\nalgorithms.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Average case analysis of dynamic geometric optimization\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-94-dyngeom.pdf\">SODA paper</a> &ndash;\n<a href=\"Epp-CGTA-96.pdf\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Average-case-analysis-of-dynamic-geometric-optimization.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96average.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=228291\">ACM DL</a>)\n<p>\n<li><b>Faster geometric <i>k</i>-point MST approximation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-13.pdf\">Tech. Rep. 95-13</a>, ICS, UCI, 1995.<br>\n<i>Comp. Geom. Theory &amp; Applications</i> 8: 231&ndash;240, 1997.\n<p>\nVarious authors have looked at a variant of geometric clustering\nin which one must select <i>k</i> points that can be connected by a\nsmall\n<a href=\"mst.html\">spanning tree</a>.  The problem is NP-complete (for\nvariable <i>k</i>);\ngood approximations are known based on dynamic programming techniques\nbut the time dependence on <i>n</i> is high.  This paper describes\na faster approximation algorithm based on dynamic programming in\nquadtrees, and a general technique\nbased on that in \"<a href=\"p-inn.html\">Iterated nearest neighbors</a>\"\nfor reducing the dependence\non <i>n</i> in any approximation algorithm.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Faster geometric $k$-point MST approximation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Faster-geometric-k-point-MST-approximation.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95faster.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=264740\">ACM DL</a>)\n<p>\n<li><b>Linear complexity hexahedral mesh generation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-51.pdf\">Tech. Rep. 95-51</a>, ICS, UCI, 1995.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=237237\">\n<i>12th ACM Symp. Comp. Geom.,</i> Philadelphia,\n1996, pp. 58&ndash;67</a>.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809109\">arXiv:cs.CG/9809109</a>.<br>\n<i>Comp. Geom. Theory &amp; Applications</i> 12: 3&ndash;16, 1999\n(special issue for 12th SCG).\n<p>\nAny simply connected polyhedron with an even number of quadrilateral\nsides can be partitioned into O(n) topological cubes, meeting face to\nface.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Linear complexity hexahedral mesh generation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Linear-complexity-hexahedral-mesh-generation.html\">Citations</a> &ndash;\n<a href=\"Epp-SCG-96.pdf\">SCG paper</a> &ndash;\n<a href=\"p-hexmesh-slides.pdf\">SCG talk slides</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96linear.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=310411\">ACM DL (CGTA)</a>)\n<p>\n<li><b>On triangulating three-dimensional polygons</b>.<br>\n<a href=\"//www.cs.technion.ac.il/~barequet/\">G. Barequet</a>, \n<a href=\"//www.middlebury.edu/~dickerso/\">M. Dickerson</a>,\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=237234\">\n<i>12th ACM Symp. Comp. Geom.,</i> Philadelphia, 1996, pp. 38&ndash;47</a>.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(98)00005-4\">\n<i>Comp. Geom. Theory &amp; Applications</i> 10: 155&ndash;170, 1998</a>.\n<p>\nIt is NP-complete, given a simple polygon in 3-space,\nto find a triangulated simply-connected surface (without extra vertices)\nspanning that polygon.  If extra vertices are allowed,\nor the surface may be curved,\nsuch a surface exists if and only if the polygon is unknotted;\nthe complexity of testing knottedness remains open.\nSnoeyink has shown that exponentially many extra vertices may be\nrequired for a triangulated spanning disk.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#On triangulating three-dimensional polygons\">BibTeX</a> &ndash;\n<a href=\"ftp://ftp.cs.technion.ac.il/pub/barequet/papers/3dt-socg96.ps.gz\">SCG paper</a> &ndash;\n<a href=\"ftp://ftp.cs.technion.ac.il/pub/barequet/papers/3dt-cgta.ps.gz\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/On-triangulating-three-dimensional-polygons.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/barequet96triangulating.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=292813\">ACM DL</a>)\n<p>\n<li><b>Beta-skeletons have unbounded dilation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-15.pdf\">Tech. Rep. 96-15</a>, ICS, UCI, 1996.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9907031\">arXiv:cs.CG/9907031</a>.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(01)00055-4\">\n<i>Comp. Geom. Theory &amp; Applications</i> 23: 43&ndash;52, 2002</a>.\n<p>\nBeta-skeletons are geometric graphs used among other purposes\nfor <a href=\"//www.ics.uci.edu/~eppstein/junkyard/betadil.html\">empirical\nnetwork analysis</a> and minimum weight triangulation.\nA fractal construction shows that, for any beta&gt;0,\nthe beta-skeleton of a point set can have arbitrarily large dilation:\nOmega(n<sup>c</sup>), where c is a constant depending on beta\nand going to zero in the limit as beta goes to zero.\nIn particular this applies to the Gabriel graph.\nWe also show upper bounds on dilation of the same form.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Beta-skeletons have unbounded dilation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Beta-skeletons-have-unbounded-dilation.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=599525\">ACM DL</a>)\n<p>\n<li><b>Ununfoldable polyhedra</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\nD. Eppstein,\nE. Kuo,\n<a href=\"//www.cs.unc.edu/~mantler/\">A. Mantler</a>, and\n<a href=\"//www.cs.unc.edu/~snoeyink/\">J. Snoeyink</a>.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9908003\">arXiv:cs.CG/9908003</a>.<br>\n<a href=\"ftp://cs-archive.uwaterloo.ca/cs-archive/CS-99-04/\">Tech. rep.\nCS-99-04, Univ. of Waterloo, Dept. of Computer Science, Aug. 1999</a>.<br>\n<a href=\"//www.cs.ubc.ca/conferences/CCCG/elec_proc/fp38.pdf\"><i>11th Canad. Conf. Comp. Geom.,</i> 1999</a>.<br>\n<a href=\"//www.cs.jhu.edu/~cgc/abstracts99/old/eric.uptf.ps\">4th CGC\nWorksh. Computational Geometry</a>, Johns Hopkins Univ., 1999.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(02)00091-3\">\n<i>Comp. Geom. Theory &amp; Applications</i> (special\nissue for 4th CGC Worksh.) 24 (2): 51&ndash;62, 2003</a>.\n<p>\nWe prove the existence of polyhedra in which all faces are convex,\nbut which can not be cut along edges and folded flat.\n<p>\nNote variations in different versions: the CCCG one was only Bern,\nDemain, Eppstein, and Kuo, and the WCG one had the title \"Ununfoldable\npolyhedra with triangular faces\". The journal version uses the title\n\"Ununfoldable polyhedra with convex faces\" and\nthe combined results from both conference versions.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Ununfoldable polyhedra\">BibTeX</a> &ndash;\n<a href=\"//db.uwaterloo.ca:80/~eddemain/papers/CCCG99b/\">Erik's\npublication page</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern99ununfoldable.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=636970\">ACM DL</a>)\n<p>\n<li><b>Hinged dissections of polyominos and polyforms</b>.<br>\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\n<a href=\"//martindemaine.org/\">M. Demaine</a>,\nD. Eppstein,\n<a href=\"//www.cs.purdue.edu/people/gnf/\">G. Frederickson</a>,\nand\n<a href=\"//www.stetson.edu/~efriedma/index.html\">E. Friedman</a>.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9907018\">arXiv:cs.CG/9907018</a>.<br>\n<a href=\"//www.cs.ubc.ca/conferences/CCCG/elec_proc/fp37.pdf\"><i>11th\nCanad. Conf. Comp. Geom.,</i> 1999</a>.<br>\n<i>Computational Geometry: Theory and Applications</i> 31 (3): 237&ndash;262, 2005\n(special issue for 11th CCCG).\n<p>\nWe show that, for any n, there exists a mechanism formed by connecting\npolygons with hinges that can be folded into all possible n-ominos.\nSimilar results hold as well for n-iamonds, n-hexes, and n-abolos.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Hinged dissections of polyominoes and polyforms\">BibTeX</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~edemaine/papers/CCCG99a/\">Erik's\nCCCG publication page</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~edemaine/papers/HingedPolyforms/\">Erik's\nCGTA publication page</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Hinged-dissections-of-polyominoes-and-polyforms.html\">Citations</a>)\n<p>\n<li><b>Tiling space and slabs with acute tetrahedra</b>.<br>\nD. Eppstein,\n<a href=\"//torus.math.uiuc.edu/jms/\">J. M. Sullivan</a>,\nand <a href=\"//www.cs.duke.edu/~ungor/\">A. &Uuml;ng&ouml;r</a>.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0302027\">arXiv:cs.CG/0302027</a>.<br>\n<a href=\"//doi.org/10.1016/j.comgeo.2003.11.003\">\n<i>Comp. Geom. Theory &amp; Applications</i> 27 (3): 237&ndash;255, 2004</a>.\n<p>\nWe show it is possible to\n<a href=\"geom-tri.html\">triangulate</a> three-dimensional space using only\ntetrahedra with acute dihedral angles. We present several constructions\nto achieve this, including one in which all dihedral angles are less\nthan 77.08 degrees, and another which tiles a slab in space.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Tiling space and slabs with acute tetrahedra\">BibTeX</a>)\n<p>\n<li><b>Minimum dilation stars.</b><br>\nD. Eppstein and\n<a href=\"//kwortman.ecs.fullerton.edu/\">K. Wortman</a>.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0412025\">arXiv:cs.CG/0412025</a>.<br>\n<i>21st ACM Symp. Comp. Geom.,</i> Pisa, 2005, pp. 321&ndash;326.<br>\n<a href=\"//doi.org/10.1016/j.comgeo.2006.05.007\"><i>Comp. Geom. Theory &amp; Applications</i> 37 (1): 27&ndash;37, 2007</a>.\n<p>\nWe show how to test the dilation of a star, embedded in a Euclidean\nspace of bounded dimension, in time O(n&nbsp;log&nbsp;n),\nand how to find the star center that has the minimum dilation for\na given set of leaf points in randomized expected time\nO(n&nbsp;log&nbsp;n).\nFor two-dimensional points, we can find the minimum dilation center,\nconstrained to be one of the input points, in time\nO(n&nbsp;2<sup>&alpha;(n)</sup>&nbsp;log<sup>2</sup>n).\nThe unconstrained center placement algorithm involves\n<a href=\"geom-lp.html\">quasiconvex programming</a>, and is used\nas a subroutine in the constrained center placement algorithm.\n<p>\n(<a href=\"EppWor-SoCG-05.pdf\">SoCG05 talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Minimum-dilation-stars.html\">Citations</a> &ndash;\n<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Minimum dilation stars\">BibTeX</a>)\n<p>\n<li><b>Drawings of planar graphs with few slopes and segments.</b><br>\n<a href=\"//engineering.uottawa.ca/eecs/people/dujmovic-vida\">V. Dujmovi&#263;</a>,\nD. Eppstein,\n<a href=\"//cgm.cs.mcgill.ca/~msuder/\">M. Suderman</a>,\nand\n<a href=\"//users.monash.edu.au/~davidwo/\">D. R. Wood</a>.<br>\n<a href=\"//arxiv.org/abs/math.CO/0606450\">arXiv:math.CO/0606450</a>.<br>\n<a\nhref=\"//doi.org/10.1016/j.comgeo.2006.09.002\"><i>Comp.\nGeom. Theory &amp; Applications</i> 38: 194&ndash;212, 2007.</a>\n<p>\nWe study straight-line drawings of planar graphs with few segments and\nfew slopes. Optimal results are obtained for all trees. Tight bounds are\nobtained for outerplanar graphs, 2-trees, and planar 3-trees. We prove\nthat every 3-connected plane graph on n vertices has a plane drawing\nwith at most 5n/2 segments and at most 2n slopes. We prove that\nevery cubic 3-connected plane graph has a plane drawing with three\nslopes (and three bends on the outerface).\n<p>\n<li><b>Edges and switches, tunnels and bridges.</b><br>\nD. Eppstein,\n<a href=\"//www.cs.uu.nl/~marc/\">M. van Kreveld</a>,\nE. Mumford, and\n<a href=\"//www.win.tue.nl/~speckman/\">B. Speckmann</a>.<br>\n23rd European Workshop on Computational Geometry (EWCG'07), Graz, 2007.<br>\n<i>10th Worksh. Algorithms and Data Structures,</i> Halifax, Nova Scotia, 2007.<br>\n<i>Springer, Lecture Notes in Comp. Sci.</i> 4619, 2007, pp. 77&ndash;88.<br>\n<a\nhref=\"//www.cs.uu.nl/research/techreps/UU-CS-2007-042.html\">Tech.\nRep. UU-CS-2007-042</a>, Utrecht Univ., Dept. of Information and\nComputing Sciences, 2007.<br>\n<a href=\"//arxiv.org/abs/0705.0413\">arXiv:0705.0413</a>.<br>\n<a href=\"//doi.org/10.1016/j.comgeo.2008.05.005\"><i>Comp.\nGeom. Theory &amp; Applications</i> 42 (8): 790&ndash;802, 2009</a> (special issue\nfor EWCG'07).\n<p>\nWe show how to solve several versions of the problem of casing graph drawings:\nthat is, given a drawing, choosing to draw one edge as upper and one\nlower at each crossing in order to improve the drawing's readability.\n<p>\n(<a href=\"EppKreMum-WADS-07.pdf\">WADS talk slides</a>)\n<p>\n<li><b>Near-linear-time deterministic plane Steiner spanners and TSP\napproximation for well-spaced point sets</b>.<br>\n<a href=\"//blogs.oregonstate.edu/glencora/\">G. Borradaile</a> and\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1206.2254\">arXiv:1206.2254</a>.<br>\n<i>24th Canadian Conference on Computational Geometry (CCCG 2012)</i>,\nPrince Edward Island, Canada, 2012, pp. 311&ndash;316.<br>\n<a href=\"//doi.org/10.1016/j.comgeo.2015.04.005\"><i>Comp. Geom. Theory\n&amp; Applications</i> 49: 8&ndash;16, 2015</a> (special issue for CCCG 2012).\n<p>\nWhen a planar point set has the property that its Delaunay triangulation\nhas no large angles, we show how to connect it by a plane graph (having\nlinearly many additional Steiner vertices) in which the distances\nbetween the original points are approximations to their Euclidean\ndistance, and in which the total graph weight is at most a constant\ntimes the minimum spanning tree weight. The time to construct this graph\nis near-linear, the same as for integer sorting. We use this result to\napproximate the traveling salesman problem, for these point sets, in the\nsame time bound.\n<p>\n<li><b>Distance-sensitive point location made easy</b>.<br>\n<a href=\"//cis.poly.edu/~aronov/\">B. Aronov</a>,\n<a href=\"//www.win.tue.nl/~mdberg/\">M. De Berg</a>,\nD. Eppstein,\n<a href=\"//www.win.tue.nl/~mroeloff/\">M. Roeloffzen</a>, and\n<a href=\"//www.win.tue.nl/~speckman/\">B. Speckmann</a>.<br>\n30th European Workshop on Computational Geometry (EuroCG 2014), Dead\nSea, Israel, March 2014.<br>\n<a href=\"//arxiv.org/abs/1602.00767\">arXiv:1602.00767</a><br>\n<a href=\"//doi.org/10.1016/j.comgeo.2016.02.001\"><i>Comp. Geom. Theory\n&amp; Applications</i> 54: 17&ndash;31, 2016</a>.\n<p>\nWe use quadtrees to handle point location queries in an amount of time\nthat depends on the distance of the query point to the nearest region\nboundary.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"jour.html\">Journals</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}