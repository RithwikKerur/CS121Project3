{"url": "https://www.ics.uci.edu/~dan/bridge/performance.html", "content": "<HTML><HEAD>\n<TITLE>program performance</TITLE>\n</HEAD><BODY>\n<H2>program performance</H2>\n\nThe following table illustrates the program's performance on a Sparc 5.\n<UL>\n <LI> The execution time dramatically increases\n      with the problem size and difficulty.\n      Many hands require only a few minutes, but\n      some hands (two examples given below)\n      require several hours, even using Version 4.\n <LI> If the pool usage approaches 100%, increasing POOLSIZ\n      may significantly improve performance.\n      In one example hand shown below, increasing POOLSIZ by 50%\n      reduced the number of nodes (and time) by a factor of 2.\n <LI> The performance (execution time) will degrade horribly if too\n      much space is used.  One should adjust STKSIZ and POOLSIZ so\n      as to avoid using any virtual memory.  Since there are other\n      resident programs (such as the underlying operating system),\n      a reasonable rule of thumb is to use 75% of physical memory.\n <LI> When tree production is optionally suppressed,\n      fewer nodes need to be expanded.\n <LI> Further significant performance enhancements are certainly\n      possible,\n      as comparison with Matt Ginsberg's engine (MG) illustrates.\n</UL>\n<P>\n<PRE>\n    |\"devilish\"|   hard   |  harder  |\n    |   3NT    |    7H    |    3NT   |\n    |          |          |          | alpha-beta\nVers|Nodes Time|Nodes Time|Nodes Time|  amenities\n----|----- ----|----- ----|----- ----| ----------\n 0  | 21 M 11 m|          |          | dynamic rank equiv\n 1  |7.8 M 110 |          |          | dynamic rank order\n 2  | 562k  13 | 65 M 41 m|          | node isomorphism\n    | 541k  12 | 19 M 12 m|281 M 107m|     \"    , no tree\n 3  | 198k 6.4 |2.7 M 130 |9.7 M 327 | node equivalence\n    | 188k 5.4 |1.4 M  59 |6.4 M 195 |     \"    , no tree\n 4  | 136k 2.6 |1.2 M  27 |6.2 M 127 | dynamic backtrack\n    | 126k 2.3 |1.0 M  22 |5.6 M 109 |     \"    , no tree\n----|----- ----|----- ----|----- ----| ----------\nMG  |  46k 3.0 |  51k 3.5 | 219k  16 | partition search, no tree\n</PRE>\n\nIn the above table,\n<BR>\nNodes = number of nodes expanded (<tt>M</tt> = million, <tt>k</tt> = thousand)\n<BR>\nTime  = time to complete (in seconds, except <tt>m</tt> = minutes)\non a Sparc 5.\n<BR>\nA Pentium Pro 200 would be about 2.5 to 3 times faster.\n<P>\nThe hands are as follows:\n<PRE>\n#========================================\n#  \"devilish\" 3NT\nWHO = N\nNEED = 9\nSIZE = 13\nTRUMP = N\nLEADER = W\nFORCED = QH\nNORTH = S AK83 H AK     D A65432 C K\nEAST  = S JT92 H 54     D Q      C 765432\nSOUTH = S Q74  H 932    D J87    C QT98\nWEST  = S 65   H QJT876 D KT9    C AJ\n#========================================\n#  hard 7H\nWHO = N\nNEED = 13\nSIZE = 13\nTRUMP = H\nLEADER = W\nFORCED = QC\nNORTH = S 5     H 85     D AK7  C AK86542\nEAST  = S 86432 H Q632   D J62  C 3\nSOUTH = S AQJ9  H AKJT74 D 954\nWEST  = S KT7   H 9      D QT83 C QJT97\n#========================================\n#  harder 3NT\nWHO = S\nNEED = 9\nSIZE = 13\nTRUMP = N\nLEADER = W\nFORCED = 7S\nNORTH = S 43    H AK42 D A6    C QT853\nEAST  = S K2    H 9876 D KT4   C K974\nSOUTH = S AT86  H Q5   D Q7532 C A6\nWEST  = S QJ975 H JT3  D J98   C J2\n#========================================\n# painful for the program\n# (hand provided by John Moore)\n# using POOLSIZ=1800, Version 4 expanded approx. 1.5 Billion nodes\n# using POOLSIZ=2700, Version 4 expanded 839 million nodes\n#       and took 309 minutes (about 5 hours) on my Sparc 5\nWHO = S\nNEED = 9\nSIZE = 13\nTRUMP = N\nLEADER = W\nPRINT = 0\nWEST =  S J     H KT8732 D 84    C JT32\nNORTH = S K982  H Q6     D QJT9  C A97\nEAST =  S AT653          D A6532 C Q84\nSOUTH = S Q74   H AJ954  D K7    C K65\n#========================================\n# very painful for the program\n# (hand provided by Thomas Andrews)\n# using POOLSIZ = 2700, Version 4 expanded 2.45 Billion nodes\n#       and took 901 minutes (about 15 hours) on my Sparc 5\nWHO = S\nNEED = 11\nSIZE = 13\nTRUMP = C\nLEADER = W\nPRINT = 0\nNORTH = S KT83          D KT64  C J6543\nEAST  = S 94   H J9865  D AJ873 C T\nSOUTH = S AQ72 H AK     D 952   C AK82\nWEST  = S J65  H QT7432 D Q     C Q97\n#========================================\n</PRE>\n\n<HR>\n<ADDRESS>\nDan Hirschberg<BR>\nComputer Science Department<BR>\nUniversity of California, Irvine, CA 92697-3425<BR>\n</ADDRESS>\n<tt>dan at ics.uci.edu</tt><br>\nLast modified: July 1, 1996\n</BODY></HTML>\n", "encoding": "ascii"}