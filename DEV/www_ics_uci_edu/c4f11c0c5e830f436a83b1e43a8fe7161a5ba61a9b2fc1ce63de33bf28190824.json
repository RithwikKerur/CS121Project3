{"url": "https://www.ics.uci.edu/~ejw/authoring/collection/dt/Minutes990114.txt", "content": "WebDAV Advanced Collections Conference Call - 1/14/99\n\nAttending: Judy Slein, Chuck Fay, Jim Whitehead\n \nACTION ITEMS\n\nJudy: Get external reviewers once the next ID is available.\nAll: Think about locking references.  E-mail discussion before next meeting.\nJim W: Add to the WebDAV issues list the need for a location element to be used with \n302's inside multistatus responses.\nJudy: Spec changes.\n\tAdd location element to multistatus response syntax in the Advanced Collections \n\tspec.\n\tChange spec to let MKCOL be redirected rather than having it fail.\n\tChange spec to allow replacing a reference with an ordinary resource using PUT.\n\tChange spec to say that No-Passthrough defaults to false.\n\tAdd to definition of No-Passthrough that it can be used with PROPFIND on a \n\tcollection with Depth=infinity, and describe semantics.\n\tChange the definition of referential resource to say that it has no body, but does \n\thave properties.\n\tChange the values of Ref-Integrity to DAV:none and something that means \n\t\"don't care\".\n\tIf Jim Davis agrees, get rid of the DAV:refintegrity property.\n\tChange the definition of \"weak reference\" to  \"server does not enforce referential \n\tintegrity\".\n\tChange the definition of \"strong reference\" to \"server enforces referential \n\tintegrity\".\nAll: Review 3.5, 3.6, and 3.8 in detail after Judy makes updates.\nJim W: Set up web site where we'll keep working documents of the design team; \nannouonce to WebDAV when it's ready.\nJudy: Confirm that Tuesdays 1:00 - 3:00 eastern / 10:00 - noon pacific works for \neveryone.\n\nGENERAL\n\nJim has had some discussions with Keith Moore about the need to refocus WebDAV, in \nline with the general IETF policy of doing so about every 18 months.  Jim notes that only \na small fraction of the mailing list actively participates, which indicates a need to refocus. \nHe is proposing separate working groups for versioning and access control, but keeping \nadvanced collections because it is near completion.  He told Keith he thought it would be \ncomplete May / June of this year.\n\nGoals of this series of conference calls: Have a polished spec in time for the March IETF \n(approximately 6 weeks from now).  Last call after IETF.  Finish this spec in the May / \nJune time frame.\n\nRegular participants in this conference call will be the design team (authors) of the \nAdvanced Collections specification.\n\nWe need to get external reviewers as soon as the draft is available for the IETF.  They \nwill be able to help with details like status codes.\n\nISSUES LIST REVIEW\n\nReviewed current issues list.  Anyone can e-mail additions or bring them to the phone \ncalls.\n\nIssue 5: Status codes - In general, the approach is to appeal to the HTTP spec, and only \nexplicitly discuss status codes that go beyond what is there.  Be sure that the discussion \nof 302 is adequate.\n\nISSUE 1: NO-PASSTHROUGH\n\nYaron, at the December 1998 IETF, stated that he believed that no-passthrough was\nthe equivalent of URL munging.  Why would he think this? \nThere were similar discussions about source links: We could have decided to use a \nrequest header that would cause a method to operate on the source rather than on the \noutput.  But there might need to be different access control on the output than on the \nsource, so there really are 2 resources, and there need to be 2 URLs.\n \nWould we want separate access control for the reference as itself than for the reference as \nmediator?  No.\n\nAre there any HTTP headers that are like No-Passthrough?  The Accept headers are \nanalogous.\n\nNo-Passthrough is like URL-munging because it could be expressed as <url>;nopassthrough.\n\nWhy is url-munging considered to be bad?  There are 2 reasons.  When it is used to \nappend an operation to a URL (<URL>;op=checkout), it is unclear what order to perform \noperations if request method is anything other than GET. In addition, there is the \npossibility of collisions in the url-munging space (not a problem here because it's part of \na spec).\n\nNo-passthrough has consistent semantics no matter what method it gets applied to, and \nthere's no problem like the order-of-operations problem.\n\nTwo URLs would mean that 2 entries in the namespace would be used up for every \nreference.\n\nConclusion: Keep No-Passthrough.  We can revisit this if there are insuperable \ndifficulties with operations on collections (especially LOCK).\n\nEd. note: see also list discussion at:\n\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/1999JanMar/0051.html\n\nSEMANTICS OF LOCK ON REFERENCES\n\nAnother issue: Does LOCK get redirected? Does the reference itself always get locked?  \nWhat if lock depth is infinity?  The server might have to lock objects in many trees?  \nWhat if the references cross web servers (probably 502)?\n\nAdd LOCK to the list of operations that never get passed through?\n  \nFor lock, return 302, but if depth infinity, no-passthrough is true by default\n\nWhat does the user expect - what is it to lock a reference?  Just the target gets locked, or \nboth the reference and its target?  It may be that both the reference and the target should \nget locked.  This is the only way to insure that, for example, no one changes \nDAV:reftarget while the user is editing the target resource.\n\nConsider separately the case where we are locking an individual reference and the case \nwhere we are locking a collection with Depth=infinity.\n \nWhen locking a collection with Depth=infinity, for redirect references, lock the reference \nand return 302.  But LOCK is atomic, and how will UNLOCK work?\n\nWe need a location element in the multistatus response of WebDAV for 302's\n\nWhat about lock tokens? If the response has a 302 for each redirect reference, there will \nneed to be separate tokens for each 302.\n\nWhat if the reference is to something lower in the tree? The whole LOCK will fail \nbecause the target is already locked (for direct references only)?\n\nIf Depth=infinity, the intent will be to lock both the reference and its target. This will \nhave to be done in 2 stages for redirects.   The client might not bother to lock the targets \nof a redirect till the user clicks on it.\n\nIf the client locks redirect reference, would the response be a 302 with a lock body \nbecause reference itself got locked? Ick.\n\nMaybe we should not worry about down-level clients.  Behavior gets too bizarre if we try \nto take them into account.  So if a LOCK is sent to a redirect reference, the reference does \nnot get locked if No-Passthrough is false.\n\nChuck proposes that we think about referencing-aware clients and develop a proposal that \nwould work for them, then test it for down-level clients.\n\nConclusion: We will think about this more and have an e-mail discussion on locking \nbefore the next meeting.\n\nISSUE 2: 302 RESPONSES\n\nPROPFIND should be like GET, so each redirect reference should get a 302 response \nwith a location element.  But this doesn't help down-level clients, who will not \nunderstand a location element.  Judy will added the location element to the Advanced \nCollections spec.  Jim will add it to the WebDAV issues list to get it into the WebDAV \nspec when it is next revised.\n\nCreation methods.  The spec currently says that MKCOL fails for a redirect reference, as \nit would for any other non-null resource.  Jim thinks it would make more sense to let \nMKCOL get redirected, then fail it if there is a target.  Judy will change this in the spec.  \nIt also makes behavior for dangling references make more sense.\n\nCan you PUT on top of a reference? Yes - PUT with No-Passthrough=true replaces the \nreference.  Judy will fix this in the spec.\n\nNo-Passthrough defaults to false.  Judy will make this explicit in the spec.\n\nNo-Passthrough can be used with PROPFIND on a collection with Depth=infinity.  Judy \nwill state this in the spec and describe the semantics.\n\nAfter Judy makes these changes, everyone will review 3.5, 3.6, and 3.8 in detail.\n\nTERMINOLOGY\n\nTerminology: The definition of \"Referential resource\" says that it has no content.  This \nmight be taken to imply that it has no properties.  Change it to say that it has no body, but \ndoes have properties.\nChange the definition of \"weak reference\" to  \"server does not enforce referential \nintegrity\".\nChange the definnition of \"strong reference\" to \"server enforces referential integrity\".\n\nISSUE 3: WEAK REFERENCES\n\nRoy presented reasonable scenarios to back up his request that there be a way to ask a \nserver not to enforce referential integrity for a specific reference.  But do servers really \ngive clients this option?  Would the various DMSs give clients this choice?\n  \nDMA found that some repositories require every object to be contained in some \ncollection.  They couldn't devise a creation sequence that would maintain referential \nintegrity through the whole sequence, so they allowed a larger atomic operation, and \nreferential integrity could be enforced at end of it but not during it.\n\nConclusion: Keep the option, and try and get some feedback from DMS vendors.  The \nvalues of the Ref-Integrity header will be DAV:none (do not enforce referential integrity \nfor this reference) and DAV:don't care (well, something that means that).  The Ref-\nIntegrity header defaults to don't care.\n\nThe server could respond with error if it forces referential integrity and the client requests \nnone.\n\nThe DAV:refintegrity property doesn't seem to be very useful.  What scenarios are there \nfor a client wanting to use this to discover anything about referential integrity for the \nreference?  The only values we could provide are \"integrity not being enforced\" and \n\"integrity being enforced\" with no detail about what the policy is.  See what Jim Davis \nthinks about this.\n\nLOGISTICS\n\nMeet Tuesdays (Judy to confirm with the rest of the design team).\n  \nJim W will create a web site for spec, reqts, issues list, minutes and hook it into \nWebDAV site.  When it's ready, we'll announce it to WebDAV.\n  \nJudy keeps ownership of the documents and issues list.\n", "encoding": "ascii"}