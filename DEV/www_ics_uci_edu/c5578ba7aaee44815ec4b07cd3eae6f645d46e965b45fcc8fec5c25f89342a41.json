{"url": "https://www.ics.uci.edu/~eppstein/junkyard/rcg.html", "content": "<HTML><HEAD>\n<TITLE>Rotating Caliper Graph</TITLE>\n<META name=\"Owner\" value=\"eppstein\">\n<META name=\"Reply-To\" value=\"eppstein@ics.uci.edu\">\n</HEAD><BODY BGCOLOR=\"#FFFFFF\" FGCOLOR=\"#000000\">\n<!--#config timefmt=\"%d %h %Y, %T %Z\" -->\n<H1>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/junkyard/\"><IMG src=\"junkyard.gif\" ALIGN=center WIDTH=\"545\" HEIGHT=\"45\" ALT=\"The Geometry Junkyard\" BORDER=0></A>\n</H1>\n<HR>\n<H1>\nThe Rotating Caliper Graph\n</H1>\n\nThe well-known rotating caliper algorithm for computing the width or\ndiameter of a convex polygon considers pairs of parallel lines tangent\nto the polygon.  If we continuously sweep the slope of the parallel\nlines through 360 degrees, maintaining tangency, they will alternately\nbe tangent at a pair of vertices or supported by an edge; in this manner\nthe two tangent points each make a single circuit of the polygon's\nboundary.  The width and diameter of the polygon are then simply the\nminimum and maximum separation attained by the parallel lines during\nthis sweep process.\n\n<P><CENTER><IMG src=\"rcg.gif\"></CENTER>\n\n<P>The rotating caliper graph (shown above) has as its edges the\ntangent pairs considered by the rotating caliper\nalgorithm.  Equivalently an edge <I>xy</I> is in the rotating caliper graph\nexactly when all input points lie between the two parallel lines through\n<I>x</I> and <I>y</I> and perpendicular to <I>xy</I>.\nThis definition applies to arbitrary point sets, but\nlike the farthest point Delaunay\ntriangulation the rotating caliper graph only connects convex hull\nvertices.\n\n<P>The rotating caliper graph has some interesting properties.\nFirst, in a natural expected-case model of dynamic geometric\noptimization algorithms, the expected number of RCG edges that change\nper point insertion or deletion is only a small constant\n(and these edges can be found quickly using some data structures\nto keep track of the convex hull).\nAs a consequence, we can maintain the RCG itself, and the width\nand diameter of the point set, in logarithmic expected time\nper operation.\nSecond, the RCG is a <I>thrackle</I>.\nThis class of graph drawings, defined by John Conway,\nconsists of graphs in which each pair of edges has a single\nintersection point (which may either be a vertex or interior\nto the two edges).  Conway asked whether every <I>n</I>-vertex\nthrackle has at most <I>n</I> edges, and the question still\nremains open if curved edges are allowed.  Straight-line-segment\nthrackles such as the RCG are quite well understood.\n\n<P>\n[From <A HREF=\"/~eppstein/pubs/p-avgdynopt.html\">\n\"Average Case Analysis of Dynamic Geometric Optimization\"</A>.]\n<P>\n\n<HR><P>\nFrom the <A HREF=\"/~eppstein/junkyard/\">Geometry Junkyard</A>,\ncomputational\nand recreational geometry.<BR>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/\">David Eppstein</A>,\n<A HREF=\"http://www.ics.uci.edu/~theory/\">Theory Group</A>,\n<A HREF=\"http://www.ics.uci.edu/\">ICS</A>,\n<A HREF=\"http://www.uci.edu/\">UC Irvine</A>.<P>\n<SMALL>Last update: <!--#flastmod file=\"rcg.html\" -->.</SMALL>\n</BODY></HTML>\n", "encoding": "ascii"}