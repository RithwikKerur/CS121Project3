{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node122.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Predefined Arithmetic Functions</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Predefined Arithmetic Functions\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html3721 HREF=\"node123.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html3719 HREF=\"node121.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html3713 HREF=\"node121.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html3723 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html3722 HREF=\"node123.html\"> Evaluation Mechanism</A>\r\n<B>Up:</B> <A NAME=tex2html3720 HREF=\"node121.html\"> Arithmetic Functions</A>\r\n<B> Previous:</B> <A NAME=tex2html3714 HREF=\"node121.html\"> Arithmetic Functions</A>\r\n<BR> <HR> <P>\r\n<H2><A NAME=SECTION00931000000000000000> Predefined Arithmetic Functions</A></H2>\r\n<P>\r\n<A NAME=1710>&#160;</A>\r\nThe following predefined arithmetic functions are available.\r\nE, E1 and E2 stand for\r\narbitrary arithmetic expressions.\r\n<P>\r\n<PRE>Function       Description                       Argument Types      Result\r\n------------------------------------------------------------------------------\r\n+ E            unary plus                        number              number\r\n- E            unary minus                       number              number\r\nabs(E)         absolute value                    number              number\r\nsgn(E)         sign value                        number              integer\r\nfloor(E)       round down to integral value      number              number\r\nround(E)       round to nearest integral value   number              number\r\n\r\nE1 + E2        addition                          number x number     number\r\nE1 - E2        subtraction                       number x number     number\r\nE1 * E2        multiplication                    number x number     number\r\nE1 / E2        division                          number x number     see below\r\nE1 // E2       integer division                  integer x integer   integer\r\nE1 mod E2      modulus operation                 integer x integer   integer\r\nE1 ^ E2        power operation                   number x number     number\r\nmin(E1,E2)     minimum of 2 values               number x number     number\r\nmax(E1,E2)     maximum of 2 values               number x number     number\r\n\r\n\\ E            bitwise complement                integer             integer\r\nE1 /\\ E2       bitwise conjunction               integer x integer   integer\r\nE1 \\/ E2       bitwise disjunction               integer x integer   integer\r\nxor(E1,E2)     bitwise exclusive disjunction     integer x integer   integer\r\nE1 &gt;&gt; E2       shift E1 right by E2 bits         integer x integer   integer\r\nE1 &lt;&lt; E2       shift E1 left by E2 bits          integer x integer   integer\r\n\r\nsin(E)         trigonometric function            number              float\r\ncos(E)         trigonometric function            number              float\r\ntan(E)         trigonometric function            number              float\r\nasin(E)        trigonometric function            number              float\r\nacos(E)        trigonometric function            number              float\r\natan(E)        trigonometric function            number              float\r\nexp(E)         exponential function e^x          number              float\r\nln(E)          natural logarithm                 number              float\r\nsqrt(E)        square root                       number              float\r\npi             the constant pi = 3.1415926...    ---                 float\r\ne              the constant e = 2.7182818...     ---                 float\r\n\r\nfix(E)         convert to integer (truncate)     number              integer\r\nfloat(E)       convert to float                  number              float\r\nrational(E)    convert to rational               number              rational\r\nnumerator(E)   extract numerator of a rational   integer or rational integer\r\ndenominator(E) extract denominator of a rational integer or rational integer\r\n</PRE>\r\n<P>\r\nArgument types other than specified yield a type error.\r\nAs an argument type, <i> number</i> stands for <i> integer, rational or float</i>\r\nwith the type conversions as specified above.\r\nAs a result type, <i> number</i> stands for\r\n<i> the more general of the argument types</i>.\r\n<i> float</i> stands for <i> single or double precision float</i>, depending\r\non the value of the <tt> float_precision</tt> flag.\r\n<A NAME=1728>&#160;</A>\r\n<A NAME=1729>&#160;</A>\r\n<A NAME=1730>&#160;</A>\r\nThe division operator <b> /</b> yields either a rational or a float result,\r\ndepending on the value of the global flag <tt> prefer_rationals</tt>.\r\nThe same is true for the result of ^ if an integer is raised to\r\na negative integral power.\r\n<P>\r\nThe relation between integer division <b> //</b> and modulus operation <b> mod</b>\r\nis as follows:\r\n<blockquote> <PRE>X =:= (X mod Y) + (X // Y) * Y\r\n</PRE></blockquote><BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}