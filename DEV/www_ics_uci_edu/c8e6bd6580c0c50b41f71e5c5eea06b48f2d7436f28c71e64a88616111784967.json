{"url": "https://www.ics.uci.edu/~eppstein/pubs/1997.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\n1997\n</h2>\nNote that a paper may appear in listings for multiple years\ndue to multiple publication (of tech. report, conference, and journal versions).\n<p>\n<ul>\n<li><b>Sparsification&mdash;A technique for speeding up dynamic graph algorithms</b>.<br>\nD. Eppstein,\n<a href=\"//www.scs.gatech.edu/people/zvi-galil\">Z. Galil</a>, \n<a href=\"//www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and A. Nissenzweig.<br>\n<i>33rd IEEE Symp. Foundations of Comp. Sci.,</i> Pittsburgh, 1992, pp. 60&ndash;69.<br>\nTech. Rep. RC 19272 (83907), IBM, 1993.<br>\nTech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"//doi.org/10.1145/265910.265914\"><i>J. ACM</i> 44 (5): 669&ndash;696, 1997</a>.\n<p>\nUses a divide and conquer on the edge set of a graph, together with the\nidea of replacing subgraphs by sparser certificates, to make various\ndynamic algorithms as fast on dense graphs as they are on sparse graphs.\nApplications include random generation of spanning trees\nas well as finding the <i>k</i>\n<a href=\"mst.html\">minimum weight spanning trees</a>\nfor a given parameter <i>k.</i>\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Sparsification &ndash;- A technique for speeding up dynamic graph algorithms\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sparsification-A-technique-for-speeding-up-dynamic-graph-algorithms.html\">Citations</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~dmjones/FOCS/References/eppsteingin1992:60.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=265914\">ACM DL</a>)\n<p>\n<li><b>Faster circle packing with application to nonobtuse triangulation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-94-33.pdf\">Tech. Rep. 94-33</a>, ICS, UCI 1994.<br>\n<i>Int. J. Comp. Geom. &amp; Appl.</i> 7 (5): 485&ndash;491, 1997.\n<p>\nSpeeds up a triangulation algorithm of Bern et al.\n[\"<a href=\"//www.nas.nasa.gov/Pubs/TechReports/RNRreports/jruppert/RNR-94-003/RNR-94-003.html\">Linear-Size\nNonobtuse Triangulation of Polygons</a>\"] by finding a\ncollection of disjoint circles\nwhich connect up the holes in a non-simple polygon.\nThe method is to use a\n<a href=\"mst.html\">minimum spanning tree</a> to find a collection of\noverlapping circles, then shrink them one by one to reduce the number of\noverlaps, using Sleator and\nTarjan's dynamic tree data structure to keep track of the\nconnectivity of the shrunken circles.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Faster circle packing with application to nonobtuse triangulation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Faster-circle-packing-with-application-to-nonobtuse-triangulation.html\">Citations</a>)\n<p>\n<li><b>Minimum range balanced cuts via dynamic subset sums</b>.<br>\nD. Eppstein.<br>\n<a href=\"tr.html\">Tech. Rep. 95-10</a>, ICS, UCI, 1995.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0841\">\n<i>J. Algorithms</i> 23: 375&ndash;385, 1997</a>.\n<p>\nDescribes data structures for maintaining the solution of a dynamically\nchanging subset sum problem, and uses them to find a cut in a graph\nminimizing the difference between the heaviest and lightest cut edge.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Minimum range balanced cuts via dynamic subset sums\">BibTeX</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=248763\">ACM DL</a>)\n<p>\n<p>\n<li><b>Choosing subsets with maximum weighted average</b>.<br>\nD. Eppstein and \n<a href=\"//www.ics.uci.edu/~dan/\">\nD. S. Hirschberg</a>.<br>\n<a href=\"EppHir-TR-95-12.pdf\">Tech. Rep. 95-12, ICS, UCI, 1995</a>.<br>\n<a href=\"ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/eppstein.ps.gz\">\n<i>5th MSI Worksh. on Computational Geometry</i>, 1995, pp. 7&ndash;8</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0849\"><i>J. Algorithms</i> 24: 177&ndash;193, 1997</a>.\n<p>\nUses geometric optimization techniques to find, among <i>n</i> weighted values,\nthe <i>k</i> to drop so as to maximize the weighted average of the remaining values.\nThe feasibility test for the corresponding decision problem involves\n<i>k</i>-sets in a dual line arrangement.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Choosing subsets with maximum weighted average\">BibTeX</a> &ndash;\n<a href=\"EppHir-Algs-97.pdf\">Full paper</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95choosing.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=258407\">ACM DL</a>)\n<p>\n<li><b>Faster geometric <i>k</i>-point MST approximation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-13.pdf\">Tech. Rep. 95-13</a>, ICS, UCI, 1995.<br>\n<i>Comp. Geom. Theory &amp; Applications</i> 8: 231&ndash;240, 1997.\n<p>\nVarious authors have looked at a variant of geometric clustering\nin which one must select <i>k</i> points that can be connected by a\nsmall\n<a href=\"mst.html\">spanning tree</a>.  The problem is NP-complete (for\nvariable <i>k</i>);\ngood approximations are known based on dynamic programming techniques\nbut the time dependence on <i>n</i> is high.  This paper describes\na faster approximation algorithm based on dynamic programming in\nquadtrees, and a general technique\nbased on that in \"<a href=\"p-inn.html\">Iterated nearest neighbors</a>\"\nfor reducing the dependence\non <i>n</i> in any approximation algorithm.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Faster geometric $k$-point MST approximation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Faster-geometric-k-point-MST-approximation.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95faster.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=264740\">ACM DL</a>)\n<p>\n<li><b>On nearest-neighbor graphs</b>.<br>\nD. Eppstein,\n<a href=\"//www.dcs.warwick.ac.uk/~msp/\">M. S. Paterson</a>,\nand F. F. Yao.<br>\n<a href=\"EppPatYao-DCG-97.pdf\"><i>Disc. Comp. Geom.</i> 17: 263&ndash;282, 1997</a>.\n<p>\nPaterson and Yao presented a paper at ICALP showing among other things\nthat any connected nearest neighbor forest\nwith diameter <i>D</i> has O(<i>D</i><sup>9</sup>) vertices.\nThis paper is the journal version; my contribution consists\nof improving that bound to O(<i>D</i><sup>5</sup>), which is tight.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#On nearest neighbor graphs\">BibTeX</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein97nearestneighbor.html\">CiteSeer</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/On-nearest-neighbor-graphs.html\">Citations</a>)\n<p>\n<li><b>Faster construction of planar two-centers</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-12.pdf\">Tech. Rep. 96-12</a>, ICS, UCI, 1996.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314198\">\n<i>8th ACM-SIAM Symp. Discrete Algorithms,</i> New Orleans, 1997, pp. 131&ndash;138</a>.\n<p>\nImproving on a recent breakthrough of Sharir,\nwe use data structures from\n\"<a href=\"p-3lp.html\">Dynamic three-dimensional linear programming</a>\"\nto find two circular disks of minimum radius covering a set\nof points in the Euclidean plane, in randomized expected time\nO(<i>n</i> log<sup>2</sup> <i>n</i>).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Faster construction of planar two-centers\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-97.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Faster-construction-of-planar-two-centers.html\">Citations</a> &ndash;\n<a href=\"p-2c-slides.pdf\">DREI and SODA talk slides</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein97faster.html\">CiteSeer</a>)\n<p>\n<li><b>Dynamic connectivity in digital images</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-13.pdf\">Tech. Rep. 96-13</a>, ICS, UCI, 1996.<br>\n<i>Inf. Proc. Lett.</i> 62: 121&ndash;126, 1997.\n<p>\nAny algorithm that maintains the connected components\nof a bitmap image must take Omega(log <i>n</i> / log log <i>n</i>)\ntime per change to the image.  The problem can be solved in \nO(log <i>n</i>) time per change using dynamic planar graph techniques.\nWe discuss applications to computer Go and other games.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic connectivity in digital images\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Dynamic-connectivity-in-digital-images.html\">Citations</a> &ndash;\n<a href=\"//theory.lcs.mit.edu/~dmjones/hbp/ipl/References/eppstein1997:121.html\">MIT hypertext bibliography</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein96dynamic.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=259717\">ACM DL</a>)\n<p>\n<li><b>Optimal point placement for mesh smoothing</b>.<br>\n<a href=\"//www.cs.utexas.edu/users/amenta/\">N. Amenta</a>,\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314383\">\n<i>8th ACM-SIAM Symp. Discrete\nAlgorithms,</i> New Orleans, 1997, pp. 528&ndash;537</a>.<br>\n<a href=\"//www.siam.org/meetings/archives/an97/ms8.htm\">Symp.\nComputational Geometry Approaches to Mesh Generation</a>,\nSIAM 45th Anniversary Mtg., Stanford, 1997.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809081\">arXiv:cs.CG/9809081</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1998.0984\">\n<i>J. Algorithms</i> 30: 302&ndash;322, 1999 (special issue for SODA 1997)</a>.\n<p>\nWe study <a href=\"geom-tri.html\">finite element mesh</a> smoothing\nproblems in which we\nmove vertex locations to optimize the shapes of nearby\ntriangles.  Many such problems can be solved in linear time using\n<a href=\"geom-lp.html\">generalized linear programming</a>; we also give\nefficient\nalgorithms for some non-LP-type mesh smoothing problems.\nOne lemma may be of independent interest: the locus of points in R<sup>d</sup>\nfrom which a d-1 dimensional convex set subtends a given solid angle\nis convex.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Optimal point placement for mesh smoothing\">BibTeX</a> &ndash;\n<a href=\"AmeBerEpp-SODA-97.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Optimal-point-placement-for-mesh-smoothing.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/amenta97optimal.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=309437\">ACM DL</a>)\n<p>\n<li><b>An efficient algorithm for shortest paths in vertical and horizontal\nsegments</b>.<br>\nD. Eppstein and\n<a href=\"//www.cs.wayne.edu/~hart/\">D. Hart</a>.<br>\n<a href=\"EppHar-WADS-97.ps.gz\"><i>5th Worksh. Algorithms and Data Structures,</i> Halifax, Nova Scotia, 1997</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 1272, 1997, pp. 234&ndash;247.\n<p>\nWe show how to find shortest paths along the segments of\nan arrangement of <i>n</i> vertical and horizontal line segments in the\nplane, in time O(<i>n</i><sup>3/2</sup>).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#An efficient algorithm for shortest paths in vertical and horizontal segments\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/An-efficient-algorithm-for-shortest-paths-in-vertical-and-horizontal-segments.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein97efficient.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=673171\">ACM DL</a>)\n<p>\n<li><b>Guest editor's forward to special issue of papers from the 34th Annual Symposium on Foundations of Computer Science</b>.<br>\nD. Eppstein.<br>\n<i>J. Comp. Sys. Sci.</i> 54:263, 1997.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Guest editor's forward to special issue of papers from the 34th Annual Symp. on Foundations of Computer Science\">BibTeX</a>)\n<p>\n<li><b>Computational geometry and parametric matroid optimization</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-PO-97.pdf\">Invited talk</a>,\n5th Int. Symp. Parametric Optimization, Chiba, Japan, 1997.\n<p>\nThis talk surveys some connections from computational geometry to\nparametric matroids: the results of my paper\n\"<a href=\"p-geomlb.html\">Geometric lower bounds</a>\",\nnew upper bounds from a paper by Tamal Dey,\nand a problem from constructive solid geometry\nwith the potential to lead to stronger lower bounds.\n<p>\n<li><b>Quadrilateral meshing by circle packing</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>\nand D. Eppstein.<br>\n<a href=\"//www.cs.duke.edu/CGC/workshop97.html\"><i>2nd CGC\nWorksh. Computational Geometry</i></a>, Durham, North Carolina, 1997.<br>\n<a href=\"BerEpp-MRT-97.pdf\"><i>6th Int. Meshing Roundtable,</i> Park\nCity, Utah, 1997, pp. 7&ndash;19</a>.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9908016\">arXiv:cs.CG/9908016</a>.<br>\n<i>Int. J. Comp. Geom. &amp; Appl.</i> 10 (4): 347&ndash;360, 2000.\n<p>\nWe use <a href=\"p-cpack.html\">circle-packing methods</a> to generate\nquadrilateral meshes for\npolygonal domains, with guaranteed bounds both on the quality and the\nnumber of elements.  We show that these methods can generate meshes of\nseveral types:\n<ol>\n<li>The elements form the cells of a Voronoi diagram,\n<li>The elements each have two opposite 90 degree angles,\n<li>All elements are kites, or\n<li>All angles are at most 120 degrees.\n</ol>\nIn each case the total number of elements is O(<i>n</i>).\nThe 120-degree bound is optimal; if a simply-connected region has all\nangles at least 120 degrees, any mesh of that region has a 120 degree\nangle.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Quadrilateral meshing by circle packing\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Quadrilateral-meshing-by-circle-packing.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/bern97quadrilateral.html\">CiteSeer</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"year.html\">Years</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}