{"url": "https://www.ics.uci.edu/~ejw/authoring/collection/dt/Minutes000322.txt", "content": "Advanced Collections Teleconference\nMarch 22, 2000\n\nPresent: Jason Crawford, Judy Slein, Jim Whitehead (notetaker), Geoff Clemm\n\n*** Note that decisions made during the teleconference are always\nsubject to review on the mailing list.  The mailing list is the final\narbiter of consensus on any issue.  Note also, that the revised\nBindings Protocol specification, and Redirect References \nprotocol  produced as a result of this conference call will also \nbe subject to review by the mailing list. ***\n\nBegan by discussing Geoff's proposed language for resolving issue\nYaron.MrIntegrity, at\nhttp://lists.w3.org/Archives/Public/w3c-dist-auth/2000JanMar/0444.html\nTentatively liked this new lagnauge, but it was sent out just prior to\nthe teleconference. But, we need to see if there will be any\ndiscussion of this topic on the mailing list.\n\nNext started considering issues #43-45 of the bindings spec. \n\nIssue #43: Revisited name for the bindings property. Judy suggested\nthe name \"parents\", and this was adopted.\n\nIssue #44: Discussed resolutions to the loop detected issue identified\nby Tim Ellison on the mailing list. Two approaches were examined.\nApproach #1: Pass back URNs for all the resources in the multistatus,\nand then the client would be able to piece together which URLs were\nassociated with which URNs, and thus pick out where the loop occurred.\nApproach #2: Just only pass back the URL of the resource being pointed\nto, and only pass this back for the resource for which the 506 Loop\nDetected is reported.  This will identify the URL of the\nlooped-back-to resource, and this can be reported by the client to the\nuser.\n\nAlso discussed whether there should be a \"duplicate detected\" status\ncode, and whether that is the same as \"loop detected\".  Also,\ndiscussed whether loop detected should be a 2xx status code, since the\nexistence of a loop is not an error.  The duplicate detected status\ncode would allow propfind requests to be smaller in the case where\nthere were multiple bindings to the same resource in the propfind\noutput.  But, receiving this response back might break downlevel\nclients that are not expecting this response. But, the necessary loop\ndetected code might also break downlevel clients. Agreed to change\nloop detected to a 2xx. Tentatively agreed to have a duplicate\ndetected status code, it will be a 2xx, and the properties for the\nresource that issues the duplicate detected status code will be in the\npropfind, and will also return the href of the resource being pointed\nto (tentatively called \"dup-href\") as a psuedo-property, but no\nfurther children will be included in the listing (have the same URL\nstem).\n\nIssue #45: Not listing all the children every time does address the\ndenial of service. But, in the general case, the only reliable DAV\nprevention of denial of service guarantee is to limit the number of\nthreads that can be used for DAV requests.\n\nRedirect References:\n\nIssue #60: (revisited this) Agreed to return both the location (in a\npseudo-property), and the redirectref value (as a real property) for\n302 responses in a multistatus.\n\nIssue #73: Agreed to accept Juergen's suggested ascii art for Section\n10.\n\nIssue #74: Agreed that we will use the same term consistently for\nplain/ordinary HTTP/1.1 redirects.\n\nIssue #75: Agreed to delete the sentence.\n\nIssue #76: Disagree. DAV:location cannot be a live property, since it\nneeds to be the absolute location, and this is why we need a separate\ntarget property.\n\nIssue #77: Agreed to this change.\n\nIssue #78: Agreed to this change. Agree that this is not new to this\nprotocol, but this is explicitly noted in the document.\n\nIssue #79: Agreed, there is nothing you can do about someone making a\nredirect reference to another resource, since they are weak links.  We\nwill delete the sentence noted in this comment.\n\nIssue #80: Will modify the i18n section to account for this draft\nbeing standalone now.\n\nIssue #81: We will make this change.\n\nIssue #82: Will modify the IANA section to account for this draft\nbeing standalone now. We will also be listing new methods, headers,\nproperties, etc.\n\nIssue #83: Agreed, we will remove references to the bindings specification.\n\nIssue #84: Will change the name of the section to be \"Changes to the\n...\" instead of \"Extensions to the...\"\n\nIssue #85: Looked at RFC 2616 3xx status codes. Looks like we may also\nwant to allow authoring of 303 and 307, in addition to 301 and 302.\n\n*** End of teleconference ***", "encoding": "ascii"}