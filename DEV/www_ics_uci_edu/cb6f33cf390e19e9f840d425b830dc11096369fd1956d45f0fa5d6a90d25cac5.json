{"url": "https://www.ics.uci.edu/~eppstein/gina/dt-interpolate.html", "content": "<HTML><HEAD>\n<TITLE>Geometry in Action</TITLE>\n<META name=\"Owner\" value=\"eppstein\">\n<META name=\"Reply-To\" value=\"eppstein@ics.uci.edu\">\n</HEAD><BODY BGCOLOR=\"#FFFFFF\" FGCOLOR=\"#000000\">\n<!--#config timefmt=\"%d %h %Y, %T %Z\" -->\n<H1>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/geom.html\"><IMG src=\"gina.gif\" ALIGN=center WIDTH=\"493\" HEIGHT=\"52\" ALT=\"Geometry in Action\" BORDER=0></A>\n</H1>\n<HR><PRE>\n<B>Newsgroups:</B>     comp.graphics,sci.math\n<B>From:</B>           <A HREF=\"mailto:pjt@newton.cs.jhu.edu\">pjt@newton.cs.jhu.edu</A> (Paul Tanenbaum)\n<B>Subject:</B>        Delaunay Interpolation\n<B>Organization:</B>   Johns Hopkins Computer Science Department, Baltimore, MD\n<B>Date:</B>           Tue, 18 Aug 1992 17:41:21 GMT\n</PRE><HR><PRE>\n     Suppose I have a bunch of sample points from the boundary of a closed\nvolume in $R^3$.  Suppose in particular that I have been given the Delaunay\ntriangulation of these boundary points.  I'd like to interpolate a $C^3$\nsurface through these vertices.  The related surface-interpolation algorithms\nI've found seem not to be applicable:  they either assume that the\ntriangulation is regular (usually of degree six) or that the surface is\nmonotonic with respect to some plane.\n     Does there exist an algorithm to solve this problem?  References to\nthe literature would be greatly appreciated.\n     Thanks,\n     +++paul\n</PRE><HR><PRE>\n<B>Newsgroups:</B>     comp.graphics,sci.math\n<B>From:</B>           <A HREF=\"mailto:watson@maths.uwa.oz.au\">watson@maths.uwa.oz.au</A> (David Watson)\n<B>Subject:</B>        Re: Delaunay Interpolation\n<B>Organization:</B>   University of Western Australia\n<B>Date:</B>           Wed, 19 Aug 1992 00:28:55 GMT\n</PRE><HR><PRE>\n<A HREF=\"mailto:pjt@newton.cs.jhu.edu\">pjt@newton.cs.jhu.edu</A> (Paul Tanenbaum) writes:\n\n&gt;     Suppose I have a bunch of sample points from the boundary of a closed\n&gt;volume in $R^3$.  Suppose in particular that I have been given the Delaunay\n&gt;triangulation of these boundary points.  I'd like to interpolate a $C^3$\n&gt;surface through these vertices.  The related surface-interpolation algorithms\n&gt;I've found seem not to be applicable:  they either assume that the\n&gt;triangulation is regular (usually of degree six) or that the surface is\n&gt;monotonic with respect to some plane.\n&gt;     Does there exist an algorithm to solve this problem?  References to\n&gt;the literature would be greatly appreciated.\n\nThere are many ways to interpolate from a Delaunay tesselation.  The quickest\nis with barycentric coordinates but is only $C^0$.  If you require higher\nsmoothness then it is a question of data set size - for 100 data or so just\nfit a radial basis spline.  If you must deal with subsets, splines will\ngive discontinuities at subset boundaries.  Sibson's natural neighbour\ninterpolation -\nSibson, R., 1981, A brief description of natural neighbour interpolation, _in_ \nBarnett, V., ed., Interpreting multivariate data: John Wiley, p.21--36.\nAlfield, P., 1989, Scattered data interpolation in three or more \nvariables, _in_ Mathematical methods in computer aided geometric \ndesign, Lyche, T., and Schumaker, L.L., ed., Academic Press, San Diego,\np. 12-13.\nWatson, D.F., and Philip, G.M., 1987, Neighborhood-based interpolation: Geobyte, 2(2),\np. 12--16.\nwill provide continuous slopes everywhere but at the data points themselves.\nIncorporating estimated gradients will give total continuity.\n\nFor a summary of interpolation techniques that can be extended to higher\ndimensions, see\n\tftp marlin.nosc.mil /pub/contour.file\nfor an ASCII, TeX, or PostScript, file.\n\nEmail questions are welcome.\n--\nDave Watson                          Internet: <A HREF=\"mailto:watson@maths.uwa.edu.au\">watson@maths.uwa.edu.au</A>\nDepartment of Mathematics            \nThe University of Western Australia               Tel: (61 9) 380 3359\nNedlands, WA 6009  Australia.                     FAX: (61 9) 380 1028\n</PRE><HR><PRE>\n<B>Newsgroups:</B>     comp.graphics.algorithms\n<B>From:</B>           <A HREF=\"mailto:ensab@gdr.bath.ac.uk\">ensab@gdr.bath.ac.uk</A> (A Bowyer)\n<B>Subject:</B>        Re: Contours - How to draw ?\n<B>Organization:</B>   School of Mechanical Engineering, University of Bath, UK\n<B>Date:</B>           Tue, 31 Aug 1993 19:10:12 GMT\n</PRE><HR><PRE>\nIn the referenced article, <A HREF=\"mailto:ma@informatik.uni-kiel.dbp.de\">ma@informatik.uni-kiel.dbp.de</A> (Martin Ameskamp) writes:\n&gt;In &lt;25pfi0$aqs@aggedor.rmit.OZ.AU&gt; <A HREF=\"mailto:s914373@minyos.xx.rmit.OZ.AU\">s914373@minyos.xx.rmit.OZ.AU</A> (Simon Bullen) writes:\n&gt;\n&gt;&gt;<A HREF=\"mailto:ajb@oasis.icl.co.uk\">ajb@oasis.icl.co.uk</A> (Adam Buckley) writes:\n&gt;&gt;\tA nice general way to make contour maps from a set of _ANY_ points\n&gt;&gt;(ie you don't need a regular grid) is to calculate the Delaunay triangulation\n&gt;&gt;from your set of points, and then doing the contour map is pretty easy.\n&gt;\n&gt;&gt;\tThe Delaunay triangulation will turn your set of points into a \n&gt;&gt;surface composed entirely of triangles; then you merely need to solve the\n&gt;&gt;contour map problem for each triangle in the graph, which is fairly straight\n&gt;&gt;forward. You could then pass it through a bezier curve routine to smooth out\n&gt;&gt;the straight lines, if you liked.\n&gt;\n&gt;Right, triangulation is almost always a good idea. I'm not so sure about\n&gt;the Bezier bit, though. After all, you expect certain things from contours,\n&gt;e.g. you wouldn't really like them to intersect, and I don't see how you could\n&gt;guarantee that by applying Bezier routines to a given set of (correct)\n&gt;piecewise linear contours.\n&gt;\n&gt;Martin\n&gt;--\n&gt;Martin Ameskamp, Inst. f. Informatik I (Computing Dept.)\n&gt;Kiel University, Olshausenstr. 40, 24118 Kiel, Germany\n&gt;Fax: ++49 431 8804054, Voice: ++49 431 8804474, \n&gt;email: <A HREF=\"mailto:ma@informatik.uni-kiel.d400.de\">ma@informatik.uni-kiel.d400.de</A>\n\nThe trouble with countouring methods based on Delaunay triangulations is\nthat they can `click' (i.e. produce contours with spurious kinks) on\nnear-degenerate data.  It's better to use natural-neighbour interpolation\n(invented by Robin Sibson) on the Voronoi dual of the Delaunay triangulation.\nStart with\n\nSibson, R, and Thompson, G.D. `A seamed Quadratic Element for Contouring' and\nfollow the reference tree.\n\n\t\t\tAdrian Bowyer\n</PRE>\n<HR><P>\nPart of\n<A HREF=\"http://www.ics.uci.edu/~eppstein/geom.html\">Geometry in Action</A>,\na collection of applications of computational geometry.<BR>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/\">David Eppstein</A>,\n<A HREF=\"http://www.ics.uci.edu/~theory/\">Theory Group</A>,\n<A HREF=\"http://www.ics.uci.edu/\">ICS</A>,\n<A HREF=\"http://www.uci.edu/\">UC Irvine</A>.<P>\n<SMALL>Last update: <!--#flastmod file=\"dt-interpolate.html\" -->.</SMALL>\n</BODY></HTML>\n", "encoding": "ascii"}