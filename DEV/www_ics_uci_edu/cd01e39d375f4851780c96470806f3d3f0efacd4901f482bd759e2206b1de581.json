{"url": "https://www.ics.uci.edu/~ejw/authoring/sanmateo/Minutes_morning.html", "content": "<HTML>\n<HEAD>\n<TITLE>Detailed Minutes of San Mateo Distributed Authoring Meeting (Morning)\n</TITLE>\n<META NAME=\"GENERATOR\" CONTENT=\"Internet Assistant for Microsoft Word 2.0 beta 1\">\n<LINK REL=\"Author\" TITLE=\"Jim Whitehead Home Page\" HREF=\"http://www.ics.uci.edu/~ejw/\">\n<META http-equiv=\"Reply-To\" content=\"ejw@ics.uci.edu\">\n</HEAD>\n\n<BODY>\n\n<H1>Minutes</H1>\n\n\n<P>\nEditor's note: These minutes are the result of merging notes taken\nby Dennis Hamilton, Keith Dawson, and Jim Whitehead.  In particular,\nthe detailed, comprehensive notes taken by Dennis Hamilton form the\ncore of this material. These original notes were edited to make them\nmore readable in a standalone document, and to add context so that\npeople who did not attend the meeting could still understand the\ndiscussion. Thus, text attributed to individuals should not be\ninterpreted as a direct transcription of what they said in the\nmeeting, but rather as a representation of their content or position,\nconsistent with what was actually spoken.\n</P>\n\n<H2>Morning - 9AM</H2>\n\n<P>\nThe meeting began with all present introducing themselves, and\nstating their organization.\n</P>\n\n<H3>History of Distributed Web Authoring - Whitehead</H3>\n\n<P>\nWhitehead gave a presentation on the history of distributed web\nauthoring.  The first web authoring tool was the Nexus browser\n(1989/1990), the Next machine browser/editor developed by Tim\nBerners-Lee.  In 1992, the Mosaic 2.4 browser achieved critical\nmass, and created the &quot;publish/browse&quot; technical frame\nof reference for the WWW. In 1992, the HTTP PUT method disappeared\nfrom the HTTP 1.0 specification because this specification was\nintended to reflect the practices of existing HTTP servers, which\ndid not have write capability. In 1994/95, development took place\non NaviPress/NaviServer (now AOLpress/AOLserver), Vermeer (now\nMicrosoft) FrontPage, and the World Wide Web Consortium (W3C)\nLine Mode Browser, the first generation of distributed web authoring\ntools.\n</P>\n\n<P>\nIn December, 1994, there was a breakout session on distributed\nweb authoring tools at the WWW4 conference.  The focus of this\nsession was how to achieve interoperability among distributed\nweb authoring tools.  This session identified the following interoperability\nissues: common access control model, &quot;lost update&quot; problem,\nneed for BROWSE and MKDIR HTTP methods, editing of variants, access\nto &quot;raw&quot; HTML before server-side include (SSI) processing,\nstrong authentication, and placing a link to the HTML Standard\nGeneralized Markup Language (SGML) Document Type Description (DTD)\nin the HTML source.\n</P>\n\n<P>\nIn 1995/96, Rohit Khare at W3C researched a resource leasing and\nlocking mechanism.  In March 1996, Dan Connolly of the W3C put\nout a call for volunteers to coordinate distributed authoring\nactivity, and Jim Whitehead of U.C. Irvine volunteered, forming\nthe Working Group on Distributed Authoring on the World Wide Web,\nand the Working Group on Versioning and Configuration Management\nof World Wide Web Content.  Though Whitehead received much appreciated\nassistance from Dan Connolly of the W3C, and Larry Masinter of\nthe IETF HTTP Working Group, neither the distributed authoring\nor the versioning and configuration management group has official\nsponsorship from either the W3C or the IETF.\n</P>\n\n<P>\nIn June, 1996, the IETF HTTP Working Group completed an internet\ndraft of HTTP version 1.1, including a PUT (write) method.  In\nJuly 1996, the IETF HTTP working group completed an internet draft\non digest authentication for HTTP.  On July 10, 1996, the Working\nGroup on Distributed Authoring on the World Wide Web met at AOL\nProductions, San Mateo, California.\n</P>\n\n<H3>Working Group Descriptions and Purposes - Whitehead</H3>\n\n<P>\nWhitehead next gave a presentation stating the best current description\nof the purpose and activities of the Working Group on Distributed\nAuthoring on the World Wide Web, and the Working Group on Versioning\nand Configuration Management of World Wide Web Content.  Whitehead\nstated that the mission of the distributed authoring group is\nto make distributed authoring as pervasive as browsing is today.\n This could be achieved by specifying preliminary modifications\nto existing internet specification (e.g. HTTP), and by establishing\nusage conventions (e.g., URL naming conventions).  These preliminary\nspecification and usage conventions would then be forwarded to\nappropriate bodies, such as the IETF HTTP Working Group, for final\ndiscussion and potential incorporation into existing internet\nstandards. <I>(Further discussion of this issue took place in\nthe afternoon.)</I>\n</P>\n\n<P>\nThe Working Group on Distributed Authoring has a home page at\nURL:\n\n<P>\n\n<A HREF=\"http://www.ics.uci.edu/~ejw/authoring/\" ><B>http://www.ics.uci.edu/~ejw/authoring/</B></A>\n\n<P>\n\nIt also has a mailing list, <I>&lt;<A HREF=\"mailto:w3c-dist-auth-request@w3.org\" ><I>w3c-dist-auth@w3.org</I></A>&gt;</I>,\n\nhosted by the World Wide Web Consortium.\n\n<P>\n\nAt this point there was some discussion about membership on the\n\nmailing list.  Whitehead stated that he hasn't yet turned down\n\nanyone who wanted to join the list, and he wants high participation\n\non the list. However, it is a managed list. Whitehead wants the\n\nability to gag (after warning) list participants who are not behaving\n\nconstructively. Masinter stated that this is a perilous course,\n\nthat it is better to just leave the list open and be selective\n\nin reading and responding. \n\n<P>\n\nThere was some discussion about the differences between W3C mailing\n\nlists, which do not have to have open membership, and IETF working\n\ngroup mailing lists, which do.\n\n<P>\n\nMasinter: Irrespective of whether the mailing list is open or\n\nrestricted, gagging on an individual basis just doesn't work out.\n\nI suggest having solid guidelines about the list and what is expected\n\nof participation, and have that known in advance. \n\n<P>\n\nWhitehead: We will discuss membership and sponsorship further\n\nlater today. \n\n<P>\n\nMasinter: You need to decide on sponsorship of this working group\n\nso that the participants who are concerned about legal questions\n\n(e.g., anti-trust and intellectual property rights) around participating\n\nwith others can be satisfied and operate appropriately.\n\n<P>\n\nThe Working Group on Versioning and Configuration Management of\n\nWorld Wide Web Content has as its goal the development of a preliminary\n\nspecification for how to provide versioning and configuration\n\nmanagement of content served by an HTTP server.  This goal can\n\nbe achieved through the same means used by the distributed authoring\n\ngroup: extension of existing specifications, and establishment\n\nof usage conventions.  While the issues considered by the distributed\n\nauthoring group also include versioning and configuration management,\n\nthe versioning group was created as a sub-group of the distributed\n\nauthoring group to partition the issue space due to the complexity\n\nand number of issues involved.\n\n<P>\n\nThe Working Group on Versioning and Configuration Management has\n\na home page at URL:\n\n<P>\n\n<A HREF=\"http://www.ics.uci.edu/~ejw/versioning/\" ><B>http://www.ics.uci.edu/~ejw/versioning/</B></A>\n\n<P>\n\nIt also has a mailing list, <I>&lt;<A HREF=\"mailto:www-vers-wg-request@ics.uci.edu\" ><I>www-vers-wg@ics.uci.edu</I></A>&gt;</I>,\n\nhosted by the Department of Information and Computer Science at\n\nthe University of California, Irvine.\n\n<P>\n\nSeiwald: Is it possible to separate issues of versioning and configuration\n\nmanagement from distributed authoring, and how do we reconcile\n\ndifferent interests?\n\n<P>\n\nWhitehead: There is significant overlap between the two issue\n\nspaces. For example, access control is considered by both groups.\n\n However, due to the size of the versioning and configuration\n\nmanagement issue space, and the different set of parties interested\n\nin this issue, such as configuration management companies, it\n\nmakes sense to have a separate group address this issue.  There\n\nwill be close collaboration between the two groups, and there\n\nis currently significant overlap in membership.\n\n<P>\n\nHamilton: The issue spaces aren't orthogonal, but we want to factor\n\nthese topics (collaboration, versioning, authoring) so that we\n\ncan proceed in parallel as much as possible. \n\n<P>\n\nSeiwald made a comment about configuration management being a\n\nresult of cooperative authoring and how versioning and authoring\n\ndon't get too far apart.<BR>\n\n\n\n<P>\n\nFein asked about previous work on collaborative editing and the\n\nWWW.\n\n<P>\n\nNielsen: There has been some discussion about collaboration in\n\nother groups, and there was a workshop on the subject. <BR>\n\n\n\n<P>\n\nMasinter: What are people interested in? \n\n<P>\n\nAt this point we went around the room and reviewed what people\n\nwere interested in.<BR>\n\n\n\n<P>\n\nQuestion: Have any of the people from Netscape Navigator Gold\n\nbeen asked to participate in this meeting?  Long had some contact\n\nbut it seems to have gone quiet at his end at the moment.  Whitehead\n\nmentioned that Netscape was contacted prior to the meeting, but\n\nhad declined to participate. Before the meeting someone from Netscape\n\ndid telephone Dan Connolly at the W3C to mention they would be\n\nunable to attend the meeting, but were interested in participating\n\nin the working group.<BR>\n\n\n\n<P>\n\nThere was a brief discussion about including multiple repository\n\nsearching, etc. by Long, and Nielsen talked about the meeting\n\nrecently held about indexing, Harvest, etc.\n\n<H3>Collaborative Authoring in Microsoft Word - Fein</H3>\n\n\n\n<P>\n\nFein gave a presentation on collaborative authoring in Microsoft\n\nWord, with brief comparisons to other word processors.\n\n<P>\n\nFein mentioned that the efforts of this group are already too\n\nlate to impact Word 8, which is scheduled to be released this\n\nfall for Windows 95, NT and Macintosh.  \n\n<P>\n\nFein listed the five most important collaboration features for\n\nword processors:<BR>\n\n\n\n<OL>\n\n<LI>Revision Marking\n\n<LI>Annotations\n\n<LI>Merging Documents\n\n<LI>Comparing Documents\n\n<LI>Access Control\n\n</OL>\n\n\n\n<P>\n\n\n\n<P>\n\nRevision marking slide:\n\n<P>\n\nFein discussed how MS Word and Lotus WordPro both track revisions\n\nto a document by storing the revision history in the document\n\nfile. This has the advantage that moving the document to a floppy\n\ndoesn't cause the loss of revision information.  The desired capability\n\nis to know who wrote what, and when they wrote it, at a fine-grain\n\nlevel within the document (i.e., character, word, and paragraph\n\nlevel).  It is also desirable to have protection from unauthorized\n\nchanges by requiring people to submit deltas for approval and\n\nselective incorporation.  One way of providing this desired capability\n\nis to have provisional edits stamped with user/time, which are\n\nthen incorporated into the document during an accept/reconcile\n\nprocess by the main document author. \n\n<P>\n\nExperience with LAN usage shows that the access speed hit for\n\nstoring the revision history in the document is acceptable. However,\n\nFein suspects this will likely not be the case when retrieving\n\nor saving a file at 28.8 baud (the fastest mass-market modem speed).\n\n\n\n<P>\n\nExperience with Microsoft Internet Explorer has shown that converting\n\na Word file to HTML causes irretrievable loss of revision information.\n\n Ideally, it would be nice to have the choice of file format be\n\ntransparent to the user.  \n\n<P>\n\nFein also provided a brief discussion of versioning in Lotus WordPro\n\n(not on his slides).<BR>\n\n\n\n<P>\n\nHamilton: The business of posting revisions or deltas as part\n\nof the document file is an approach in OpenDoc.\n\n<P>\n\nBurns: The Dynabook DynaWeb server manages deltas within their\n\ndatabase, and only delivers the version users want.<BR>\n\n\n\n<P>\n\nThere was some discussion about embedding revision information\n\ninto HTML comments.  This has the drawback that it makes the comments\n\nencoded.  Whitehead mentioned that David Durand and Fabio Vitali\n\nare working on a versioned HTML called &quot;VTML.&quot; <BR>\n\n\n\n<P>\n\nAnnotations slide:\n\n<P>\n\nUnlike revisions, annotations are not proposed changes to the\n\ndocument. Within Word, annotations are a separate text stream\n\nanchored to regions of the main text.  Fein mentioned the desirability\n\nfor annotations which are not links (i.e., a few lines of text\n\nrather than a jump to a new document) to pop up a window within\n\na WWW browser, after a Word file is converted to HTML.<BR>\n\n\n\n<P>\n\nMerging:\n\n<P>\n\nCollaborative editing leads to the problem of integration of multiple\n\nsets of revisions. Current approach: dump all revisions into the\n\nsame file, then allow the document editor to choose which revisions\n\nto accept.  Merging has several implications for the Web. First,\n\nmerging requires some means of performing revision marking so\n\nusers can choose between different revisions.  Second, until all\n\nrevisions have been merged, the document is in a half-finished\n\nstate, and should not be world-readable until the merge has been\n\nperformed in a rational way.<BR>\n\n\n\n<P>\n\nComparing versions:\n\n<P>\n\nThe functionality in Microsoft Word for comparing two different\n\nversions of a document was originally developed for the legal\n\nmarket so they could analyze changes made to a contract by a potentially\n\nhostile party who will not tell you what changes they have made.\n\nThis is more difficult than the plain text (e.g. source code)\n\ncomparison (or 'diff') case, since there is a need to perform\n\ndifferencing on logical parts of a document, such as sentences,\n\nparagraphs, and pages, rather than just individual lines of text.\n\n<BR>\n\n\n\n<P>\n\nAccess control:\n\n<P>\n\nThe issue here is how to provide fine-grain (individual revisions\n\nwithin a document) permissions to different users.  WordPro has\n\nvery good fine-grain document access control. A difficult access\n\ncontrol situation occurs when one person's revisions aren't visible\n\nto all members of a work group (e.g., politically sensitive comments).\n\n<P>\n\nIt was mentioned that the Adobe PDF document format allows selective\n\nmodifications to a document.\n\n<P>\n\nMasinter: It is hard to see how a document can carry this amount\n\nof authorization.<BR>\n\n\n\n<P>\n\nFuture plans of Word:\n\n<P>\n\nAn Intranet Day presentation by Bill Gates demoed two features\n\nof an upcoming Word release.\n\n<P>\n\nNielsen: The Amaya structured HTML browser and editor (W3C work\n\nperformed at INRIA) does this already.\n\n<P>\n\nMasinter: The Shared Books system at Xerox might have done this\n\ntoo.\n\n<P>\n\n(General acknowledgment that these capabilities have existed in\n\nprevious research systems.)\n\n<P>\n\nSome Word 8 features:\n\n<UL>\n\n<LI>automatic URL recognition (and conversion into a browsable\n\nlink)\n\n<LI>common office hyperlink model across Office (both user-interface\n\nand programmability)\n\n<LI>web toolbar\n\n<LI>browser integration  (the browser is opened using the DocObjects\n\nextensions to OLE, e.g. Explorer)\n\n<LI>document map (a frame-oriented table of contents style capability)\n\n</UL>\n\n\n\n<P>\n\n\n\n<P>\n\nOne problem they have been experiencing while working on Word\n\nis how to make a user interface which is good for both browsing\n\nand authoring simultaneously.  Certain authoring features are\n\nundesirable during browsing, for example, the feature which marks\n\nmisspelled words with a wavy red underline -- the user doesn't\n\nwant to know this for sites they didn't author.   One solution\n\nis to have a mode-based interface, with distinct browsing and\n\nauthoring modes.  However, Fein would prefer to have editing and\n\nbrowsing occur within the same mode.\n\n<P>\n\nLong: We encountered this problem in NaviPress as well.  Out solution\n\nis: you are in browsing mode until you place your cursor in the\n\nwindow, then you switch to browsing/authoring mode.\n\n<P>\n\nAnother participant mentioned that Netscape Gold has an authoring\n\nmode which is separate from their browsing mode, even popping\n\nup a separate authoring window.\n\n<P>\n\nFein discussed the desirability of having the file format (e.g.,\n\nHTML, Word native) and connection type (e.g. LAN, SLIP) be visible,\n\nbut still the same operation to the user, for most cases. For\n\nexample, HTML should be just one option for saving, rather than\n\nhaving a separate 'Save to URL/HTML' command.\n\n<P>\n\nSince the native Word document type is a richer format than HTML,\n\nthere is some information loss going from Word to HTML.  There\n\nare also some aspects of HTML which don't convert exactly to native\n\nWord format. This causes a problem for 'out-of-band' editing of\n\nHTML, that is, editing an HTML document that was created by converting\n\na Word document to HTML, and then wanting to recover those changes\n\nback into Word. This led into the broader issue of whether the\n\nWeb should support all word processing features.\n\n<P>\n\nBrown mentioned that some of their customers really cared about\n\nthe format of generated HTML because they were feeding the generated\n\nHTML into other tools.\n\n<P>\n\nThe issue of multi-purpose authoring was also raised: how best\n\nto have just one document type which is good for CD-ROM, for the\n\nWeb, for printing, etc.  Especially for printing, bandwidth becomes\n\nan issue. It is acceptable to retrieve a high-resolution image\n\nover a LAN to produce high-quality printed output, but this is\n\nprobably not acceptable when working over the Internet, since\n\nit is not as fast.  Are users willing to wait half a day to download\n\nthe high-quality files to produce a high-quality printout? \n\n<P>\n\nThere was some discussion about how best to handle writing a resource\n\nwhich contains many related resources, such as a web page and\n\nassociated graphics.\n\n<P>\n\nMasinter: The Web mail group has been working on a way of agglomerating\n\nmany files into one file, using the multipart/related MIME type.\n\n This allows the sending of a web page (many files together to\n\nform one page) via email.\n\n<P>\n\nThere was some discussion about the need for a &quot;GET for edit&quot;\n\nmethod which is distinct from a &quot;GET of source&quot; or a\n\n&quot;GET for browse&quot; (the current behavior of HTTP).  The\n\nneed for this becomes clear when revision information is stored\n\nin a resource.  In this case, a user performing an edit may not\n\nwant the full source, because they do not want to incur the time\n\ndelay of downloading the full revision history, but they may not\n\nwant the browsable version either, due to server-side include\n\nprocessing.<BR>\n\n\n\n<P>\n\nInteroperability:\n\n<P>\n\nExisting tools do not all share the same editing model.  For example,\n\nwith FrontPage, it is possible to have a company name stored in\n\none place.  When this company name is modified, the change is\n\nthen propagated to N leaf nodes.  This is considered to be only\n\none change to FrontPage, but it might be considered N separate\n\nchanges to another tool.\n\n<P>\n\nAnother issue is defining behaviors for less savvy tools, for\n\nexample, what should revisions look like to a non-revision savvy\n\nbrowser?\n\n<P>\n\nIntegrations with existing versioning systems -- this topic should\n\nbe handled by the versioning working group.\n\n<P>\n\nIn conclusion, Fein stated that word processing applications already\n\nhave collaboration features, which are not now available in existing\n\nWeb authoring tools. Microsoft is committed to a standards-based\n\napproach to collaborative authoring. In the long term Fein sees\n\nWord becoming the main editing engine, while FrontPage will concentrate\n\non its facilities for site management, offering a higher web functionality.\n\n \n\n<P>\n\nSchulert: I see FrontPage being a more high-end, more web-focused\n\ntool than Word.<BR>\n\n\n\n<P>\n\nWhitehead: Can you tell us which HTTP method will be used in Word\n\n8 for its &quot;Save to URL&quot; capability?\n\n<P>\n\nFein: Sorry, I cannot talk about this.<BR>\n\n\n\n<P>\n\nNielsen stated that the Word team should use the PUT method rather\n\nthan the POST method.  Schulert responded with a discussion about\n\nwhy the POST method was chosen by FrontPage group.  The primary\n\nreason is that when they began development of FrontPage, POST\n\nwas implemented and standard across servers, while PUT was not.\n\n Nielsen stated that the HTTP 1.1 PUT is now much more usable\n\nfor writing content to an HTTP server than the HTTP 1.0 PUT.\n\n<P>\n\nMasinter asked whether the HTTP 1.1 version of PUT is adequate\n\nfor putting versions with metadata, and also about the atomicity\n\nof PUTs? Long suspects that HTTP 1.1 still has some problems in\n\nthis area.<BR>\n\n\n\n<P>\n\nNielsen: Need to aim for December timeframe to get into HTTP 1.2,\n\nsince there are many products being worked on, and HTTP 1.2 appears\n\nto be the last revision of HTTP.\n\n<P>\n\nMasinter: This group needs to produce some input for the HTTP\n\nWorking Group by the end of the summer to have results put into\n\nHTTP 1.2.\n\n<H3>Distributed Authoring - Nielsen</H3>\n\n\n\n<P>\n\nNielsen began by reiterating the need to work quickly to get results\n\ninto HTTP 1.2.\n\n<P>\n\nNielsen would like to be able to create a document once and then\n\nhave it seamlessly: (1) sent to a friend via email, (2) posted\n\nto a newsgroup, and (3) written to a web page, all using a common\n\nPUT/POST model.  Some issues this raises are what transaction\n\nmodel is used? What quality of service do you want to have?  Nielsen\n\nused the example of having icons on the desktop representing people,\n\nweb servers, news servers, etc. with the capability of dragging\n\na document onto one or more of these icons and then saying &quot;submit&quot;.\n\n This causes the appropriate email post, newsgroup post, and web\n\npage write to occur simultaneously with appropriate error handling\n\nwhen things go wrong. \n\n<P>\n\nNielsen also favors using the LINK mechanism within HTML to have\n\nrich relationship semantics among documents.  These links could\n\nserve a number of purposes, for example, serializing a hyperweb\n\nof documents so they can be printed, or linking a table of contents\n\nto chapters of document. These relationships could also be used\n\nto create alternate hierarchies to the containment hierarchy offered\n\nby the directory structure of most existing web servers.  This\n\nmore general model can handle web servers implemented on top of\n\na database as well as on top of a file system.\n\n<P>\n\nIn  Nielsen's view, during a PUT, the client may make suggestions\n\nabout the destination URL of a resource, but is not in charge\n\nof the name space of the server. The server ultimately decides\n\nwhere it will place a resource in its name space.  The server\n\nuses the link relationships to determine the location and hierarchical\n\narrangement of resources within its namespace, rewriting HTML\n\nas necessary to preserve the relationships.\n\n<P>\n\nSome meeting participants were unaware of the LINK tag, and so\n\nthere was a brief discussion describing it, and what it can be\n\nused for.  This led into a discussion of the desirability of having\n\na standard for LINK REL tags (usage convention).  It was mentioned\n\nthat  Murray Maloney had previously written a document on standard\n\nrelationships, and that the time might be ripe to revisit this.\n\n<BR>\n\n\n\n<P>\n\nHamilton: What about HyTime?  It can project structure onto a\n\ndocument.  \n\n<P>\n\nFrystyk: Same with Hyper-G.\n\n<P>\n\nHamilton: There is a need for addition of structure that is not\n\nembedded into a document, like a linkbase system.<BR>\n\n\n\n<P>\n\nThere was some discussion about the advantages of using standard\n\nlink relationships. Concern was raised that a full consideration\n\nof this functionality would take longer than the two months remaining\n\nbefore the end of the summer deadline for impacting HTTP 1.2.\n\n<P>\n\nMasinter: The two month timeframe is only for changes to HTTP.\n\n However, there is the PEP (Protocol Extension Protocol) which\n\ncan support changes beyond 1.2.<BR>\n\n\n\n<P>\n\nThere was some discussion about whether there is a need for two\n\nphase commit transaction semantics for PUT operations in HTTP.\n\n<BR>\n\n\n\n<P>\n\nWills: Should versioning be tied to a particular versioning system,\n\nlike CVS (Concurrent-Versions System)?\n\n<P>\n\nNielsen: Versioning should not be tied to a particular system.\n\n Authoring tools should use PEP to get the operations needed to\n\nperform versioning with a given system.  How a particular versioning\n\nsystem performs locking and access control will be negotiated\n\nbetween the authoring client and HTTP server in some meta language.\n\n<P>\n\nWhitehead: Using PEP is not necessary, since it is possible to\n\nimplement several different versioning styles using a common set\n\nof atomic operations.\n\n<P>\n\nMasinter: Perhaps the variability between versioning styles can\n\nbe expressed in standard ways, such as by using a forms-based\n\ninterface.\n\n<P>\n\nSeiwald: Whitehead says we can do a lot with some atomic operations,\n\nwhich allow for basic interoperability across versioning systems,\n\nso perhaps we should al least do this.\n\n<P>\n\nNielsen: I don't want to end up with an enumeration of particular\n\nversion control systems, but by using a negotiation model common\n\nmethods will emerge.\n\n<P>\n\nMasinter: Registration and negotiation is the fallback when standardization\n\nis not possible. It is better than chaos, but standardization\n\nis better than negotiation.\n\n<P>\n\nWhitehead: There are also significant technical problems with\n\nnegotiation. For example a lock simply prevents writing to a resource\n\nby all users except the lock holder.  Describing a lock thus requires\n\nan access control meta language, the description and implementation\n\nof which is a difficult problem.\n\n<P>\n\nNielsen: What goes into HTTP has to be independent of the versioning\n\nmodel used.\n\n<P>\n\n(There was agreement on this point.)<BR>\n\n\n\n<P>\n\nBack to presentation:\n\n<P>\n\nNielsen: Caching needs unique names for versions and variants\n\nso caches can deal with them uniquely.  \n\n<P>\n\nMasinter: No, HTTP/1.1 doesn't require unique names.  Could perhaps\n\nuse a version header instead, which the cache could understand.\n\n<BR>\n\n\n\n<P>\n\nThere was some discussion about the possible use of entity tags\n\nin a versioning scheme.\n\n<P>\n\nMasinter: There should be some investigation of if-match and PUT\n\nusage.  There doesn't really need to be that much support for\n\nversioning.  There is a tradeoff in putting a new version header\n\non the request versus putting version identifiers into the name\n\nspace.<BR>\n\n\n\n<P>\n\nNielsen mentioned that PUT does not support writing to resource\n\nbyte ranges (i.e., sub parts of a resource). \n\n<P>\n\nNielsen also mentioned that the Jigsaw server has an integration\n\nwith CVS, and that the Amaya browser/editor will be 1.1 compliant\n\nas quickly as possible.\n\n<P>\n\nNielsen also mentioned the need to make PUT reliable in practice,\n\nby which he means ensuring that PUT doesn't drop data on the floor\n\nduring a transaction (lost data is bad).\n\n<P>\nThere was some discussion about the applicability of SHTTP (Secure\nHTTP) for secure writes.  According to Masinter, the SHTTP specification\nis in last call and will be approved very soon.  Nielsen expressed\nthe opinion that SHTTP is very difficult to implement.\n</P>\n\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.uci.edu/\">\nUniversity of California, Irvine</A><BR>\n<A HREF=\"http://www.ics.uci.edu/~ejw/\">\nJim Whitehead &lt;ejw@ics.uci.edu&gt;</A><BR>\n<A HREF=\"http://www.ics.uci.edu/\">\nDepartment of Information and Computer Science</A><BR>\n247 ICS2 #3425<BR>\n<A HREF=\"http://www.irvineco.com/\">\nIrvine</A>, CA  92697-3425<BR>\n</ADDRESS>\n<P>\nLast modified: 24 Jul 1996\n</P>\n</BODY>\n</HTML>\n\n", "encoding": "ascii"}