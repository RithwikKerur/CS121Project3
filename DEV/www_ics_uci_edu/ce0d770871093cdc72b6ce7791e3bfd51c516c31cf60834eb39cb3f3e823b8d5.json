{"url": "https://www.ics.uci.edu/~kay/pubs/intro-ed-res-dept.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\">\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\">\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Sunday, February 22, 1998 10:22 PM\">\n<TITLE>Large Introductory Courses in Research CS Departments</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERDATA\" CONTENT=\"85F25A67\">\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"introductory courses, research and teaching, research computer science, teaching faculty\">\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"Panel presentation, 1998 ACM SIGCSE Conference.  Large Introductory Courses in Research Computer Science Departments.  In which it is argued that good research departments use introductory teaching specialists in planning, managing, and teaching courses.\">\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<A NAME=\"_top\"></A>\n<P>\n<IMG SRC=\"intro_ed_res_dept._pa_files/large_introductory_course.gif\" WIDTH=503 HEIGHT=281 ALT=\"Large Introductory Courses in\">\n<BR>\n<FONT FACE=\"Times\" SIZE=2>Introductory courses offered by computer science\ndepartments in research universities have several characteristics that distinguish\nthem from courses with similar content at other institutions: \n<BR>\n* Often the class sizes are large, ranging even to hundreds of students\nper class (see </FONT><A HREF=\"intro_ed_res_dept._pa_files/endnotes.html#_27\">Endnotes</A><FONT FACE=\"Times\" SIZE=2>).\n<BR>\n* The course content changes frequently, but often not in a direction that\nparallels the research interests of faculty.\n<BR>\n* Often the main group of faculty in the department are not significantly\nrewarded for time they devote to introductory education, which can decrease\ntheir involvement in those courses.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>This panel will explore strategies, policies,\nand procedures used by different research departments to address these issues.\nTopics covered will include the use of non-research faculty to teach and\nmanage introductory courses and curricula; levels of support for hardware,\nsoftware, section leaders, lab assistants, graders, clerical and technical\nstaff; teaching loads; and procedures for making curricular decisions.</FONT></P>\n<P>\n<FONT FACE=\"Times\" SIZE=2>The panelists all have significant responsibility\nfor introductory courses in their departments. Each of their departments\nhas taken specific steps to address the conflict between research demands\nand introductory teaching in computer science.<A NAME=\"_14_1272\"></A></FONT></P>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Jacobo Carrasquel\n<BR>\n</B></FONT><FONT FACE=\"Times\" SIZE=2>At Carnegie Mellon we have a group\nof non-tenure faculty that is in charge of teaching all the introductory\nCS courses. This group has a director, an associate director, and five full-time\nlecturers. Currently we teach five different 100-level (first-year) courses\nfor several departments and schools. Our largest &quot;clients&quot; are\nthe School of CS, the College of Engineering, and the College of Science.\n<BR>\nThe courses are taught every semester (15 weeks) and we have approximately\n400 students every semester. In addition to the 100-level courses, we also\nteach a 200-level course in data structures for non-CS majors.\n<BR>\nOur courses do not include a lecture for the entire class. Each course is\nstructured around &quot;recitations,&quot; which are groups of 25 students.\nEach lecturer is in charge of three recitations. Recitations meet three\ntimes a week for 50 minutes each (or twice a week for 70 minutes). On the\naverage, each lecturer must spend 10 contact hours and three office hours.\n<BR>\nAll the lecturers agree on a common set of topics to be taught during the\nsemester, on the language and platform to be used, and on the final exams.\nEach lecturer decides on the outline, lab assignments, other exams, and\ntextbooks for his or her recitations. \n<BR>\nWe don&#39;t have traditional TAs. We have help with some of the grading\nand office hours from undergraduates that we call &quot;Class Assistants&quot;.\nEach recitation has one CA assigned to it; the CA will attend class and\nspend time in the labs working with students.<A NAME=\"_14_2803\"></A></FONT></P>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Michael J. Clancy\n<BR>\n</B></FONT><FONT FACE=\"Times\" SIZE=2>The U.C. Berkeley CS faculty includes\ntwo lower-division specialists, myself and Brian Harvey. We are both classified\nas &quot;lecturers&quot; rather than &quot;professors;&quot; the Lecturer\njob description does not include research responsibilities, and thus involves\na higher annual teaching load (somewhat less than double that of a professor).\nWe both have the equivalent of tenure. Brian&#39;s duties mainly involve\nteaching--he runs three sections per year of 200 or more students--while\nmine include substantial administrative responsibilities. Both of us have\nalso taught upper-division courses in the past.\n<BR>\nCertain aspects of &quot;second-class citizenhood&quot; are inherent in\nthe Lecturer position; for instance, we are not allowed to vote on tenure\ncases, and nontenured lecturers are due for a smaller cost-of-living adjustment\nthis year than assistant professors. However, our department administrations\nhave gone out of their way to reduce the impact of these institutional hassles\non us. I sit on all the committees relevant to lower-division instruction\n(undergraduate study, computer needs and resources, scheduling), and Brian\nand I both have substantial input in decisions about curricular evolution\nand resource allocation.\n<BR>\nRegarding other aspects of Berkeley's support for computer science instruction,\nhere are some data. Our student-teacher ratio in all courses is around 50\nstudents to 20 hours of TA. Lower-division courses get 10 minutes per student\nper week of graders; upper-division courses, slightly less. Our student/computer\nratio is between 10 and 15 to 1. Three rooms of UNIX workstations are dedicated\nto the lower-division CS major course sequence, and more than half the available\nhours of a room of Macintoshes are allocated to our service course for non-majors.\nA significant portion of the budget for instructional support staff is dedicated\nto the lower-division courses.<A NAME=\"_14_4710\"></A></FONT></P>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Eric Roberts\n<BR>\n</B></FONT><FONT FACE=\"Times\" SIZE=2>As at most institutions, the enrollment\npatterns in computer science courses at Stanford place considerable pressure\non teaching resources. Although the computer science department represents\nonly 2% of the university faculty as a whole, the department is responsible\nfor about 6% of the units taught. Enrollment is also heavily skewed toward\nintroductory and service courses. The typical department in the School of\nEngineering teaches a majority of its units to its own majors; in computer\nscience, almost 80% of the units are taken by students majoring in other\ndepartments throughout the university.\n<BR>\nMeeting this high level of demand using regular faculty would place a disproportionate\nburden on the department that would make it difficult to maintain our position\nas the top-ranked research department in the United States. As a result,\nStanford has relied for almost twenty years on a separate teaching faculty\nto supply much of the instruction. This group, which is called the Educational\nAffairs Division, currently consists of one faculty member and six lecturers.\nThe faculty member serves as Associate Chair of the department and is appointed\nwith the rank of Professor (Teaching), which is a special faculty line at\nStanford with full faculty status but off the tenure clock. Appointments\nconsist of renewable five-year contracts. Lecturers are typically appointed\nfor terms of between two and three years and are considered for promotion\nto Senior Lecturer after seven years.\n<BR>\nLecturers are responsible for two types of courses:\n<BR>\n1. Introductory courses, which are interpreted as extending beyond the CS1/CS2\nlevel to include the standard sophomore course.\n<BR>\n2. Service courses, which consist of practically oriented courses targeted\nprimarily to our master's program and students from local companies who\nare enrolled via the Stanford Industrial Television Network (SITN).\n<BR>\nThe distance education provided by the SITN program is an important aspect\nof our teaching work, not only because it provides a valuable educational\nservice to the community, but also because it changes the economics of the\nteaching program. Because of the SITN revenue from service courses, the\nlecturers bring in more money to the department than they cost--a fact that\nmakes it much easier to justify the program to senior university officials.\n<BR>\nLecturers are hired entirely on the basis of quality of teaching; no research\nis expected. As a result, most lecturers receive very high teaching evaluations,\neven in large, high-workload courses where such ratings are more difficult\nto achieve. The effective teaching load beginning in 1996-97 is four courses\nover three quarters. Teaching support in the form of TAs and undergraduate\nsection leaders is available to courses taught by lecturers at the same\nlevel as those taught by faculty. Each lecturer's preferences are taken\nstrongly into account when course assignments are made.<A NAME=\"_14_7673\"></A></FONT></P>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B>Joseph Zachary\n<BR>\n</B></FONT><FONT FACE=\"Times\" SIZE=2>The Department of Computer Science\nat the University of Utah has 19 regular professors and two non-tenure-track\n&quot;clinical&quot; professors. There are approximately 300 undergraduate\nand 90 graduate students studying in the department at any given time.\n<BR>\nThe two clinical faculty members run every aspect of the undergraduate program:\nthey handle admissions, teach almost all of the freshman-level courses,\nadvise students, schedule courses, instigate most curriculum changes, and\nprovide input on hardware and software purchases. Clinical faculty teach\nfive or six courses per year, whereas regular faculty teach three. (Utah\nis on the quarter system, which means that the teaching load for regular\nfaculty is one course per quarter.) Release from some of the teaching load\nfor a clinical faculty member can be arranged to allow time to work on such\nprojects as textbook writing and educational software development.\n<BR>\nFor the most part, clinical faculty teach the courses that are left over\nafter the regular faculty have chosen. Lately those courses have been the\nCS1/CS2 equivalents, sophomore/junior-level programming languages and hardware\ndesign courses, and senior/graduate-level compiler and programming languages\ncourses.\n<BR>\nFaculty (whether regular or clinical) are typically supported with one graduate\nor undergraduate teaching assistant for every 30-40 students enrolled in\na class. The teaching assistants do most of the grading and staff the computer\nlaboratories.</FONT></P>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=2><B><A HREF=\"http://www.ics.uci.edu/~kay/pubs/intro_ed_res_dept._pa_files/endnotes.html#_27\">Reference</A></B></FONT></P>\n<BR CLEAR=ALL>\n</BODY>\n</HTML>\n", "encoding": "ascii"}