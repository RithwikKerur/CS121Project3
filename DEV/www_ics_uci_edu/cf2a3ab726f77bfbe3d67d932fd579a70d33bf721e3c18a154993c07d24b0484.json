{"url": "https://www.ics.uci.edu/~theory/269/141121.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, November 21, 2013</title>\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script type=\"text/javascript\" src=\"http://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">Fall 2014: Theory Seminar</a><br>\nDonald Bren Hall, Room 1425, 1:00pm\n\n<hr />\nNovember 21, 2014:</h2>\n<h1>\nCache-Adaptive Algorithms\n</h1>\n<h2>\nJenny Lam\n</h2>\n\n<p>\nWe introduce the cache-adaptive model, which generalizes the\nexternal-memory model to apply to environments in which the amount of\nmemory available to an algorithm can fluctuate. The cache-adaptive model\napplies to operating systems, databases, and other systems where the\nallocation of memory to processes changes over time. We prove that if an\noptimal cache-oblivious algorithm has a particular recursive structure,\nthen it is also an optimal cache-adaptive algorithm. Cache-oblivious\nalgorithms having this form include Floyd&ndash;Warshall all pairs\nshortest paths, naive recursive matrix multiplication, matrix transpose,\nand Gaussian elimination. While the cache-oblivious sorting algorithm\nLazy Funnel Sort does not have this recursive structure, we prove that\nit is nonetheless optimally cache-adaptive. We also establish that if a\ncache-oblivious algorithm is optimal on &ldquo;square&rdquo;\n(well-behaved) memory profiles then, given resource augmentation it is\noptimal on all memory profiles.\n</p>\n<p>\nWe give paging algorithms for the case where the cache size changes\ndynamically. We prove that LRU with 4-memory and 4-speed augmentation is\ncompetitive with optimal. Moreover, Belady's algorithm remains optimal\neven when the cache size changes. Cache-obliviousness is distinct from\ncache-adaptivity. We exhibit a cache-oblivious algorithm that is not\ncache- adaptive and a cache-adaptive algorithm for a problem having no\noptimal cache-oblivious solution.\n</p>\n<p>(Based\non <a href=\"http://epubs.siam.org/doi/abs/10.1137/1.9781611973402.71\">a\npaper from SODA 2014</a> by Michael A. Bender, Roozbeh Ebrahimi, Jeremy\nT. Fineman, Golnaz Ghasemiesfeh, Rob Johnson, and Samuel McCauley.)\n</body>\n</html>\n\n", "encoding": "ascii"}