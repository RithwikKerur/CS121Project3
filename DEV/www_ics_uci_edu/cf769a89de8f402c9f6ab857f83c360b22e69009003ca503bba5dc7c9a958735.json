{"url": "https://www.ics.uci.edu/~alspaugh/cls/shr/set.html", "content": "<?xml version='1.1'?>\n<!DOCTYPE html\n     PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'\n     'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>\n<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>\n<head>\n  <title>Sets</title>\n  <meta name='Author' content='Thomas A. Alspaugh'/>\n  <meta name='Description' content=\"Sets\"/>\n  <meta http-equiv='content-type' content='text/html; charset=ISO-8859-1'/>\n  <meta http-equiv='Content-Style-Type' content='text/css'/>\n  <link href='../../alspaugh-uci.css' rel='stylesheet' type='text/css'/>\n  <!-- <link href='../alspaugh-uci-cls.css' rel='stylesheet' type='text/css'/> -->\n  <style type='text/css'>\n\n    td.D   {  font-style: italic;  font-weight: bold;  background-color: silver;  }\n\n    @media screen {\n      body     {  background: url(\"img/bg-set.png\") repeat-y;  }\n      #TMain   {  margin-left: 10.00em;  }\n    }\n  </style>\n</head>\n<body>\n\n<div id='TBg'>\n\n<div id='THeader'>\nSets\n<span class='newUrl'><a href='https://thomasalspaugh.org/pub/fnd/set.html'\n  >thomasalspaugh.org/pub/fnd/set.html</a></span>\n</div>\n\n<div id='TLinks1' class='Links'> <!-- - - - - - - - - - - - - - - - - - - - -->\n<p>  <a class='sc' href='../../index.html'>Home</a>\n</p>\n<div class='hr'> </div>\n<p>  <a href='index.html'>Foundations home</a>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='set.html'>Sets</a><br/>\n<a href='relation.html'>Relations</a><br/>\n<a href='correspondence.html'>Correspondences</a><br/>\n<a href='orderedSet.html'>Ordered Sets</a><br/>\n<a href='lattice.html'>Lattices</a><br/>\n<a href='graph.html'>Graphs</a><br/>\n<a href='powerset.html'>Powersets</a><br/>\n<a href='binaryString.html'>Binary Strings</a><br/>\n<a href='logicConcepts.html'>Logic</a><br/>\n<a href='allen.html'>AIA</a><br/><!-- -spell AIA -->\n<a href='greek.html'>Greek</a><br/>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='glossaryExternal.html'>Glossary</a><br/>\n<a href='goodAbstract.html'>Abstracts</a><br/>\n<a href='argument.html'>Argument</a><br/>\n<a href='inquiryCycle.html'>Inquiry Cycle</a><br/>\n<a href='hohfeld.html'>Legal Relations</a><br/>\n<a href='goodPresentation.html'>Presentations</a><br/>\n</p>\n<div class='hr'> </div>\n<p>\n<a href='quickStart.html'>Elicitation</a><br/>\n<a href='ontology.html'>Glossaries</a><br/>\n<a href='goal.html'>Goals</a><br/>\n<a href='istar.html'>i*</a><br/>\n<a href='SCR.html'>SCR</a><br/>\n<a href='tracing.html'>Tracing</a><br/>\n</p>\n<div class='hr2'> </div>\n<p>\n<a href='alloy.html'>Alloy</a><br/>\n<a href='msc.html'>MSCs</a><br/>\n<a href='regularExpression.html'>Regular Exprs.</a><br/>\n</p><!-- -spell MSCs Exprs -->\n<div class='hr2'> </div>\n<p>\n<a href='java-designPattern.html'>Design Patterns</a><br/>\n<a href='javadoc.html'>Javadoc</a><br/>\n<a href='java-package.html'>Java Packages</a><br/>\n<a href='java-type.html'>Java Types</a><br/>\n</p>\n<div class='hr2'> </div>\n<p>\n<a href='html.html'>(X)HTML</a><br/>\n<a href='xmlSchema.html'>XML Schemas</a><br/>\n<a href='xslt.html'>XSLT</a><br/>\n</p><!-- -spell XSLT -->\n</div>\n\n\n<!-- No right column -->\n<div id='TMain'><!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->\n<!--xhtml -y -->\n\n\n<!--spell  Xn ary xn -->\n\n\n<p id='set' title='set'>\nInformally, a\n<dfn>set</dfn> is a collection of\n<dfn>elements</dfn>\n(also called <dfn>members</dfn>).&nbsp;\n</p>\n\n<p id='element-of' title='element-of'> If <span class='m'>X</span> is a set and\n<span class='m'>e</span> is an element of <span class='m'>X</span>,\nthen we write <span class='m'>e</span><span class='M'>&isin;</span><span\nclass='m'>X</span>.&nbsp;\nIf <span class='m'>e</span> is in not in <span class='m'>X</span>,\nthen we write <span class='m'>e</span>&notin;<span class='m'>X</span>.&nbsp;\n</p>\n\n<p> We have two ways of specifying the elements of a specific set.&nbsp;\n</p>\n\n<dl>\n  <dt id='extension' title='extension'>extensionally</dt>\n    <dd>We can list all the elements of the set, in curly braces,\n      separated by commas.&nbsp;\n      The list is termed the set's <dfn>extension</dfn>.&nbsp;\n      For example, {1,2,3} is the set whose elements are 1, 2, and 3;\n      the extension of \"the positive integers no greater than 3\" is\n      {1,2,3}.&nbsp;\n      Each element of the set is listed exactly once.&nbsp;\n    </dd>\n  <dt id='intension' title='intension'>intensionally</dt>\n    <dd>Let <span class='m'>P</span>(<span class='m'>x</span>)\n      be a predicate that is true or false for each possible x\n      in some already-existing set <span class='m'>E</span>.&nbsp;\n      Then we write the set <span class='m'>S</span> of elements\n      <span class='m'>x</span> for which\n      <span class='m'>P</span>(<span class='m'>x</span>) is true as\n      <span class='m'>S</span>={<span class='m'>x</span><span\n      class='M'>&isin;</span>E&nbsp;|&nbsp;P(<span\n      class='m'>x</span>)}.&nbsp;\n      Where it is clear from context what set <span class='m'>E</span> is intended,\n      we simply write\n      {<span class='m'>x</span>&nbsp;|&nbsp;P(<span class='m'>x</span>)}.&nbsp;\n      It is clear that in all such cases S<span class='M'>&sube;</span>E.&nbsp;\n    </dd>\n</dl>\n\n<p id='empty' title='empty'> The\n<dfn>empty set</dfn> is the unique set that contains no elements.&nbsp;\nWe write the empty set as <span class='M'>&empty;</span>\nor {}.&nbsp;\n</p>\n\n<p>\nA  <dfn id='singleton-set' title='singleton-set'>singleton set</dfn>\nis a set containing exactly one element.&nbsp;\nFor example,\n{<span class='m'>a</span>},\n{<span class='M'>&empty;</span>},\nand { {<span class='m'>a</span>} } are all singleton sets\n(the lone member of { {<span class='m'>a</span>} } is\n{<span class='m'>a</span>}).&nbsp;\n</p>\n\n<p>\nThe <dfn>cardinality</dfn> or\n<dfn id='cardinality' title='cardinality'>size</dfn> of a set\nis the number of elements it contains.&nbsp;\nWe write the cardinality of set <span class='m'>S</span> as\n|<span class='m'>S</span>|.&nbsp;\n</p>\n\n<p id='countable' title='countable'>\nThe cardinality of the integers is represented by <span class='M'>&omega;</span>;\nmany (but not all) infinite sets also have this cardinality\nand are said to be <dfn>countably infinite</dfn>, <dfn>countable</dfn>,\nor <dfn>enumerable</dfn>,\nbecause their elements can be \"counted\" or\nplaced in correspondence with the integers.&nbsp;\nExamples:&nbsp;\n|<span class='M'>&empty;</span>| = 0,\n|{a,b,c}| = 3,\n|{all even numbers}| = <span class='M'>&omega;</span>.&nbsp;\n</p>\n\n\n<h1>Relations between sets</h1>\n\n<p id='subset' title='subset'>\nSet <span class='m'>X</span> is a\n<dfn>subset</dfn> of set <span class='m'>Y</span> iff\n<span class='m'>e</span><span class='M'>&isin;</span><span class='m'>X</span> implies\n<span class='m'>e</span><span class='M'>&isin;</span><span class='m'>Y</span> for every\n<span class='m'>e</span>.&nbsp;\nWe write this as <span class='m'>X</span><span class='M'>&sube;</span><span class='m'>Y</span>.&nbsp;\n<span class='M'>&sube;</span> is an <a href='relation.html#order'>order relation</a>.&nbsp;\n</p>\n\n<p id='equal' title='equal'> Sets <span class='m'>X</span> and\n<span class='m'>Y</span> are\n<dfn>equal</dfn> iff\nthey have exactly the same elements.&nbsp;\nEquivalently, <span class='m'>X</span> and <span class='m'>Y</span> are equal iff\n<span class='m'>X</span><span class='M'>&sube;</span><span class='m'>Y</span> and\n<span class='m'>Y</span><span class='M'>&sube;</span><span class='m'>X</span>.&nbsp;\n</p>\n\n\n<h1>Constructing a set from other sets</h1>\n\n<p id='intersection' title='intersection'> The\n<dfn>intersection</dfn> of sets <span class='m'>X</span> and\n<span class='m'>Y</span>,\nwritten <span class='m'>X</span><span class='M'>&cap;</span><span class='m'>Y</span>,\nis the set\n{<span class='m'>x</span>&nbsp;|&nbsp;<span class='m'>x</span><span class='M'>&isin;</span><span\nclass='m'>X</span>&nbsp;and&nbsp;<span class='m'>x</span><span class='M'>&isin;</span><span\nclass='m'>Y</span>}.&nbsp;\n</p>\n\n<p id='union' title='union'> The\n<dfn>union</dfn> of sets <span class='m'>X</span> and <span class='m'>Y</span>,\nwritten <span class='m'>X</span><span class='M'>&cup;</span><span class='m'>Y</span>,\nis the set {<span class='m'>x</span>&nbsp;|&nbsp;<span\nclass='m'>x</span><span class='M'>&isin;</span><span class='m'>X</span>&nbsp;or&nbsp;<span\nclass='m'>x</span><span class='M'>&isin;</span><span class='m'>Y</span>}.&nbsp;\n</p>\n\n<p id='difference' title='difference'> The\n<dfn>difference</dfn> of sets <span class='m'>X</span> and\n<span class='m'>Y</span>,\nwritten X-<span class='m'>Y</span> or X\\Y,\nis the set {<span class='m'>x</span>&nbsp;|&nbsp;<span\nclass='m'>x</span><span class='M'>&isin;</span><span class='m'>X</span>&nbsp;and&nbsp;<span\nclass='m'>x</span>&notin;<span class='m'>Y</span>}.&nbsp;\nWhere <span class='m'>X</span> can be assumed:&nbsp;\nthe <dfn>complement</dfn> of <span class='m'>Y</span> with respect to\n<span class='m'>X</span>,\nwritten <span class='ol'>Y</span>,\nis the set X-<span class='m'>Y</span>.&nbsp;\n</p>\n\n<p id='powerset' title='powerset'> The\n<dfn>powerset</dfn> of set <span class='m'>X</span>,\nwritten <span class='M'>&weierp;</span><span class='m'>X</span>\nor <b>P</b>&nbsp;<span class='m'>X</span>\nor 2<sup><span class='m'>X</span></sup>,\nis the set of all subsets of <span class='m'>X</span>.&nbsp;\n(<a href='powerset.html'>Detailed discussion</a>)&nbsp;\nA powerset is a <a href='orderedSet.html'>partially-ordered set</a>.&nbsp;\n</p>\n\n<p id='CartesianProduct' title='CartesianProduct'> The\n<dfn>(Cartesian) product</dfn> of sets <span class='m'>X</span> and\n<span class='m'>Y</span>,\nwritten <span class='m'>X</span>&times;<span class='m'>Y</span>,\nis the set of pairs\n{(<span class='m'>x</span>,<span class='m'>y</span>)&nbsp;|&nbsp;<span\nclass='m'>x</span><span class='M'>&isin;</span><span\nclass='m'>X</span>&nbsp;and&nbsp;<span\nclass='m'>y</span><span class='M'>&isin;</span><span class='m'>Y</span>}.&nbsp;\n(<a href='cartesianProduct.html'>Example</a>)&nbsp;\n</p>\n\n<p>\nProducts may be of any positive <dfn id='arity' title='arity'>arity</dfn>\n(or order) <span class='m'>n</span>,\nin which case the\n<dfn id='n-ary-product' title='n-ary-product'><span class='m'>n</span>-ary\n(Cartesian) product</dfn>\n<span class='m'>X</span><sub>1</sub>&times;...&times;<span\nclass='m'>X</span><sub>n</sub>\nis the set of <span class='m'>n</span>-tuples\n{(<span class='m'>x</span><sub>1</sub>,...,<span class='m'>x</span><sub\nclass='m'>n</sub>)&nbsp;|&nbsp;<span class='m'>x</span><sub>1</sub><span\nclass='M'>&isin;</span><span\nclass='m'>X</span><sub>1</sub>&and;...&and;<span class='m'>x</span><sub\nclass='m'>n</sub><span class='M'>&isin;</span><span class='m'>X</span><sub\nclass='m'>n</sub>}.&nbsp;\nThe smallest arities have names:&nbsp;\n</p>\n<ul class='breakAfter'>\n  <li> 1-ary:&nbsp; <dfn id='unary' title='unary'>unary</dfn>\n  </li>\n  <li> 2-ary:&nbsp; <dfn id='binary' title='binary'>binary</dfn>\n  (by far the most common arity)\n  </li>\n  <li> 3-ary:&nbsp; <dfn id='ternary' title='ternary'>ternary</dfn>\n  </li>\n</ul>\n\n<p>\nThe <dfn id='quotient'>quotient</dfn>\nof set <span class='m'>X</span> by\n<a href='relation.html#equivalence_relation'>equivalence relation</a>\n<span class='m'>E</span>,\nwritten <span class='m'>X</span>/<span class='m'>E</span>,\nis the set of <a href='relation.html#equivalence_classes'>equivalence classes</a>\ninto which <span class='m'>E</span> partitions <span class='m'>X</span>.&nbsp;\n</p>\n\n\n<h1>Properties of set operations</h1>\n\n<table frame='border' rules='all' id='properties' summary='properties of operations'>\n<tbody>\n  <tr>\n      <th>Property</th>\n      <th>Definition for <span class='M'>&cap;</span> and\n      <span class='M'>&cup;</span></th>\n      <th>Definition for <span class='M'>&cup;</span> and\n      <span class='M'>&cap;</span></th>\n  </tr>\n  <tr>\n      <td>idempotent</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cap;</span><span class='m'>X</span> = X</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cup;</span><span class='m'>X</span> = X</td>\n  </tr>\n  <tr>\n      <td>commutative</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cap;</span><span class='m'>Y</span> =\n        <span class='m'>Y</span><span class='M'>&cap;</span>X</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cup;</span><span class='m'>Y</span> =\n        <span class='m'>Y</span><span class='M'>&cup;</span>X</td>\n  </tr>\n  <tr>\n      <td>associative</td>\n      <td class='ce'>(<span class='m'>X</span><span class='M'>&cap;</span><span\n        class='m'>Y</span>)<span class='M'>&cap;</span><span class='m'>Z</span> =\n        <span class='m'>X</span><span class='M'>&cap;</span>(<span class='m'>Y</span><span class='M'>&cap;</span><span\n        class='m'>Z</span>)</td>\n      <td class='ce'>(<span class='m'>X</span><span class='M'>&cup;</span><span\n        class='m'>Y</span>)<span class='M'>&cup;</span><span class='m'>Z</span> =\n        <span class='m'>X</span><span class='M'>&cup;</span>(<span class='m'>Y</span><span class='M'>&cup;</span><span\n        class='m'>Z</span>)</td>\n  </tr>\n  <tr>\n      <td>distributive</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cap;</span>(<span\n        class='m'>Y</span><span class='M'>&cup;</span><span class='m'>Z</span>) =\n        (<span class='m'>X</span><span class='M'>&cap;</span><span class='m'>Y</span>)<span class='M'>&cup;</span>(<span\n        class='m'>X</span><span class='M'>&cap;</span><span class='m'>Z</span>)</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cup;</span>(<span\n        class='m'>Y</span><span class='M'>&cap;</span><span class='m'>Z</span>) =\n        (<span class='m'>X</span><span class='M'>&cup;</span><span class='m'>Y</span>)<span class='M'>&cap;</span>(<span\n        class='m'>X</span><span class='M'>&cup;</span><span class='m'>Z</span>)</td>\n  </tr>\n  <tr>\n      <td rowspan='2'>De Morgan's laws</td>\n      <td class='ce'><span class='ol'><span class='m'>X</span><span class='M'>&cap;</span>Y</span> =\n          <span class='ol'>X</span> <span class='M'>&cup;</span> <span class='ol'>Y</span></td>\n      <td class='ce'><span class='ol'><span class='m'>X</span><span class='M'>&cup;</span>Y</span> =\n          <span class='ol'>X</span> <span class='M'>&cap;</span> <span class='ol'>Y</span></td>\n  </tr>\n  <tr>\n      <td class='ce'>\n          <span class='m'>U</span>-(<span class='m'>X</span><span class='M'>&cap;</span><span\n          class='m'>Y</span>)\n          =\n          (<span class='m'>U</span>-<span class='m'>X</span>)<span class='M'>&cup;</span>(<span\n          class='m'>U</span>-<span class='m'>Y</span>)</td>\n      <td class='ce'>\n          <span class='m'>U</span>-(<span class='m'>X</span><span class='M'>&cup;</span><span\n          class='m'>Y</span>)\n          =\n          (<span class='m'>U</span>-<span class='m'>X</span>)<span class='M'>&cap;</span>(<span\n          class='m'>U</span>-<span class='m'>Y</span>)</td>\n  </tr>\n  <tr>\n      <td>absorptive</td>\n      <td class='ce' colspan='2'>\n          <span class='m'>X</span><span class='M'>&cap;</span>(<span class='m'>X</span><span class='M'>&cup;</span><span\n          class='m'>Y</span>) =\n          <span class='m'>X</span> =\n          <span class='m'>X</span><span class='M'>&cup;</span>(<span class='m'>X</span><span class='M'>&cap;</span><span\n          class='m'>Y</span>)</td>\n  </tr>\n</tbody>\n</table>\n\n<p>\nIn the table above,\nDe Morgan's laws are given twice, equivalently:&nbsp;\nonce in terms of complement (with respect to an implicit universe),\nand once in terms of subtraction\nfrom a specified universe <span class='m'>U</span>.&nbsp;\n</p>\n\n<p>\nI know no names for these useful equivalences involving set difference:&nbsp;\n</p>\n\n<table frame='border' rules='all' id='difference_equivalences'\nsummary='equivalences involving difference'>\n<tbody>\n  <tr>\n      <th></th>\n      <th>&minus; and <span class='M'>&cup;</span></th>\n      <th>&minus; and <span class='M'>&cap;</span></th>\n  </tr>\n  <tr>\n      <th>0.</th>\n      <td class='ce' colspan='2'><span class='m'>X</span><span class='M'>&cup;</span><span\n        class='m'>Y</span>&minus;((<span class='m'>X</span>&minus;<span\n        class='m'>Y</span>)<span class='M'>&cup;</span>(<span class='m'>Y</span>&minus;<span class='m'>X</span>))\n        = <span class='m'>X</span><span class='M'>&cap;</span>Y</td>\n  </tr>\n  <tr>\n      <th>1.</th>\n      <td class='ce'>(<span class='m'>X</span>&minus;<span\n        class='m'>Z</span>)<span class='M'>&cup;</span>(<span class='m'>Y</span>&minus;<span\n        class='m'>Z</span>)&nbsp;=&nbsp;(<span class='m'>X</span><span class='M'>&cup;</span><span\n        class='m'>Y</span>)&minus;Z</td>\n      <td class='ce'>(<span class='m'>X</span>&minus;<span\n        class='m'>Z</span>)<span class='M'>&cap;</span>(<span class='m'>Y</span>&minus;<span\n        class='m'>Z</span>)&nbsp;=&nbsp;(<span class='m'>X</span><span class='M'>&cap;</span><span\n        class='m'>Y</span>)&minus;Z</td>\n  </tr>\n  <tr>\n      <th>2.</th>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cup;</span>(<span\n        class='m'>Y</span>&minus;<span class='m'>Z</span>)&nbsp;=&nbsp;(<span\n        class='m'>X</span><span class='M'>&cup;</span><span class='m'>Y</span>)&minus;(<span\n        class='m'>Z</span>&minus;<span class='m'>X</span>)</td>\n      <td class='ce'><span class='m'>X</span><span class='M'>&cap;</span>(<span\n        class='m'>Y</span>&minus;<span class='m'>Z</span>)&nbsp;=&nbsp;(<span\n        class='m'>X</span><span class='M'>&cap;</span><span class='m'>Y</span>)&minus;(<span\n        class='m'>Z</span>&minus;<span class='m'>X</span>)</td>\n  </tr>\n</tbody>\n</table>\n\n<p id='dual' title='dual'> You will notice that the properties of <span class='M'>&cup;</span> and <span class='M'>&cap;</span>\nare interchangeable, in a sense.&nbsp;\nEvery property that is true for <span class='M'>&cup;</span> is also true for <span class='M'>&cap;</span>;\nmore generally,\nif <span class='m'>P</span> is a property involving <span class='M'>&cup;</span> and <span class='M'>&cap;</span>,\nthen there is a property <span class='m'>P</span><sup><span class='M'>&part;</span></sup>\n(pronounced \"P dual\")\nthat is <span class='m'>P</span> with every instance of <span class='M'>&cup;</span> replaced by <span class='M'>&cap;</span>,\nand every instance of <span class='M'>&cap;</span> replaced by <span class='M'>&cup;</span>,\nsuch that\n<span class='m'>P</span>&equiv;<span class='m'>P</span><span\nclass='sp'>&part;</span>.&nbsp;\nThis relation between the two operators is termed <dfn>duality</dfn>\nand is an instance of the\n<a href='orderedSet.html#duality'>duality</a>\nthat holds in any ordered set.&nbsp;\n</p>\n\n<p>\nIt is worth noting that set difference (&minus;)\nis neither commutative nor associative:\n</p>\n\n<table frame='border' rules='all' summary='properties of set difference'>\n<tbody>\n  <tr>\n      <th>Property</th>\n      <th>Explanation</th>\n  </tr>\n  <tr>\n      <td>&minus; is <span class='bi'>not</span> commutative</td>\n      <td class='ce'>X&minus;<span class='m'>Y</span>&nbsp;&ne;Y&minus;<span\n        class='m'>X</span> for some <span class='m'>X</span> and Y</td>\n  </tr>\n  <tr>\n      <td>&minus; is <span class='bi'>not</span> associative</td>\n      <td class='ce'>(<span class='m'>X</span>&minus;<span\n        class='m'>Y</span>)&minus;<span class='m'>Z</span>&nbsp;&ne;X&minus;(<span\n        class='m'>Y</span>&minus;<span class='m'>Z</span>) for some\n          <span class='m'>X</span>, <span class='m'>Y</span>, and Z</td>\n  </tr>\n</tbody>\n</table>\n\n\n<h1 id='Closure'>Closure</h1>\n\n<p id='closed' title='closed'>Let <span class='m'>S</span> be a set, and\n<span class='m'>O</span> an operation that takes\n0 or more operands (x1,x2,...) from S\nand returns a value.&nbsp;\nS is <dfn>closed</dfn> under <span class='m'>O</span> iff\nfor all x1,x2,...<span class='M'>&isin;</span>S,\nO(x1,x2,...)<span class='M'>&isin;</span>S.&nbsp;\n</p>\n\n<p> Examples:\n</p>\n<dl>\n  <dt>The integers are closed under addition.&nbsp;</dt>\n    <dd>The sum of any two integers is also an integer.&nbsp;\n    </dd>\n  <dt>The integers are not closed under division.&nbsp;</dt>\n    <dd>Counterexample:  1 divided by 2 is not an integer.&nbsp;\n    </dd>\n  <dt>A powerset is closed under intersection.&nbsp;</dt>\n    <dd>A powerset 2<sup>S</sup> contains all subsets of\n      <span class='m'>S</span>.&nbsp;\n      The intersection of two subsets of <span class='m'>S</span>\n      contains no elements not in <span class='m'>S</span>,\n      so the intersection is also a subset of <span class='m'>S</span> and thus\n      an element of 2<sup>S</sup>.\n    </dd>\n</dl>\n\n<p id='closure' title='closure'>\nA new set can be created by closing an existing basis set under an operation;\nthe new set is called the <dfn>closure</dfn>\nof the basis set under the operation.&nbsp;\n</p>\n\n<p>\nMost commonly, when we say closure we mean\n<dfn id='transitive-closure' title='transitive-closure'>transitive closure</dfn>,\nthe set resulting from\nclosing the closure of the ... of the closure of the basis set.&nbsp;\n</p>\n\n<dl>\n  <dt>The closure of <span class='nit'>{1}</span> under <span class='nit'>+</span></dt>\n    <dd>The closure consists of the result of applying + to\n      every pair of elements in {1}:&nbsp;\n      1+1=2.&nbsp;\n      The closure is {1,2}.&nbsp;\n    </dd>\n  <dt>The transitive closure of <span class='nit'>{1}</span>\n      under <span class='nit'>+</span></dt>\n    <dd>The closure consists of the result of\n      <ol class='x'>\n        <li> 1.&nbsp; applying + to every pair of elements in {1}:&nbsp;\n          1+1=2, resulting in {1,2};\n        </li>\n        <li> 2.&nbsp; then applying + to every pair of elements\n          in that closure {1,2}:&nbsp;\n          1+1=2, 1+2=3, 2+1=3, 2+4=4, resulting in {1,2,3,4};\n        </li>\n        <li> 3.&nbsp; then applying + to every pair of elements\n          in that closure {1,2,3,4}:&nbsp;\n          ...&nbsp;\n        </li>\n        <li> ...\n        </li>\n      </ol>\n      <p>\n      and so forth until the set is closed\n      (after an infinite number of closures, in this case).&nbsp;<br/>\n      The transitive closure of {1} under + is the set of positive integers.&nbsp;\n      </p>\n    </dd>\n  <dt>The transitive closure of\n      <span class='nit'>{ {<span class='m'>a</span>},{<span\n      class='m'>b</span>},{<span class='m'>c</span>} }</span>\n      under <span class='nit'><span class='M'>&cup;</span></span></dt>\n    <dd>The closure consists of the result of\n      <ol class='d'>\n        <li> applying <span class='M'>&cup;</span>\n          to every pair of elements in { {a},{b},{c} }:&nbsp;\n          {a}<span class='M'>&cup;</span>{a{=}a},\n          {a}<span class='M'>&cup;</span>{b{=}a,b},\n          {a}<span class='M'>&cup;</span>{c{=}a,c},\n          {b}<span class='M'>&cup;</span>{a{=}a,b},\n          {b}<span class='M'>&cup;</span>{b{=}b},\n          {b}<span class='M'>&cup;</span>{c{=}b,c},\n          {c}<span class='M'>&cup;</span>{a{=}a,c},\n          {c}<span class='M'>&cup;</span>{b{=}b,c},\n          {c}<span class='M'>&cup;</span>{c{=}c},\n          resulting in { {a},{b},{c},{a,b},{a,c},{b,c} };\n        </li>\n        <li> then applying <span class='M'>&cup;</span> to every pair of elements\n          in that closure { {a},{b},{c},{a,b},{a,c},{b,c} },\n          resulting in one new element {a,b,c};\n        </li>\n      </ol>\n      <p>\n      Further closure cycles add no new elements.&nbsp;\n      In this case, closure was achieved after a finite number of cycles\n      (two).&nbsp;\n      The transitive closure of { {a},{b},{c} } under <span class='nit'><span class='M'>&cup;</span></span>\n      is { {a},{b},{c},{a,b},{a,c},{b,c},{a,b,c} }\n      (the <a href='#powerset'>powerset</a> of {a,b,c}, incidentally).&nbsp;\n      </p>\n    </dd>\n</dl>\n\n\n<h1 id='enumerating' title='enumerating'>Enumerating infinite sets</h1>\n\n<p>\nWe enumerate (count) finite sets by\nmapping a positive integer to each element,\nstarting with 1 and continuing in sequence.&nbsp;\nFor example,\nwe could count the vowels \"a e i o u\" thus:&nbsp;\n</p>\n<table>\n<tbody>\n  <tr>\n    <th>Extension of the set</th>\n    <td>a</td>\n    <td>e</td>\n    <td>i</td>\n    <td>o</td>\n    <td>u</td>\n  </tr>\n  <tr>\n    <th>Enumerating it</th>\n    <td>1</td>\n    <td>2</td>\n    <td>3</td>\n    <td>4</td>\n    <td>5</td>\n  </tr>\n</tbody>\n</table>\n\n<p>\nThe same approach is used to enumerate infinite sets,\nexcept that just as we can't list\nthe <a href='#extension'>extension</a> of an infinite set\nbut have to define it <a href='#intension'>intensionally</a>\nwith a rule,\nwe can't count it either\nbut instead have to give a rule for how we would count it.&nbsp;\nHere's one way to enumerate the integers (positive, negative, and zero).&nbsp;\nWe start at 0,\nthen alternate sides with 1, &minus;1, 2, &minus;2, 3, &minus;3, ....&nbsp;\n</p>\n\n<table class='ce'>\n<tbody>\n  <tr>\n    <th>Extension of the set</th>\n    <td>...</td>\n    <td>&minus;j</td>\n    <td>...</td>\n    <td>&minus;2</td>\n    <td>&minus;1</td>\n    <td>0</td>\n    <td>1</td>\n    <td>2</td>\n    <td>...</td>\n    <td>j</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <th>Enumerating it</th>\n    <td>...</td>\n    <td>2j+1</td>\n    <td>...</td>\n    <td>5</td>\n    <td>3</td>\n    <td>1</td>\n    <td>2</td>\n    <td>4</td>\n    <td>...</td>\n    <td>2j</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <td></td>\n    <td colspan='11' class='i'>(j is a positive integer, so &minus;j is negative)</td>\n  </tr>\n</tbody>\n</table>\n\n<p>\nIn our enumeration,\nevery integer gets a distinct positive integer:&nbsp;\n0 gets 1,\npositive integer j gets 2j,\nand negative integer &minus;j gets 2j + 1.&nbsp;\nThus the integers are enumerable\n(because we've given a rule that enumerates them).&nbsp;\n</p>\n\n<p>\nYou might think that the rationals (integer fractions) are not enumerable\n(because there are so many of them).&nbsp;\nHowever,\nthe following scheme shows the concept for enumerating the positive rationals.&nbsp;\n</p>\n\n<p>\nThe table on the left arranges the rationals\nso that each rational appears at least once &mdash;\nrational j/k appears in column j, row k (j, k &gt; 0).&nbsp;\n(Actually, every number appears infinitely many times,\nfor example 1/2 appears equivalently as 1/2, 2/4, 3/6, ....)&nbsp;\n</p>\n\n<p>\nThe table on the right\nenumerates the cells of the table on the left\nby diagonals, Fibonacci-style.&nbsp;\n</p>\n\n<table class='ce FL'>\n<caption>The positive rationals</caption>\n<tbody>\n  <tr>\n    <th></th>\n    <th>1</th>\n    <th>2</th>\n    <th>3</th>\n    <th>4</th>\n    <th>...</th>\n  </tr>\n  <tr>\n    <th>1</th>\n    <td>1/1</td>\n    <td>2/1</td>\n    <td>3/1</td>\n    <td>4/1</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <th>2</th>\n    <td>1/2</td>\n    <td>2/2</td>\n    <td>3/2</td>\n    <td>4/2</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <th>3</th>\n    <td>1/3</td>\n    <td>2/3</td>\n    <td>3/3</td>\n    <td>4/3</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <th>4</th>\n    <td>1/4</td>\n    <td>2/4</td>\n    <td>3/4</td>\n    <td>4/4</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <th>...</th>\n    <td>...</td>\n    <td>...</td>\n    <td>...</td>\n    <td>...</td>\n    <td>...</td>\n  </tr>\n</tbody>\n</table>\n\n<table class='ce FL'>\n<caption>An enumeration</caption>\n<tbody>\n  <tr>\n    <th></th>\n    <th>1</th>\n    <th>2</th>\n    <th>3</th>\n    <th>4</th>\n    <th>...</th>\n  </tr>\n  <tr>\n    <th>1</th>\n    <td>1</td>\n    <td>3</td>\n    <td>6</td>\n    <td>10</td>\n    <td>...</td>\n  </tr>\n  <tr>\n    <th>2</th>\n    <td>2</td>\n    <td>5</td>\n    <td>9</td>\n    <td colspan='2'>...</td>\n  </tr>\n  <tr>\n    <th>3</th>\n    <td>4</td>\n    <td>8</td>\n    <td colspan='3'>...</td>\n  </tr>\n  <tr>\n    <th>4</th>\n    <td>7</td>\n    <td colspan='4'>...</td>\n  </tr>\n  <tr>\n    <th>...</th>\n    <td colspan='5'>...</td>\n  </tr>\n</tbody>\n</table>\n\n<img src='img/enumerateRationals.png' alt='zig-zags'\nstyle='width:11ex; padding:4ex 0 0 2em;'/>\n\n<p class='CB'>\nAll the (positive) rationals get counted at least once,\nso they are enumerable.&nbsp;\nThe rule can easily be extended to cover zero and the negative rationals\nusing the approach that enumerated the integers.&nbsp;\n</p>\n\n\n<h1 id='diagonalization' title='diagonalization' class='breakBefore'>Diagonalization</h1>\n\n<table class='borderTL FR'>\n<tbody>\n  <tr>\n      <th></th>\n      <th colspan='9' class='borderTL'>digit #</th>\n  </tr>\n  <tr>\n      <th>list</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>...</th>\n      <th><i>n</i></th>\n  <td class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td>1.&nbsp; 0.</td>\n      <td class='D'>7</td>\n      <td>5</td>\n      <td>2</td>\n      <td>0</td>\n      <td> ...</td>\n      <td>4</td>\n  <td class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td>2.&nbsp; 0.</td>\n      <td>4</td>\n      <td class='D'>3</td>\n      <td>1</td>\n      <td>5</td>\n      <td> ... </td>\n      <td>6</td>\n  <td class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td>3.&nbsp; 0.</td>\n      <td>8</td>\n      <td>6</td>\n      <td class='D'>6</td>\n      <td>3</td>\n      <td> ... </td>\n      <td>6</td>\n  <td class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td>4.&nbsp; 0.</td>\n      <td>2</td>\n      <td>9</td>\n      <td>2</td>\n      <td class='D'>5</td>\n      <td> ... </td>\n      <td>8</td>\n  <td class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td>...</td>\n      <td colspan='8' class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td><i>n</i>.&nbsp; 0.</td>\n      <td>3</td>\n      <td>2</td>\n      <td>5</td>\n      <td>6</td>\n      <td> ... </td>\n      <td class='D'>2</td>\n  <td class='borderTBL'>...</td>\n  </tr>\n  <tr>\n      <td class='borderTL'>...</td>\n      <td colspan='8' class='borderTL'>...</td>\n  </tr>\n</tbody>\n</table>\n\n<p>\nDiagonalization is a technique for showing that\nthe elements of a set are <i>not</i> countable.&nbsp;\nWe will illustrate it with the set of real numbers between 0 and 1.&nbsp;\n</p>\n\n<p>\nThe table shows a list of the real numbers between 0 and 1,\nin some arbitrary order (it doesn't matter what order).&nbsp;\nThe first real number in this particular order\nhas a decimal representation begins with 0.75206...;\nthe second one begins with 0.43158...,\nthe third with 0.86630...,\nand so on.&nbsp;\nThe (infinite) table lists the infinite number of digits of each of the numbers;\nwe show the 1st through 5th digits, and then also the <i>n</i>th digit.&nbsp;\nIt doesn't matter what <i>n</i> is\n(except that in our example, it must be bigger than 5);\nit's just some large positive integer.&nbsp;\nWe also show the <i>n</i>th number in the list,\nwhich begins with 0.32568....&nbsp;\n</p>\n\n<p>\nWe can use diagonalization to show that there is\na real number that is not in the list, even though the list is\n(countably) infinite.&nbsp;\nWe do this by conceptually stating a number,\ndigit by digit:&nbsp;\n</p>\n\n<div style='padding-left:1em;'>\n<table class='noborder closespaced tp'>\n<tbody>\n  <tr>\n    <td>&bull; Its</td>\n    <td>1st</td>\n      <td>digit is different from the</td>\n    <td>1st</td>\n      <td>digit of the</td>\n    <td>1st</td>\n      <td>number\n        (say, 6 instead of 7)\n        <br/><i>(although it doesn't matter which<br/>\n        as long as it's different).</i>&nbsp;</td>\n  </tr>\n  <tr>\n    <td>&bull; Its</td>\n    <td>2nd</td>\n      <td>digit is different from the</td>\n    <td>2nd</td>\n      <td>digit of the</td>\n    <td>2nd</td>\n      <td>number\n        (say, 2 instead of 3).&nbsp;</td>\n  </tr>\n  <tr>\n    <td>&bull; Its</td>\n    <td>3rd</td>\n      <td>digit is different from the</td>\n    <td>3rd</td>\n      <td>digit of the</td>\n    <td>3rd</td>\n      <td>number\n    (say, 5 instead of 6).&nbsp;</td>\n  </tr>\n  <tr>\n    <td>&bull; Its</td>\n    <td>4th</td>\n      <td>digit is different from the</td>\n    <td>4th</td>\n      <td>digit of the</td>\n    <td>4th</td>\n      <td>number\n    (say, 4 instead of 5).&nbsp;</td>\n  </tr>\n  <tr>\n    <td colspan='7'>&bull; ...</td>\n  </tr>\n  <tr>\n    <td>&bull; Its</td>\n    <td><i>n</i>th</td>\n      <td>digit is different from the</td>\n    <td><i>n</i>th</td>\n      <td>digit of the</td>\n    <td><i>n</i>th</td>\n      <td>number\n    (say, 1 instead of 2).&nbsp;</td>\n  </tr>\n  <tr>\n    <td colspan='7'>&bull; And so on without end.</td>\n  </tr>\n</tbody>\n</table>\n</div>\n\n<p>\nThis number with an infinite number of digits, 0.62546...,\nis <em>not in the list</em>.&nbsp;\nWe know this, even though we don't know all the digits of the number,\nbecause it is different from the <i>j</i>th number in the list,\nfor any <i>j</i>,\nin its <i>j</i>th digit.&nbsp;\nIt doesn't matter in what order we list the numbers;\nit is true in general.&nbsp;\nWe have just shown that the real numbers are not countable:&nbsp;\nthere are more real numbers than there are integers.&nbsp;\n</p>\n\n<p>\nInterestingly, the rationals are countable,\nso that in a very practical sense there are not more rationals than integers.&nbsp;\nThe rationals cannot be diagonalized\nbecause in general an arbitrary decimal fraction\nwith an infinite number of digits\nis not going to be a rational number (it will be real, but not rational),\nso the counterexample that diagonalization produces\ncan't be guaranteed to be a rational number.&nbsp;\nSimilarly,\nthe integers can't be diagonalized\n(such a table would be infinite to the left, not the right,\nand show the digits of each integer in the list)\nbecause the counterexample has an infinite number of digits\nand no integer has an infinite number of digits.&nbsp;\n</p>\n\n<p>\nWe can also use diagonalization to show that\nthe <a href='#powerset'>powerset</a> of a countably infinite set\nis not countable.&nbsp;\n</p>\n\n<p>\nDiagonalization is due to Georg Cantor, circa 1880.&nbsp;\n</p>\n\n\n<h1 id='Russells-paradox' title='Russells-paradox'>Russell's paradox</h1>\n\n<p> We must be just a bit careful\nwhen allowing sets to be elements of other sets,\nas this can lead to paradoxes.&nbsp;\nThe first such paradox was discovered by Bertrand Russell not long after\nsets were first introduced (circa 1900).&nbsp;\nLet <span class='m'>R</span> be the set containing all sets that\ndo not contain themselves.&nbsp;\nDoes <span class='m'>R</span> contain itself?&nbsp;\n</p>\n\n<ol>\n  <li> Assume <span class='m'>R</span> contains itself.&nbsp;\n    Then <span class='m'>R</span> cannot contain itself,\n    as <span class='m'>R</span> only contains sets that\n    do not contain themselves.&nbsp;\n  </li>\n  <li> Assume <span class='m'>R</span> does not contain itself.&nbsp;\n    Then <span class='m'>R</span> must contain itself,\n    as <span class='m'>R</span> contains all sets that\n    do not contain themselves.&nbsp;\n  </li>\n</ol>\n\n<p> Not a happy situation!\n</p>\n\n<p> There are a number of ways of avoiding Russell's Paradox\nby carefully defining\nsets and their operations.&nbsp;\nWe avoid Russell's Paradox by restricting sets to be constructed only\nfrom sets that already exist\n(specifically,\nwhen naming a set by <a href='#intension'>intension</a>,\nwe require that its elements be drawn from\nsome other already-existing set <span class='m'>E</span>).&nbsp;\nThus we provide no way of constructing a set that contains\nall sets that do not contain themselves;\nthere is only <span class='M'>&cap;</span>, <span class='M'>&cup;</span>, &minus;,\n<span class='M'>&weierp;</span>, &times;,\nand intensional definition of a subset of an already existing set,\nand these aren't enough to construct <span class='m'>R</span>.&nbsp;\n</p>\n\n\n<!--xhtml -n -->\n</div>\n\n</div><!-- #TBg -->\n\n<div id='TFooter'>\n<div class='W3C'>\n  <a href='http://validator.w3.org/check?uri=referer'><img class='W3C'\n    src='../../img/valid-xhtml10-blue.png'\n    alt='Valid XHTML 1.0 Strict'/></a>\n  <br/>\n  <a href='http://jigsaw.w3.org/css-validator/check/referer'><img class='W3C'\n    src='../../img/vcss-blue.png'\n    alt='Valid CSS!'/></a>\n</div>\n<div class='timestamp'>2009Sep23We10:12</div>\n<div style='padding-top:1px;'>\n<a class='plain' href='./index.html' style='font-variant:small-caps;'\n>Thomas A. Alspaugh</a>\n<span style='padding-left:1em;'><span class='email ss sm'>alspaugh&nbsp;\n    <span class='ss sc sm'>at</span> &middot; ics &middot; uci &middot; edu</span>\n    <!-- -spell alspaugh uci edu --> </span>\n</div>\n</div>\n\n<!-- Google Analytics code -->\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol)\n  ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost +\n  \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\ntry {\nvar pageTracker = _gat._getTracker(\"UA-15281497-1\");\npageTracker._trackPageview();\n} catch(err) {}\n</script>\n\n</body>\n</html>\n\n", "encoding": "ascii"}