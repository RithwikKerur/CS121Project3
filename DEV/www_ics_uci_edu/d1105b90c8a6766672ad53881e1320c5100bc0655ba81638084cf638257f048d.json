{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/api/stringop_8c.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n  <!-- Page title -->\n  <title>VLFeat - Documentation > C API</title>\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"doxygen.css\"></link>\n  <!-- Scripts-->\n  <script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li><a href=\"../overview/tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"../overview/frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"../overview/covdet.html\">Covariant feature detectors</a>\n</li>\n<li><a href=\"../overview/hog.html\">HOG features</a>\n</li>\n<li><a href=\"../overview/sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"../overview/dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"../overview/liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"../overview/mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"../overview/imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"../overview/encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"../overview/gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"../overview/kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"../overview/aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"../overview/quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"../overview/slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"../overview/svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"../overview/kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"../overview/plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"../overview/utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"../overview/ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"../overview/hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li class='active'><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n</li>\n</ul></li>\n</ul>\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"../doc.html\">Documentation</a></span><span class='separator'>></span><span class='page'><a href=\"index.html\">C API</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n      <!-- <pagestyle href=\"%pathto:root;api/tabs.css\"/> -->\n      <div class=\"doxygen\">\n<div id=\"top\">\n<div id=\"top\">\n<!-- Generated by Doxygen 1.8.7 -->\n  <div id=\"navrow1\" class=\"tabs\">\n    <ul class=\"tablist\">\n      <li><a href=\"index.html\"><span>Main&#160;Page</span></a></li>\n      <li><a href=\"pages.html\"><span>Related&#160;Pages</span></a></li>\n      <li><a href=\"annotated.html\"><span>Data&#160;Structures</span></a></li>\n      <li class=\"current\"><a href=\"files.html\"><span>Files</span></a></li>\n    </ul>\n  </div>\n  <div id=\"navrow2\" class=\"tabs2\">\n    <ul class=\"tablist\">\n      <li><a href=\"files.html\"><span>File&#160;List</span></a></li>\n      <li><a href=\"globals.html\"><span>Globals</span></a></li>\n    </ul>\n  </div>\n<div id=\"nav-path\" class=\"navpath\">\n  <ul>\n<li class=\"navelem\"><a class=\"el\" href=\"dir_8dd540b382164c224dfa1eb6e8a3add6.html\">vl</a></li>  </ul>\n</div>\n</div><!-- top -->\n<div class=\"header\">\n  <div class=\"summary\">\n<a href=\"#func-members\">Functions</a>  </div>\n  <div class=\"headertitle\">\n<div class=\"title\">stringop.c File Reference</div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n\n<p>String operations - Definition.  \n<a href=\"#details\">More...</a></p>\n<div class=\"textblock\"><code>#include &quot;<a class=\"el\" href=\"stringop_8h.html\">stringop.h</a>&quot;</code><br />\n<code>#include &lt;string.h&gt;</code><br />\n<code>#include &lt;ctype.h&gt;</code><br />\n</div><table class=\"memberdecls\">\n<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"></a>\nFunctions</h2></td></tr>\n<tr class=\"memitem:aa45c4b3fc38383ad1d152485ccfe3356\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#aa45c4b3fc38383ad1d152485ccfe3356\">vl_string_parse_protocol</a> (char const *string, int *protocol)</td></tr>\n<tr class=\"memdesc:aa45c4b3fc38383ad1d152485ccfe3356\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Extract the protocol prefix from a string.  <a href=\"#aa45c4b3fc38383ad1d152485ccfe3356\">More...</a><br /></td></tr>\n<tr class=\"separator:aa45c4b3fc38383ad1d152485ccfe3356\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af2fe2454abf042cce2d9a7597b622c48\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">char const *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#af2fe2454abf042cce2d9a7597b622c48\">vl_string_protocol_name</a> (int protocol)</td></tr>\n<tr class=\"memdesc:af2fe2454abf042cce2d9a7597b622c48\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get protocol name.  <a href=\"#af2fe2454abf042cce2d9a7597b622c48\">More...</a><br /></td></tr>\n<tr class=\"separator:af2fe2454abf042cce2d9a7597b622c48\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a303c8ed2006e76ba890080244c9e6439\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#a303c8ed2006e76ba890080244c9e6439\">vl_string_basename</a> (char *destination, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> destinationSize, char const *source, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> maxNumStrippedExtensions)</td></tr>\n<tr class=\"memdesc:a303c8ed2006e76ba890080244c9e6439\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Extract base of file name.  <a href=\"#a303c8ed2006e76ba890080244c9e6439\">More...</a><br /></td></tr>\n<tr class=\"separator:a303c8ed2006e76ba890080244c9e6439\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:af938e0e45610e0e1680c8ec41a958882\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#af938e0e45610e0e1680c8ec41a958882\">vl_string_replace_wildcard</a> (char *destination, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> destinationSize, char const *source, char wildcardChar, char escapeChar, char const *replacement)</td></tr>\n<tr class=\"memdesc:af938e0e45610e0e1680c8ec41a958882\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Replace wildcard characters by a string.  <a href=\"#af938e0e45610e0e1680c8ec41a958882\">More...</a><br /></td></tr>\n<tr class=\"separator:af938e0e45610e0e1680c8ec41a958882\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a12595787245c1d92c5d3bbe6c0cea9f4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#a12595787245c1d92c5d3bbe6c0cea9f4\">vl_string_copy</a> (char *destination, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> destinationSize, char const *source)</td></tr>\n<tr class=\"memdesc:a12595787245c1d92c5d3bbe6c0cea9f4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy string.  <a href=\"#a12595787245c1d92c5d3bbe6c0cea9f4\">More...</a><br /></td></tr>\n<tr class=\"separator:a12595787245c1d92c5d3bbe6c0cea9f4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a3ecf896f613bca486a0821f076aa8855\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#a3ecf896f613bca486a0821f076aa8855\">vl_string_copy_sub</a> (char *destination, <a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> destinationSize, char const *beginning, char const *end)</td></tr>\n<tr class=\"memdesc:a3ecf896f613bca486a0821f076aa8855\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy substring.  <a href=\"#a3ecf896f613bca486a0821f076aa8855\">More...</a><br /></td></tr>\n<tr class=\"separator:a3ecf896f613bca486a0821f076aa8855\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:acc6a3ecad1c4fde280008c2bc7663dea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#acc6a3ecad1c4fde280008c2bc7663dea\">vl_string_find_char_rev</a> (char const *beginning, char const *end, char c)</td></tr>\n<tr class=\"memdesc:acc6a3ecad1c4fde280008c2bc7663dea\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Search character in reversed order.  <a href=\"#acc6a3ecad1c4fde280008c2bc7663dea\">More...</a><br /></td></tr>\n<tr class=\"separator:acc6a3ecad1c4fde280008c2bc7663dea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:acc9de03bedf2b67ce907a7478e34bc4e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#acc9de03bedf2b67ce907a7478e34bc4e\">vl_string_length</a> (char const *string)</td></tr>\n<tr class=\"memdesc:acc9de03bedf2b67ce907a7478e34bc4e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Calculate string length.  <a href=\"#acc9de03bedf2b67ce907a7478e34bc4e\">More...</a><br /></td></tr>\n<tr class=\"separator:acc9de03bedf2b67ce907a7478e34bc4e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:ad006cebd610a7a6f7b6d97c93e398824\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#ad006cebd610a7a6f7b6d97c93e398824\">vl_string_casei_cmp</a> (const char *string1, const char *string2)</td></tr>\n<tr class=\"memdesc:ad006cebd610a7a6f7b6d97c93e398824\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Compare strings case-insensitive.  <a href=\"#ad006cebd610a7a6f7b6d97c93e398824\">More...</a><br /></td></tr>\n<tr class=\"separator:ad006cebd610a7a6f7b6d97c93e398824\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aadc62a75665e4d45a4e890def1eff7e4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#aadc62a75665e4d45a4e890def1eff7e4\">vl_enumeration_get</a> (<a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> const *enumeration, char const *name)</td></tr>\n<tr class=\"memdesc:aadc62a75665e4d45a4e890def1eff7e4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a member of an enumeration by name.  <a href=\"#aadc62a75665e4d45a4e890def1eff7e4\">More...</a><br /></td></tr>\n<tr class=\"separator:aadc62a75665e4d45a4e890def1eff7e4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a30b7412f99917d5907f9b683f727b188\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#a30b7412f99917d5907f9b683f727b188\">vl_enumeration_get_casei</a> (<a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> const *enumeration, char const *name)</td></tr>\n<tr class=\"memdesc:a30b7412f99917d5907f9b683f727b188\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a member of an enumeration by name (case insensitive)  <a href=\"#a30b7412f99917d5907f9b683f727b188\">More...</a><br /></td></tr>\n<tr class=\"separator:a30b7412f99917d5907f9b683f727b188\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a41870b6b4f144d8b019c6f6371f41b28\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"stringop_8c.html#a41870b6b4f144d8b019c6f6371f41b28\">vl_enumeration_get_by_value</a> (<a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> const *enumeration, <a class=\"el\" href=\"host_8h.html#a66417c5847876295ea87b38140073879\">vl_index</a> value)</td></tr>\n<tr class=\"memdesc:a41870b6b4f144d8b019c6f6371f41b28\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a member of an enumeration by value.  <a href=\"#a41870b6b4f144d8b019c6f6371f41b28\">More...</a><br /></td></tr>\n<tr class=\"separator:a41870b6b4f144d8b019c6f6371f41b28\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n</table>\n<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n<div class=\"textblock\"><dl class=\"section author\"><dt>Author</dt><dd>Andrea Vedaldi </dd></dl>\n</div><h2 class=\"groupheader\">Function Documentation</h2>\n<a class=\"anchor\" id=\"aadc62a75665e4d45a4e890def1eff7e4\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a>* vl_enumeration_get </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> const *&#160;</td>\n          <td class=\"paramname\"><em>enumeration</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">enumeration</td><td>array of <a class=\"el\" href=\"structVlEnumerator.html\" title=\"Member of an enumeration. \">VlEnumerator</a> objects. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>the name of the desired member. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>enumerator matching <em>name</em>.</dd></dl>\n<p>If <em>name</em> is not found in the enumeration, then the value <code>NULL</code> is returned.</p>\n<dl class=\"section see\"><dt>See also</dt><dd>vl-stringop-enumeration </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a41870b6b4f144d8b019c6f6371f41b28\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a>* vl_enumeration_get_by_value </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> const *&#160;</td>\n          <td class=\"paramname\"><em>enumeration</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a66417c5847876295ea87b38140073879\">vl_index</a>&#160;</td>\n          <td class=\"paramname\"><em>value</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">enumeration</td><td>array of <a class=\"el\" href=\"structVlEnumerator.html\" title=\"Member of an enumeration. \">VlEnumerator</a> objects. </td></tr>\n    <tr><td class=\"paramname\">value</td><td>value of the desired member. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>enumerator matching <em>value</em>.</dd></dl>\n<p>If <em>value</em> is not found in the enumeration, then the value <code>NULL</code> is returned.</p>\n<dl class=\"section see\"><dt>See also</dt><dd>vl-stringop-enumeration </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a30b7412f99917d5907f9b683f727b188\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a>* vl_enumeration_get_casei </td>\n          <td>(</td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"structVlEnumerator.html\">VlEnumerator</a> const *&#160;</td>\n          <td class=\"paramname\"><em>enumeration</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>name</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">enumeration</td><td>array of <a class=\"el\" href=\"structVlEnumerator.html\" title=\"Member of an enumeration. \">VlEnumerator</a> objects. </td></tr>\n    <tr><td class=\"paramname\">name</td><td>the name of the desired member. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>enumerator matching <em>name</em>.</dd></dl>\n<p>If <em>name</em> is not found in the enumeration, then the value <code>NULL</code> is returned. <em>string</em> is matched case insensitive.</p>\n<dl class=\"section see\"><dt>See also</dt><dd>vl-stringop-enumeration </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a303c8ed2006e76ba890080244c9e6439\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> vl_string_basename </td>\n          <td>(</td>\n          <td class=\"paramtype\">char *&#160;</td>\n          <td class=\"paramname\"><em>destination</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>destinationSize</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>source</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>maxNumStrippedExtensions</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">destination</td><td>destination buffer. </td></tr>\n    <tr><td class=\"paramname\">destinationSize</td><td>size of destination buffer. </td></tr>\n    <tr><td class=\"paramname\">source</td><td>input string. </td></tr>\n    <tr><td class=\"paramname\">maxNumStrippedExtensions</td><td>maximum number of extensions to strip. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>length of the destination string.</dd></dl>\n<p>The function removes the leading path and up to <code>maxNumStrippedExtensions</code> trailing extensions from the string <em>source</em> and writes the result to the buffer <em>destination</em>.</p>\n<p>The leading path is the longest suffix that ends with either the <code>\\</code> or <code>/</code> characters. An extension is a string starting with the <code>.</code> character not containing it. For instance, the string <code>file.png</code> contains the extension <code>.png</code> and the string <code>file.tar.gz</code> contains two extensions (<code>.tar</code> and <code><code></code>.gz</code>).</p>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"stringop_8h.html#vl-stringop-err\">Detecting overflow</a>. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"ad006cebd610a7a6f7b6d97c93e398824\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">int vl_string_casei_cmp </td>\n          <td>(</td>\n          <td class=\"paramtype\">const char *&#160;</td>\n          <td class=\"paramname\"><em>string1</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">const char *&#160;</td>\n          <td class=\"paramname\"><em>string2</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">string1</td><td>fisrt string. </td></tr>\n    <tr><td class=\"paramname\">string2</td><td>second string. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>an integer =,&lt;,&gt; 0 if <code>string1</code> =,&lt;,&gt; <code>string2</code> </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a12595787245c1d92c5d3bbe6c0cea9f4\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> vl_string_copy </td>\n          <td>(</td>\n          <td class=\"paramtype\">char *&#160;</td>\n          <td class=\"paramname\"><em>destination</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>destinationSize</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>source</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">destination</td><td>output buffer. </td></tr>\n    <tr><td class=\"paramname\">destinationSize</td><td>size of the output buffer. </td></tr>\n    <tr><td class=\"paramname\">source</td><td>string to copy. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>length of the source string.</dd></dl>\n<p>The function copies the string <em>source</em> to the buffer <em>destination</em> of size <em>destinationSize</em>.</p>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"stringop_8h.html#vl-stringop-err\">Detecting overflow</a>. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"a3ecf896f613bca486a0821f076aa8855\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> vl_string_copy_sub </td>\n          <td>(</td>\n          <td class=\"paramtype\">char *&#160;</td>\n          <td class=\"paramname\"><em>destination</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>destinationSize</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>beginning</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>end</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">destination</td><td>output buffer. </td></tr>\n    <tr><td class=\"paramname\">destinationSize</td><td>size of output buffer. </td></tr>\n    <tr><td class=\"paramname\">beginning</td><td>start of the substring. </td></tr>\n    <tr><td class=\"paramname\">end</td><td>end of the substring. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>length of the destination string.</dd></dl>\n<p>The function copies the substring from at <em>beginning</em> to <em>end</em> (not included) to the buffer <em>destination</em> of size <em>destinationSize</em>. If, however, the null character is found before <em>end</em>, the substring terminates there.</p>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"stringop_8h.html#vl-stringop-err\">Detecting overflow</a>. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"acc6a3ecad1c4fde280008c2bc7663dea\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">char* vl_string_find_char_rev </td>\n          <td>(</td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>beginning</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>end</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char&#160;</td>\n          <td class=\"paramname\"><em>c</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">beginning</td><td>pointer to the substring beginning. </td></tr>\n    <tr><td class=\"paramname\">end</td><td>pointer to the substring end. </td></tr>\n    <tr><td class=\"paramname\">c</td><td>character to search for. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>pointer to last occurrence of <em>c</em>, or 0 if none.</dd></dl>\n<p>The function searches for the last occurrence of the character <em>c</em> in the substring from <em>beg</em> to <em>end</em> (the latter not being included). </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"acc9de03bedf2b67ce907a7478e34bc4e\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> vl_string_length </td>\n          <td>(</td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>string</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">string</td><td>string. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>string length. </dd></dl>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"aa45c4b3fc38383ad1d152485ccfe3356\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">char* vl_string_parse_protocol </td>\n          <td>(</td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>string</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">int *&#160;</td>\n          <td class=\"paramname\"><em>protocol</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">string</td><td>string. </td></tr>\n    <tr><td class=\"paramname\">protocol</td><td>protocol code (output). </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>pointer to the first character after the protocol prefix.</dd></dl>\n<p>The function extracts the prefix of the string <em>string</em> terminated by the first occurrence of the <code></code>:// substring (if any). It then matches the suffix terminated by <code></code>:// to the supported <a class=\"el\" href=\"stringop_8h.html#vl-stringop-file-protocols\">File protocols</a> protocols. If <code>protocol</code> is not <code>NULL</code>, the corresponding protocol code is written to <em>protocol</em> </p>\n<p>The function writes to <em>protocol</em> the value <a class=\"el\" href=\"stringop_8h.html#a61dadd085c1777f559549e05962b2c9ea94b2ad9436eeeb7e7a08baf24e00f3d6\">VL_PROT_NONE</a> if no suffix is detected and <a class=\"el\" href=\"stringop_8h.html#a61dadd085c1777f559549e05962b2c9ea71fca21ec3ae6a26edbe380fedc2ebec\">VL_PROT_UNKNOWN</a> if there is a suffix but it cannot be matched to any of the supported protocols. </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"af2fe2454abf042cce2d9a7597b622c48\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\">char const* vl_string_protocol_name </td>\n          <td>(</td>\n          <td class=\"paramtype\">int&#160;</td>\n          <td class=\"paramname\"><em>protocol</em></td><td>)</td>\n          <td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">protocol</td><td>protocol code. </td></tr>\n  </table>\n  </dd>\n</dl>\n<dl class=\"section return\"><dt>Returns</dt><dd>pointer protocol name string.</dd></dl>\n<p>The function returns a pointer to a string containing the name of the protocol <em>protocol</em> (see the <em>vl-file-protocols</em> protocols list). If the protocol is unknown the function returns the empty string. </p>\n\n</div>\n</div>\n<a class=\"anchor\" id=\"af938e0e45610e0e1680c8ec41a958882\"></a>\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tr>\n          <td class=\"memname\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a> vl_string_replace_wildcard </td>\n          <td>(</td>\n          <td class=\"paramtype\">char *&#160;</td>\n          <td class=\"paramname\"><em>destination</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\"><a class=\"el\" href=\"host_8h.html#a0ee26101458c663510d620e3ee7e2555\">vl_size</a>&#160;</td>\n          <td class=\"paramname\"><em>destinationSize</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>source</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char&#160;</td>\n          <td class=\"paramname\"><em>wildcardChar</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char&#160;</td>\n          <td class=\"paramname\"><em>escapeChar</em>, </td>\n        </tr>\n        <tr>\n          <td class=\"paramkey\"></td>\n          <td></td>\n          <td class=\"paramtype\">char const *&#160;</td>\n          <td class=\"paramname\"><em>replacement</em>&#160;</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>)</td>\n          <td></td><td></td>\n        </tr>\n      </table>\n</div><div class=\"memdoc\">\n<dl class=\"params\"><dt>Parameters</dt><dd>\n  <table class=\"params\">\n    <tr><td class=\"paramname\">destination</td><td>output buffer. </td></tr>\n    <tr><td class=\"paramname\">destinationSize</td><td>size of the output buffer. </td></tr>\n    <tr><td class=\"paramname\">source</td><td>input string. </td></tr>\n    <tr><td class=\"paramname\">wildcardChar</td><td>wildcard character. </td></tr>\n    <tr><td class=\"paramname\">escapeChar</td><td>escape character. </td></tr>\n    <tr><td class=\"paramname\">replacement</td><td>replacement string.</td></tr>\n  </table>\n  </dd>\n</dl>\n<p>The function replaces the occurrence of the specified wildcard character <em>wildcardChar</em> by the string <em>replacement</em>. The result is written to the buffer <em>destination</em> of size <em>destinationSize</em>.</p>\n<p>Wildcard characters may be escaped by preceding them by the <em>esc</em> character. More in general, anything following an occurrence of <em>esc</em> character is copied verbatim. To disable the escape characters simply set <em>esc</em> to 0.</p>\n<dl class=\"section return\"><dt>Returns</dt><dd>length of the result. </dd></dl>\n<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"stringop_8h.html#vl-stringop-err\">Detecting overflow</a>. </dd></dl>\n\n</div>\n</div>\n</div><!-- contents -->\n        <!-- Doc Here -->\n      </div>\n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n", "encoding": "ascii"}