{"url": "https://www.ics.uci.edu/~jacobson/ics45J/LabManual/04-Assignment1.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n    \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n   <meta name=\"GENERATOR\" content=\"Mozilla/4.79 (Macintosh; U; PPC) [Netscape]\">\n   <title>Lab Assignment 1</title>\n<link rel=\"stylesheet\" href=\"../course.css\" type=\"text/css\">\n</head>\n\n<body>\n\n<div class=\"title\">\n<center>\n<h2>Smiley Faces</h2>\n<h3>Lab Assignment 1</h3>\n</center>\n</div>\n\n<p>This lab assignment gives you some practice in basic Java programming by asking you to implement the \"smiley faces\" example we've been discussing in class. \n\n<div class=\"section\">\n<hr>\n<h3>Pair Programming</h3>\n</div>\n\n<p>You are required to pair program for this assignment.</h4></p>\n\n<div class=\"section\">\n<hr>\n<h3>Program Behavior and General Requirements</h3>\n</div>\n\n<p>In general, you are to write a Java program that draws one, two or three smiley faces on the screen, each with characteristics you provide, such as the color and the shape of the face itself, and of the eyes and mouth. You also implement methods that translate (move) the smiley as a whole, and that let you scale and translate each of the smiley&#146;s parts (the face, eyes and mouth). (Scaling the smiley face as a whole requires some knowledge of linear algebra, so we do not include that feature.)</p>\n\n<p>The  <font class = \"codefacesmall\">SmileyGroup()</font> constructor contains the code that produces the faces. We suggest you write various bodies for <font class = \"codefacesmall\">SmileyGroup()</font> so that you fully test all the public SmileyFace methods and with drawing one, two and three faces.</p>\n\n<p>The program's behavior is straight-forward: when run, a graphics window and SmileyGroup are created, then SmileyGroup is given to the graphics routines, which draws the one, two or three smiley faces described by that SmileyGroup; the window is then made visible on the screen so that the user actually sees the smiley group. This approach, common in graphics environments, allows the programmer to fully construct a screen before showing it to the user. </p>\n\n<p>The user clicks on the close box to close the window and stop the program.</p>\n</li>\n\n\n<div class=\"section\">\n<hr>\n<h3>Getting Started</h3>\n</div>\n\n<p><b>Obtain the workspace:</b> Be sure that you have downloaded the <a href=\"http://www.ics.uci.edu/~jacobson/ics45J/LabManual/LabFiles/45JWorkspace.zip\">ICS 45J Eclipse workspace</a>, and have set it up as described in the <a href=\"//www.ics.uci.edu/~jacobson/ics45J/LabManual/01-OrientationToLab.html\">\nOrientation to the Lab</a> section of this manual.  Many settings have been changed from Eclipse defaults to appropriately support your work in this course, so be sure that you&#146;re using this workspace.</p>\n\n<p><b>Download the project, and integrate it into the workspace:</b></p>\n\n<ol>\n  <li>Download the <a href=\"//www.ics.uci.edu/~jacobson/ics45J/LabManual/LabFiles/Lab1.zip\">Lab 1 Eclipse project, Lab1.zip</a>.</li>\n  <li>Unzip it, producing a folder called <font class = \"codefacesmall\">45JLab1</font>.</li>\n  <li>Move the <font class = \"codefacesmall\">Lab1</font> folder that&#146;s inside  <font class = \"codefacesmall\">45JLab1</font> into the folder containing your Eclipse workspace.  For example, if your workspace is in <font class = \"codefacesmall\">H:\\45JWorkspace</font>, you&#146;d want to move the <font class = \"codefacesmall\">Lab1</font> folder into <font class = \"codefacesmall\">H:\\45JWorkspace</font>.</li>\n  <li>Start up Eclipse and select your workspace.</li>\n  <li>From the <font class = \"codefacesmall\">File</font> menu, select <font class = \"codefacesmall\">Import...</font>, which will pop up a dialog box.  Under <font class = \"codefacesmall\">General</font>, select <font class = \"codefacesmall\">Existing Projects into Workspace</font>, then click <font class = \"codefacesmall\">Next &gt;</font>.</li>\n  <li>Next to <font class = \"codefacesmall\">Select root directory</font>, click the <font class = \"codefacesmall\">Browse...</font> button.  Find the <font class = \"codefacesmall\">Lab1</font> folder that you copied into your workspace folder, select it, then click <font class = \"codefacesmall\">OK</font>.</li>\n  <li>Finally, click <font class = \"codefacesmall\">Finish</font>.  You should now see a project called <font class = \"codefacesmall\">Lab1</font> in <font class = \"codefacesmall\">Package Explorer</font>.  Your <font class = \"codefacesmall\">Problems</font> window should show some warnings; each of these warnings indicates that there is a part of the program that has yet to be built.  (Not all warnings indicate this, but these warnings do.)</li>\n</ol>\n\n<p><b>Code it up:</b> As you work, Eclipse will compile your program automatically each time you save it.  Pay attention to changes in the <font class = \"codefacesmall\">Problems</font> window, especially errors, because these often indicate things that you&#146;ve either done incorrectly or things that you need to do to finish the part of the program you&#146;re working on.</p>\n\n<div class=\"section\">\n<hr>\n<h3>Code We've Provided (and that You Provide)</h3>\n</div>\n\n<p>For this first, introductory assignment, we've provided the \"high level\" design for you, having figured out the classes we should have and their public methods. <i>Do not change these classes definitions or the signatures of these methods</i>&mdash; other parts of the program (like the graphics routines and other code wriitten, or to be written, by others) may well depend upon these definitions, and changing them could break the program. However, you are free to, and should, provide any required or useful private components (fields, methods, constants, whatever) to have the program meet all its requirements and exhibit good style.\n\n<p>We have also provided, through object files (in the <font class = \"codefacesmall\">lib</font> folder) the graphics routines needed to draw smiley faces in the graphics window. The <font class = \"codefacesmall\">main()</font> method calls another method that calls these routines after the smiley group has been built. So for this assignment, there is no need to worry about drawing the smileys; that happens \"automatically\" though code we've provided.</p>\n\n<p>As we progress through the assignments, more and more of the high-level (and detailed) design of the program will be left up to you: programming includes many skills beyond just implementing method bodies!</p>\n\n<div class=\"section\">\n<hr>\n<h3>Keeping In-Program Documentation Accurate</h3>\n</div>\n\n<p>In the provided code are lots of comments describing what the parts of the program do (or should do, once you've completed them) and what code you are to provide.  As you work on your program, be sure to modify the comments as needed to reflect a completed program (and, of course, to add your own, additional ones as needed). For example, there are some comments in some classes that say what fields you need to have. Once you have provided the code for those fields, that comment no longer applies and should be removed; instead, you should have brief comments describing what each field holds. </p>\n\n<p>We require you to do this as a matter of course in all assignments from here on out, so we won't specifically mention this in subsequent assignment write-ups.</p>\n\n<div class=\"section\">\n<hr>\n<h3>Deliverables</h3>\n</div>\n<p>Have your progam display three distinct (non-overlapping) smiley faces, each with two eyes that are above an imaginary horizontal line through the center of the face, and a mouth that is below that imaginary line; the eyes and mouth should have colors that make them distinguishable from the face.  Within these parameters, you may make the faces look however you'd like. Call each of the public methods in SmileyFace and SmileyFacePart at least once. (The SmileyFacePart calls are made indirectly via calls to methods inherited by the Eye, Face and Mouth classes.) </p>\n\n<p>Zip up your workspace folder into the file <font class = \"codefacesmall\">SmileyFaces.zip</font>, and turn it in via Checkmate.</p>\n\n<hr>\n<div class=\"history\">\nWritten by Norman Jacobson for ICS 21 Fall 2006, September 2006.\n<br>&nbsp;&nbsp;Some text, especially in Technical Details, taken or adpated from the\n<br>&nbsp;&nbsp;August 2004 version of \"Reporting Test Statistics,\" a previous ICS21 exercise. \n<br>Minor edits for clarity, by Norman Jacobson, December 2006 and September 2008.\n<br>Revised to reflect use of Eclipse, addition of the SmileyFacePart copy constructor, \n<br>&nbsp;&nbsp;by Norman Jacobson, September 2009. \n<br>&nbsp;&nbsp;Includes some text adapted from Alex Thornton's \"Lab 1\" for ICS 21 Summer 2009.\n<br>Minor editing by Norman Jacobson, September 2010.\n<br>Revised to reflect computeUpperLeft()'s move to the graphics module, and other minor editing by Norman Jacobson, December 2010.\n<br>Revised for use in ICS45J, by Norman Jacobson, August 2012.\n<br>Deliverables section revised, by Norman Jacobson, October 2012.\n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}