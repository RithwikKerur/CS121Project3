{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0078.html", "content": "<!-- received=\"Mon Jun 10 22:35:10 1996 PDT\" -->\n<!-- sent=\"Mon, 10 Jun 1996 22:35:04 PDT\" -->\n<!-- name=\"Larry Masinter\" -->\n<!-- email=\"masinter@parc.xerox.com\" -->\n<!-- subject=\"Re: Re2: what's doable in Web version control\" -->\n<!-- id=\"96Jun10.223505pdt.2733@golden.parc.xerox.com\" -->\n<!-- inreplyto=\"Re2: what's doable in Web version control\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Re2: what's doable in Web version control</title>\n<h1>Re: Re2: what's doable in Web version control</h1>\n<b>Larry Masinter</b> (<a href=\"mailto:masinter@parc.xerox.com\"><i>masinter@parc.xerox.com</i></a>)<br>\n<i>Mon, 10 Jun 1996 22:35:04 PDT</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#78\">[ date ]</a><a href=\"thread.html#78\">[ thread ]</a><a href=\"subject.html#78\">[ subject ]</a><a href=\"author.html#78\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0079.html\">Larry Masinter: \"Version control in OpenText\"</a>\n<li> <b>Previous message:</b> <a href=\"0077.html\">David G. Durand: \"Re2: what's doable in Web version control\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0077.html\">David G. Durand: \"Re2: what's doable in Web version control\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0080.html\">Fabio Vitali: \"Re: Re2: what's doable in Web version control\"</a>\n<li> <b>Reply:</b> <a href=\"0080.html\">Fabio Vitali: \"Re: Re2: what's doable in Web version control\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\n&gt; Is this why the update is multipart? so that several URLs can be\n&gt; updated in a single operation?  This seems one way to get\n&gt; transactions.\n\nYes, that's right. I think adding transactions to the web using some\nexplicit COMMIT operation is probably wrong. Rather, just have a POST\nbe the transaction. POST commit data if you must.\n\nI'm interested in pushing the complexity of version management into\nGET and POST partly because most of the issues are orthogonal to the\ndeployment of caching, proxies, updates, transactions, etc. that have\ndominated the design of GET and POST. If we can create a world where\nthere are three operations: GET, PUT (for simple replace) and POST\n(for anything else) and all of the rest of the complexity is in the\ndata that's sent back and forth, I think it will be a model that will\nsurvive the transition of HTTP to HTTP-NG, the use of this kind of\nupdate mechanism using email as well as using direct web transactions,\netc. \n\nI'm re-reading the VTML document, but I don't think what I intended\nfor \"multipart/update\" matches what VTML does.\n\nWhat I *intended* was basically just a replacement for (one or more)\nPUT operations, which contained a set of headers that were appropriate\nfor an update. VTML seems like it's much more a representation -- in a\nsingle file -- of a versioned resource.\n\nI'm sorry for waving about a name (\"multipart/update\") without giving\na binding for it, since it leaves too much to the imagination.\n\nOn a completely separate subject: is there a meeting July 8 then?\n\nLarry\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0079.html\">Larry Masinter: \"Version control in OpenText\"</a>\n<li> <b>Previous message:</b> <a href=\"0077.html\">David G. Durand: \"Re2: what's doable in Web version control\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0077.html\">David G. Durand: \"Re2: what's doable in Web version control\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0080.html\">Fabio Vitali: \"Re: Re2: what's doable in Web version control\"</a>\n<li> <b>Reply:</b> <a href=\"0080.html\">Fabio Vitali: \"Re: Re2: what's doable in Web version control\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}