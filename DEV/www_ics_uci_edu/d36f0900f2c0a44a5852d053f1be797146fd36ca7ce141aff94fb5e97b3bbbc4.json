{"url": "https://www.ics.uci.edu/~sgaffney/software/CCT/doc/model_structure.html", "content": "<html>\n<head>\n\n<style type=\"text/css\">\n  <! --\n  H { font-family: Arial, Helvetica, Modern; }\n  H1 { font-family:  Arial, Helvetica, Modern; font-size:large}\n  H2 { font-family: 10pt;  Arial,Helvetica,Modern;   \n       padding-top: 1; padding-bottom: 1; padding-left: 2; color:black}\n  H3 { font-family:    Arial,Helvetica,Modern; background:#aaccaa;  color:black;\n       padding-top: 1; padding-bottom: 1; padding-left: 2; font-size:medium }\n  P { font-family: Arial; font-size: small; color: black}\n  P.important { margin-left: 0.5cm; margin-right: 1cm; color: red }\n  LI { margin-left: 0.5cm; font-family: Arial; font-size: small }\n  B  { font-size: smaller }\n  table.indent { margin-left: 1cm }\n  -->\n</style>\n\n<title>CCToolbox Documentation: Model Structure Definition</title>\n\n</head>\n\n<body bgcolor=\"#eeeeee\">\n <H2 align=center>Model Structure Definition</H2>\n\n\n\n<div align=center>\n<a href=\"http://www.ics.uci.edu/~sgaffney/software/CCT\">CCToolbox</a> |\n<a href=\"../#Down\">Download</a> |\n<a href=\"./\">Documentation</a> |\n<a href=\"http://www.ics.uci.edu/~sgaffney#contact\">Contact</a>\n</div>\n\n<!-- <a href=\"./\">Documentation home</a> > Model Structure -->\n\n\n\n\n<h3>Description</h3>\n<p>Every cluster function in the toolbox returns a model structure that can \nbe directly used with other functions in the toolbox. In this section, we list\nevery possible field that can be returned in a model structure. No single cluster\nfunction will return all of these; only those fields that are relevant are returned.\n\n<p>In the structure definition each row is formatted as follows:\n<table class=\"indent\"><tr><td>.field<td>&nbsp;&nbsp;&nbsp; <td>: (data type) comment,</table>\nwhere 'field' lists the exact field name; 'data type' is one of number, string,\nstruct, or some other size designation such as n-K matrix (an n-by-K matrix); and\n'comment' gives a short description of the field.\n\n<p>The definition is split up into two parts. In the first part, the base fields that\nare used by every method are listed. The second part lists those fields that\nare used by the more advanced clustering and alignment methods. These fields aren't usually\ninteresting in themselves but are important for the implementation of the clustering\nalgorithms.\n\n<p>First, we list a number of size variables that are used in the structure\ndefinition.<p>\n\n<table class=\"indent\">\n    <tr><td>n<td>&nbsp;&nbsp;&nbsp;&nbsp;   <td>: number of trajectories\n    <tr><td>D<td>   <td>: number of dimensions (e.g., 2 for lat and lon)\n    <tr><td>K<td>   <td>: number of clusters\n    <tr><td>P<td>   <td>: 1 + order of regression model\n    <tr><td>I<td>   <td>: number of EM iterations\n</table>\n\n\n<h3>The Base Fields</h3><p>\n\n<table class=\"indent\">\n<tr><td>.K<td>              <td>: (number) number of clusters\n<tr><td>.order<td>          <td>: (number) order of polynomial regression model\n<tr><td>.Options<td>        <td>: (struct) stores various option settings\n<tr><td>.method<td>         <td>: (string) method name, see <b>listmodels()</b>\n<tr><td>.zero<td>           <td>: (string) type of preprocessing, see <b>trajs2seq()</b>\n<tr><td>.Pik<td>            <td>: (n-K matrix) membership probabilities\n<tr><td>.Alpha<td>          <td>: (K-vector) k-th mixture weight\n<tr><td>.Mu<td>             <td>: (P-K-D matrix) regression parameters\n<tr><td>.Sigma<td>          <td>: (K-D matrix) variance param for regression noise model\n<tr><td>.Lhood<td>          <td>: (I-vector) sequence of log-likelihood iterates\n<tr><td>.NumPoints<td>      <td>: (number) total number of points in all trajs\n<tr><td>.C<td>              <td>: (n-vector) most likely classification given .Pik\n<tr><td>.TrainLhood<td>     <td>: (number) equal to .Lhood(end)\n<tr><td>.TrainLhood_ppt<td> <td>: (number) equal to .TrainLhood/.NumPoints\n<tr><td>.NumIndParams<td>   <td>: (number) number of independent parameters estimated\n<tr><td>.state<td>          <td>: (vector) stores <b>rand()</b> state information\n<tr><td>.nstate<td>         <td>: (vector) stores <b>randn()</b> state information\n</table></p>\n\n\n\n<h3>The Alignment Fields</h3><p>\n<table class=\"indent\">\n<tr><td>.Ea<td>             <td>: (n-K matrix) scale parameters (in time)\n<tr><td>.Eb<td>             <td>: (n-K matrix) translation parameters (in time)\n<tr><td>.Ee<td>             <td>: (n-K-D matrix) scale parameters (measurement space)\n<tr><td>.Ef<td>             <td>: (n-K-D matrix) translation parameters (measurement space)\n<tr><td>.Va<td>             <td>: (n-K matrix) variance for .Ea\n<tr><td>.Vb<td>             <td>: (n-K matrix) variance for .Eb\n<tr><td>.Ve<td>             <td>: (n-K-D matrix) variance for .Ee\n<tr><td>.Vf<td>             <td>: (n-K-D matrix) variance for .Ef\n<tr><td>.Vab<td>            <td>: (n-K matrix) covariance for .Ea and .Eb\n<tr><td>.Vef<td>            <td>: (n-K-D matrix) covariance for .Ee and .Ef\n<tr><td>.Vae,.Vaf,etc.<td>&nbsp;&nbsp;&nbsp;&nbsp;  <td>: (n-K-D matrix) covariances for listed variables\n<tr><td>.R<td>              <td>: (K-1 matrix) variance param for prior on .Ea (also for .Ee when .Ea doesn't exist; this should be changed)\n<tr><td>.S<td>              <td>: (K-1 matrix) variance param for prior on .Eb (also for .Ef when .Eb doesn't exist; this should be changed)\n<tr><td>.T<td>              <td>: (K-D matrix) variance param for prior on .Ef\n<tr><td>.U<td>              <td>: (K-D matrix) variance param for prior on .Ee\n</table></p>\n\n\n\n<h3>Parameter Explanations</h3>\n<p>In this section, a more detailed description for some of the more complex\nmodel structure fields is given.\n\n<p>As an aside, it is important to note that each of following variables \nhas an expected value under each cluster (i.e., it's associated structure field\nhas at least K entries); this is the nature of a mixture model. However, it\nis also true that the .E- and .V- parameters are also trajectory-dependent (i.e.,\nthey have at least n*K entries).\n\n<p>For example, .Ee gives\nthe expected scale parameter for each trajectory and each dimension,\nunder each cluster (thus, there are n*D*K entries). However,\nthe only trajectory-dependent \nparameter value that is relevant is the one associated with the\ncorresponding most likely cluster for each trajectory. We are not\nnormally interested in the expected transformation for a specific\ntrajectory in a cluster for which the trajectory does not belong. In other words,\nwe would like a reduced matrix of size n-by-D that only lists the\nentries for each trajectory (and dimension) from the clusters\nto which the trajectories belong.\n\n<p>You can retrieve a reduced matrix that only contains the relevant\nentries for each trajectory-dependent parameter by using <b>GetCindx()</b>.\nFor example, <tt>GetCindx(model.Ee, model.C)</tt> will return an n-D matrix \ncontaining all the relevant entries for all n trajectories and D\ndimensions (this is explained more clearly for each case below).\nYou can substitute any of the trajectory-dependent \nparameters (.Ee, .Ef, .Ve, .Vf, .Vef) for .Ee in the call to\n<b>GetCindx()</b> as shown below.\n \n<ul>\n   <li>.Mu   : This variable gives the cluster-dependent regression\n    coefficients. .Mu(:,k,d) gives the coefficients for the k-th cluster\n    in the d-th dimension; note that .Mu(1,k,d) gives the y-intercept.<p>\n \n   <li>.Sigma : This variable gives the variance parameter of the regression\n    noise model. .Sigma(k,d) gives the parameter for the k-th cluster\n    in the d-th dimension.<p>\n \n   <li>.Alpha : This variable gives the mixture weights for the\n    mixture model. .Alpha(k) gives the k-th mixture weight.<p>\n \n   <li>.Ea   : This variable gives the (E)xpected value of the scale\n    parameter (a) in time. This variable is denoted\n    as a in my dissertation. There is an expectation for each trajectory i and\n    each cluster k. Hence, .Ea(i,k) gives the\n    expected scale parameter for the i-th trajectory, under the k-th\n    cluster. <tt>GetCindx(model.Ea, model.C)</tt> returns\n    the reduced n-1 matrix containing the relevant cluster-specific values.<p>\n \n   <li>.Eb   : This variable gives the (E)xpected value of the translation\n    parameter (b) in time. This variable is denoted\n    as b in my dissertation. There is an expectation for each trajectory i\n    and each cluster k. Hence, .Eb(i,k) gives the\n    expected scale parameter for the i-th trajectory, under the k-th\n    cluster. <tt>GetCindx(model.Eb, model.C)</tt> returns\n    the reduced n-1 matrix containing the relevant cluster-specific values.<p>\n \n   <li>.Ee   : This variable gives the (E)xpected value of the scale\n    parameter (e) in measurement space. This variable is denoted\n    as c in my dissertation. There is an expectation for each trajectory i,\n    in each dimension d, for each cluster k. Hence, .Ee(i,k,d) gives the\n    expected scale parameter for the i-th trajectory, under the k-th\n    cluster in the d-th dimension. <tt>GetCindx(model.Ee, model.C)</tt> returns\n    the reduced n-D matrix containing the relevant cluster-specific values.<p>\n \n   <li>.Ef   : This variable gives the (E)xpected value of the translation\n    parameter (f) in measurement space. This variable is denoted\n    as d in my dissertation. The layout is the same as for .Ee.\n    <tt>GetCindx(model.Ef, model.C)</tt> returns the reduced n-D matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.Va   : This variable gives the (V)ariance of the scale parameter (a)\n    in time. This variable is denoted as r in my dissertation.\n    The layout is the same as for .Ea.\n    <tt>GetCindx(model.Va, model.C)</tt> returns the reduced n-1 matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.Vb   : This variable gives the (V)ariance of the translation\n    parameter (b) in time. This variable is denoted\n    as s in my dissertation. The layout is the same as for .Eb.\n    <tt>GetCindx(model.Vb, model.C)</tt> returns the reduced n-1 matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.Ve   : This variable gives the (V)ariance of the scale parameter (e)\n    in measurement space. This variable is denoted as u in my dissertation.\n    The layout is the same as for .Ee.\n    <tt>GetCindx(model.Ve, model.C)</tt> returns the reduced n-D matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.Vf   : This variable gives the (V)ariance of the translation\n    parameter (f) in measurement space. This variable is denoted\n    as v in my dissertation. The layout is the same as for .Ee.\n    <tt>GetCindx(model.Vf, model.C)</tt> returns the reduced n-D matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.Vab  : This variable gives the co-(V)ariance of (a) and (b). This\n    variable is denoted as Vab in my dissertation. The layout is the \n    same as for .Ea.\n    <tt>GetCindx(model.Vab, model.C)</tt> returns the reduced n-1 matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.Vef  : This variable gives the co-(V)ariance of (e) and (f). This\n    variable is denoted as Vcd in my dissertation. The layout is the \n    same as for .Ee.\n    <tt>GetCindx(model.Vef, model.C)</tt> returns the reduced n-D matrix \n    containing the relevant cluster-specific values.<p>\n \n   <li>.R    : This variable gives the variance parameter for the learned\n    prior model of the scale parameter a.<p>\n \n   <li>.S    : This variable gives the variance parameter for the learned\n    prior model of the translation parameter b. <p>\n \n   <li>.T    : This variable gives the variance parameter for the learned\n    prior model of the translation parameter f. .T(k,d) gives the value for\n    the k-th cluster in the d-th dimension.<p>\n \n   <li>.U    : This variable gives the variance parameter for the learned\n    prior model of the scale parameter e. .U(k,d) gives the value for\n    the k-th cluster in the d-th dimension.\n</ul>\n\n\n\n<h3></h3>\n<div align=center>\n<a href=\"#top\">Top</a> |\n<a href=\"http://www.ics.uci.edu/~sgaffney/software/CCT\">CCToolbox</a> |\n<a href=\"../#Down\">Download</a> |\n<a href=\"./\">Documentation</a> |\n<a href=\"http://www.ics.uci.edu/~sgaffney#contact\">Contact</a>\n</div>\n\n\n\n</body>\n\n</html>\n", "encoding": "ascii"}