{"url": "https://www.ics.uci.edu/~pattis/common/handouts/cygwinclion/clion.html", "content": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\r\n<html>\r\n\r\n<head>\r\n  <title>CLion IDE: Downloading, Installing, and Testing</title>\r\n</head>\r\n\r\n<body BGCOLOR=\"white\">\r\n\r\n<center>\r\n<h1>CLion IDE: Downloading, Installing, and Testing</h1>\r\n<p>\r\n</center>\r\n<hr align=\"left\" width=\"100%\">\r\n<p>\r\n<b>Download/Install/Test the CLion IDE</b>\r\n<p>\r\n<b>CLion</b> is an Integrated Development Environment (IDE) that uses the\r\n  <b>Cygwin</b> toolset to develop/test C++ programs.\r\n It occupies about 920 MB on disk.\r\n<p>\r\nBefore installing CLion in this handout, you should have already downloaded and\r\n  installed the <a href=\"cygwin.html\" targe=\"_new\">Cygwin</a> toolset\r\n  (if you haven't, go back and do so).\r\n<p>\r\nYou may want to print these instructions before proceeding, so that you can\r\n  refer to them while downloading and installing CLion.\r\nOr, just keep this document in your browser.\r\nYou should read each step completely, before performing the action that it\r\n  describes.\r\n<p>\r\nThis document shows the installation of CLion version 2019.2; I installed\r\n  this version during Summer 2019 (although the <b>Registration</b> part,\r\n  which I couldn't repeat, was from 2016).\r\nYou should install the latest version to be compatible with how CLion is\r\n  used in this document.\r\n<p>\r\n<hr align=\"left\" width=\"100%\">\r\n\r\n\r\n<h2>JetBrain's CLion: Version 2019.2</h2>\r\n<p>\r\n<h3>Section 0) Registering For a Free Copy of CLion</h3>\r\n<p>\r\nIn this section you will register for a free copy of CLion online.\r\n<p>\r\nYou will ultimately need to provide a copy of your student ID\r\n  or an unofficial transcript by attaching it when prompted for\r\n  an OFFICIAL DOCUMENT: you need to provide some \"proof\" that\r\n  you are currently enrolled at UCI.\r\nMy students have been using CLion for a few years and I have yet to\r\n  hear of any unresolved problems involving proving they are UCI students.\r\n<p>\r\n<ol>\r\n<li>Click\r\n    <a href=\"https://www.jetbrains.com/shop/eform/students\" target=\"_new\">\r\n      Student License</a>.<p>\r\n    When run, the following <b>JetBrains Products for Learning</b>\r\n      screen should appear.\r\n    Fill it in as shown, but with <b>your Name and Email address</b> (not mine).\r\n    <p>\r\n    <img src=\"images/clion/CLion License.jpg\">\r\n    <p>\r\n    Click the <b>APPLY FOR FREE PRODUCTS</b> button.\r\n    <p>\r\n\r\n    The following screen <b>may</b> appear.\r\n    <p>\r\n    <img src=\"images/clion/CLion Not Robot.jpg\">\r\n    <p>\r\n    If it appears, click the checkbox.\r\n    <p>\r\n     A <b>Thank You!</b> screen will appear, indicating that\r\n      <b>Jet Brains</b> is sending you a <b>Confirm Request</b> email.\r\n    <p>\r\n\r\n<li>You should receive an email from JetBrains (likely within 5-10 minues)\r\n      containing the following text:\r\n     <blockquote><b>\r\nHi,\r\n<p>\r\nYou've received this email because your email address was<br>\r\nused for registering/updating a JetBrains Educational Pack.\r\n<p>\r\nPlease follow this link to confirm your intention:\r\n<p>\r\n<u><font color=\"#0000FF\">Confirm Request</font></u>\r\n<p>\r\nYours truly,<br>\r\nJetBrains Team<br>\r\n<u><font color=\"#0000FF\">https://www.jetbrains.com</font></u><br>\r\nThe Drive to Develop</b></blockquote>\r\n<p>\r\n\r\n<li>Click the <b>Confirm Request</b> link.\r\n    A <b>Congrats! You've been approved!</b> screen will appear,\r\n      indicating that <b>Jet Brains</b> is sending you an\r\n      <b>Activate Educational License</b> email.\r\n<p>\r\n\r\n<li>You should receive an email from JetBrains (likely within 5-10 minues)\r\n      containing the following text:\r\n     <blockquote><b>\r\nDear &lt;Your first name&gt;\r\n<p>\r\nCongratulations! Your JetBrains Student License is confirmed.\r\n<p>\r\nTo activate your license, use the following link:<br>\r\n<u><font color=\"#0000FF\">Activate Educational License</font></u>\r\n<p>\r\nAfter accepting the License Agreement, you will be asked<br>\r\nto sign up for a Student JetBrains Account. You will use<br>\r\nthis account to sign in to JetBrains product(s) whenever<br>\r\nyou use them.\r\n<p>\r\nHappy coding!\r\n<p>\r\nYours truly,<br>\r\nJetBrains Sales Team<br>\r\n<u><font color=\"#0000FF\">https://www.jetbrains.com</font></u>\r\n</b></blockquote>\r\n<p>\r\n\r\n<li>Click the <b>Activate Educational License</b> link.\r\n    A <b>TOOLBOX SUBSCRIPTION LICENSE AGREEMENT FOR EDUCATION</b> screen will\r\n      appear.\r\n\r\n<li>Click the <b>I Accept</b> button.\r\n    <p>\r\n    The following <b>JetBrains Products for Learning</b> screen should appear.\r\n    <p>\r\n    <img src=\"images/clion/CLion Name Password.jpg\">\r\n    <p>\r\n\r\n<li>Enter your <b>User Name</b> and <b>Password</b>\r\n      (and <b>Repeat Password</b>), click the <b>I have read...</b> checkbox,\r\n      and click the <b>Submit</b> button.\r\n    Write this information in a location for future reference.\r\n    <p>\r\n\r\n    The following <b>JetBrains Product Pack for Students</b> screen should\r\n      appear (I have blacked-out my <b>License ID</b>).\r\n    <p>\r\n    <img src=\"images/clion/CLion License ID.jpg\">\r\n    <p>\r\n    Write down the <b>License ID</b> for future reference.\r\n    <p>    \r\n\r\n<li>Note that anyone (even without a university email address) can download a\r\n      <a href=\"https://www.jetbrains.com/clion/\" target=\"_new\">\r\n      Free 30 Day Trial</a> version of CLion.\r\n\r\n<p>\r\n</ol>\r\n\r\n<h3>Section 1) Downloading/Installing CLion</h3>\r\n<p>\r\nIn this section you will download and begin installing CLion for use with the\r\n   Cygwin toolset.\r\n<p>\r\n<ol>\r\n<li>Click\r\n    <a href=\"https://www.jetbrains.com/clion/download/#section=windows-version\" target=\"_new\">\r\n      CLion</a>.<p>\r\n    When run, the following <b>Download CLion</b>\r\n      screen should appear (ensure the Oval surrounds\r\n      the operating system you are on).\r\n    <p>\r\n    <img src=\"images/clion/CLion Download.jpg\">\r\n    <p>\r\n    Click the <b>Download</b> button to \r\n    download the executable file named <b>CLion-2019.2.exe</b>, which when run\r\n      will install the 64-bit version of CLion.\r\n    It may display another screen asking you to enter information; you can\r\n      enter information on this screen or ignore it.\r\n    Its icon will appear on your screen as follows. \r\n       <p>\r\n       <img src=\"images/clion/Executable.jpg\">\r\n       <p>\r\n    Save this file for future use, in case you need to reinstall it:\r\n      on my system I stored this file as\r\n      <b>C:\\ZData\\Installed Software\\CLion-2019.2.exe</b>\r\n<p>\r\n\r\n<li>Double-click the <b>CLion-2019.2.exe</b> file.\r\n    <p>\r\n    When run, a <b>User Account Control</b>\r\n      pop-up window may appear on your screen.\r\n    I could not capture its image, but it asks,\r\n      <b>Do you want to allow this app to make changes to your device</b>\r\n\r\n<!---\r\n<li>Click the <b>Yes</b> button on this window if you see it.\r\n    <p>\r\n    When run, the following <b>User Account Control</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion User Account Control.jpg\">\r\n    <p>\r\n--->\r\n<li>Click the <b>Yes</b> button on this window.\r\n    <p>\r\n    If you have no previous version of CLion installed, the following\r\n      <b>CLion Setup</b> pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Setup.jpg\">\r\n    <p>\r\n\r\n    <p>\r\n    If you have any previous versions of CLion installed, the following\r\n      <b>CLion Setup</b> pop-up window should appear on your screen.\r\n    Check the checkboxes for the versions you want to uninstall,\r\n      and check the checkbox labelled <b>Uninstall silently</b>.\r\n    <p>\r\n    <img src=\"images/clion/CLion Uninstall.jpg\">\r\n    <p>\r\n\r\n<li>Click the <b>Next&gt;</b> button on whichever window appeared.\r\n    <p>\r\n    The following <b>CLion Setup: Choose Install Location</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Setup Choose Install Location.jpg\">\r\n    <p>\r\n    For simplicity and consistency, ensure the <b>Destination Folder</b> is\r\n       <b>C:\\Program Files\\Jetbrains\\CLion 2019.2</b> (the default).\r\n<p>\r\n\r\n<li>Click the <b>Next&gt;</b> button on this window.\r\n    <p>\r\n    The following <b>CLion Setup: Choose Installation Options</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Setup Choose Installation Options.jpg\">\r\n    <p>\r\n    Check all checkboxes (the default is none are checked).\r\n<p>\r\n\r\n<li>Click the <b>Next&gt;</b> button on this window.\r\n    <p>\r\n    The following <b>CLion Setup: Choose Start Menu Folder</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Setup Choose Start Menu Folder.jpg\">\r\n    <p>\r\n    For simplicity and consistency, ensure the textbox contains\r\n       <b>JetBrains</b> (the default).\r\n<p>\r\n\r\n<li>Click the <b>Install</b> button on this window.\r\n    <p>\r\n    The following <b>CLion Setup: Installing</b> progress\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Setup Installing Progress.jpg\">\r\n    <p>\r\n    It might take (a few) minutes (depending on your connection speed)\r\n      for CLion to be downloaded and installed.\r\n    Eventually this window will be replaced by the following\r\n      <b>CLion Setup - Completing the CLion Setup Wizard</b> \r\n      window on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Setup Completing the CLion Setup Wizard.jpg\">\r\n    <p>\r\n\r\n<li>Click the <b>Finish</b> button on this window (leaving unchecked the\r\n       <b>Run CLion</b> checkbox).\r\n    <p>\r\n    Find the <b>JetBrains CLion 2019.2</b> shortcut icon on your desktop.\r\n    <img src=\"images/clion/CLion Shortcut.jpg\">\r\n    <p>\r\n    If there none, create a shortcut icon (with this name, or just <b>CLion</b>)\r\n       on your desktop to the file\r\n       <b>C:/Program Files/JetBrains/CLion 2019.2/bin/clion64.exe</b>.\r\n    <p>\r\n    You will double-click this icon to start CLion (see the next section).\r\n    <p>\r\n    Note, when I downloaded CLion I <b>did not</b> need to reboot to complete\r\n      the installation of CLion; certainly to be safe you can reboot your\r\n      machine now.\r\n</ol>\r\n<p>\r\n\r\n<hr align=\"left\" width=\"33%\">\r\n<h3>Section 2) Initializing/Testing CLion with the Cygwin Toolset and Clang</h3>\r\n<p>\r\nIn this section you will finish installing CLion and then create, build, and\r\n   run a trivial CLion project/program (including editing it and seeing how\r\n   syntax errors are reported).\r\nIt will also discuss some useful features in the CLion IDE.\r\n<p>\r\n<ol>\r\n<li>Double-click the <b>CLion</b> shortcut icon created above.\r\n    <p>\r\n    On my machine it takes about 15 seconds for the flash screen to appear,\r\n      and another 5 seconds for the IDE to display.\r\n    <p>\r\n    NOTE: The two icons below are from an older version of JetBrains, so\r\n            the ones you see may differ.\r\n    <p>\r\n    If you have no previous version of CLion installed, the following\r\n      <b>Complete Installation</b> pop-up window should appear on your screen.\r\n    Ensure that the <b>I do not have...</b> radio button is pressed.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup Complete Installation.jpg\">\r\n    <p>\r\n    If you have a previous version of CLion installed, the following\r\n      <b>Complete Installation</b> pop-up window should appear on your screen.\r\n    Ensure the <b>Previous version ...</b> radio button is pressed.\r\n    This configuration information was <b>not removed</b> as part of the\r\n       uninstall.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup Complete Installation with Previous.jpg\">\r\n    <p>\r\n\r\n<li>Click the <b>OK</b> button on whichever window appeared.\r\n    <p>\r\n    The following <b>CLion License Activation</b>\r\n      pop-up window may appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion License Activation.jpg\">\r\n    <p>\r\n    If it appears, fill in your email and password (see step 6 from \"Section 0\")\r\n       and then click <b>Activate</b>.\r\n\r\n<li>The following <b>CLion User Agreement</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/License Agreement for CLion.jpg\">\r\n    <p>\r\n\r\n<li>Scroll throught and read this document :)<br>\r\n    Click the <b>I confirm that I have read and accept the terms of this User\r\n      Agreement</b> box.<br>\r\n    Click the <b>Continue</b> button.\r\n    <p>\r\n    The following <b>Data Sharing</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup Data Sharing.jpg\">\r\n    <p>\r\n<!--\r\n<li>The following <b>CLion Privacy Policy Agreement</b>\r\n      pop-up window may appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup Privacy Policy Agreement.jpg\">\r\n    <p>\r\n\r\n<li>If it does, click the <b>Accept</b> button on this window.\r\n    <p>\r\n    The following <b>CLion License Activation</b>\r\n      pop-up window may appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Startup License Activation.jpg\">\r\n    <p>\r\n\r\n<li>Enter your <b>Username or email</b> and <b>Password</b>, and then click\r\n      <b>Activate</b> button.\r\n    <p>\r\n\r\n<p>\r\nThe following <b>Customize CLion UI Themes</b>\r\n      pop-up window may appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize UI Theme.jpg\">\r\n    <p>\r\n<p>    \r\n\r\n<li>If it does, ensure the <b>IntelliJ</b> radio button is pressed\r\n      (the default) and then click the <b>Next: Toolchains</b> button on this\r\n      window.\r\n    <p>\r\n    The following <b>Customize CLion Toolchains</b>\r\n      pop-up window may appear on your screen.\r\n    The actual version you see may be slightly different (this one appeared\r\n      with version 2016.3.1).\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize Toolchain.jpg\">\r\n    <p>\r\n<p>    \r\n\r\n<li>If it does, press the <b>Use Cygwin home</b> radio button and ensure\r\n      <b>C:\\cygwin64</b> is in its textbox (the default).\r\n    Press the <b>Use bundled CMake 3.5.1</b> radio button (the default).\r\n    Then, click the <b>Next: Default plugins</b> button on this window.\r\n    <p>\r\n    The following <b>Customize CLion Default plugins</b>\r\n      pop-up window may appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize Default plugins.jpg\">\r\n<p>\r\n\r\n<li>If it does, click the <b>Next: Featured plugins</b> button on this window.\r\n    <p>\r\n    The following <b>Customize CLion Featured plugins</b>\r\n      pop-up window may appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Customize Featured plugins.jpg\">\r\n    <p>\r\n\r\n<li>If it does, click the <b>Start using CLion</b> button on this window.\r\n    <p>\r\n    The following splash should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Splash.jpg\">\r\n    <p>\r\n--->\r\n<li>Click the <b>Send Usage Statistics</b> button.\r\n    <p>\r\n    CLion loads and the following <b>Welcome to CLion</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Welcome.jpg\">\r\n    <p>\r\n\r\n<li>Click the <b>New Project</b> text on this window.\r\n    <p>\r\n    The following <b>New Project</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion New CMake Project.jpg\">\r\n    <p>\r\n    In the <b>Location</b> textbox, at the end of the path, replace\r\n      <b>untititled</b> by <b>trivialtest</b>.\r\n    <p>\r\n    In the <b>Language Standard</b> pull-down list, select <b>C++11</b>.\r\n    When you create later projects, this will become the new default.\r\n<p>\r\n\r\n<li id=\"Section2Part7\">Click the <b>Create</b> button on this window.\r\n    <p>\r\n    If a <b>Tip of the Day</b> pop-up window appears, click its <b>Close</b>\r\n      button; you can first check the box to not display such tips in the\r\n      future.\r\n    <p>\r\n    The IDE's pop-up window will appear.\r\n    There will be some activity at the bottom (see picture below).\r\n    <p>\r\n    <img src=\"images/clion/CLion Background Tasks.jpg\">\r\n    <p>\r\n    This happens whenever a new project is loaded.\r\n    Wait for it to finish all its tasks (a few minutes at most).\r\n    <p>\r\n    At that time I saw a window insert (lower-right) that said\r\n    <p>\r\n    <img src=\"images/clion/Windows Defender 1.jpg\">\r\n    <p>\r\n    I clicked <b>Fix</b> and saw a window that said\r\n    <p>\r\n    <img src=\"images/clion/Windows Defender 2.jpg\">\r\n    <p>\r\n    I clicked <b>Configure Automatically</b> and saw a window that said\r\n    <p>\r\n    <img src=\"images/clion/Windows Defender 3.jpg\">\r\n    <p>\r\n    The following <b>CLion</b> project window should appear on your screen\r\n      I have resized it below).\r\n    <p>\r\n    <img src=\"images/clion/CLion Trivialtest.jpg\">\r\n    <p>\r\n    Note that the right pane lists the tabs <b>CMakeLists.txt</b>\r\n      (which contains the project's <b>make</b> code; it should be\r\n       familiar if you read the\r\n       <a href=\"commandline.html\">commandline</a> document) and <b>main.cpp</b>\r\n      (which is shown and contains a trivial C++ program).\r\n    These tabs appear in the order shown (but you can re-order them by\r\n      draging/dropping either); if you want more control over these tabs, you\r\n      can select <b>Window | Editor Tabs | Configure Editor tabs..</b> (first);\r\n      there you can click the <b>Sort tabs alphabetically</b> or\r\n      <b>Open new tabs at the end</b> boxes (second).\r\n    <p>\r\n    <div class=\"image-gallery\">\r\n      <img src=\"images/clion/CLion Editor Tabs.jpg\", width =\"450\">\r\n      &nbsp; &nbsp; &nbsp; &nbsp; \r\n      <img src=\"images/clion/CLion Editor Tabs 2.jpg\", , width =\"450\">\r\n      <div class=\"clear\"></div>\r\n    </div>\r\n    <p>\r\n    If we right-click in the gray area between the <b>Project</b> and\r\n      <b>Editor</b> panes, we can toggle <b>Show Line Numbers</b> and\r\n      <b>Show Indent Guides</b> options.\r\n    <p>\r\n    <img src=\"images/clion/CLion ShowLineNumbers.jpg\">\r\n    <p>\r\n\r\n    It useful to click the disclosure triangle to the left of\r\n      <b>trivialtest</b> in the Project/left pane.\r\n    <p>\r\n    <img src=\"images/clion/CLion Trivialtest disclosed.jpg\">\r\n    <p>\r\n    Every project will contain a <b>cmake-build-debug</b> folder, which will\r\n      ultimately contain the compiled code (executable) for the project.\r\n    Later, we will see how to put data files into that folder; the executable\r\n      uses that folder by default for reading/writing files.\r\n    <b>Students frequently forget to put their data folders here, causing them\r\n      all sorts of confusion/delay when trying to read data files.</b>\r\n    <p>\r\n \r\n<li id=\"Section2Part8\">Depress the <b>File</b> tab and select <b>Settings</b>\r\n       as shown in the following illustraton.\r\n    <p>\r\n    <img src=\"images/clion/CLion Get to settings.jpg\">\r\n    <p>\r\n    The following <b>Settings</b>\r\n      window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Settings.jpg\">\r\n    <p>\r\n\r\n<li>Disclose the <b>Build, Execution, Deployment</b> item, and select\r\n      <b>CMake</b>.\r\n    <p>\r\n    The following <b>Settings</b>\r\n      window should appear on your screen (see below for the changes needed\r\n      to show this exact screen).\r\n    <p>\r\n    <img src=\"images/clion/CLion Settings CMake.jpg\">\r\n    <p>\r\n    <ol>\r\n    <li>Check the <b>Automaticall reload CMake project on editing</b><p>\r\n    <li>Copy and paste the text<br>\r\n      <b>-D CMAKE_CXX_COMPILER=/cygdrive/c/cygwin64/bin/clang++ -D CMAKE_C_COMPILER=/cygdrive/c/cygwin64/bin/clang</b><br><br>\r\n      into the <b>CMake Options</b> textbox.\r\n    These <b>CMake...</b> switches tells CLion that we will be using the Clang\r\n      C++/C compilers.\r\n    Doing so never will be wrong, but it might be unnecessary if you have\r\n      only one C++/C compiler on your system.\r\n    </ol>\r\n    <p>\r\n    Another way to fix this problem is to ensure the following lines start\r\n      your <b>CMakeLists.txt</b> file (see part 10 below, which shows the\r\n      last line). \r\n<b><pre>  cmake_minimum_required(VERSION 3.14)\r\n\r\n  set(CMAKE_CXX_COMPILER \"/cygdrive/c/cygwin64/bin/clang++\")\r\n  set(CMAKE_C_COMPILER \"/cygdrive/c/cygwin64/bin/clang\")\r\n\r\n  project(trivialtest)\r\n\r\n  set(CMAKE_CXX_STANDARD 11)\r\n\r\n  add_executable(trivialtest main.cpp)</pre></b>\r\n\r\n    <p>\r\n    If you do have multiple compilers on your machine and forget to specify\r\n       these <b>CMake</b> switches or <b>CMakeLists.txt</b> options (or\r\n       enter the wrong information) you might encounter compliation\r\n       problems.\r\n    These error messages often contain the text\r\n       <b>multiple definition of ...</b>\r\n    <p>\r\n    You will setup all projects in the same way, so once you do a few, all the\r\n      rest will be setup similarly.\r\n    I recommend always doing these two operations once, for every new project.\r\n<p>\r\n\r\n<li>Click the <b>OK</b> button on this window.\r\n    <p>\r\n    There will be some activity briefly at the bottom of the window:\r\n    CLion is and updating the <b>cmake-build-debug</b> folder, which may take a\r\n      few minutes.\r\n    <p>\r\n    If you click (sometimes I needed to double-click) the\r\n      <img src=\"images/clion/CMake icon.jpg\"> appearing\r\n      at the\r\n      2nd to bottom line of your window, the following <b>CMake-Debug</b> pane\r\n      will appear at the bottom of CLion project window (it may appear\r\n      automatically if there is a problem with your CMake file).\r\n    <p>\r\n    <img src=\"images/clion/CLion reCMaking.jpg\">\r\n    <p>\r\n    The <b>CMake Debug</b> pane will shows CLion checking whether the CMake\r\n      switches you entered are legal, \r\n    You can scroll through the information in the <b>CMake Debug</b> pane\r\n      (to see if there are any errors).\r\n    By clicking this same icon, the <b>CMake Debug</b> pane will disappear.\r\n    When you scroll through the <b>CMake Debug</b> pane it should show something\r\n      very similar to the following.\r\n    <p>\r\n    <img src=\"images/clion/CLion CMake-Debug.jpg\">\r\n    <p>\r\n    Especially important here is seeing <b>...cygwin64/bin/clang -- works</b>\r\n      and <b>...cygwin64/bin/clang++ -- works</b>.\r\n    <p>\r\n    If you want to examine the <b>CMakeLists.txt</b> file, click on it (the\r\n      tab in the right pane).\r\n    It will update the right pane to\r\n    <p>\r\n    <img src=\"images/clion/CLion CMakeLists.jpg\">\r\n    <p>\r\n    If you do this, click on <b>main.cpp</b> (in the right pane), to return to\r\n      the C++ program.\r\n<p>\r\n\r\n<li>Click the <img src=\"images/clion/buildicon.jpg\"> (Build icon) on this\r\n      window.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Built.jpg\">\r\n    <p>\r\n    The results of the build appear in the <b>Message Build</b> pane, which\r\n      is automatically displayed.\r\n    This <b>trivialtest</b> C++ program has now been built (compiled and linked\r\n      successfully);\r\n      either could have dispayed errors in the <b>Message Build</b> pane.\r\n    Such errors must be corrected before a program can be run.\r\n    <p>\r\n    <!--\r\n    Because building was successful, the Run icon (\r\n      <img src=\"images/clion/buildicon.jpg\">) turned from Gray to Green\r\n    -->\r\n<p>\r\n   \r\n<li>Click the <img src=\"images/clion/runicon.jpg\"> (Run icon) on this\r\n      window.\r\n    <p>\r\n<!---\r\n    The following <b>Edit Configuration</b>\r\n      pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Configuration.jpg\">\r\n    <p>\r\n    For the <b>Target</b> dropdown, select <b>trivialtest</b> as shown.\r\n    The <b>Executable</b> dropdown will change to <b>trivialtest</b> \r\n      automatically.\r\n\r\n<li>Click the <img src=\"images/clion/CLion Run Button.jpg\"> (<b>Run</b> button)\r\n      on this window.\r\n    <p>\r\n--->\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Run.jpg\">\r\n    <p>\r\n    The results of running the program print in the <b>Run trivialtest</b> pane;\r\n      when the program terminates, the <b>Run trivialtest</b> pane retains the\r\n      history of the program's execution (input/output).\r\n<p>\r\n\r\n<li>To edit, rebuild, and rerun the program, change the output string to\r\n      <b>\"Goodbye, World!\"</b> and then click the\r\n      <img src=\"images/clion/runicon.jpg\"> (Run icon) again.\r\n    CLion will try to both rebuild the project and rerun it.\r\n    You will briefly see the <b>Message Build</b> pane as shown above; because\r\n      building is successful this pane will disappear the code will be run,\r\n      with the <b>Run trivialtest</b> pane replacing it.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reRun.jpg\">\r\n    <p>\r\n    The results of rerunning the program appear in the <b>Run trivialtest</b>\r\n      pane.\r\n<p>\r\n\r\n<li>If we create a syntax error (remove the <b>;</b> at the\r\n      end of the <b>cout</b> line), CLion will soon highlight the character\r\n      after <b>endl</b> (where the <b>;</b> belongs), show a red squiggle under\r\n      the error, put a purple bighlight over <b>endl</b>, and put a purple\r\n      underline at the right end of that column, all in the <b>main.cpp</b>\r\n      pane.\r\n    If we  hover over the red squiggle, the <b>main.cpp</b> pane shows\r\n    <p>\r\n    <img src=\"images/clion/CLion Hover Squiggle.jpg\">\r\n    <p>\r\n    If we  hover over the purple line, the <b>main.cpp</b> pane shows\r\n    <p>\r\n    <img src=\"images/clion/CLion Hover Purple.jpg\">\r\n    <p>\r\n    CLion will also put a white <b>!</b> surrounded by a red circle at the\r\n      end of the top line in the <b>main.cpp</b> pane.\r\n    <p>\r\n    <!---\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reRun syntax error 1.jpg\">\r\n    <p>\r\n    --->\r\n<li>If we try to rebuild (or run) this code (it will fail), click the\r\n      <img src=\"images/clion/buildicon.jpg\"> (Build icon) or\r\n      <img src=\"images/clion/runicon.jpg\"> (Run icon) again.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion reRun syntax error 2.jpg\">\r\n    <p>\r\n    The failed results of attempting to rebuild the program appear in the\r\n      <b>Messages Build</b> pane (there is no <b>Run trivialtest</b> pane\r\n      because the\r\n      code failed to compile/link); here you can reposition the\r\n      separation between the <b>mail.cpp</b> and <b>Message Build</b> panes\r\n      to show the entire program and allow all the errors to appear.\r\n</ol>\r\nWe will now continue by learning how to download a CLion project and run it.\r\nDuring the quarter, you will be asked to do this for all programming\r\n  assignments and many quizzes.\r\n<p>\r\n\r\n<hr align=\"left\" width=\"33%\">\r\n<h3>Section 3) Testing Downloadable CLion Projects with the Course Libraries</h3>\r\n<p>\r\nIn this section you will learn more about CLion, by downloading the course\r\n  libraries and then downloading/building/running a CLion project that contains\r\n  various programs that use these libraries.\r\nWe assume that you have CLion open and the <b>trivialtest</b> project in its\r\n  window.\r\n<p>\r\n<ol>\r\n<li>Create a new shortcut named <b>ClionProjects</b>\r\n      (to the folder <b>C:\\Users\\yourname\\ClionProjects</b>,\r\n       which CLion should have created, now containing only\r\n       the <b>trivialtest</b> folder) \r\n      and place it on your desktop near the shortcut that\r\n      you use to start CLion.\r\n<p>\r\n\r\n<li>Download and unzip the file <a href=\"libraries.zip\">libraries</a>;\r\n    Copy its three folders (<b>courselib</b>, <b>gtestlib</b>, and\r\n      <b>test_all_data_types</b>) into the folder <b>ClionProjects</b>\r\n      shortcuts; it should already contain the <b>trivialtest</b> folder,\r\n      created by the operations above.\r\n    <p>\r\n    Generally, whenever you download CLion projects, you will unzip them and \r\n      then copy their folders into the folder that <b>ClionProjects</b>\r\n      shortcuts.\r\n<p>\r\n\r\n<li>Click the <b>File</b> tab near the upper-left corner of the CLion window;\r\n      then click the <b>Open</b> option in the pull-down menu.\r\n    <p>\r\n    The following  pop-up window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Open.jpg\">\r\n    <p>\r\n    You may need to scroll this window and disclose/undisclose various folders\r\n      to make it appear as shown above.\r\n    The <b>Users</b> folder should contain a folder with your name\r\n      (<b>Pattis</b> for me); it should contain a folder with the\r\n      <b>ClionProjects</b> folder; it should contain the three folders\r\n      <b>courselib</b>, <b>gtestlib</b>, <b>test_all_data_types</b>,\r\n      and <b>trivialtest</b>.\r\n    <p>\r\n    Click on the <b>test_all_data_types</b> folder, so that it is highlighted\r\n      as shown above.\r\n<p>\r\n\r\n<li>Click the <b>OK</b> button on this window.\r\n    <p>\r\n    The following <b>Open Project</b> window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion This Window.jpg\">\r\n    <p>\r\n\r\n<li>Click the <b>This Window</b> button on this window.\r\n    (clicking <b>New Window</b> creates a second project window, which\r\n      is sometimes useful, but can also cause confusion; we are done\r\n      with the <b>trivialtest</b> program in this document.)\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen (after you disclose the\r\n      <b>test_all_data_types</b> folder).\r\n    <p>\r\n    <img src=\"images/clion/CLion TADT.jpg\">\r\n    <p>\r\n    Again, there will be some activity at the bottom (see picture below).\r\n    <p>\r\n    <img src=\"images/clion/CLion Background Tasks 2.jpg\">\r\n    <p>\r\n    This happens whenever a new project is loaded.\r\n    Wait for it to finish all its tasks (a few minutes at most).\r\n    Also, if a message about <b>Defender</b> is displayed, see\r\n      <a href=\"#Section2Part7\">Section 2, Part 7</a> of this document for\r\n      information how to proceed.\r\n<p>\r\n\r\n<li>Scroll downward, select lines 30-35, and press <b>ctrl-/</b>\r\n      (this notation means, while holding the <b>Ctrl</b> key\r\n      -it is like a shift key- press the <b>/</b> key),\r\n      which uncomments the chosen lines (recall in C++ we use <b>//</b>\r\n      double slashes for comments).\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion driver_set.jpg\">\r\n    <p>\r\n    If you press <b>ctrl-/</b></b> again, it will comment the lines; so\r\n      this command really means <b>toggle-comment</b> on the selected lines.\r\n    Before continuing ensure lines 30-35 are uncommented.\r\n<p>\r\n\r\n<!--- Not needed\r\n<li>See <a href=\"#Section2Part8\">Section 2, Parts 8-9</a> for the pictures of\r\n      the following steps.\r\n    <p>\r\n    Depress the <b>File</b> tab and select <b>Settings</b>.<br>\r\n    The <b>CMakeLists.txt</b> file (examine it) already specifies\r\n    <b><pre>  set(CMAKE_CXX_COMPILER \"/cygdrive/c/cygwin64/bin/clang++\")\r\n  set(CMAKE_C_COMPILER \"/cygdrive/c/cygwin64/bin/clang\")</pre></b>\r\n    so you do not have to disclose the <b>Build, Execution, Deployment</b>\r\n      item, and select <b>CMake</b>.\r\n    Nor must you copy and paste the text<br><br>\r\n      <b>-D CMAKE_CXX_COMPILER=/cygdrive/c/cygwin64/bin/clang++ -D CMAKE_C_COMPILER=/cygdrive/c/cygwin64/bin/clang</b><br><br>\r\n      into the <b>CMake Options</b> textbox (although doing so will not\r\n      cause any problem).\r\n    <p>\r\n--->\r\n<li>Click the <img src=\"images/clion/buildicon.jpg\"> (Build icon) on this\r\n      window\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    It shows the <b>Message Build</b> pane.\r\n    <p>\r\n    <img src=\"images/clion/CLion Built 3.jpg\">\r\n    <p>\r\n    Then click the <img src=\"images/clion/runicon.jpg\"> (Run icon) on this\r\n      window.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion driver_set run.jpg\">\r\n    <p>\r\n    It shows the <b>Run Build All</b> pane.\r\n    <ol>\r\n    We could have bypassed the <b>Build</b> icon and just clicked the <b>Run</b>\r\n      icon.\r\n    In older versions of CLion, it wass useful (esepcially with\r\n      programs that contain syntax errors) to Build and Run separately.\r\n    If we clicked only Run, CLion would show the <b>Message Build</b> pane\r\n       briefly; then immediately remove it -possibly losing useful information-\r\n       and show the <b>Run Build All</b> pane.\r\n    This version of CLion, seems to retain the <b>Message Build</b> pane, which\r\n      we can access by pressing the <b>0: Messages</b> button on the second to\r\n      last line of the IDE.\r\n    </ol>\r\n    <p>\r\n    Experiment with this driver by entering commands (and their arguments, when\r\n      prompted) to better understand the <b>set</b> data type.\r\n    You can terminate this driver either by\r\n    <ul>\r\n      <li>entering the <b>q</b> command, \r\n      <li>clicking the <img src=\"images/clion/stopicon.jpg\"> (Stop icon) on the\r\n           left of the <b>Run Build All</b> pane\r\n    </ul>\r\n    <p>\r\n    After terminating the driver, click the X\r\n      <!---\r\n      <img src=\"images/clion/closeicon.jpg\"> (Close icon; a bit hard to see\r\n      here)---> to the right of the\r\n      <b>Run Build All</b> pane to close/remove it.\r\n    <p>\r\n    Note 1: if you try to close/remove the <b>Run Build All</b> pane before\r\n      terminating the code runing in it, CLion will display the pop-up window\r\n    <p>\r\n      <img src=\"images/clion/CLion terminate build all.jpg\">\r\n    <p>\r\n    Note 2: so long as you don't terminate the <b>Run Build All</b> pane,\r\n      you can redisplay it by access by pressing the <b>4: Run</b> button on\r\n      the second to last line of the IDE.\r\n    <p>\r\n    I suggest that you try terminating the driver with a <b>q</b> command; then,\r\n      rerun the program and terminate it with the Stop icon.\r\n    Also experiment with building/runing the code (possibly adding a syntax\r\n      error by removing any of the semicolons in <b>driver.cpp</b>.\r\n    Finally, experiment with clicking the <b>0: Messages</b>, <b>CMake</b> and\r\n      <b>4: Run</b> buttons (you can try.\r\n    Doing these tasks with this program now will make it easier for you to\r\n      understand how to develop/debug your own code.   \r\n<p>\r\n\r\n<li>We briefly examined the <b>cmake-build-debug</b> folder which appears\r\n      in this project when <b>test_all_date_types</b> is disclosed.\r\n    <p>\r\n    <img src=\"images/clion/CLion TADT disclosed.jpg\">\r\n    <p>\r\n    Now we will examine it in more detail, but via an Explorer window, not via\r\n      CLion.\r\n    Click on the <b>ClionProjects</b> shortcut to open an Explorer window,\r\n      then double-click its <b>test_all_data_types</b> folder, and finally\r\n      double-click its <b>cmake-build-debug</b> folder.\r\n    <p>\r\n    The following Explorer window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion Explorer cmake-build-debug.jpg\">\r\n    <p>\r\n    Whenever you create a project, a <b>cmake-build-debug</b> folder will\r\n      appear in its project folder.\r\n    We have built two projects in this handout: <b>test_all_data_types</b>\r\n      and <b>trivialtest</b>; each has its own <b>cmake-build-debug</b> folder.\r\n    <p>\r\n\r\n<li>Double-click the file <b>test_all_data_types.exe</b> in this folder to run\r\n      this program in Windows, outside of CLion.\r\n    The following MS-DOS window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion MSDOSRun.jpg\">\r\n    <p>\r\n    <blockquote>\r\n    If an error pop-window like\r\n    <p>\r\n    <img src=\"images/clion/CLion patherror.jpg\">\r\n    <p>\r\n      appears (many different messages may appear; sometimes a sequence of\r\n      error message), you likely forgot to add <b>C:\\cygwin64\\bin</b> to the\r\n      Sytsten variable <b>PATH</b> (illustrated below): see the\r\n      <a href=\"cygwin.html/#PATH\" target=\"_new\">Cygwin</a> handout, step 15,\r\n      for detailed instructions on how to fix this error.\r\n    <p>\r\n    <img src=\"images/clion/CLion patherrorfix.jpg\">\r\n    <p>\r\n    </blockquote>\r\n    Experiment with this driver by entering commands (and their arguments, when\r\n      prompted); it runs as it did in the CLion <b>Run</b> pane.\r\n    Note that when you enter the <b>q</b> command the program terminates and the\r\n      MS-DOS window <b>immediately</b> disappears (unlike the CLion <b>Run</b>\r\n      pane).\r\n    <p>\r\n    So, when a program we run under CLion terminates, its <b>Run</b> pane\r\n      retains the\r\n      input/output information (by <b>cin/cout</b>) after the run terminates,\r\n      but when we\r\n      run it directly in an MS-DOS window, the window disappears after the run\r\n      terminates.\r\n    For example, if you find the <b>trivialtest.exe</b> file and run it by\r\n      double-clicking this file, its MS-DOS window will run and then immediately\r\n      disappear.\r\n    <p>\r\n    For a program that <b>produces lots of output</b> and\r\n      <b>terminates</b>, we can always put an <b>input statement</b> at the\r\n      end, so it doesn't terminate until the user enters something.\r\n    It is sometimes faster to run the program in an MS-DOS window, rather than\r\n      in CLion.\r\n<p>\r\n\r\n<li>Find the <b>input files</b> folder in the <b>test_all_data_types</b> folder\r\n      and copy all of its <b>.txt</b> data files into the\r\n      <b>cmake-build-debug</b> folder that contains the\r\n      <b>test_all_data_types.exe</b> file.\r\n    Copy these files using an Explorer window or the Project pane in the CLion\r\n      window (after disclosing the <b>cmake-build-debug</b> and \r\n      <b>input files</b> folders).\r\n    <p>\r\n    The following Explorer window shows what the <b>cmake-build-debug</b> \r\n      folder should contain.\r\n    <p>\r\n    <img src=\"images/clion/CLion Explorer cmake-build-debug 2.jpg\">\r\n    <p>\r\n    Then, run the program (either in the CLion <b>Run</b> pane or a MS-DOS\r\n      window; try\r\n      doing it from both places) and\r\n      issue the <b>lf</b> command (load from file); when prompted for the file\r\n      name, just press the <b>Enter</b> key to choose the default\r\n      (<b>loadset.txt</b>).\r\n    <p>\r\n    When running using the CLion <b>Run</b> pane, the following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion lf command.jpg\">\r\n    <p>\r\n    <b>IMPORTANT</b>: If a program reads data files, the root folder for the\r\n         specifying the files is the folder in which the <b>.exe</b> file\r\n         appears.\r\n       It is simplest to copy all the data files into this folder.\r\n       An alternative would be to leave the files in the <b>input files</b>\r\n         folder, copy the entire folder, and then refer to these file names like\r\n         <b>input files\\loadset.txt</b>.\r\n<p>\r\n\r\n<li>A typical project folder may have more than one <b>.cpp</b> file with a\r\n     <b>main</b> function (as <b>test_all_data_types</b> has).\r\n    Only one of these <b>.cpp</b> files can have its <b>main</b> function\r\n      uncommented, otherwise its <b>Build/Run</b> will fail.\r\n    When working on project, it is typical to \r\n    <p>\r\n    <ol type=\"a\">\r\n      <li>Comment-out code in one <b>.cpp</b> file.\r\n      <li>Uncomment code in another <b>.cpp</b> file.\r\n      <li>Rebuild/Rerun the newly uncommented <b>.cpp</b> file.\r\n    </ol>\r\n    <p>\r\n    In the <b>test_all_data_types</b> project folder, the <b>driver.cpp</b>\r\n      file has many <b>main</b> functions: we uncommented one (in step 6 above)\r\n      to allow us to run the Set driver.\r\n    If more than one <b>main</b> function is uncommented, attempting to build\r\n      the code will result in the compiler specifying a\r\n      <b>redefinition of 'main'</b> error, illustrated below when two\r\n      <b>main</b> functions are uncommented.\r\n    <p>\r\n    <img src=\"images/clion/CLion redefinition of main.jpg\">\r\n    <p>\r\n    The <b>test_all_data_types</b> project folder also contains many <b>.cpp</b>\r\n      files (their names all start with <b>test</b>) that each contain one main\r\n      function (each is a <b>Googletest</b> for one data type).\r\n    If more than one file contains a main function, attempting to build the\r\n      code will result in the linker specifying a\r\n      <b>multiple definition of 'main'</b> error.\r\n    <p>\r\n    To switch this project from running the Set driver to the Set Googletest\r\n    <ol type=\"a\">\r\n      <li>Comment-out lines 30-35 in the <b>driver.cpp</b> file: select them\r\n            and type the <b>ctrl-/</b> command to toggle the commenting\r\n            on the selected lines (comment them).\r\n          All lines in <b>driver.cpp</b> should be commented.\r\n      <li>Scroll down the Project Pane (on the left) and double-click the\r\n            <b>test_set.cpp</b> file so that it appears as an editor tab.\r\n      <li>Type the <b>ctrl-a</b> command to select <b>all</b> the lines in this\r\n            file.\r\n      <li>Type the <b>ctrl-/</b> command to toggle the commenting on the\r\n            selected lines (uncomment them).\r\n    </ol>\r\n    <p>\r\n    Click the <img src=\"images/clion/runicon.jpg\"> (Run icon).\r\n    When prompted enter the three lines of information shown and press\r\n      <b>Enter</b> after each entry.\r\n    <p>\r\n    The following <b>CLion</b>\r\n      project window should appear on your screen.\r\n    <p>\r\n    <img src=\"images/clion/CLion test_set run.jpg\">\r\n    <p>\r\n    ICS-46 will provide Googletests like these for many programs, much as\r\n      ICS-33 proivded batch self-check files: so you will automatically\r\n      receive feedback on the correctness of your code.\r\n</ol>\r\n<p>\r\nWe are now at the end of this handout.\r\nYou will not need to repeat the first two sections during the course, but you\r\n  will frequently download project folders and use them as demonstrated in\r\n  Section 3.\r\nPlease feel free to experiment with the CLion Integrated Development\r\n  Environment and ask questions about it on Piazza.\r\nAny time that you spend experimenting with it now (before doing assignments),\r\n  likely pay for itself many times over: no one wants to experiment with CLion\r\n   when under deadline pressure for an assignment.\r\n</body>\r\n</html>\r\n\r\n", "encoding": "ascii"}