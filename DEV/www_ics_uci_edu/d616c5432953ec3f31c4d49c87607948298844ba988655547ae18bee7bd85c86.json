{"url": "https://www.ics.uci.edu/~taylor/classes/117/requirements.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r<HTML>\r<HEAD>\r   <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\r   <META NAME=\"GENERATOR\" CONTENT=\"Mozilla/4.07 (Macintosh; I; PPC) [Netscape]\">\r   <TITLE>Deliverable 2: Requirements</TITLE>\r</HEAD>\r<BODY BGCOLOR=\"#FFFFF0\">\r\r<CENTER>\r<H2> Informatics 117:\rProject in Software System Design</H2>\r</CENTER>\r\r<CENTER>\r<H3>\rWinter Quarter 2009</H3>\r</CENTER>\r\r<CENTER>\r<H1>\rRequirements</H1></CENTER>\r\r<H3>\rDue Date: January 27th (Thursday)</H3>\r\r<P><B>This document must be signed by your customer.&nbsp; </B>This will\rhelp ensure that he or she has agreed that you have met all his or her needs.&nbsp;\rThis is, after all, a contract with your customer.\r<HR>\r<h3> Assignment Overview </h3>\r\r<P>Develop a software\rrequirements document that satisfies the needs of your customer.  This\rdocument  consists of three primary components: (1) a requirements\rspecification, (2) a system test plan, and (3) an update to your project plan.\r   Your design may also need to include a glossary defining\r  key terms used that are specific to your application. Other\r  accompanying documentation may be included as well.\r<P>The system test plan must cover all basic software capabilities\rto be provided by the system by applying functional test heuristics (black\rbox) to each capability described in the requirements specification and\rdeveloping a test case for each interaction between capabilities.\r<P>You have substantial flexibility in\rchoosing the specific form for the various sections of your deliverables.  &quot;Model\rdocuments\", drawn from previous classes such as ICS 52 or from numerous Web sources,\rmay be  drawn upon, to help you determine how to structure this statement.\r<P>A list of the standard items that must be turned in with <em> each </em>\r assignment and posted on the team's web site are in the course syllabus.\rRequired sections of this document are described below.\r<HR>\r<H3>\rDeliverable Objectives/Requirements Qualities</H3>\rKeep in mind that key objectives of a requirements document are to:\r<UL>\r<LI> Document the customer's needs</LI>\r<LI> Identify functional capabilities to be provided</LI>\r<LI> Identify non-functional and environmental constraints that must be \rsatisfied</LI>\r<LI> Provide a definitive basis for testing and verification</LI>\r<LI> Identify lifecycle considerations such as incremental sub-system \rdevelopment</LI>\r<LI> Provide a reference tool readable by and <strong>useful</strong> to customer, developer,\r  and maintainer</LI>\r<LI> Serve as a contract between customer and developer</LI>\r</UL>\r\rIn addition, keep in mind that a requirements document should possess the\rfollowing qualities:\r<UL>\r<LI> Complete: everything that is essential is described</LI>\r<LI> Understandable:  the \"customer\" can read it and be convinced that all his\robjectives and needs are adequately and accurately described</LI>\r<LI> Utility: the information in the document can be used effectively  as the\r  design progresses</LI>\r<LI> Unambiguous: every reader will come away with the same understanding</LI>\r<LI> Consistent: no contradictions</LI>\r<LI> Feasible: the requirements can be satisfied within resource constraints</LI>\r<LI> Concise and appropriate: no extraneous details and not more than required</LI>\r<LI> Verifiable and testable: you can tell when you've met the requirements</LI>\r</UL>\r\r<HR>\r<H3> Required Document Contents</H3>\r\r<H4> Introduction (Required)</H4>\rProvide an introduction that discusses the scope and purpose of this document\ras well as your specific approaches related to the requirements of the\rsystem. This introduction should also discuss the organization of\rthis document and guide the reader.\r\r(In other words, this section not about the substance of your project, but rather\rthe choices you made in describing the requirements.) Probably a very short section.\r<H4> Project Summary (Required, but short!)</H4>\r This section need <em>not</em> be different from that included in your\rprospectus if your understanding hasn't changed.\r<H4> Requirements Specification (Required)</H4>\rUse diagrams to help give appropriate overviews and understanding.\rNote that pictures may well be an <I>essential </I> element of the\rcomplete description of any graphical interface.\rSome <strong><em>suggested</em></strong> contents follow.\r\r<UL>\r<LI> <strong>Overview of System Requirements</strong>: Provides a brief discussion of basic needs\r  and proposed usage.</LI>\r<LI> <strong>Environment Characteristics</strong>: Describes hardware environment,\r  overview of the software package to be developed (e.g. will it be a desktop\r  app distributed via DVD? a web site? a downloadable app for an iPhone? etc.),\r  and users of the system.</LI>\r<LI> <strong>Fixed Interfaces</strong>: Documents any interfaces to the environment\r  -- hardware or software -- that are fixed and hence not part of your design\r  of the system (e.g. an external database).</LI>\r<LI> <strong>Software Capabilities</strong>: Specifies functionality in groups of related capabilities.\rA diagram is helpful to show the relationship between capability groups.\r  <BR>\r  For each capability, at least the following should be\rspecified:  Description (functionality of the capability group), Input, Output, \rPersistent Data (that lasts from one invocation of the system to the\rnext). Considerations specific to the application domain and other relevant\rfields may be provided too.</LI>\r<LI> Sample I/O or <strong>Scenario</strong>: Provides a sample input/output\r  stream describing user interaction with the system, or similar usage scenario.\r  NOTE: if useful, the streams can be grouped with the capability group\rto which they apply.</LI>\r<LI><strong>Non-functional properties</strong>: including safety and security\rconstraints, timing and precision, ....</LI>\r<LI> <strong>Goals</strong>: Documents any guidance for evaluating alternatives\r  as the design progresses.</LI>\r</UL>\r\r<h4> Lifecycle Considerations (Required)</h4>\rPrioritized capability subsets  for the purposes of\rguiding incremental development.\r\r(Don't repeat content; use references to items in the preceding section).\r<h4> Acceptance Requirements (Required)</h4>\r\rDescribes minimal requirements for system acceptance by the client, such\ras the minimum capabilities that must be provided in the delivered system.\r\rThis should logically tie in closely with the preceding section (Lifecycle considerations).\r(Don't repeat content.)\r<h4> System Test Plan (Required)</h4>\r<P>A test plan capable of demonstrating minimal functionality\rof all system elements:\rtest cases or strategies should be specified for each software capability specified.\r  If desired, the test cases can be grouped with the capability group to which\r  they apply, otherwise a cross reference listing of some sort should be provided.\r<UL>\r<LI> Each test case could be described as follows:</LI>\r   <UL>\r   <LI> Test Case ID</LI>\r   <LI> Purpose of test case</LI>\r   <LI> Item(s) being tested</LI>\r   <LI> Input specification</LI>\r   <LI> Output specification (Expected Results or Test Oracle Mechanism)</LI>\r      <LI> Test environmental needs or special test procedures</LI>\r   </UL>\r</UL>\r\r<h4> Glossary (Optional)</h4>\rDefines all non-obvious terms used in the specifications.\rMay include a detailed data dictionary.\r\r<h4> Project Plan (Required)</h4>\r\rExpand your\rproject plan to represent how you have accomplished the work so far. Reassess\rthe project risks. Expand your task network or work breakdown structure to include\rthe effort expended to complete this task. Based on the work you have done, revise\ryour estimates on how much your team can accomplish and deliver. Provide a rationale\rfor any significant changes to the original plan.\r<h4>Auxillary Documentation (Optional)</h4>\rThis section is reserved for any documentation you may have developed during\rthis phase of the project. Specifically, if during the course of developing\rthe your understanding of the various technologies involved in the project,\ryou discovered items that were not documented, but which were important,\rthen you should include that here. Additionally you should list here the major\rbackground sources of information that you used during this phase or any that\ryou plan to use during the remainder of the project. This would include references\rto similar systems and/or procedures.\r\r<hr>\r<h3>Requirements Presentations/Reviews.</h3>\rJanuary 27 or 29 (at your discretion).\r<P>Each team should prepare a 15 minute Powerpoint presentation, after which\r  we will allow for questions. Your customer should be present.&nbsp;\r\r<p>\rPrepare your presentation appropriately. Your presentation should include\rthe following:\r<UL>\r<LI> Overview of your system;</LI>\r<LI>Highlights of your requirements specification</LI>\r<LI> System test plan </LI>\r<LI>Current state of your project plan; highlight items that\r  have changed since the initial project plan;</LI>\r</UL>\r\r<p>  Be <em> sure </em> to focus your presentation on the key issues.  Don't\rspend time with the obvious things.  If there's something in your presentation\rthat you find boring, so will your audience.  Don't gloss over problems. Your\rcustomer wants you to succeed, your instructors want you to succeed.   They can't\rhelp you unless you tell them where you think the problems are, or are likely to\rbe.\r\r<p>\rYou should also ask your customer what they would like to see presented.\r\r\r</BODY>\r</HTML>\r", "encoding": "ascii"}