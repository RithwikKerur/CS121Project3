{"url": "https://www.ics.uci.edu/~ejw/authoring/collection/dt/Minutes000216.txt", "content": "Bindings Protocol Teleconference\nFebruary 16, 2000\n\nPresent: Judy Slein, Jason Crawford, Jim Whitehead, Chuck Fay, Geoff Clemm\nMinutes recorded by Jim Whitehead.\n\n*** Note that decisions made during the teleconference are always\nsubject to review on the mailing list.  The mailing list is the final\narbiter of consensus on any issue.  Note also, that the revised\nBindings Protocol specification produced as a result of this\nconference call will also be subject to review by the mailing\nlist. ***\n\n\nIssue #20: [Bindings Property] The situation described in this issue\nis somewhat pathological.  To accommodate this, properties would need\nto be defined on URLs, not on resources.  However, this would violate\nRFC 2518.  If such a situation as described in this issue were to\narise, conceptually the resource would hold the property, and the\nnon-DAV server would be exercising its right to not respond to a given\nHTTP method, in this case, PROPFIND.  No changes needed to the spec.\n\nIssues #21: [Integrity] Two separate issues here, one of integrity,\nanother for lazy vs. strong evaluation of operations. Provide pushback\nto Roy asking to identify areas of the spec. that require non-lazy\nevaluation.  Review the spec. for anything that would require this.\n\nAlso, there is the issue of Apache-style aliases -- are they the same\nas bindings?  Aliases allow URL mappings to be created, but these\nmappings do not appear in collections.  Bindings also create URL\nmappings, and do show up in collections.  In their most general form,\naliases can be created using regular expressions, making it difficult,\nor impossible to list all possible mappings within a collection -- it\nwould only make sense to list one distinguished member, or the regular\nexpression itself.  It appears that aliases and bindings are separate\nabstractions.  But, bindings should not prevent aliases from being\napplied.  In particular, we need to review this spec., and RFC 2518 to\nensure that aliases are not prevented from being defined, and interact\nOK with DAV consistent namespaces.\n\nIssue #22: [Delete on a non-empty collection]: Agreed to add a new\nstatus code to be used to report the error condition that a collection\ncannot be deleted until it is emptied.\n\nIssue #23 (already closed)\n\nIssue #24 [Don't mention redirect spec in abstract]: Agreed to this\nchange, will review suggested language.\n\nIssue #25 [Move notational conventions section after introduction]:\nAgreed to do this.\n\nIssue #26 [Mentioning and cross-referencing redirect references spec]:\nAgreed to remove explicit cross-references to other documents for\nredirect references.  Will also ensure bindings spec. does not\nexplicitly define what a redirect reference is, to ensure redirect\nreference spec. is the sole place for this.  Will mention that another\nspec will define redirect references, to let people know to look there\nfor the details, but this spec. will not be explicitly referenced by\nname.\n\nIssue #27 [Resources are not storage objects]: Agreed.  Will change\nthird paragraph of introduction so that it does not mention storage,\nand motivates resource sharing simply from a namespace\nperspective. Example of having two people sharing a resource on one of\nthe Web storage sites, and wanting the same resource show up in both\npeople's home workspaces would motivate this.\n\nIssue #28 [Bindings to any HTTP resource, not just DAV resources]:\nDisagree.  We actually do mean bindings work just on WebDAV resources,\ndue to the problems of having a non-WebDAV resource as a member of a\nWebDAV collection.  In particular, Depth operations would be\nproblematic in this case, and this would violate the namespace\nconsistency requirement of RFC 2518. The heart of this disagreement\nseems to be that bindings really aren't the same as aliases. Need to\nbe careful when we state that PUT creates an implicit binding, since\nthis is really, when a PUT creates a binding in a *collection*.\n\nIssue #29 -- are currently discussing this on the list, is related to\ndifferent definitions of what a resource is, and what a URL mapping\nis.\n\nIssue #30 -- This is really the same issue as Yaron's Mr. Integrity.\n\nIssue #31 [BIND fail if there is an existing resource]: Agreed to keep\nOverwrite header in the spec., but change the default to be non-delete\nbehavior.\n\nIssue #32 [Section 5.2 language] The authors strongly feel the example\nshould stay in, that people might not understand first paragraph\nwithout the aid of the example in the 2nd and 3rd paragraphs.\n\nIssue #33 [Impression of redefining response codes] We will add\nlanguage to make it obvious that we are not redefining the status\ncodes, and are merely listing the exact conditions that lead to this\nstatus code being issued.  Will double-check to ensure that status\ncodes are, in fact, not being redefined.\n\nIssue #34 [DELETE and WebDAV] Agreed, will also move this discussion\nto the appendix where Internal Member Resources are discussed, and we\nwill call this appendix something like \"Reconciliation with the WebDAV\nSpec.\"\n\nIssue #35 [DAV:resourceid property] Discussed having a method to\ncompare two URLs and say whether they map to the same resource.\nDecided against this, since there are two needs here, (1) comparing\ntwo URLs at the same time, (2) comparing the same URL at two points in\ntime to verify that it is still the same resource.  The compare method\nonly handles case #1.  Will take this to the list to discuss further\nwith Roy.\n\n*** End of teleconference ***", "encoding": "ascii"}