{"url": "https://www.ics.uci.edu/~eppstein/pubs/misc.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nMiscellaneous\n</h2>\n<ul>\n<li><b>A heuristic approach to program inversion</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-IJCAI-85.pdf\"><i>9th Int. Joint Conf. Artificial\nIntelligence,</i> Los Angeles, 1985, pp. 219&ndash;221</a>.\n<p>\nProgram transformation.\nGiven a (lisp) program for an invertible function, how do we automatically\nfind a program for the inverse function?\nConsiders more general simultaneous inverses of multiple functions.\nThe heuristic part involves type inference for finding conditionals\nto use in certain if statements.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#A heuristic approach to program inversion\">BibTeX</a> &ndash;\n<a href=\"Epp-IJCAI-85.lsp\">MacLISP source code</a> &ndash;\n<a href=\"//www.ispt.waseda.ac.jp/keinv/\">Kawabe's Common Lisp\nport</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/A-heuristic-approach-to-program-inversion.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein85heuristic.html\">CiteSeer</a>)\n<p>\n<li><b>Reset sequences for monotonic automata</b>.<br>\nD. Eppstein.<br>\n<i>15th Int. Coll. Automata, Languages and Programming,</i>\nTampere, Finland, 1988.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 317, 1988, pp. 230&ndash;238.<br>\n<a href=\"Epp-SJC-90.pdf\"><i>SIAM J. Computing</i> 19 (3): 500&ndash;510, 1990</a>.\n<p>\nAutomata theory.\nA reset sequence for a DFA is an input such that, no matter which\nstate the DFA starts in, it ends up after the input in a known state.\nThese have been used by Natarajan and Goldberg for certain robot motion\nplanning problems (in fact the conference version of this paper used\nthe title \"Reset sequences for finite automata\nwith application to design of parts orienters\"), and also in coding\ntheory where they arise in the design of\nself-synchronizing codes.  This paper considers DFAs in which the\ntransition functions respect a given cyclic ordering of the states, and\nshows that their shortest reset sequences can be found quickly.\nIt also considers parallel algorithms for the problem.\nThere remains open a gap between <i>n<sup>2</sup></i> and <i>n<sup>3</sup></i>\nin the maximum length of reset sequences for general automata.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Reset sequences for monotonic automata\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Reset-sequences-for-monotonic-automata.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein90reset.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=681434\">ACM DL (ICALP)</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=80025\">ACM DL (SJC)</a>)\n<p>\n<li><b>On reset sequence length</b>.<br>\nD. Eppstein.<br>\nTech. Rep. CUCS-440-89, Computer Science Dept., Columbia University, 1989.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#On reset sequence length\">BibTeX</a>)\n<p>\n<li><b>Simultaneous strong separations of\nprobabilistic and unambiguous complexity classes</b>.<br>\nD. Eppstein,\n<a href=\"//www.cs.rochester.edu/u/lane/\">\nL. Hemachandra</a>, J. Tisdall, and B. Yener.<br>\n<i>Int. Conf. Computing and Information,</i> Toronto,\nNorth-Holland, 1989, pp. 65&ndash;70.<br>\nTech. Rep. 335, Dept. Comp. Sci., U. Rochester, 1990.<br>\n<a href=\"EppHemTis-MST-92.pdf\"><i>Mathematical Systems Theory</i> 25 (1): 23&ndash;36, 1992</a>.\n<p>\nStructural complexity theory.\nConstructs oracles in which BPP (a probabilistic complexity class)\nand UP (the class of problems with a unique \"witness\")\ncontain languages that in a very strong sense are not contained in the\nother class.\nThe conference version used the title\n\"Probabilistic and unambiguous computation are incomparable\".\n<p>(BibTeX: <a href=\"/~eppstein/bibs/eppstein.html#Probabilistic and unambiguous computation are incomparable\">ICCI</a>,\n<a href=\"/~eppstein/bibs/eppstein.html#Simultaneous strong separations of probabilistic and unambiguous complexity classes\">MST</a> &ndash;\nCitations:\n<a href=\"//fano.ics.uci.edu/cites/Document/Probabilistic-and-unambiguous-computation-are-incomparable.html\">ICCI</a>,\n<a href=\"//fano.ics.uci.edu/cites/Document/Simultaneous-strong-separations-of-probabilistic-and-unambiguous-complexity-classes.html\">MST</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92simultaneous.html\">CiteSeer</a>)\n<p>\n<li><b>Persistence, offline algorithms, and space compaction</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-91-54.pdf\">Tech. Rep. 91-54</a>, ICS, UCI, 1991.\n<p>\nConsiders persistence for a naive form of dynamic algorithm in\nwhich each update rebuilds a static solution.\nThe space bounds for this can often be reduced \nby maintaining an offline\nsolution over a sequence of updates constructed\nfrom an Euler tour of the persistent update history tree.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Persistence, offline algorithms, and space compaction\">BibTeX</a>)\n<p>\n<li><b>Minimum range balanced cuts via dynamic subset sums</b>.<br>\nD. Eppstein.<br>\n<a href=\"tr.html\">Tech. Rep. 95-10</a>, ICS, UCI, 1995.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0841\">\n<i>J. Algorithms</i> 23: 375&ndash;385, 1997</a>.\n<p>\nDescribes data structures for maintaining the solution of a dynamically\nchanging subset sum problem, and uses them to find a cut in a graph\nminimizing the difference between the heaviest and lightest cut edge.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Minimum range balanced cuts via dynamic subset sums\">BibTeX</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=248763\">ACM DL</a>)\n<p>\n<p>\n<li><b>Choosing subsets with maximum weighted average</b>.<br>\nD. Eppstein and \n<a href=\"//www.ics.uci.edu/~dan/\">\nD. S. Hirschberg</a>.<br>\n<a href=\"EppHir-TR-95-12.pdf\">Tech. Rep. 95-12, ICS, UCI, 1995</a>.<br>\n<a href=\"ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/eppstein.ps.gz\">\n<i>5th MSI Worksh. on Computational Geometry</i>, 1995, pp. 7&ndash;8</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0849\"><i>J. Algorithms</i> 24: 177&ndash;193, 1997</a>.\n<p>\nUses geometric optimization techniques to find, among <i>n</i> weighted values,\nthe <i>k</i> to drop so as to maximize the weighted average of the remaining values.\nThe feasibility test for the corresponding decision problem involves\n<i>k</i>-sets in a dual line arrangement.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Choosing subsets with maximum weighted average\">BibTeX</a> &ndash;\n<a href=\"EppHir-Algs-97.pdf\">Full paper</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95choosing.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=258407\">ACM DL</a>)\n<p>\n<li><b>Guest editor's forward to special issue of papers from the 34th Annual Symposium on Foundations of Computer Science</b>.<br>\nD. Eppstein.<br>\n<i>J. Comp. Sys. Sci.</i> 54:263, 1997.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Guest editor's forward to special issue of papers from the 34th Annual Symp. on Foundations of Computer Science\">BibTeX</a>)\n<p>\n<li><b>Reference caching using unit distance redundant codes for\nactivity reduction on address buses</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~givargis\">T. Givargis</a>.<br>\n<a href=\"//rtas2002.cs.tamu.edu/ESCODES/\">Worksh. Embedded System\nCodesign (ESCODES'02)</a>, San Jose, 2002, pp. 43&ndash;48.<br>\n<a href=\"//givargis.ics.uci.edu/pubs/J12.pdf\"><i>J. Microprocessors &amp; Microsystems</i> 29 (4): 145&ndash;153, 2005.</a>\n<p>\nWe study the problem of minimizing transitions in address signals\non a bus.  The UDRC part of the title refers to an algorithm for coding\nsignals with at most one transition per signal (using an increased number of\nwires); we combine this with a scheme for caching previously coded addresses\nand use trace data to compare our technique with previous approaches.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Reference caching using unit distance redundant codes for activity reduction on address buses\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Reference-caching-using-unit-distance-redundant-codes-for-activity-reduction-on-address-buses.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/givargis02reference.html\">CiteSeer</a>)\n<p>\n<li><b>Improved combinatorial group testing for\nreal-world problem sizes.</b><br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\nand <a href=\"//www.ics.uci.edu/~dan/\">D. S. Hirschberg</a>.<br>\n<i>9th Worksh. Algorithms and Data Structures,</i> Waterloo, 2005.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 3608, 2005, pp. 86&ndash;98.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0505048\">arXiv:cs.DS/0505048</a>.<br>\n<i>SIAM J. Computing</i> 36 (5): 1360&ndash;1375, 2007.\n<p>\nWe study practically efficient methods for finding few\nflawed items among large sets of items, by testing whether there\nexist flaws in each of a small number of batches of items.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Improved combinatorial group testing for real-world problem sizes\">BibTeX</a> &ndash;\n<a href=\"EppGooHir-WADS-05.pdf\">Mike's WADS talk slides</a>)\n<p>\n<li><b>On the approximability of geometric and geographic generalization\nand the min-max bin covering problem</b>.<br>\nW. Du,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.ics.uci.edu/~lueker/\">G. Lueker</a>.<br>\n<a href=\"//arxiv.org/abs/0904.3756\">arXiv:0904.3756</a>.<br>\nAlgorithms and Data Structures Symposium (WADS), Banff, Canada.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 5664, 2009, pp. 242&ndash;253.\n<p>\nWe investigate several simplified models for k-anonymization in\ndatabases, show them to be hard to solve exactly, and provide\napproximation algorithms for them.\n<p>\nThe min-max bin covering problem is\nclosely related to one of our models. An input to this problem consists\nof a collection of items with sizes and a threshold size. The items must\nbe grouped into bins such that the total size within each bin is at\nleast the threshold, while keeping the maximum bin size as small as possible.\n<p>\n(<a href=\"WADS09-talks/anonymity.ppt\">Slides</a>)\n<p>\n<li><b>Questions answered. In theory.</b><br>\nClarke, Eppstein, Ghasemloo, Reyzin, Salamon, Shor, Sterling, and Venkatasubramanian.<br>\n<a href=\"//doi.org/10.1145/1907450.1907532\">ACM SIGACT News 41 (4), 2010</a>.\n<p>\nAn overview of\nthe <a href=\"//cstheory.stackexchange.com/\">Theoretical Computer\nScience</a> question and answer exchange web site.\n<p>\n<li><b>Privacy-enhanced methods for comparing compressed DNA sequences</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.igb.uci.edu/~pfbaldi/\">P. Baldi</a>.<br>\n<a href=\"//arxiv.org/abs/1107.3593\">arXiv:1107.3593</a>.\n<p>\n<li><b>Combinatorial pair testing: distinguishing workers from slackers</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\nand <a href=\"//www.ics.uci.edu/~dan/\">D. S. Hirschberg</a>.<br>\n<a href=\"//arxiv.org/abs/1305.0110\">arXiv:1305.0110</a>.<br>\n13th Int. Symp. Algorithms and Data Structures (WADS 2013), London, Ontario.<br>\n<a href=\"//doi.org/10.1007/978-3-642-40104-6_28\">Springer, <i>Lecture Notes in Comp. Sci. 8037</i>, 2013, pp. 316&ndash;327</a>.<br>\n<p>\nWe study the problem of distinguishing workers (people who complete\ntheir assigned tasks) from slackers (people who do not contribute\ntowards the completion of their tasks) by grouping people in pairs and\nassigning a task to each group.\n<p>\n<li><b>Wear minimization for cuckoo hashing: how not to throw a lot of\neggs into one basket</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.eecs.harvard.edu/~michaelm/\">M .Mitzenmacher</a>, and\n<a href=\"//www.ics.uci.edu/~ppszona/\">P. Pszona</a>.<br>\n<a href=\"//arxiv.org/abs/1404.0286\">arXiv:1404.0286</a>.<br>\n<i>Proc. 13th International Symposium on Experimental Algorithms (SEA\n2014)</i>, Copenhagen, Denmark, 2014.<br>\n<a href=\"//doi.org/10.1007/978-3-319-07959-2_14\">Springer, <i>Lecture Notes in Comp. Sci.</i> 8504, pp. 162&ndash;173, 2014</a>.\n<p>\nWe study cuckoo hashing data structures in a model of flash memory in\nwhich each memory cell has a limited number of times it can be changed,\nso the goal is to prevent hot spots that change many times.\n<p>\n<li><b>Linear-time algorithms for proportional apportionment</b>.<br>\nZ. Cheng and D. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1409.2603\">arXiv:1409.2603</a>.<br>\n<i>Proc. 25th Int. Symp. Algorithms and Computation (ISAAC 2014)</i>,\nJeonju, Korea, 2014.<br>\n<a href=\"//doi.org/10.1007/978-3-319-13075-0_46\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 8889, 2014, pp. 581&ndash;592.</a><br>\n<p>\nWe consider a broad class\nof <a href=\"https://en.wikipedia.org/wiki/Highest_averages_method\">highest\naverages methods</a> for proportional allocation (the problems of\nallocating seats to parties after a parliamentary election, or of\nallocating congressmen to states based on total population).\nWe show that these methods can be simulated by an algorithm whose\nrunning time is proportional only to the number of parties or states,\nindependent of the number of seats allocated or the number of voters.\n<p>\n(<a href=\"CheEpp-IMBS-16.pdf\">Slides</a>)\n<p>\n<li><b>From discrepancy to majority</b>.<br>\nD. Eppstein\nand <a href=\"//www.ics.uci.edu/~dan/\">D. S. Hirschberg</a>.<br>\n<a href=\"//arxiv.org/abs/1512.06488\">arXiv:1512.06488</a>.<br>\n<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN\n2016)</i>, Ensenada, Mexico.<br>\n<a href=\"//doi.org/10.1007/978-3-662-49529-2_29\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 390&ndash;402</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0303-7\"><i>Algorithmica</i> 80\n(4): 1278&ndash;1297, 2018</a>.\n<p>\nWe provide upper and lower bounds on the query complexity of a problem\nin which the input is a collection\nof two-colored items, and the problem is to either find an item of the\nmajority color or to determine that there is no majority,\nby performing queries that determine the discrepancy of fixed-size\nsubsets of the items.\n<p>\n(<a href=\"EppHir-LATIN-16-slides.pdf\">Slides</a>)\n<p>\n<li><b>Cuckoo filter: simplification and analysis</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1604.06067\">arXiv:1604.06067</a>.<br>\n<i>Proc. 15th Scandinavian Symposium and Workshops on Algorithm\nTheory (SWAT 2016)</i>, Reykjavik, Iceland.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.SWAT.2016.8\">Leibniz International\nProceedings in Informatics (LIPIcs) 53, pp. 8.1&ndash;8.12</a>.\n<p>\nA cuckoo filter is an approximate set data structure that can be used in\nplace of a Bloom filter, but with several practical advantages: it uses\nless space, has better locality of reference, and can handle element\ndeletions. We provide the first theoretical analysis of a simplified\nvariation of cuckoo filters, showing that these advantages can be\nguaranteed to hold theoretically and not just experimentally.\n<p>\n(<a href=\"Epp-SWAT-16-slides.pdf\">Slides</a>)\n<p>\n<li><b>Scheduling autonomous vehicle platoons through an unregulated\nintersection</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein, and\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>.<br>\n<i>Proc. 16th Worksh. Algorithmic Approaches for Transportation\nModelling, Optimization and Systems (ATMOS 2016)</i>, Aarhus, Denmark,\n2016.<br>\n<a href=\"//doi.org/10.4230/OASIcs.ATMOS.2016.5\">OpenAccess Series in Informatics (OASIcs) 54, Schloss\nDagstuhl (2016), pp. 5:1&ndash;5.16</a>.<br>\n<a href=\"//arxiv.org/abs/1609.04512\">arXiv:1609.04512</a>.<br>\n<p>\nWe consider a model of vehicle scheduling in which vehicles arrive at an\nintersection in indivisible platoons (or individual vehicles of variable\nlength) and the goal is to find a schedule for them to all cross the\nintersection without collisions, minimizing the maximimum delay incurred\nby any platoon. We show that for many types of intersections, an optimal\nschedule can be found in polynomial time by a combination of dynamic\nprogramming and parametric search.\n<p>\n<li><b>Using multi-level parallelism and 2-3 cuckoo filters for faster\nset intersection queries and sparse boolean matrix multiplication</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>.<br>\n<a href=\"//doi.org/10.1145/3087556.3087599\">Brief announcement, <i>Proc. 29th ACM Symposium on Parallelism in\nAlgorithms and Architectures (SPAA)</i>, Washington, DC, 2017, pp. 137&ndash;139.</a><br>\n<p>\nWe provide parallel versions of our bit-parallel algorithms from PODS\n2017 for sparse set intersection.\n<p>\n<li><b>Quadratic time algorithms appear to be optimal for sorting\nevolving data</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.ics.uci.edu/~tujohnso/\">T. Johnson</a>.<br>\n<a href=\"//doi.org/10.1137/1.9781611975055.8\"><i>Proc. Algorithm\nEngineering &amp; Experiments (ALENEX 2018)</i>, New Orleans, 2018,\npp. 87&ndash;96</a>.<br>\n<a href=\"//arxiv.org/abs/1805.05443\">arXiv:1805.05443</a>.\n<p>\nWe experiment with sorting algorithms in the evolving data model,\nin which, at the same time as the algorithm compares pairs of elements\nand possibly chooses a new ordering based on the results of the comparison,\nan adversary randomly chooses two adjacent elements in the sorted order\nand swaps them. As we show, bubble sort and its variants appear to\nmaintain an order that is within inversion distance of optimal.\n<p>\n<li><b>Optimally sorting evolving data</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nT. Johnson.<br>\n<a href=\"//arxiv.org/abs/1805.03350\">arXiv:1805.03350</a><br>\n<i>Proc. 45th International Colloquium on Automata, Languages, and\nProgramming (ICALP 2018)</i>, Prague.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.ICALP.2018.81\">Leibniz International Proceedings in Informatics (LIPIcs) 107, pp. 81:1&ndash;81:13</a>.<br>\n<p>\nSuppose that a collection of objects has a linear order that is evolving\nby swaps of randomly chosen consecutive elements. We would like to\nmaintain an approximation to this order using an algorithm that performs\none comparison per swap. We show that repeated insertion sort can\nmaintain linear inversion distance from the underlying order, the best\npossible.\n<p>\n<li><b>Reconfiguration of satisfying assignments and subset sums: Easy\nto find, hard to connect</b>.<br>\n<a href=\"//www.ulb.ac.be/di/scsi/jcardin/\">J. Cardinal</a>,\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\nD. Eppstein,\n<a href=\"//groups.csail.mit.edu/mac/users/bob/\">R. Hearn</a>, and\n<a href=\"//andrewwinslow.com/\">A. Winslow</a>.<br>\n<a href=\"//arxiv.org/abs/1805.04055\">arXiv:1805.04055</a><br>\n<i>Proc. 24th International Computing and Combinatorics Conference\n(COCOON 2018)</i>, Qingdao, China.<br>\n<a href=\"//doi.org/10.1007/978-3-319-94776-1_31\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 10976 (2018), pp. 365&ndash;377</a>.<br>\n<i>Theor. Comput. Sci.</i>, to appear.\n<p>\nFor several problems with polynomial-time solutions, we show that\nfinding a sequence of steps that converts one solution into another\n(maintaining a valid solution at each step) is hard.\nThese include planar monotone not-all-equal 3-sat, subset sum on integers of\npolynomial magnitude, and 0-1 integer programming with a constant number\nof linear inequality constraints.\n<p>\n(<a href=\"CarDemEpp-COCOON-18-slides.pdf\">Slides</a>)\n<p>\n<li><b>Which women mathematicians get written about on Wikipedia, and\nwhy</b>.<br>\nD. Eppstein.<br>\n<a href=\"//drive.google.com/open?id=1oVk94BCbEXB4Kur8dwNuGcKP7Q8sVYzG\"><i>AWM\nNewsletter</i> 48 (4): 12&ndash;14, July&ndash;August 2018</a>.\n<p>\nThis short opinion piece explains Wikipedia's guidelines for inclusion\nof articles on academics, and outlines steps to help improve Wikipedia's\ncoverage of women in mathematics.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}