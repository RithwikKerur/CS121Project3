{"url": "https://www.ics.uci.edu/~theory/269/140418.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, April 18, 2013</title>\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script type=\"text/javascript\"\n  src=\"http://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Spring 2014: Theory Seminar</a><br>\nICS Building, Room 243, 1pm\n\n<hr />\nApril 18, 2013:</h2>\n<h1>\nAn $O(\\log k)$-competitive algorithm for generalized caching\n</h1>\n<h2>\nJenny Lam\n</h2>\n\n<p>\nIn the generalized caching problem, we have a set of pages and a cache\nof size $k$. Each page $p$ has a size $w_p\\ge 1$ and fetching cost $c_p$\nfor loading the page into the cache. At any point in time, the sum of\nthe sizes of the pages stored in the cache cannot exceed $k$. The input\nconsists of a sequence of page requests. If a page is not present in the\ncache at the time it is requested, it has to be loaded into the cache\nincurring a cost of $c_p$. We give a randomized $O(\\log k)$-competitive\nonline algorithm for the generalized caching problem, improving the\nprevious bound of $O(\\log^2 k)$ by Bansal, Buchbinder, and Naor\n(STOC'08). This improved bound is asymptotically tight and of the same\norder as the known bounds for the classic problem with uniform weights\nand sizes. We follow the LP based techniques proposed by Bansal et\nal. and our main contribution are improved and slightly simplified\nmethods for rounding fractional solutions online.\n</p>\n\n(From <a href=\"http://siam.omnibooksonline.com/2012SODA/data/papers/236.pdf\">a\npaper at SODA 2012</a>\nby Anna Adamaszek, Artur Czumaj, Matthias Englert, and Harald Racke.)\n\n</body>\n</html>\n\n", "encoding": "ascii"}