{"url": "https://www.ics.uci.edu/~dechter/publications/r76A.html", "content": "  <html>\r\n    <head>\r\n      <title>\r\n        Dr. Rina Dechter @ UCI\r\n      </title>\r\n      <LINK REL=\"Stylesheet\" HREF=\"/~dechter/basic.css\">\t\t\r\n    </HEAD>\r\n  \r\n  <BODY bgcolor=\"#ffffff\" alink=\"00aaaa\" link=\"008080\" vlink=\"008080\">\r\n  \r\n  <!-- Begin Header -->\r\n    [an error occurred while processing this directive]\r\n  <!-- End Header -->\r\n  \r\n  \r\n  <!-- Begin Body -->\r\n  \r\n  <br><br><center>\r\n<table width=90%>\r\n<tr>\r\n<td class=title>Publications & Technical Reports</td>\r\n<tr>\r\n  <td colspan=2><img width=\"100%\" height=\"2\"  src=\"/~dechter/images/black-fill.gif\"></td>\r\n</tr>\r\n</tr>\r\n</table>\r\n</center> \r\n<center>\r\n<table width=\"80%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n<tr valign=top>\r\n<td><b>R76A</td>\r\n | \r\n<br></td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=2><div class=title>Bucket elimination: A unifying framework for reasoning</div>\r\n<TT>Rina Dechter (<A href=\"mailto:dechter@ics.uci.edu\">dechter@ics.uci.edu</A>)</TT>\r\n</td></tr>\r\n</table>\r\n\r\n<table width=\"80%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n<tr><td>\r\n<br><div class=abstract>\r\n<b>Abstract</b><BR>\r\n\r\nBucket elimination is an algorithmic framework that generalizes dynamic programming to accommodate\r\nmany problem-solving and reasoning tasks. Algorithms such as directional-resolution\r\nfor propositional satisfiability, adaptive-consistency for constraint satisfaction, Fourier and Gaussian\r\nelimination for solving linear equalities and inequalities, and dynamic programming for combinatorial\r\noptimization, can all be accommodated within the bucket elimination framework. Many probabilistic\r\ninference tasks can likewise be expressed as bucket-elimination algorithms. These include:\r\nbelief updating, finding the most probable explanation, and expected utility maximization. These algorithms\r\nshare the same performance guarantees; all are time and space exponential in the inducedwidth\r\nof the problem's interaction graph.\r\n<br>\r\nWhile elimination strategies have extensive demands on memory, a contrasting class of algorithms\r\ncalled \"conditioning search\" require only linear space. Algorithms in this class split a problem into\r\nsubproblems by instantiating a subset of variables, called a conditioning set, or a cutset. Typical\r\nexamples of conditioning search algorithms are: backtracking (in constraint satisfaction), and branch\r\nand bound (for combinatorial optimization).\r\n<br>\r\nThe paper presents the bucket-elimination framework as a unifying theme across probabilistic and\r\ndeterministic reasoning tasks and show how conditioning search can be augmented to systematically\r\ntrade space for time.\r\n\r\n</div><br>\r\n\r\n<A href=\"r76A.pdf\">\r\n<img align=left border=\"0\" src=\"/~dechter/images/down.gif\">\r\n<b>[pdf]</b></a>\r\n</td></tr></table></center><br>\r\n\r\n<!-- End Body-->\r\n\r\n<!--- Begin Footer -->\r\n     <div id=\"footer\"><centeR>\r\n<A HREF=\"http://www.ics.uci.edu\">School of Information and Computer Science</A>\r\n<A HREF=\"http://www.uci.edu\">University of California, Irvine, CA 92697-3435</a>\r\n<A HREF=\"http://www.ics.uci.edu/~dechter\">Dr. Rina Dechter</A>\n\r\n<A HREF=\"mailto:dechter_at_ics.uci.edu\">dechter at ics.uci.edu</A>\r\n\n</center></div>\r\n<!--- End Footer -->\r\n\r\n</body>\r\n<html>\r\n", "encoding": "ascii"}