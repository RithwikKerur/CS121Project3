{"url": "https://www.ics.uci.edu/~theory/269/160122.html", "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\">\n<html>\n<head>\n<title>Theory Seminar, January 22, 2016</title>\n<link rel=\"stylesheet\" href=\"../stylesheet.css\" type=\"text/css\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n\n<body>\n<p><a href=\"/~theory/\"><img src=\"/~theory/logo/CATOC2.jpg\" \nalt=\"ICS Theory Group\"></a></p>\n\n<h2><a href=\"/~theory/269/\">Winter 2016: Theory Seminar</a><br>\nICS, Room 243, 1:00pm</h2>\n\n<hr>\n\n<h2>January 22, 2016:</h2>\n<h1>\nMore Analysis of Double Hashing with Balanced Allocations\n</h1>\n<h2>\nMichael Mitzenmacher\n</h2>\n\n<p><i>Abstract:</i></p>\n\n<p>With double hashing, for a key $x$, one generates two hash values\n$f(x)$ and $g(x)$, and then uses combinations $(f(x) +i g(x)) \\bmod n$\nfor $i=0,1,2,\\ldots$ to generate multiple hash values in the range\n$[0,n-1]$ from the initial two.  For balanced allocations,\nkeys are hashed into a hash table where each\nbucket can hold multiple keys, and each key is placed in the least\nloaded of $d$ choices.  Here we extend a coupling argument used by\nLueker and\nMolodowitch to show that double hashing and ideal uniform hashing are\nasymptotically equivalent in the setting of open address hash tables\nto the balanced allocation setting.  We also discuss the potential for\nand bottlenecks\nlimiting the use this approach for other multiple choice hashing\nschemes.</p>\n\n<p><a href=\"//dx.doi.org/10.1137/1.9781611974324.1\">A preliminary\nversion of this paper</a> was presented at ANALCO 2016.</p>\n\n<p><i>About the speaker:</i></p>\n\n<p>\nMichael Mitzenmacher is a Professor of Computer Science in the School\nof Engineering and Applied Sciences at Harvard University.  He\nhas authored or co-authored over 150 conference and journal\npublications on a topics including algorithms for the\nInternet, efficient hash-based data structures, erasure and\nerror-correcting codes, power laws, and compression.  His work on\nlow-density parity-check codes shared the 2002 IEEE Information Theory\nSociety Best Paper Award and won the 2009 ACM SIGCOMM Test of Time\nAward.  His textbook on randomized algorithms and probabilistic\ntechniques in computer science was published in 2005 by Cambridge\nUniversity Press.  He currently serves as SIGACT Chair.</p>\n\n<p>Mitzenmacher graduated summa cum laude with a B.A. in\nmathematics and computer science from Harvard in 1991.  After studying\nmathematics for a year in Cambridge, England, on the Churchill\nScholarship,\nhe obtained his Ph. D. in computer science at U.C. Berkeley in 1996.\nHe then worked at Digital Systems Research Center until joining the\nHarvard faculty in 1999.</p>\n\n</body>\n</html>\n\n", "encoding": "ascii"}