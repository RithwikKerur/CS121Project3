{"url": "https://www.ics.uci.edu/~eppstein/pubs/j-algs.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nJ. Algorithms and Transactions on Algorithms\n</h2>\nI was on the editorial board from 1994 to 2004.\n<p>\n<ul>\n<li><b>Sequence comparison with mixed convex and concave costs</b>.<br>\nD. Eppstein.<br>\nTech. Rep. CUCS-382-88, Computer Science Dept., Columbia University, 1988.<br>\n<a href=\"Epp-Algs-90.pdf\"><i>J. Algorithms</i> 11 (1): 85&ndash;101, 1990</a>.\n<p>\nGives an algorithm for finding the minimum number of mutations needed\nto transform one input string into another, in a general model\nin which substrings may be inserted or deleted at a cost depending\nnonlinearly on the substring length.  The time bound\ndepends on the number of times the second derivative of the cost function changes sign.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Sequence comparison with mixed convex and concave costs\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Sequence-comparison-with-mixed-convex-and-concave-costs.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=82778\">ACM DL</a>)\n<p>\n<li><b>Maintenance of a minimum spanning forest in a dynamic plane graph</b>.<br>\nD. Eppstein, \n<a href=\"//www.info.uniroma2.it/~italiano/\">G.F. Italiano</a>, \n<a href=\"//www.cs.brown.edu/people/rt/home.html\">R. Tamassia</a>, \n<a href=\"//www.cs.Princeton.EDU/~ret/\">R.E. Tarjan</a>,\nJ. Westbrook,\nand M. Yung.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=320177\">\n<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1990, pp. 1&ndash;11</a>.<br>\n<i>J. Algorithms</i> 13 (1): 33&ndash;54, 1992\n(special issue for 1st Symp. Discrete Algorithms).<br>\nCorrigendum, <i>J. Algorithms</i> 15: 173, 1993.\n<p>\nThe complement of a\n<a href=\"mst.html\">minimum spanning tree</a> is a maximum spanning tree in\nthe dual graph.  By applying this fact we can use a modified form of\nSleator and Tarjan's dynamic tree data structure to update the MST in\nlogarithmic time per update.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Maintenance of a minimum spanning forest in a dynamic planar graph\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Maintenance-of-a-minimum-spanning-forest-in-a-dynamic-planar-graph.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein92maintenance.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=139668\">ACM DL</a>)\n<p>\n<li><b>Offline algorithms for dynamic minimum spanning tree problems</b>.<br>\nD. Eppstein.<br>\n<i>2nd Worksh. Algorithms and Data Structures,</i> Ottawa, Canada, 1991.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 519, 1991, pp. 392&ndash;399.<br>\n<a href=\"Epp-TR-92-04.pdf\">Tech. Rep. 92-04</a>, ICS, UCI, 1992.<br>\n<a href=\"//doi.org/10.1006/jagm.1994.1033\">\n<i>J. Algorithms</i> 17: 237&ndash;250, 1994</a>.\n<p>\nGiven a sequence of edge insertions and deletions in a graph,\nfinds the corresponding sequence of minimum spanning tree changes,\nin logarithmic time per update.\nSimilarly solves the planar geometric version of the problem\n(using a novel \"mixed MST\" formulation in which part of the input\nis a graph and part is a point set) in time\nO(log<sup>2</sup> <i>n</i>) for the Euclidean metric and\nO(log <i>n</i> log log <i>n</i>) for the rectilinear metric.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Offline algorithms for dynamic minimum spanning tree problems\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Offline-algorithms-for-dynamic-minimum-spanning-tree-problems.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein94offline.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=185278\">ACM DL (JA)</a>)\n<p>\n<li><b>Minimum range balanced cuts via dynamic subset sums</b>.<br>\nD. Eppstein.<br>\n<a href=\"tr.html\">Tech. Rep. 95-10</a>, ICS, UCI, 1995.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0841\">\n<i>J. Algorithms</i> 23: 375&ndash;385, 1997</a>.\n<p>\nDescribes data structures for maintaining the solution of a dynamically\nchanging subset sum problem, and uses them to find a cut in a graph\nminimizing the difference between the heaviest and lightest cut edge.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Minimum range balanced cuts via dynamic subset sums\">BibTeX</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=248763\">ACM DL</a>)\n<p>\n<p>\n<li><b>Choosing subsets with maximum weighted average</b>.<br>\nD. Eppstein and \n<a href=\"//www.ics.uci.edu/~dan/\">\nD. S. Hirschberg</a>.<br>\n<a href=\"EppHir-TR-95-12.pdf\">Tech. Rep. 95-12, ICS, UCI, 1995</a>.<br>\n<a href=\"ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/eppstein.ps.gz\">\n<i>5th MSI Worksh. on Computational Geometry</i>, 1995, pp. 7&ndash;8</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1996.0849\"><i>J. Algorithms</i> 24: 177&ndash;193, 1997</a>.\n<p>\nUses geometric optimization techniques to find, among <i>n</i> weighted values,\nthe <i>k</i> to drop so as to maximize the weighted average of the remaining values.\nThe feasibility test for the corresponding decision problem involves\n<i>k</i>-sets in a dual line arrangement.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Choosing subsets with maximum weighted average\">BibTeX</a> &ndash;\n<a href=\"EppHir-Algs-97.pdf\">Full paper</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein95choosing.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=258407\">ACM DL</a>)\n<p>\n<li><b>Optimal point placement for mesh smoothing</b>.<br>\n<a href=\"//www.cs.utexas.edu/users/amenta/\">N. Amenta</a>,\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nand D. Eppstein.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314383\">\n<i>8th ACM-SIAM Symp. Discrete\nAlgorithms,</i> New Orleans, 1997, pp. 528&ndash;537</a>.<br>\n<a href=\"//www.siam.org/meetings/archives/an97/ms8.htm\">Symp.\nComputational Geometry Approaches to Mesh Generation</a>,\nSIAM 45th Anniversary Mtg., Stanford, 1997.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809081\">arXiv:cs.CG/9809081</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.1998.0984\">\n<i>J. Algorithms</i> 30: 302&ndash;322, 1999 (special issue for SODA 1997)</a>.\n<p>\nWe study <a href=\"geom-tri.html\">finite element mesh</a> smoothing\nproblems in which we\nmove vertex locations to optimize the shapes of nearby\ntriangles.  Many such problems can be solved in linear time using\n<a href=\"geom-lp.html\">generalized linear programming</a>; we also give\nefficient\nalgorithms for some non-LP-type mesh smoothing problems.\nOne lemma may be of independent interest: the locus of points in R<sup>d</sup>\nfrom which a d-1 dimensional convex set subtends a given solid angle\nis convex.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Optimal point placement for mesh smoothing\">BibTeX</a> &ndash;\n<a href=\"AmeBerEpp-SODA-97.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Optimal-point-placement-for-mesh-smoothing.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/amenta97optimal.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=309437\">ACM DL</a>)\n<p>\n<li><b>Incremental and decremental maintenance of planar width</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9809038\">arXiv:cs.CG/9809038</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=315077\">\n<i>10th ACM-SIAM Symp. Discrete Algorithms,</i>\nBaltimore, 1999, pp. S899-S900</a>.<br>\n<a href=\"//doi.org/10.1006/jagm.2000.1107\"><i>J.\nAlgorithms</i> 37 (2): 570&ndash;577, 2000</a>.\n<p>\nWe show how to maintain the width of a planar point set, subject to\ninsertions or deletions (but not both) in time\nO(<i>n</i><sup><i>c</i></sup>) per update for any <i>c</i>&nbsp;&gt;&nbsp;0.\nThe idea is to apply our <a href=\"p-dynmst.html\">dynamic closest pair\ndata structure</a> to an appropriate measure of distance between\npairs of convex hull features.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Incremental and decremental maintenance of planar width\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Incremental-and-decremental-maintenance-of-planar-width.html\">Citations</a> &ndash;\n<a href=\"Epp-SODA-99-slides.pdf\">SODA talk slides</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=363331\">ACM DL</a>)\n<p>\n<li><b>3-coloring in time O(1.3289^n)</b>.<br>\n<a href=\"//www.cis.temple.edu/~beigel/\">R. Beigel</a>\nand D. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.DS/0006046\">arXiv:cs.DS/0006046</a>.<br>\n<a href=\"//doi.org/10.1016/j.jalgor.2004.06.008\"><i>J. Algorithms</i>\n54:2 (2005) 168-204.</a>\n<p>\nJournal paper combining <a href=\"graph-color.html\">3-coloring algorithms</a>\nfrom our\n<a href=\"p-3color.html\">FOCS '95 paper</a> with improved bounds from our\n<a href=\"p-3color3.html\">SODA '01 paper</a>.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#3-coloring in time $O(1.3289^n)$\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/3-coloring-in-time-O(1.3289^n).html\">Citations</a>)\n<p>\n<li><b>Quasiconvex analysis of backtracking algorithms</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0304018\">arXiv:cs.DS/0304018</a>.<br>\n<i>15th ACM-SIAM Symp. Discrete Algorithms,</i>\nNew Orleans, 2004, pp. 781&ndash;790.<br>\n<a href=\"//doi.org/10.1145/1198513.1198515\"><i>ACM Trans. Algorithms</i> 2 (4): 492&ndash;509 (special issue for SODA 2004), 2006</a>.\n<p>\nWe consider a class of multivariate recurrences frequently arising\nin the worst case analysis of Davis-Putnam-style\n<a href=\"exponential.html\">exponential time\nbacktracking algorithms</a> for NP-hard problems. We describe a\ntechnique for proving asymptotic upper bounds on these recurrences,\nby using a suitable weight function to reduce the problem to that of\nsolving univariate linear recurrences; show how to use <a\nhref=\"geom-lp.html\">quasiconvex programming</a> to determine the weight\nfunction yielding the smallest\nupper bound; and prove that the resulting upper bounds are within a\npolynomial factor of the true asymptotics of the recurrence. We\ndevelop and implement a multiple-gradient descent algorithm for the\nresulting quasiconvex programs, using a real-number arithmetic\npackage for guaranteed accuracy of the computed worst case time\nbounds. \n<p>\nThe journal version uses the longer title \"Quasiconvex analysis of\nmultivariate recurrence equations for backtracking algorithms\".\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Quasiconvex analysis of backtracking algorithms\">BibTeX</a> &ndash;\n<a href=\"Epp-SODA-04-qaba.pdf\">SODA talk slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Quasiconvex-analysis-of-backtracking-algorithms.html\">Citations</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"jour.html\">Journals</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}