{"url": "https://www.ics.uci.edu/~eppstein/junkyard/qtvr/bb3d.pov", "content": "// Persistence of Vision Ray Tracer Scene Description File\n// File: box-in-box.pov\n// Vers: 3\n// Desc: The largest cube that can be inscribed within another cube\n//       so that all the outer cube's faces are touched. (3D QTVR version)\n// Date: 19 Mar 1997\n// Auth: David Eppstein, UC Irvine Dept. Inf. & Comp. Sci.\n\n// ==== Standard POV-Ray Includes ====\n#include \"colors.inc\"\t// Standard Color definitions\n#include \"textures.inc\"\t// Standard Texture definitions\n\n// camera angle and object spin\n//   ()   * /   + -   !\n#declare increment = 6\t// six deg/step looks smoother than qtvr-std 10\n#declare firstrow = 66\t// start reasonably high\n#declare columns = 120/increment\t// by sym we only need render 1/3 around\n#declare spin = increment*mod(clock,columns)*y\n#declare loft = (firstrow - increment*int(clock/columns))*x\n\n\n\n// Set a color of the background (sky)\nbackground { color <1,1,1> }\n\n// create a regular point light source\nlight_source\n{\n  0*x // light's position (translated below)\n  color <2,2,2>\n  translate <-20, 10, -10>\t// near x axis is safe from bad reflections?\n}\n\n// another light, fill, high up\nlight_source\n{\n  0*x // light's position (translated below)\n  color <0.5,0.5,0.5>\n  translate <20, 40, -10>\n}\n\n\ncamera\n{\n  location <0,0,-7>\n  right x\n  up y\n  look_at <0,0,0>\n  angle 30\n  rotate loft\n}//   ()   * /   + -   !\n\n#declare zrot = 180*atan2(sqrt(2),1)/pi\n\n\n// outer box\n// rotations carefully chosen to make main axis=y\n// (if only they were vector direction=axis, magnitude=rotation amount!)\n\nbox\n{\n  <-1, -1, -1>  // one corner position <X1 Y1 Z1>\n  < 1,  1,  1>  // other corner position <X2 Y2 Z2>\n  rotate <0,45,zrot>\n  texture {\n\tGlass\n\tfinish {\n\t\trefraction 0\t// turn bendiness off, its too confoozing\n\t\troughness 0.05 \t// but make it possible to see the thing\n\t\tspecular 0.3\t// turn down specular reflection\n\t}\n  }\n  rotate spin\n}\n\n// inner box\nbox\n{\n  <-.6, -.6, -.6>  // one corner position <X1 Y1 Z1>\n  < .6,  .6,  .6>  // other corner position <X2 Y2 Z2>\n  rotate <0,45,zrot>\n  rotate 60*y\n  rotate spin\n  texture { Sapphire_Agate }\n}\n", "encoding": "ascii"}