{"url": "https://www.ics.uci.edu/~ejw/authoring/collection/dt/Minutes000315.txt", "content": "Advanced Collections Teleconference\nMarch 15, 2000\n\nPresent: Judy Slein, Jason Crawford, Geoff Clemm, Jim Whitehead, Chuck Fay\nMinutes recorded by Jim Whitehead\n\n*** Note that decisions made during the teleconference are always\nsubject to review on the mailing list.  The mailing list is the final\narbiter of consensus on any issue.  Note also, that the revised\nBindings Protocol specification, and Redirect References \nprotocol  produced as a result of this conference call will also \nbe subject to review by the mailing list. ***\n\nBINDINGS:\n\nBegan with some discussion of Geoff Clemm's proposed language for\nbinding \"integrity\". His proposed language is:\n\nIf a DELETE request, MOVE request, or a request with an Overwrite:T\nheader is applied to a resource identified by the URL /path/x, and\n/path identifies a collection that supports the BIND/UNBIND methods,\nthen the request MUST have the same effect as an UNBIND of x from\n/path.  In particular, if the request succeeds, the binding named x\nMUST be removed from the collection indentified by /path, and whether\nor not the request succeeds, no other bindings from any other\ncollection may be removed.\n\nHashed around this language a bit.  Batted around the language, \"if\nBIND to a resource is supported, then a DELETE/MOVE/Overwrite:T to\nthat resource MUST have the same effect as an UNBIND.\" But, this\ndoesn't capture the fact that the collection containing the resource\nmust also support BIND for this assertion to be true.\n\nREDIRECT REFERENCES:\n\nIssue #49: Section 6.2 is going away (based on discussion last week),\nso this issue no longer applies.\n\nIssue #50: Discussed having the Redirect-Ref header give the value of\nthe redirection (i.e., the relative or absolute URL), and thus not\nrequire a separate method just to read the value of the redirect\nresource.  Agreed that this is a good idea, and will put this into the\nspec.\n\nDecided to disagree with Yaron, and not accept his wording change.\nFelt that his wording suggestion did not make things more clear.\n\nIssue #51: Agreed to delete the first paragraph of section 7.\n\nIssue #52: Disagree with Yaron. Important use cases for relative URLs\nhave been posted to the mailing list.  Need relative URLs to allow a\nredirect resource to behave correctly if it has multiple URL mappings,\nand is referring to a resource within its local namespace.\n\nIssue #53: Decided to make this functionality \"SHOULD\" behavior, since\nit is potentially expensive to implement, and is difficult to\nmodularize, as was pointed out in the comment.  Will also add language\ndescribing what happens if the SHOULD behavior is not implemented\n(i.e., a 404 is returned).\n\nIssue #54: This was resolved in a discussion on the mailing list.  No\nchanges needed here.\n\nIssue #55: Agreed to accept Yaron's suggestion and extend the IANA\nconsiderations section with methods, headers, and XML elements.\n\nIssue #56: Agreed that we will add an example showing use of non-HTTP\nURLs in a Redirect Reference.\n\nIssue #57: Previously agreed that we will add language forbidding\nservers to do redirect reference cleanup.\n\nIssue #58: Agreed that we will provide a mechanism for update of the\nvalue of a Redirect Reference.\n\nIssue #59: Disagreed.  This is too complex, and doesn't appear to\naddress a pressing use scenario.\n\nIssue #60: Agreed to delete the paragraph containing\n\nAlso discussed what should be returned by a PROPFIND multistatus\nresponse that includes a redirect reference resource.  Agreed that\nonly the location information, and nothing else, should be returned.\nThe rationale is that the location is necessary to return, since this\ntells you where the location would be redirected. But, if you need to\nknow whether it is a redirect reference, or an ordinary resource, it\nis possible to submit a PROPFIND asking for the redirect value.\nAgreed to table this, and reconsider next week.\n\nIssue #61: Decided to no longer call DAV:location a \"psuedoproperty\",\nand just define a new XML element for this. This contradicts an\nearlier decision (Yaron raised this issue previously).  But, we'll\nstill encourage the WebDAV Distributed Authoring protocol to add this\nin for 302 responses.\n\nIssue #62: Agreed to delete the sentence, \"Until then, non-referencing\nclients will not ...\"\n\nIssue #63: Agreed to delete section 7.1.  Will reword 7.2 to avoid\nconcerns with \"poses special problems\" and \"due to atomicity\".\n\nIssue #64: We need relative URIs. As a result of needing relative\nURIs, we need a different mechanism from the Location header, which\nmust be an absolute URI. So, do not accept this suggestion.\n\nIssue #65: This issue was discussed in the past, and even made it into\nsome previous drafts. In the end, the difficulty of having some\nspecial cases that differ from a consistent set of semantics\noutweighed the advantage of the special cases. So, we disagree with\nthe suggestion.\n\nIssue #66: Agreed, will make this change.\n\nIssue #67: Wording right now is wrong, so we agree with this\nsuggestion.  Need to get rid of the end of the 2nd to last sentence,\nand the beginning of the last sentence, mushing them together.\n\nIssue #68: This issue has been noted on the WebDAV issues list as\n\"DEEP_LOCK_ERROR_STATUS\". Will keep using 207, and will encourage RFC\n2518 to be changed to use 207 in this case.\n\nIssue #69: Disagree.  The use of 424 in this case is correct (see\ndef'n of 424 in RFC 2518)\n\nIssue #70: Agreed that we feel that no additional text is needed in\nthis case.  The draft as-is is adequate.\n\nIssue #71: We accept this change, it's right.\n\nIssue #72: Add a note about not wanting two slashes in a row.  Use\nthis for rationale for warning against ending a redirect reference\ntarget with a slash, since this will result in two slashes in a row.\n\n*** End of teleconference ***", "encoding": "ascii"}