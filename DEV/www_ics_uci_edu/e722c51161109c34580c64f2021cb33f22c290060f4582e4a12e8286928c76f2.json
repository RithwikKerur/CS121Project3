{"url": "https://www.ics.uci.edu/~theory/269/140117.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, January 17, 2014</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Winter 2014: Theory Seminar</a><br>\nBren Hall, Room 1423, 1pm\n\n<hr>\nJanuary 17, 2014:</h2>\n<h1>\nStreaming Balanced Graph Partitioning Algorithms for Random Graphs\n</h1>\n<h2>\nWill Devanny\n</h2>\n<p>\nPresenting a paper by Isabelle Stanton\n<p>\nAbstract: \nThere has been a recent explosion in the size of stored data,\npartially due to advances in storage technology, and partially due to\nthe growing popularity of cloud-computing and the vast quantities of\ndata generated. This motivates the need for streaming algorithms that\ncan compute approximate solutions without full random access to all\nof the data. We model the problem of loading a graph onto a\ndistributed cluster as computing an approximately balanced\nk-partitioning of a graph in a streaming fashion with only one pass\nover the data. We give lower bounds on this problem, showing that no\nalgorithm can obtain an o(n) approximation with a random or\nadversarial stream ordering. We analyze two variants of a randomized\ngreedy algorithm, one that prefers the arg max and one that is\nproportional, on random graphs with embedded balanced k-cuts and are\nable to theoretically bound the performance of each algorithms - the\narg max algorithm is able to recover the embedded k-cut, while,\nsurprisingly, the proportional variant can not. This matches the\nexperimental results in [25].\n</p>\n\n</body>\n</html>\n\n", "encoding": "ascii"}