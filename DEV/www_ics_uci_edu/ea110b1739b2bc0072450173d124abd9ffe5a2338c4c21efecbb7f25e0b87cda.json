{"url": "https://www.ics.uci.edu/~arcadia/arcadia_papers/analysis/graph_models_abstract.html", "content": "<HTML>\n<!-- $Id: graph_models_abstract.html,v 1.1 1995/04/11 23:38:11 kari Exp $ -->\n<HEAD>\n<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>\n<META http-equiv=\"Owner\" content=\"Arcadia\">\n<META http-equiv=\"Reply-To\" content=\"arcadia-www@ics.uci.edu\">\n<LINK rev=\"made\" href=\"mailto:arcadia-www@ics.uci.edu\">\n</HEAD><BODY>\n<H1><img align=middle src=\"http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif\">\nArcadia Papers: ABSTRACT</H1>\n<HR>\n\n<A HREF=\"http://www.cs.purdue.edu/homes/young/papers/graph-models.ps.Z\">\n\"<b>Graph Models for Reachability Analysis of Concurrent Programs</b>\"</A>,\nby Mauro Pezz`e, Richard N. Taylor, and Michal Young in\nTechnical Report TR-92-27, Department of Information and Computer Science,\nUniversity of California, Irvine CA 92171-3425, January 1992.\n\n\n<H2> Abstract </H2>\n\n\nThe problem of analyzing concurrent systems has been investigated by many \nresearchers and several solutions have been proposed. Among the proposed \ntechniques, reachability analysis --- systematic enumeration of reachable \nstates in a finite-state model --- is attractive because it is conceptually \nsimple and relatively straightforward to automate, and can be used in\nconjunction with model-checking procedures to check for application-specific \nas well as general properties. \n\n<P>\n\nOne thread of research related to reachability analysis involves extracting \nmodels from program texts. This paper shows that the nature of the translation \nfrom source code to a modeling formalism is of greater practical importance \nthan the underlying formalism. (With respect to the underlying formalisms \nwe present algorithms for translating Taylor's reduced flowgraph model and \nLong and Clarke's task interaction graph model into a common labeled\nflowgraph formalism, and for translating labeled flowgraphs into Petri \nnets, while preserving the reachability graph structure.) \n\n<P>\n\nFeatures identified as pragmatically important are the representation of \ninternal choice, selection of a dynamic or static matching rule, and the \nease of applying reductions. Since combinatorial explosion is the primary \nimpediment to application of reachability analysis, a particular concern \nin choosing a model is facilitating divide-and-conquer analysis of large\nprograms. Recently, much interest in finite-state verification systems \nhas centered on algebraic theories of concurrency. Algebraic structure \ncan be used to decompose reachability analysis based on a flowgraph model. \nThe semantic equivalence of graph and Petri net based models suggests \nthat one ought to be able to apply a similar strategy for decomposing Petri\nnets. We show this is indeed possible through application of category theory. \n\n<H2> Abstract </H2>\n\n\n<HR>\n<ADDRESS>\n<A HREF=\"http://www.ics.uci.edu/Arcadia/\">The Arcadia Project\n&lt;arcadia-www@ics.uci.edu&gt;</A><BR>\nLast modified: Thu Jan 27 13:36:13 1995\n</ADDRESS>\n</BODY></HTML>\n\n", "encoding": "ascii"}