{"url": "https://www.ics.uci.edu/~eppstein/261/s13-hw5-answers.txt", "content": "CS 261, Spring 2013, Homework 5, Due Thursday, May 16\n\n1. In a binary search tree formed by inserting n > 2 different values in\na random permutation without rebalancing, what is the probability that\nthe node for the median value has exactly one child node? (Hint: this\nevent depends only on the relative order of insertion of the median\nvalue and its two closest neighbors in the sorted sequence of inputs.)\n\n   1/3. It has exactly one child when one of its two closest neighbors\n   is inserted earlier than it and one later than it. That is, among\n   these three values, it should be the one inserted in the middle\n   position; each is equally likely to be in the middle, so the\n   probability is 1/3.\n\n\n2. Give pseudocode for an algorithm range(T,l,r) that answers queries\nwhere the inputs to the query are the root node T of a binary search\ntree and two numbers l and r, and the output is a collection of all the\nkeys x_i in T with l < x_i < r. Your algorithm should take time O(h+k)\nwhere h is the height of the tree and k is the length of its output.\n\n   def range(T,l,r):\n       if T.key < l:\n           range(T.right,l,r)\n       else if T.key > r:\n           range(T.left,l,r)\n       else:\n           range(T.left(l,r)\n           output T.key\n           range(T.right(l,r)\n\n    (The pseudocode can also be written to avoid coding the left and\n    right recursive calls twice each, but the simplest way to do that\n    makes extra and unnecessary comparisons.)        \n\n\n3. Suppose that T is a splay tree, on three items with keys 1, 2, and 3,\nand that all three of the keys have already been searched for since the\nmost recent time the set of keys in T changed. Based on this\ninformation, how many different shapes might T possibly have? Draw them\nall.\n\n   Three. There are five different shapes of trees that could exist on\n   the three keys:\n   \n   a. 1       b. 1     c.   2     d.   3   e.     3\n       \\          \\        / \\        /          /\n        2          2      1   3      1          2\n         \\        /                   \\        /\n          3      3                     2      1\n\n   However, once key 2 is searched for, the tree will be in shape c, and\n   at each step after that it will be in one of the three shapes a, c,\n   and e. It is not difficult to verify that every splay operation from\n   one of these three shapes returns to this set of three shapes. Therefore,\n   a correct answer to this question would draw only the shapes of a, c, and e.\n", "encoding": "ascii"}