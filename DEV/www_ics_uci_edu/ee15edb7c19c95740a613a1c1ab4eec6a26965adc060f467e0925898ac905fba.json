{"url": "https://www.ics.uci.edu/~theory/269/180302.html", "content": "<!DOCTYPE html>\n<html>\n<head>\n<title>Theory Seminar, March 2, 2018</title>\n<link rel=\"stylesheet\" href=\"../stylesheet.css\" type=\"text/css\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"\nalt=\"Center for Algorithms and Theory of Computation\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Winter 2018: Theory Seminar</a><br>\nBren Hall, Room 1423, 1pm</h2>\n<hr />\n<h2>March 2, 2018:</h2>\n<h1>Time-Space Trade-Offs for Computing Euclidean Minimum Spanning Trees</h1>\n<h2>Jordan Jorgensen</h2>\n\n<p>In the limited-workspace model, we assume that the input of size $n$\nlies in a random access read-only memory. The output has to be reported\nsequentially, and it cannot be accessed or modified. In addition, there\nis a read-write workspace of $O(s)$ words, where $s\\in\\{1,\\dots,n\\}$ is\na given parameter. In a time-space trade-off, we are interested in how\nthe running time of an algorithm improves as $s$ varies from $1$ to $n$.\nWe present a time-space trade-off for computing the Euclidean minimum\nspanning tree ($\\mathrm{EMST}$) of a set $V$ of $n$ sites in the\nplane. We present an algorithm that computes $\\mathrm{EMST}(V)$ using\n$O\\bigl(n^3\\tfrac{\\log s}{s^2}\\bigr)$ time and $O(s)$ words of\nworkspace. Our algorithm uses the fact that $\\mathrm{EMST}(V)$ is a\nsubgraph of the bounded-degree relative neighborhood graph of $V$, and\napplies Kruskal's MST algorithm on it. To achieve this with limited\nworkspace, we introduce a compact representation of planar graphs,\ncalled an $s$-net which allows us to manipulate its component structure\nduring the execution of the algorithm.</p>\n\n<p>(Based on <a href=\"https://arxiv.org/abs/1712.06431\">a paper by Bahareh Banyassady, Luis Barba, and Wolfgang Mulzer from LATIN 2018</a>.)</p>\n\n</body></html>\n\n", "encoding": "ascii"}