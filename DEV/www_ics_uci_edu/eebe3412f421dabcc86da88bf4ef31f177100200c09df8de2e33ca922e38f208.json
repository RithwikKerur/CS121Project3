{"url": "https://www.ics.uci.edu/~majumder/VC/211HW3/vlfeat/doc/overview/hog.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   <html xmlns=\"http://www.w3.org/1999/xhtml\">\n <head>\n  <!-- IE Standards Mode -->\n  <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"></meta>\n\n  <!-- Favicon -->\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"icon\"></link>\n  <link href=\"../images/vl_blue.ico\" type=\"image/x-icon\" rel=\"shortcut icon\"></link>\n\n  <!-- Page title -->\n  <title>VLFeat - Tutorials > HOG features</title>\n\n  <!-- Stylesheets -->\n  <link href=\"../vlfeat.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <link href=\"../pygmentize.css\" type=\"text/css\" rel=\"stylesheet\"></link>\n  <style xml:space=\"preserve\">\n    /* fixes a conflict between Pygmentize and MathJax */\n    .MathJax .mo, .MathJax .mi {color: inherit ! important}\n  </style>\n  \n\n  <!-- Scripts-->\n  \n\n  <!-- MathJax -->\n  <script xml:space=\"preserve\" type=\"text/x-mathjax-config\">\n    MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [ ['$','$'], ['\\\\(','\\\\)'] ],\n      processEscapes: true,\n    },\n    TeX: {\n      Macros: {\n        balpha: '\\\\boldsymbol{\\\\alpha}',\n        bc: '\\\\mathbf{c}',\n        be: '\\\\mathbf{e}',\n        bg: '\\\\mathbf{g}',\n        bq: '\\\\mathbf{q}',\n        bu: '\\\\mathbf{u}',\n        bv: '\\\\mathbf{v}',\n        bw: '\\\\mathbf{w}',\n        bx: '\\\\mathbf{x}',\n        by: '\\\\mathbf{y}',\n        bz: '\\\\mathbf{z}',\n        bsigma: '\\\\mathbf{\\\\sigma}',\n        sign: '\\\\operatorname{sign}',\n        diag: '\\\\operatorname{diag}',\n        real: '\\\\mathbb{R}',\n      },\n      equationNumbers: { autoNumber: 'AMS' }\n      }\n    });\n  </script>\n  <script src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" xml:space=\"preserve\" type=\"text/javascript\"></script>\n\n  <!-- Google Custom Search -->\n  <script xml:space=\"preserve\">\n    (function() {\n    var cx = '003215582122030917471:oq23albfeam';\n    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n    gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n    '//www.google.com/cse/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n    })();\n  </script>\n\n  <!-- Google Analytics -->\n  <script xml:space=\"preserve\" type=\"text/javascript\">\n    var _gaq = _gaq || [];\n    _gaq.push(['_setAccount', 'UA-4936091-2']);\n    _gaq.push(['_trackPageview']);\n    (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n    })();\n  </script>\n </head>\n\n <!-- Body Start -->\n <body>\n  <div id=\"header-section\">\n    <div id=\"header\">\n      <!-- Google CSE Search Box -->\n      <div class=\"searchbox\">\n        <gcse:searchbox-only autoCompleteMaxCompletions=\"5\" autoCompleteMatchType=\"any\" resultsUrl=\"http://www.vlfeat.org/search.html\"></gcse:searchbox-only>\n      </div>\n      <h1 id=\"id-16\"><a shape=\"rect\" href=\"../index.html\" class=\"plain\"><span id=\"vlfeat\">VLFeat</span><span id=\"dotorg\">.org</span></a></h1>\n    </div>\n    <div id=\"sidebar\"> <!-- Navigation Start -->\n      <ul>\n<li><a href=\"../index.html\">Home</a>\n<ul>\n<li><a href=\"../about.html\">About</a>\n</li>\n<li><a href=\"../license.html\">License</a>\n</li>\n</ul></li>\n<li><a href=\"../download.html\">Download</a>\n<ul>\n<li><a href=\"../install-matlab.html\">Using from MATLAB</a>\n</li>\n<li><a href=\"../install-octave.html\">Using from Octave</a>\n</li>\n<li><a href=\"../install-shell.html\">Using from the command line</a>\n</li>\n<li><a href=\"../install-c.html\">Using from C</a>\n<ul>\n<li><a href=\"../xcode.html\">Xcode</a>\n</li>\n<li><a href=\"../vsexpress.html\">Visual C++</a>\n</li>\n<li><a href=\"../gcc.html\">g++</a>\n</li>\n</ul></li>\n<li><a href=\"../compiling.html\">Compiling</a>\n<ul>\n<li><a href=\"../compiling-unix.html\">Compiling on UNIX-like platforms</a>\n</li>\n<li><a href=\"../compiling-windows.html\">Compiling on Windows</a>\n</li>\n</ul></li>\n</ul></li>\n<li class='active'><a href=\"tut.html\">Tutorials</a>\n<ul>\n<li><a href=\"frame.html\">Local feature frames</a>\n</li>\n<li><a href=\"covdet.html\">Covariant feature detectors</a>\n</li>\n<li class='active' class='activeLeaf'><a href=\"hog.html\">HOG features</a>\n</li>\n<li><a href=\"sift.html\">SIFT detector and descriptor</a>\n</li>\n<li><a href=\"dsift.html\">Dense SIFT</a>\n</li>\n<li><a href=\"liop.html\">LIOP local descriptor</a>\n</li>\n<li><a href=\"mser.html\">MSER feature detector</a>\n</li>\n<li><a href=\"imdisttf.html\">Distance transform</a>\n</li>\n<li><a href=\"encodings.html\">Fisher Vector and VLAD</a>\n</li>\n<li><a href=\"gmm.html\">Gaussian Mixture Models</a>\n</li>\n<li><a href=\"kmeans.html\">K-means clustering</a>\n</li>\n<li><a href=\"aib.html\">Agglomerative Infromation Bottleneck</a>\n</li>\n<li><a href=\"quickshift.html\">Quick shift superpixels</a>\n</li>\n<li><a href=\"slic.html\">SLIC superpixels</a>\n</li>\n<li><a href=\"svm.html#tut.svm\">Support Vector Machines (SVMs)</a>\n</li>\n<li><a href=\"kdtree.html\">KD-trees and forests</a>\n</li>\n<li><a href=\"plots-rank.html\">Plotting AP and ROC curves</a>\n</li>\n<li><a href=\"utils.html\">Miscellaneous utilities</a>\n</li>\n<li><a href=\"ikm.html\">Integer K-means</a>\n</li>\n<li><a href=\"hikm.html\">Hierarchical integer k-means</a>\n</li>\n</ul></li>\n<li><a href=\"../applications/apps.html\">Applications</a>\n</li>\n<li><a href=\"../doc.html\">Documentation</a>\n<ul>\n<li><a href=\"../matlab/matlab.html\">MATLAB API</a>\n</li>\n<li><a href=\"../api/index.html\">C API</a>\n</li>\n<li><a href=\"../man/man.html\">Man pages</a>\n<ul>\n<li><a href=\"../man/mser.html\">mser</a>\n</li>\n<li><a href=\"../man/sift.html\">sift</a>\n</li>\n<li><a href=\"../man/vlfeat.html\">vlfeat</a>\n</li>\n</ul></li>\n</ul></li>\n</ul>\n\n    </div> <!-- sidebar -->\n  </div>\n  <div id=\"headbanner-section\">\n    <div id=\"headbanner\">\n      <span class='page'><a href=\"tut.html\">Tutorials</a></span><span class='separator'>></span><span class='page'><a href=\"hog.html\">HOG features</a></span>\n    </div>\n  </div>\n  <div id=\"content-section\">\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n        \n    \n\n<div class='toc'>\n<h3>Table of Contents</h3><ul><li class=\"level1\"><a href=\"#tut.hog.basic\">Basic HOG computation</a></li>\n<li class=\"level1\"><a href=\"#tut.hog.flip\">Flipping HOG from left to right</a></li>\n<li class=\"level1\"><a href=\"#tut.hog.params\">Other HOG parameters</a></li>\n</ul>\n</div><!-- Table of contents -->\n\n\n<p>The <b>HOG</b> features are widely use for object detection. HOG\ndecomposes an image into small squared cells, computes an histogram of\noriented gradients in each cell, normalizes the result using a\nblock-wise pattern, and return a descriptor for each cell.</p>\n\n<p>Stacking the cells into a squared image region can be used as an\nimage window descriptor for object detection, for example by means of\nan SVM.</p>\n\n<p>This tutorial shows how to use the VLFeat\nfunction <code/><a href=../matlab/vl_hog.html>vl_hog</a></code> to compute HOG features of various kind\nand manipulate them.</p>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.hog.basic\">Basic HOG computation</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>We start by considering an example input image:</p>\n\n<div class=\"figure\">\n  <image src=\"../demo/hog_image.jpg\"></image>\n  <div class=\"caption\">An example image.</div>\n</div>\n\n<p>HOG is computed by calling the <code/><a href=../matlab/vl_hog.html>vl_hog</a></code> function:</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">cellSize</span> <span class=\"p\">=</span> <span class=\"mi\">8</span> <span class=\"p\">;</span>\n<span class=\"n\">hog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">cellSize</span><span class=\"p\">,</span> <span class=\"s\">&#39;verbose&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>The same function can also be used to generate a pictorial\nrendition of the features, although this unavoidably destroys some of\nthe information contained in the feature itself. To this end, use the\n<code/>render</code> command:</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">imhog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">hog</span><span class=\"p\">,</span> <span class=\"s\">&#39;verbose&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">clf</span> <span class=\"p\">;</span> <span class=\"n\">imagesc</span><span class=\"p\">(</span><span class=\"n\">imhog</span><span class=\"p\">)</span> <span class=\"p\">;</span> <span class=\"n\">colormap</span> <span class=\"n\">gray</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>This should produce the following image:</p>\n\n<div class=\"figure\">\n  <image src=\"../demo/hog_features.jpg\"></image>\n  <div class=\"caption\">Standard HOG features with a cell size of eight pixels.</div>\n</div>\n\n<p>HOG is an array of cells, with the third dimension spanning feature\ncomponents:</p>\n\n<div class=\"highlight\"><pre><span class=\"o\">&gt;</span> <span class=\"nb\">size</span><span class=\"p\">(</span><span class=\"n\">hog</span><span class=\"p\">)</span>\n\n<span class=\"nb\">ans</span> <span class=\"p\">=</span>\n\n    <span class=\"mi\">16</span>    <span class=\"mi\">16</span>    <span class=\"mi\">31</span>\n</pre></div>\n\n\n<p>In this case the feature has 31 dimensions. HOG exists in many\nvariants. VLFeat supports two: the UoCTTI variant (used by default)\nand the original Dalal-Triggs variant (with 2&times;2 square HOG\nblocks for normalization). The main difference is that the UoCTTI\nvariant computes bot directed and undirected gradients as well as a\nfour dimensional texture-energy feature, but projects the result down\nto 31 dimensions. Dalal-Triggs works instead with undirected gradients\nonly and does not do any compression, for a total of 36\ndimension. The Dalal-Triggs variant can be computed as</p>\n\n<div class=\"highlight\"><pre><span class=\"c\">% Dalal-Triggs variant</span>\n<span class=\"n\">cellSize</span> <span class=\"p\">=</span> <span class=\"mi\">8</span> <span class=\"p\">;</span>\n<span class=\"n\">hog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">cellSize</span><span class=\"p\">,</span> <span class=\"s\">&#39;verbose&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;variant&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;dalaltriggs&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">imhog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">hog</span><span class=\"p\">,</span> <span class=\"s\">&#39;verbose&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;variant&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;dalaltriggs&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>The result is visually very similar:</p>\n\n<div class=\"figure\">\n  <image src=\"../demo/hog_features_dalal_triggs.jpg\"></image>\n  <div class=\"caption\">Dalal-Triggs variant. Differences with the\n  standard version are difficult to appreciated in the\n  rendition.</div>\n</div>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.hog.flip\">Flipping HOG from left to right</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p>Often it is necessary to flip HOG features from left to right (for\nexample in order to model an axis symmetric object). This can be obtained\nanalytically from the feature itself by permuting the histogram dimensions\nappropriately. The permutation is obtained as follows:</p>\n\n<div class=\"highlight\"><pre><span class=\"c\">% Get permutation to flip a HOG cell from left to right</span>\n<span class=\"n\">perm</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;permutation&#39;</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>Then these two examples produce identical results (provided that\nthe image contains an exact number of cells:</p>\n\n<div class=\"highlight\"><pre><span class=\"n\">imHog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">hog</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">imHogFromFlippedImage</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">hogFromFlippedImage</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">imFlippedHog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">flippedHog</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>This is shown in the figure:</p>\n\n<div class=\"figure\">\n  <image src=\"../demo/hog_flipping.jpg\"></image>\n  <div class=\"caption\">Flipping HOG features from left to right either\n  by flipping the input image or the features directly.</div>\n</div>\n\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<h1 id=\"tut.hog.params\">Other HOG parameters</h1>\n<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n<p><code/><a href=../matlab/vl_hog.html>vl_hog</a></code> supports other parameters as well. For example,\none can specify the number of orientations in the histograms by the\n<code/>numOrientations</code> option:</p>\n\n<div class=\"highlight\"><pre><span class=\"c\">% Specify the number of orientations</span>\n<span class=\"n\">hog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">cellSize</span><span class=\"p\">,</span> <span class=\"s\">&#39;verbose&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;numOrientations&#39;</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">imhog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">hog</span><span class=\"p\">,</span> <span class=\"s\">&#39;verbose&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;numOrientations&#39;</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>Changing the number of orientations changes the features quite\nsignificantly:</p>\n\n<div class=\"figure\">\n  <image src=\"../demo/hog_num_orientations.jpg\"></image>\n  <div class=\"caption\">HOG features for <code/>numOrientations</code>\nequal to 3, 4, 5, 9, and 21 repsectively.</div>\n</div>\n\n<p>Another useful option is <code/>BilinearOrientations</code> switching\non the bilinear orientation assignment of the gradient (this is not used\nin certain implementation like UoCTTI).</p>\n\n<div class=\"highlight\"><pre><span class=\"c\">% Specify the number of orientations</span>\n<span class=\"n\">hog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span><span class=\"n\">cellSize</span><span class=\"p\">,</span><span class=\"s\">&#39;numOrientations&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n<span class=\"n\">imhog</span> <span class=\"p\">=</span> <span class=\"n\">vl_hog</span><span class=\"p\">(</span><span class=\"s\">&#39;render&#39;</span><span class=\"p\">,</span> <span class=\"n\">hog</span><span class=\"p\">,</span> <span class=\"s\">&#39;numOrientations&#39;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n</pre></div>\n\n\n<p>resulting in</p>\n\n<div class=\"figure\">\n  <image src=\"../demo/hog_bilinear_orientations.jpg\"></image>\n  <div class=\"caption\">From left to right: input image, hard\n  orientation assigments for <code/>numOrientations</code> equals to\n  four, and soft orientation assigments.</div>\n</div>\n\n\n  \n      </div>\n      <div class=\"clear\">&nbsp;</div>\n    </div>\n  </div> <!-- content-section -->\n  <div id=\"footer-section\">\n    <div id=\"footer\">\n      &copy; 2007-13 The authors of VLFeat\n    </div> <!-- footer -->\n  </div> <!-- footer section -->\n </body>\n <!-- Body ends -->\n</html>\n ", "encoding": "ascii"}