{"url": "https://www.ics.uci.edu/~enalisni/ShakespeareExplorer.html", "content": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Shakespeare Sentiment Explorer</title>\n\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js\"></script>\n\t<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.15/jquery-ui.min.js\"></script>\n        <script type=\"text/javascript\" src=\"d3/d3.v3.min.js\"></script>\n        <style>\n            body {\n  font: 10px sans-serif;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.x.axis path {\n  display: none;\n}\n\n.area.above {\n  fill: rgb(255,182,193);\n}\n\n.area.below {\n  fill: rgb(40,255,194);\n}\n\n.line {\n  fill: none;\n  stroke: #000;\n  stroke-width: 1.5px;\n}\n\n           .link {\n            stroke: #ccc;\n            }\n\n            .node text {\n                pointer-events: none;\n                font: 10px sans-serif;\n            }\n            \n            \n            \n        </style>\n    </head>\n    \n    <body style=\"width: 1000px; margin: 0 auto\">\n        <script type=\"text/javascript\">\n            var h = 790;\n            var w = 1000;\n            var n = 10;\n            var svg = 0;\n            var totalpts = 37;\n            var clicked = -1;\n            var initLocation = [[60,60],[60,80],[60,100],[60,120],[60,140],[60,160],[60,180],[60,200],[60,220],\n            [60,240],[60,260],[60,280],[60,300],[60,320],[60,340],[60,360],[60,380],[60,400],\n            [60,420],[60,440],[60,460],[60,480],[60,500],[60,520],[60,540],[60,560],[60,580],\n            [60,600],[60,620],[60,640],[60,660],[60,680],[60,700],[60,720],[60,740],[60,760]];\n            \n            var books = [\"All's Well That Ends Well\",\"As You Like It\",\"Antony and Cleopatra\",\"A Comedy of Errors\",\"Coriolanus\",\"Cymbeline\",\n                        \"A Midsummer Night's Dream\",\"Hamlet\",\"Henry IV, Part 1\",\"Henry IV, Part 2\",\"Henry V\",\"Henry VIII\",\"Henry VI, Part 1\",\n                        \"Henry VI, Part 2\",\"Henry VI, Part 3\",\"The Life and Death of King John\",\"Julius Caesar\",\"King Lear\",\"Love's Labor's Lost\",\n                        \"Macbeth\",\"The Merchant of Venice\",\"Much Ado About Nothing\",\"Measure for Measure\",\"The Merry Wives of Windsor\",\"Othello\",\n                        \"Pericles\",\"Richard II\",\"Richard III\",\"Romeo and Juliet\",\"The Taming of the Shrew\",\"The Tempest\",\"Timon of Athens\",\n                        \"Titus Andronicus\",\"Troilus and Cressida\",\"Two Gentlemen of Verona\",\"Twelfth Night\",\"A Winter's Tale\"];  \n            var playFiles = ['all_well','as_you','a_and_c','com_err','coriolan','cymbelin', 'dream','hamlet',\n                'hen_iv_1','hen_iv_2','hen_v','hen_viii','hen_vi_1','hen_vi_2','hen_vi_3','john','j_caesar',\n                'lear','lll','macbeth','merchant','much_ado', 'm_for_m','m_wives','othello','pericles',\n                'rich_ii','rich_iii','r_and_j','taming','tempest','timon','titus','troilus','two_gent','t_night', \n                'win_tale'];\n            \n            function keys(obj){\n                var keys = [];\n                for(var key in obj)\n                {\n                    if(obj.hasOwnProperty(key))\n                {\n                    keys.push(key);\n                }\n                 }\n                return keys;\n               }\n               \n            function renderLineGraph(namea, name2, file, classname){\n                name1 = namea.replace(/\\s/g, \"\");\n                name2 = name2.replace(/\\s/g, \"\");\n                                console.log(name1);\n                console.log(name2);\n                var margin = {top: 480, right: 20, bottom: 30, left: 350},\n    width = 840 - margin.left - margin.right,\n    height = 730 - margin.top - margin.bottom;\n\n\nvar x = d3.scale.linear()\n    .range([0, width]);\n\nvar y = d3.scale.linear()\n    .range([height, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\nvar line = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d[\"lineNo\"]); })\n    .y(function(d) { return y(d[name1+\"2\"+name2]); });\n\nvar area = d3.svg.area()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d[\"lineNo\"]); })\n    .y1(function(d) { return y(d[name1+\"2\"+name2]); });\n    \n    var lgraph = d3.select(\"#nets\")\n                    .append(\"svg:g\")\n                    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n                    .attr(\"class\", classname)\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nd3.csv(\"timeSeries/\"+file, function(error, data) {\n  data.forEach(function(d) {\n    d[\"lineNo\"] = +d[\"lineNo\"];\n    d[name1+\"2\"+name2]= +d[name1+\"2\"+name2];\n    d[name2+\"2\"+name1] = +d[name2+\"2\"+name1];\n  });\n\n  x.domain(d3.extent(data, function(d) { return d['lineNo']; }));\n\n  y.domain([\n    d3.min(data, function(d) { return Math.min(d[name1+\"2\"+name2], d[name2+\"2\"+name1]); }),\n    d3.max(data, function(d) { return Math.max(d[name1+\"2\"+name2], d[name2+\"2\"+name1]); })\n  ]);\n\n  lgraph.datum(data);\n\n  lgraph.append(\"clipPath\")\n      .attr(\"id\", \"clip-below\")\n    .append(\"path\")\n      .attr(\"d\", area.y0(height));\n\n    lgraph.append(\"clipPath\")\n      .attr(\"id\", \"clip-above\")\n    .append(\"path\")\n      .attr(\"d\", area.y0(0));\n\n  lgraph.append(\"path\")\n      .attr(\"class\", \"area above\")\n      .attr(\"clip-path\", \"url(#clip-above)\")\n      .attr(\"d\", area.y0(function(d) { return y(d[name2+\"2\"+name1]); }));\n\n  lgraph.append(\"path\")\n  .attr(\"id\", \"s3\")\n      .attr(\"class\", \"area below\")\n      .attr(\"clip-path\", \"url(#clip-below)\")\n      .attr(\"d\", area);\n\n lgraph.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  lgraph.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + (height+17) + \")\")\n      .call(xAxis)\n      .append(\"text\")\n      .attr(\"y\", 20)\n      .attr(\"x\", 60)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Line Number\");\n\n  lgraph.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sentiment Valence\");\n      \n      var thing = lgraph.append(\"g\")\n    .attr(\"id\", \"thing\")\n    .style(\"fill\", \"black\");\n \nthing.append(\"text\")\n    .style(\"font-size\", \"12px\")\n    .attr(\"x\", 18)\n      .attr(\"dy\", \".99em\")\n      .style(\"text-anchor\", \"start\")\n  .append(\"textPath\")\n    .attr(\"xlink:href\", \"#s3\")\n    .text(namea);\n \n\n    \n});\n\n            }\n               \n            function lineGraphHelper(name, play, people, classname){\n                var opposChar = 0\n                return function(d,i) {\n                    d3.select(\".sentTable\").remove();\n                    opposChar = people[i][0];\n                    renderLineGraph(name, opposChar, play+\".csv\", classname)\n                };\n            }\n            \n            function renderTable(name, play, sentiment, placements, people,classname){\n                var table = d3.select(\"#nets\")\n                    .append(\"svg:g\")\n                    .attr(\"class\", classname)\n                    .attr(\"transform\", \"translate(\" + 370 + \",\" + 440 + \")\");\n                \n                var chars = table.selectAll('text')\n                .data(placements)\n                .enter()\n                .append(\"text\")\n                .text(function(d, i) {return people[i][0]+\":        \"+people[i][1];})\n\t\t.attr(\"x\", function(d) {return d[0];})\n\t\t.attr(\"y\", function(d) {return d[1]+5;})\n\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t.attr(\"font-size\", \"12px\")\n\t\t.attr(\"fill\", \"gray\")\n                .attr(\"text-anchor\", \"left\")\n                .on(\"mouseover\", function(){d3.select(this).attr(\"fill\", \"red\");})\n                .on(\"mouseout\", function(d,i){\n                        d3.select(this).attr(\"fill\", \"gray\");\n                })\n                .on('click',lineGraphHelper(name, play, people, \"lineGraph\"));\n                \n            }\n            \n             function tableHelper(play, sentiment) {\n                return function(d) {\n                    d3.select(\".sentTable\").remove();\n                    d3.select(\".lineGraph\").remove();\n                    var people = [];\n                    keys(sentiment).forEach(function(k) {\n                        if (k in sentiment[d.name]){\n                            if(sentiment[d.name][k]!=0 && k!=d.name){\n                            people.push([k,sentiment[d.name][k]]);\n                            }\n                        }\n                    });\n                    var placements = [];\n                    var yVar = 10;\n                    var xVar = 0;\n                    for (i=0; i<people.length; i++){\n                        if (yVar>290){\n                            yVar = 10;\n                            xVar = 170;\n                        }\n                        placements.push([xVar,yVar+20])\n                        yVar+=20;\n                    };\n                    people.sort(function(a, b) { \n                           return b[1] > a[1]?1:-1;\n                        });\n                    renderTable(d.name, play, sentiment, placements, people, \"sentTable\");\n                    \n            }\n             }\n            \n            function fade(node, opacity, linkedByIndex, link, sentiment) {\n                return function(d) {\n                    node.style(\"stroke-opacity\", function(o) {\n                        thisOpacity = isConnected(d, o, linkedByIndex) ? 1 : opacity;\n                        this.setAttribute('fill-opacity', thisOpacity);\n                        return thisOpacity;\n                    });\n                    link.style(\"stroke-opacity\", opacity).style(\"stroke-opacity\", function(o) {\n                        return o.source === d || o.target === d ? 1 : opacity;\n                    });\n                    if (opacity==0.1 || opacity==0.101){\n                        node.style(\"stroke\", function(o) {\n                        var nodeColor = \"none\"\n                        if (isConnected(d, o, linkedByIndex) & d.name!=o.name){\n                            if (sentiment[d.name][o.name]>0){\n                              nodeColor = \"green\";  \n                            }\n                            else if (sentiment[d.name][o.name]<0){\n                                nodeColor = \"red\";\n                            };\n                        };\n                        this.setAttribute('fill', nodeColor);\n                        return nodeColor;\n                    });\n                    }\n                    else{\n                        node.style(\"stroke\", function(o) {\n                        this.setAttribute('fill', \"none\");\n                        return \"none\";\n                    });\n                    };\n                };\n                \n            }\n            \n            function isConnected(a, b, linkedByIndex) {\n                return linkedByIndex[a.index + \",\" + b.index] || linkedByIndex[b.index + \",\" + a.index] || a.index == b.index;\n            }\n            \n            \n            function renderNetwork(classname, play){\n                var width = 300;\n                var height = 300;\n                var color = d3.scale.category20();\n                var force = d3.layout.force()\n                    .charge(-220)\n                    .linkDistance(100)\n                    .size([width, height]);\n                    \n                var net = d3.select(\"#nets\")\n                    .append(\"svg:g\")\n                    .attr(\"class\", classname)\n                    .attr(\"transform\", \"translate(\" + 380 + \",\" + 100 + \")\");\n                \n                d3.json(\"networks/\"+play+\".json\", function(error, graph) {\n                    d3.json(\"sentiment/\"+play+\".json\", function(error,sentiment){\n                    force\n                        .nodes(graph.nodes)\n                        .links(graph.links)\n                        .start();\n \n                   var linkedByIndex = {};\n                        graph.links.forEach(function(d) {\n                        linkedByIndex[d.source.index + \",\" + d.target.index] = 1;\n                        });\n\n\n                    var link = net.selectAll(\"line.link\")\n                        .data(graph.links)\n                        .enter().append(\"line\")\n                        .attr(\"class\", \"link\");\n\n                    var node = net.selectAll(\".circle\")\n                        .data(graph.nodes)\n                        .enter().append(\"g\")\n                        .attr(\"class\", \"node\")\n                        .call(force.drag);\n                    \n                    node.append(\"circle\")\n                        .attr(\"r\", 7)\n                        .style(\"fill\", \"black\")\n                        .on(\"mouseover\", fade(node, .1, linkedByIndex, link, sentiment))\n                        .on(\"mouseout\", fade(node, 1, linkedByIndex, link, sentiment))\n                        .on(\"click\", tableHelper(play,sentiment));\n                    \n                    node.append(\"text\")\n                        .attr(\"dx\", 12)\n                        .attr(\"dy\", \".35em\")\n                        .attr(\"font-family\", \"sans-serif\")\n                        .attr(\"font-size\", \"12px\")\n                        .attr(\"fill\", \"black\")\n                        .text(function(d) { return d.name });\n                    \n                    node.append(\"title\")\n                        .text(function(d) { return d.name; });\n\n                    force.on(\"tick\", function() {\n                        link.attr(\"x1\", function(d) { return d.source.x; })\n                            .attr(\"y1\", function(d) { return d.source.y; })\n                            .attr(\"x2\", function(d) { return d.target.x; })\n                            .attr(\"y2\", function(d) { return d.target.y; });\n\n                            node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n                    });\n                });\n                });\n            }\n            \n            svg = d3.select(\"body\")\n                        .append(\"svg\")\n                        .attr(\"width\", w)\n                        .attr(\"height\", h)\n                        .attr('id', 'nets');    \n            \n            svg.selectAll(\"text\")\n                .data(initLocation)\n                .enter()\n                .append(\"text\")\n                .text(function(d, i) {return books[i];})\n\t\t.attr(\"x\", function(d) {return d[0];})\n\t\t.attr(\"y\", function(d) {return d[1]+5;})\n\t\t.attr(\"font-family\", \"sans-serif\")\n\t\t.attr(\"font-size\", \"12px\")\n\t\t.attr(\"fill\", \"gray\")\n                .attr(\"text-anchor\", \"left\")\n                .on(\"mouseover\", function(){d3.select(this).attr(\"fill\", \"red\");})\n                .on(\"mouseout\", function(d,i){\n                    if (clicked!=i){\n                        d3.select(this).attr(\"fill\", \"gray\");\n                    }\n                })\n                .on('click', function(d,i){\n                    if (clicked==-1){\n                        d3.select(this).attr(\"fill\", \"red\");\n                        renderNetwork(\"network1\", playFiles[i]);\n                        clicked = i;\n                    }\n                    else if (clicked == i){\n                        clicked = -1;\n                        d3.select(\".network1\").remove();\n                        d3.select(\".sentTable\").remove();\n                        d3.select(\".lineGraph\").remove();\n                        d3.select(this).attr(\"fill\", \"gray\");\n                    }\n                    else if (clicked != i){\n                        d3.select(\".network1\").remove();\n                        d3.select(\".lineGraph\").remove();\n                        d3.select(\".sentTable\").remove();\n                        svg.selectAll(\"text\").attr(\"fill\", \"gray\");\n                        d3.select(this).attr(\"fill\", \"red\");\n                        renderNetwork(\"network1\", playFiles[i]);\n                        clicked = i;\n                    };\n                });\n              \n        </script>\n        <p align=\"center\" style=\"width:1000px;font-family:sans-serif; font-size: 12px;\"><i>Shakespeare Sentiment Explorer (Eric Nalisnick, 2013)</i></p>\n    </body>\n</html>", "encoding": "ascii"}