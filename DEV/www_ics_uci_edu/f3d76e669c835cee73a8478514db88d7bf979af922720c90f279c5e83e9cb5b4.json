{"url": "https://www.ics.uci.edu/~eppstein/junkyard/untetra/schoen.pov", "content": "// Sch\u0161nhardt Polyhedron\n#include \"colors.inc\"\t// Standard Color definitions\n#include \"textures.inc\"\t// Standard Texture definitions\n\ncamera\n{\n  location  <0.0 , 2 ,-4.5>\n  look_at   <0.0 , 0.0 , 0.0>\n  right x\n}\n\n// create a regular point light source\nlight_source\n{\n  0*x // light's position (translated below)\n  color red 1.5  green 1.0  blue 1.0  // light's color\n  translate <-10, 20, -5>\n}\nlight_source\n{\n  0*x // light's position (translated below)\n  color red 1.0  green 1.5  blue 1.0  // light's color\n  translate <0, 20, -15>\n}\nlight_source\n{\n  0*x // light's position (translated below)\n  color red 1.0  green 1.0  blue 1.5  // light's color\n  translate <10, 20, -5>\n}\n\n// Light gray ground plane\nplane\n{\n  y, -1.0\n  texture {\n    pigment { color rgb <0.6,0.6,0.6> }\n    finish { reflection 0.2 }\n  }\n}\n\n// Create an infinite sphere around scene and allow any texture on it\nsky_sphere\n{\n  pigment\n  {\n    gradient y\n    color_map { [0.0 color blue 0.6] [1.0 color rgb 1] }\n  }\n}\n\n#declare ytop=1.5\n\n// triangle or smooth-triangle mesh FINITE (no CSG) shape\n// NOTE: Each triangle can be independently textured,\n//       remaining triangles get texture at bottom\nmesh\n{\n  triangle { <-2, ytop, 0>, <1, ytop, sqrt(3)>, <1,ytop,-sqrt(3)> }\n  triangle { <0, -1, 2>, <sqrt(3), -1, -1>, <-sqrt(3), -1, -1> }\n  triangle { <-2, ytop, 0>, <1, ytop, sqrt(3)>, <-sqrt(3), -1, -1> }\n  triangle { <1, ytop, sqrt(3)>, <1,ytop,-sqrt(3)>, <0, -1, 2> }\n  triangle { <-2, ytop, 0>, <1,ytop,-sqrt(3)>, <sqrt(3), -1, -1> }\n  triangle { <0, -1, 2>, <-sqrt(3), -1, -1>, <1, ytop, sqrt(3)> }\n  triangle { <sqrt(3), -1, -1>, <-sqrt(3), -1, -1>, <-2, ytop, 0> }\n  triangle { <0, -1, 2>, <sqrt(3), -1, -1>, <1,ytop,-sqrt(3)> }\n  texture { Spun_Brass }\n  rotate 6*clock*y\n}\n", "encoding": "Windows-1252"}