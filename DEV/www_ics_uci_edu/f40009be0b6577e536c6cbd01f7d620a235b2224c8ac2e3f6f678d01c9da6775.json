{"url": "https://www.ics.uci.edu/~eppstein/pubs/j-algo.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nAlgorithmica\n</h2>\n<ul>\n<li><b>Visibility with a moving point of view</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\n<a href=\"//www.cs.Princeton.EDU/~dpd/\">D.P. Dobkin</a>,\nD. Eppstein, and \n<a href=\"//www.lac.uic.edu/NCDM/grossman.html\">R. Grossman</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=320188\">\n<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1990, pp. 107&ndash;118</a>.<br>\n<a href=\"BerDobEpp-Algo-94.pdf\"><i>Algorithmica</i> 11: 360&ndash;378, 1994</a>.\n<p>\nAn investigation of 3d visibility problems in which the viewing\nposition moves along a straight flight path, with various\nassumptions on the complexity of the viewed scene.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Visibility with a moving point of view\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Visibility-with-a-moving-point-of-view.html\">Citations</a>)\n<p>\n<li><b>Asymptotic speed-ups in constructive solid geometry</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-92-87.pdf\">Tech. Rep. 92-87</a>, ICS, UCI, 1992.<br>\n<i>Algorithmica</i> 13: 462&ndash;471, 1995.\n<p>\nFinds boundary representations of CSG objects.\nUses techniques from dynamic graph algorithms,\nincluding a tree partitioning technique of Frederickson\nand a new data structure for maintaining the value\nof a Boolean expression with changing variables\nin time O(log <i>n</i> / log log <i>n</i>) per update.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Asymptotic speed-ups in constructive solid geometry\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Asymptotic-speed-ups-in-constructive-solid-geometry.html\">Citations</a>)\n<p>\n<li><b>Diameter and treewidth in minor-closed graph families</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/math.CO/9907126\">arXiv:math.CO/9907126</a>.<br>\n<i>Algorithmica</i> 27: 275&ndash;291, 2000\n(special issue on treewidth, graph minors, and algorithms).\n<p>\nThis paper introduces the <i>diameter-treewidth\nproperty</i> (later known as <i>bounded local treewidth</i>): a\nfunctional relationship between the diameter of its graph and its treewidth.\nPreviously known results imply that planar graphs have\nbounded local treewidth; we characterize the\nother minor-closed families with this property. Specifically,\nminor-closed family F has bounded local treewidth if and only if there\nexists an <i>apex graph</i> G that is not in F; an apex graph is a graph\nthat can be made planar by removing a single vertex.\nThe minor-free families that exclude an apex graph (and therefore have\nbounded local treewidth) include the bounded-genus\ngraphs (for which, as with planar graphs, we show a linear bound for the\ntreewidth as a function of the diameter) and K<sub>3,a</sub>-free graphs.  As\na consequence, subgraph isomorphism for subgraphs of bounded size and\napproximations to several NP-hard optimization problems can be computed\nefficiently on these graphs, extending previous results for planar\ngraphs.\n<p>Some of these results\nwere announced in the conference version of\n\"<a href=\"p-psgi.html\">subgraph isomorphism for planar graphs and related\nproblems</a>\" but not included in the journal version. Since its\npublication, there have been many more works on local treewidth. The class of\nproblems that could be solved quickly on graphs of bounded local\ntreewidth was extended and classified by Frick and Grohe, \"<a\nhref=\"//doi.org/10.1145/504794.504798\">Deciding first-order\nproperties of locally tree-decomposable structures</a>\", <i>J. ACM</i>\n48: 1184&ndash;1206, 2001;\nthe proof that bounded local treewidth is equivalent to having an\nexcluded apex minor was simplified, and the dependence of the treewidth\non diameter\nimproved, by a subsequent paper of Demaine and Hajiaghayi, \"<a href=\"//erikdemaine.org/papers/DiameterTreewidth_Algorithmica/\">Diameter and\ntreewidth in minor-closed graph families, revisited</a>\", <i>Algorithmica</i>\n40: 211&ndash;215, 2004. The concept of local treewidth is the basis for the\ntheory of <i>bidimensionality</i>, a general framework for\nfixed-parameter-tractable algorithms and approximation algorithms in\nminor-closed graph families; for a survey, see Demaine and Hajiaghayi,\n\"<a href=\"//erikdemaine.org/papers/BidimensionalSurvey_CJ/\">The\nbidimensionality theory and its algorithmic applications</a>\", <i>The\nComputer J.</i> 51: 292&ndash;302, 2008.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Diameter and treewidth in minor-closed graph families\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Diameter-and-treewidth-in-minor-closed-graph-families.html\">Citations</a>)\n<p>\n<li><b>Algorithms for coloring quadtrees</b>.<br>\n<a href=\"//www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nD. Eppstein, and\nB. Hutchings.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9907030\">arXiv:cs.CG/9907030</a>.<br>\n<i>Algorithmica</i> 32 (1): 87&ndash;94, 2002.\n<p>\nWe consider several variations of the problem of\n<a href=\"graph-color.html\">coloring</a> the squares of a\n<a href=\"geom-qt.html\">quadtree</a> so that no two adjacent squares are\ncolored alike.\nWe give simple linear time algorithms for 3-coloring balanced quadtrees\nwith edge adjacency, 4-coloring unbalanced quadtrees with edge\nadjacency, and 6-coloring balanced or unbalanced quadtrees with corner\nadjacency.  The number of colors used by the first two algorithms is\noptimal; for the third algorithm, 5 colors may sometimes be\nneeded.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Algorithms for coloring quadtrees\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Algorithms-for-coloring-quadtrees.html\">Citations</a>)\n<p>\n<li><b>Guest editor's forward to special issue on dynamic graph algorithms</b>.<br>\nD. Eppstein.<br>\n<i>Algorithmica</i> 22 (3): 233&ndash;234, 1998.\n<p>\n<li><b>Confluent layered drawings</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\nand\nJ. Meng.<br>\n12th Int. Symp. Graph Drawing, New York, 2004.<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 3383, 2004, pp. 184&ndash;194.<br>\n<a href=\"//arxiv.org/abs/cs.CG/0507051\">arXiv:cs.CG/0507051</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-006-0159-8\"><i>Algorithmica</i> 47 (4): 439&ndash;452 (special issue for Graph Drawing), 2007</a>.\n<p>\nDescribes a <a href=\"gdraw.html\">graph drawing</a> technique\ncombining ideas of\n<a href=\"p-confluent.html\">confluent drawing</a>\nwith Sugiyama-style layered drawing.\nUses a reduction to <a href=\"graph-color.html\">graph coloring</a>\nto find and visualize sets of bicliques in each layer.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Confluent layered drawings\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Confluent-layered-drawings.html\">Citations</a> &ndash;\n<a href=\"//gdea.informatik.uni-koeln.de/archive/00000586/\">GDEA</a>)\n<p>\n<li><b>Track layouts, layered path decompositions, and leveled\nplanarity</b>.<br>\n<a href=\"//michaeljbannister.com/\">M. J. Bannister</a>,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>, and\n<a href=\"//engineering.uottawa.ca/eecs/people/dujmovic-vida\">V. Dujmovi&#263;</a>,\nD. Eppstein, and\n<a href=\"//users.monash.edu.au/~davidwo/\">D. R. Wood</a>.<br>\n<a href=\"//arxiv.org/abs/1506.09145\">arXiv:1506.09145</a>.<br>\n<i>24th Int. Symp. Graph Drawing</i>, Athens, Greece, 2016.<br>\n<a href=\"//doi.org/10.1007/978-3-319-50106-2_38\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9801 (2016), pp. 499&ndash;510</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-018-0487-5\"><i>Algorithmica</i> 81 (4): 1561&ndash;1583, 2019</a>.\n<p>\nWe introduce the concept of a layered path decomposition, and show that\nthe layered pathwidth can be used to characterize the leveled planar\ngraphs. As a consequence we show that finding the minimum number of\ntracks in a track layout of a given graph is NP-complete.\nThe GD version includes only the parts concerning track layout,\nand uses the title \"Track Layout is Hard\".\n<p>\n<li><b>On the planar split thickness of graphs</b>.<br>\nD. Eppstein,\n<a href=\"//www1.informatik.uni-wuerzburg.de/en/staff/kindermann_philipp/\">P. Kindermann</a>,\n<a href=\"//www.cs.arizona.edu/~kobourov/\">S. G. Kobourov</a>,\n<a href=\"//www.diei.unipg.it/STAFF/liotta.htm\">G. Liotta</a>,\n<a href=\"//cs.uwaterloo.ca/~alubiw/Site/Anna_Lubiw.html\">A. Lubiw</a>,\n<a href=\"//www-ljk.imag.fr/membres/Aude.Maignan/\">A. Maignan</a>,\n<a href=\"//www.cs.umanitoba.ca/~jyoti/research.html\">D. Mondal</a>,\n<a href=\"//cs.uwaterloo.ca/~hvosough/\">H. Vosoughpour</a>,\nS. Whitesides, and\n<a href=\"//www.cs.uleth.ca/~wismath/\">S. Wismath</a>.<br>\n<a href=\"//arxiv.org/abs/1512.04839\">arXiv:1512.04839</a>.<br>\n<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN\n2016)</i>, Ensenada, Mexico</i>.<br>\n<a href=\"//doi.org/10.1007/978-3-662-49529-2_30\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 403&ndash;415</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0328-y\"><i>Algorithmica</i> 80\n(3): 977&ndash;994 (special issue for LATIN), 2018</a>.\n<p>\nWe study the problem of splitting the vertices of a given graph into a\nbounded number of sub-vertices (with each edge attaching to one of the\nsub-vertices) in order to make the resulting graph planar.\nIt is NP-complete, but can be approximated to within a constant factor,\nand is fixed-parameter tractable in the treewidth.\n<p>\n(<a href=\"EppKinKob-LATIN-16-slides.pdf\">Slides</a>)\n<p>\n<li><b>From discrepancy to majority</b>.<br>\nD. Eppstein\nand <a href=\"//www.ics.uci.edu/~dan/\">D. S. Hirschberg</a>.<br>\n<a href=\"//arxiv.org/abs/1512.06488\">arXiv:1512.06488</a>.<br>\n<i>Proc. 12th Latin American Theoretical Informatics Symposium (LATIN\n2016)</i>, Ensenada, Mexico.<br>\n<a href=\"//doi.org/10.1007/978-3-662-49529-2_29\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9644 (2016), pp. 390&ndash;402</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0303-7\"><i>Algorithmica</i> 80\n(4): 1278&ndash;1297, 2018</a>.\n<p>\nWe provide upper and lower bounds on the query complexity of a problem\nin which the input is a collection\nof two-colored items, and the problem is to either find an item of the\nmajority color or to determine that there is no majority,\nby performing queries that determine the discrepancy of fixed-size\nsubsets of the items.\n<p>\n(<a href=\"EppHir-LATIN-16-slides.pdf\">Slides</a>)\n<p>\n<li><b>Spanning trees in multipartite geometric graphs</b>.<br>\n<a href=\"//cglab.ca/~biniaz/\">A. Biniaz</a>,\n<a href=\"//jitbose.ca/\">P. Bose</a>,\nD. Eppstein,\n<a href=\"//people.scs.carleton.ca/~maheshwa/\">A. Maheshwari</a>,\n<a href=\"//cglab.ca/~morin/\">P. Morin</a>, and\n<a href=\"//people.scs.carleton.ca/~michiel/\">M. Smid</a>.<br>\n<a href=\"//arxiv.org/abs/1611.01661\">arXiv:1611.01661</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-017-0375-4\"><i>Algorithmica</i> 80\n(11): 3177&ndash;3191, 2018</a>.\n<p>\nWe provide near-linear-time algorithms for minimum and maximum spanning\ntrees on Euclidean graphs given by multicolored point sets, where each\npoint forms a vertex, and each bichromatic pair of points forms an edge\nwith length equal to their Euclidean distance.\n<p>\n<li><b>Maximum plane trees in multipartite geometric graphs</b>.<br>\n<a href=\"//cglab.ca/~biniaz/\">A. Biniaz</a>,\n<a href=\"//jitbose.ca/\">P. Bose</a>,\n<a href=\"//cglab.ca/~jdecaruf/\">J.-L. De Carufel</a>,\nK. Crosbie,\nD. Eppstein,\n<a href=\"//people.scs.carleton.ca/~maheshwa/\">A. Maheshwari</a>,\n<a href=\"//people.scs.carleton.ca/~michiel/\">M. Smid</a>.<br>\n15th Algorithms and Data Structures Symp. (WADS 2017), St. John's, Newfoundland.<br>\n<a href=\"//doi.org/10.1007/978-3-319-62127-2_17\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> (2017), pp. 193&ndash;204</a>.<br>\n<a href=\"//doi.org/10.1007/s00453-018-0482-x\"><i>Algorithmica</i> 81 (4): 1512&ndash;1534, 2019</a>.\n<p>\nWe consider problems of constructing the maximum-length plane (non-self-crossing) spanning\ntree on Euclidean graphs given by multicolored point sets, where each\npoint forms a vertex, and each bichromatic pair of points forms an edge\nwith length equal to their Euclidean distance.\nWe show that several such problems can be efficiently approximated.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"jour.html\">Journals</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}