{"url": "https://www.ics.uci.edu/~theory/269/190118.html", "content": "<!DOCTYPE html>\n<html>\n<head>\n<title>Theory Seminar, Januray 18, 2019</title>\n<link rel=\"stylesheet\" href=\"../stylesheet.css\" type=\"text/css\">\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n  tex2jax: {inlineMath: [['$','$'], ['\\\\(','\\\\)']]}\n});\n</script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"\nalt=\"Center for Algorithms and Theory of Computation\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Winter 2019: Theory Seminar</a><br>\nBren Hall, Room 1423, 1pm</h2>\n<hr />\n<h2>January 18, 2019:</h2>\n<h1>Taming The Knights Tour: Minimizing Turns and Crossings\n</h1>\n<h2>Juan Besa</h2>\n\n<p>\nThe classic Knight\u2019s Tour Problem asks for a sequence of knight moves in an n\u00d7n\nchess board that allows the knight to visit every square exactly once and return to\nthe starting position. There is a long history of algorithms for producing knight\ntours. However, most of them produce complex tours. We consider\nthe problem of finding knight\u2019s tours minimizing two metrics of complexity: the\nnumber of turns and the number of crossings. A turn is when two consecutive\nknight moves in the tour go in different directions (i.e., when the three cells\ninvolved are not collinear); a crossing is when the line segment connecting the\ncells of two knight moves intersect. To the best of our knowledge, these metrics\nare new in this context, but they are often studied in geometric contexts and,\nin the case of crossings, in graph drawing.\n</p>\n\n<p>\nAuthors: Juan Jose Besa, Timothy Johnson, Nil Mamano, and Martha C. Osegueda</p>\n\n</body></html>\n", "encoding": "utf-8"}