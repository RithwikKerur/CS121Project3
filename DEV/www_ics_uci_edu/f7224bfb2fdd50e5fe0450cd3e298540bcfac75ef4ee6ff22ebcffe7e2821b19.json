{"url": "https://www.ics.uci.edu/~kibler/AIProjects.html", "content": "<h2>  AI Project Examples  </h2>\nIn theory, algorithms are evaluated by performance measures such as time and space complexity. In AI these concerns are secondary to how the algorithm performs relative to people. You should consider how you will evaluate your program from the outset. You should also pay a lot of attention to the user-interface. Problems or confusing aspects of your interface are most easily found by those not involved with the project. The suggestions below only provide some examples. You might look through any AI text for more ideas. It's best to choose a topic that you are very interested in.\n\nAll code will be done in Java. Each object should be documented with who wrote the code. Moreover and very important, each method should be documented with time and space complexity when it is not constant. Usually this is not difficult, but occasionally it is very hard. If you can't do it, say so or discuss it with me or the class. \n\n In the first lectures I describe some possible projects. You may do your own project, but it needs to be well-defined, demonstratably doable within one quarter, involves some AI method,  and approved by me.\n<ul>\n <h3> Machine Learning</h3> \n Note: Weka is a freely available, open source Java program for Machine Learning.\n<li>  Decision Trees. (Possible research result).  Extend Weka to handle another version of DT algorithms that better deals with continuous values. \n\n<li> Clustering. (Possible research result). MOP. Extend Weka to handle co-occurrence evaluation of clustering. Currently no program properly guesses the number of clusters.\n\n<li>Function Hierarchical Clustering (Possible research result). MOP. Extend hierarchial clustering to use functional information, such as the Gene Ontology (GO)\n \n<li>Kernel Perceptron: (Possible research result) MOP. Combine perceptron training with Kernel method as developed within the Support vector context. \n<li> FingerPrint Identification: (Possible research result) POP. Choose a representation and apply Machine Learning methods. High visibility problem. Web site for data sets and algorithms.\n<li> Face Recognition. (Possible research result). POP. Similar to fingerprint recognition. Will become increasingly important.  Web site for data sets and algorithms.          \n\n<h3> Bioinformatics  </h3>                            \n<li> Visualization. Code various alignment algorithms (local, global, multiple) and display results in a user friendly way.\n\n<li> <b>BiMotif</b> finding:  (Possible Research results). POP.  Reimplement and improve upon the BioProspector approach for finding pairs of short patterns\n<li> <b>Motif </b>finding: (possible Research result). POP.  Reimplement Gibbs sampling and evaluate various alternatives for finding motifs.\n\n<h3>Game Playing</h3>\n<li> Perfect Information two person game. Implement alpha-beta for, say, the Othello game.  \n\n<li>  Multiple person game (e.g. hearts/ scrabble) or incomplete information game  (e.g. backgammon, poker) Implement  simulation-based decision making algorithm  \n\n<li>   Bridge Bidder. Adopt an expert system approach to bidding. This needs to support explanation.\n\n<h3> Natural Language Processing </h3>\n\n<li>   Form the most likely function from several text descriptions. Blast returns several similar genes with different functions. Using Gene Ontology, form a summary description.\n<li> Take a simple child story and try to make common sense inferences about the story. This might best be done in Prolog.\n\n<h3> Projects from Russell and Norvig</h3>\n  <li> CAI: Illustrate the various search algorithms, i.e. provide a graphical demonstration of how the dfs, bfs, iterative deepening, A* work.\n <li> Hidden Markov Models: Develop the algorithm and provide illustrative examples of how it would works. Also allow users to select their own data for analysis by the HMM.\n <li> Neural Nets: Similar to above. Some illustrate examples (data sets to illustrate certain problems) plus ability to enter own data sets.\n  <li> Planners:  Choose an example planner from R&N and build several problem domains that the planner would work on.\n  <li> Template idea: take any chapter or two from Russell and Norvig an build a system to illustrate the basic algorithm, whether it be in logical reasoning, constraint satisfaction, image processing, etc. \n \n </ul>\n", "encoding": "ascii"}