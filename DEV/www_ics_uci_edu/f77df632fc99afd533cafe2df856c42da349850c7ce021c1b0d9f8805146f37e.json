{"url": "https://www.ics.uci.edu/~jmoorkan/vhdlref/architec.html", "content": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n<!-- base href=\"http://www.vdlande.com/VHDL/architec.html\" --><title>VHDL Reference Guide - Architecture</title></head><body bgcolor=\"mintcream\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: -1px -1px 0pt; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: 12px; padding: 8px; background: rgb(221, 221, 221) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-family: arial,sans-serif; font-style: normal; font-variant: normal; font-size: 13px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; color: rgb(0, 0, 0); font-weight: normal; text-align: left;\">This is Google's cache of <a href=\"http://www.vdlande.com/VHDL/architec.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">http://www.vdlande.com/VHDL/architec.html</a>. It is a snapshot of the page as it appeared on Sep 11, 2009 05:11:03 GMT. The <a href=\"http://www.vdlande.com/VHDL/architec.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Learn more</a><br><br><div style=\"float: right;\"><a href=\"http://74.125.155.132/search?q=cache:mF4j-ZoWCdoJ:www.vdlande.com/VHDL/architec.html+site:www.vdlande.com+VHDL+reference+guide+vdlande&amp;hl=en&amp;client=firefox-a&amp;gl=us&amp;strip=1\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background: rgb(255, 255, 102) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-weight: bold;\">vhdl</span>&nbsp;These terms only appear in links pointing to this page: <span style=\"font-weight: bold;\">reference</span>&nbsp;<span style=\"font-weight: bold;\">guide</span>&nbsp;<span style=\"font-weight: bold;\">vdlande</span>&nbsp;&nbsp;</div></div></div><div style=\"position: relative;\">\n\n\n\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\">\n<caption><b>Architecture</b></caption>\n<tbody><tr><td colspan=\"3\"><hr></td></tr>\n<tr>\n<td bgcolor=\"lightcyan\">Secondary Unit</td>\n<td></td>\n<td bgcolor=\"lightgreen\"></td>\n</tr>\n</tbody></table>\n\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Syntax</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td><pre><b>architecture</b> architecture_name <b>of</b> entity_name is\n\tdeclarations\n<b>begin</b>\n\tconcurrent statements\n<b>end</b> architecture_name;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\nSee LRM section 1.2\n\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td align=\"right\"><hr width=\"200\"></td><td>Rules and Examples</td><td><hr align=\"left\" width=\"200\"></td></tr>\n<tr><td colspan=\"3\">&nbsp;</td></tr>\n<tr>\n<td colspan=\"3\">\n<table border=\"1\">\n<tbody><tr><td>Declarations may typically be any of the following: type, subtype, signal,\nconstant, file, alias, component, attribute, function, procedure,\nconfiguration specification.\n<pre>architecture TB of TB_CPU is\n\tcomponent CPU_IF\n\t\tport   -- port list\n\tend component;\n\tsignal CPU_DATA_VALID: std_ulogic;\n\tsignal CLK, RESET: std_ulogic := '0';\n\tconstant PERIOD : time := 10 ns;\n\tconstant MAX_SIM: time := 50 * PERIOD;\nbegin\n\t-- concurrent statements\nend TB;\n</pre></td></tr></tbody></table></td>\n</tr>\n<tr>\n<td colspan=\"2\">\n<table border=\"1\">\n<tbody><tr><td>The order of concurrent statements is not important -\nbehaviour is defined by data dependencies only:\n<pre>architecture EX1 of CONC is\n\tsignal Z, A, B, C, D : integer;\nbegin\n\tD &lt;= A + B;\n\tZ &lt;= C + D;\nend EX1;\n</pre>\n</td></tr></tbody></table></td>\n<td valign=\"top\">\n<table border=\"1\">\n<tbody><tr><td>Items declared in an architecture are visible in any process or block within it.\n</td></tr></tbody></table></td></tr>\n<tr>\n<td></td>\n<td colspan=\"2\"><table border=\"1\" width=\"100%\"><tbody><tr><td>An equivalent architecture:\n<pre>architecture EX2 of CONC is\n\tsignal Z, A, B, C, D : integer;\nbegin\n\tZ &lt;= C + D;\n\tD &lt;= A + B;\nend EX2;\n</pre></td></tr></tbody></table></td>\n</tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"0\" cellpadding=\"5\" width=\"100%\">\n<tbody><tr>\n<td rowspan=\"6\"><table border=\"1\"><tbody><tr><td>An architecture can contain any mix of component instances, processes or other\nconcurrent statements:\n<pre>architecture TEST of TB_DFF is\n\tcomponent DFF port (CLK, D: in  std_ulogic;\n\t\t\t    Q     : out std_ulogic);\n\tend component;\n\tsignal CLK, D, Q : std_ulogic := '0';\nbegin\n\tUUT: DFF port map (CLK, D, Q);\n\tCLK &lt;= not (CLK) after 25 ns;\n\tSTIMULUS: process\n\tbegin\n\t\twait for 50 ns;\n\t\tD &lt;= '1';\n\t\twait for 100 ns;\n\t\tD &lt;= '0';\n\t\twait for 50 ns;\n\tend process STIMULUS;\nend TEST;\n</pre></td></tr></tbody></table></td>\n<td rowspan=\"3\"></td>\n<td>&nbsp;</td>\n</tr>\n<tr><td>&nbsp;</td></tr>\n<tr><td>&nbsp;</td></tr>\n<tr>\n<td rowspan=\"2\"><table border=\"1\"><tbody><tr><td>An entity can have one or more architectures. which one is used (or \"bound\")\ndepends on the <b>configuration</b></td></tr></tbody></table></td>\n<td>&nbsp;</td></tr>\n<tr><td>&nbsp;</td></tr>\n<tr>\n<td>&nbsp;</td>\n<td>&nbsp;</td>\n</tr>\n<tr>\n</tr>\n</tbody></table>\n</div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td align=\"center\">An architecture cannot be analysed unless the entity it refers to exists in the same design library</td>\n</tr>\n</tbody></table>\n</div>\n\n<div align=\"center\">\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Synthesis Issues</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\nArchitectures are fully supported by synthesis tools, provided the declarations and\nstatements they contain are compatible with synthesis.\n<p>\nConfiguration is not usualy supported by synthesis tools, so only one architecture\nper entity may be analysed. With some tools, this architecture must be in the same\ndesign file as the entity.\n\n</p><div align=\"center\">\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Whats New in '93</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\nIn <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93, the keyword <b>end</b> may be followed by the keyword\n<b>architecture</b>, for clarity and consistency.\n</p><p>\nIn <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93, <b>shared variables</b> may be declared within an architecture.\nShared variables may be accessed by more than one process. However, the language\ndoes not define what happens if two or more processes make conflicting accesses to\na shared variable at the same time.\n</p></div>\n\n<hr width=\"80%\">\n</div></body></html>", "encoding": "ascii"}