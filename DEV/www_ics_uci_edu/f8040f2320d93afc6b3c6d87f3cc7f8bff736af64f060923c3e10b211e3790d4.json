{"url": "https://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node133.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Global References</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Global References\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html3843 HREF=\"node134.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html3841 HREF=\"node129.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html3835 HREF=\"node132.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html3845 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html3844 HREF=\"node134.html\"> Visibility</A>\r\n<B>Up:</B> <A NAME=tex2html3842 HREF=\"node129.html\"> Arrays and Global </A>\r\n<B> Previous:</B> <A NAME=tex2html3836 HREF=\"node132.html\"> Arrays</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION001040000000000000000> Global References</A></H1>\r\n<P>\r\n<A NAME=globrefs>&#160;</A>\r\nTerms stored in normal arrays are copies of <b> setval/2</b> arguments,\r\nand the terms obtained by <b> getval/2</b> are thus not identical\r\nto the original terms, in particular their variables are different.\r\nSometimes it is more convenient or even necessary to be able\r\nto access the original term with its variables, i.e. to have\r\n<i> global variables</i> in the meaning of conventional programming\r\nlanguages.\r\nA typical example is the use of graphical interface: if we want to\r\nmodify the value of a Prolog variable through\r\na graphical user interface, this mechanism has to be used because\r\nthe user interface has no means to access Prolog terms directly.\r\nAnother example are interrupt handlers - they normally cannot access\r\nProlog variables from the interrupted execution, but sometimes\r\nthis is necessary.\r\n<P>\r\n<A NAME=tex2html421 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  offers the possibility to store nonground terms\r\nand to access them even inside predicates that have no common variables\r\nwith the predicate that has stored them.\r\nThey are stored in global variables of special type <tt> global_reference</tt>.\r\nFor example,\r\n<P>\r\n<blockquote> <b> make_array(p, global_reference)</b>\r\n</blockquote>\r\ncreates a global variable <b> p</b> which can be used to store global references\r\nto terms.\r\nThis global variable is accessed and modified in the usual way,\r\nwith <b> setval/2</b>\r\nand <b> getval/2</b>, but there are differences to normal arrays:\r\n<UL><LI> the accessed term is identical to the stored term (with its current\r\nsubstitutions):\r\n<P>\r\n<blockquote> <PRE>[eclipse 1]: make_array(a, global_reference), make_array(b).\r\n\r\nyes.\r\n[eclipse 2]: Term = p(X), setval(a, Term), getval(a, Y), Y == Term.\r\nX = X\r\nY = p(X)\r\nTerm = p(X)\r\nyes.\r\n[eclipse 3]: Term = p(X), setval(b, Term), getval(b, Y), Y == Term.\r\n\r\nno (more) solution.\r\n</PRE></blockquote>\r\n<P>\r\n<LI> the modifications are backtrackable, when the execution fails\r\nover the <b> setval/2</b> call, the previous value of the global variable is restored\r\n<P>\r\n<blockquote> <PRE>[eclipse 4]: setval(a, 1), (setval(a, 2), getval(a, X); getval(a, Y)).\r\nX = 2\r\nY = Y     More? (;) \r\n\r\nX = X\r\nY = 1\r\n</PRE></blockquote>\r\n<P>\r\n<LI> only global variables (arrays with a single element) are supported.\r\n</UL>.\r\n<P>\r\nThere is only a limited number of global references available and their\r\nuse should be considered very carefully.\r\nTheir misuse can lead to very bad programs which are inefficient,\r\ndifficult to understand and difficult to optimize.\r\n<P>\r\n<BR> <HR><A NAME=tex2html3843 HREF=\"node134.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html3841 HREF=\"node129.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html3835 HREF=\"node132.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html3845 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html3844 HREF=\"node134.html\"> Visibility</A>\r\n<B>Up:</B> <A NAME=tex2html3842 HREF=\"node129.html\"> Arrays and Global </A>\r\n<B> Previous:</B> <A NAME=tex2html3836 HREF=\"node132.html\"> Arrays</A>\r\n<BR> <HR> <P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "encoding": "ascii"}