{"url": "https://www.ics.uci.edu/~eppstein/pubs/graph-path.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nPaths in graphs\n</h2>\n<ul>\n<li><b>Ten algorithms for Egyptian fractions</b>.<br>\nD. Eppstein.<br>\n<i>Mathematica in Education and Research</i> 4 (2): 5&ndash;15, 1995.\n<p>\nNumber theory.\nI survey and implement in <i>Mathematica</i> several methods\nfor representing rational numbers as sums of distinct unit fractions.\nOne of the methods involves searching for paths in a certain graph\nusing a <a href=\"p-kpath.html\"><i>k</i> shortest paths</a> heuristic.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Ten algorithms for Egyptian fractions\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Ten-algorithms-for-Egyptian-fractions.html\">Citations</a> &ndash;\n<a href=\"//www.ics.uci.edu/~eppstein/numth/egypt/\">Also available\nin HTML and Mathematica notebook formats</a>)\n<p>\n<li><b>Finding the <i>k</i> shortest paths</b>.<br>\nD. Eppstein.<br>\n<i>35th IEEE Symp. Foundations of Comp. Sci.,</i> Santa Fe, 1994, pp. 154&ndash;165.<br>\n<a href=\"Epp-TR-94-26.pdf\">Tech. Rep. 94-26</a>, ICS, UCI, 1994.<br>\n<a href=\"//doi.org/10.1137/S0097539795290477\">\n<i>SIAM J. Computing</i> 28 (2): 652&ndash;673, 1998</a>.\n<p>\nThis paper presents an algorithm that finds multiple short paths connecting\ntwo terminals in a graph\n(allowing repeated vertices and edges in the paths)\nin constant time per path after a preprocessing stage\ndominated by a single-source shortest path computation.\nThe paths it finds are the <i>k</i> shortest in the graph, where <i>k</i> is a\nparameter given as input to the algorithm.\n<p>\nThe <i>k</i> shortest paths problem has many important applications for finding\nalternative solutions to geographic path planning problems, network\nrouting, hypothesis generation in computational linguistics, and\nsequence alignment and metabolic pathway finding in\nbioinformatics. Although there have been many papers on the\n<i>k</i> shortest paths problem before and after this one, it has become\nfrequently cited in those application areas.\nAdditionally, it marks a boundary in the theoretical study of the problem:\nprior theoretical work largely concerned how quickly the problem could\nbe solved, a line of research that was closed off by the optimal time\nbounds of this paper. Subsequent work has focused instead\non devising efficient algorithms for more complex alternative\nformulations of the problem that avoid the repeated\nvertices and other shortcomings of the alternative paths produced by\nthis formulation.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Finding the $k$ shortest paths\">BibTeX</a> &ndash;\n<a href=\"Epp-SJC-98.pdf\">Full paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Finding-the-k-shortest-paths.html\">Citations</a> &ndash;\n<a href=\"graehl.zip\">Graehl implementation</a> &ndash;\n<a href=\"//terra.act.uji.es/REA/\">Jim&eacute;nez-Marzal implementations</a> &ndash;\n<a href=\"Shibuya.tar.gz\">Shibuya implementation</a> &ndash;\n<a href=\"//www.mat.uc.pt/~eqvm/cientificos/research.html\">Martins implementation</a> &ndash;\n<a href=\"//christophercliff.com/eppstein/\">Cliff OpenStreetMap demo</a> &ndash;\nCiteSeer:\n<a href=\"//citeseer.ist.psu.edu/eppstein94finding.html\">TR '94</a>,\n<a href=\"//citeseer.ist.psu.edu/eppstein98finding.html\">SJC '98</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=299886\">ACM DL</a>)\n<p>\n<li><b>Representing all minimum spanning trees with applications to\ncounting and generation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-50.pdf\">Tech. Rep. 95-50</a>, ICS, UCI, 1995.\n<p>\nShows how to find for any edge weighted graph G an equivalent\ngraph EG such that the <a href=\"mst.html\">minimum spanning trees</a>\nof G correspond one-for-one with the spanning trees of EG.\nThe equivalent graph can be\nconstructed in time O(m+n log n) given a single minimum spanning tree of\nG.  As a consequence one can find fast algorithms for counting, listing,\nand randomly generating MSTs.\nAlso discusses similar\nequivalent graph constructions for\n<a href=\"graph-path.html\">shortest paths</a>, minimum cost flows,\nand <a href=\"graph-match.html\">bipartite matching</a>.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Representing all minimum spanning trees with applications to counting and generation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Representing-all-minimum-spanning-trees-with-applications-to-counting-and-generation.html\">Citations</a>)\n<p>\n<li><b>Finding common ancestors and disjoint paths in DAGs</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-95-52.pdf\">Tech. Rep. 95-52</a>, ICS, UCI, 1995.\n<p>\nThis paper describes algorithms for finding pairs of vertex-disjoint\npaths in a DAG, either connecting two given nodes to a common\nancestor, or connecting two given pairs of terminals.\nThe main results were merged into the journal version of\n\"<a href=\"p-kpath.html\">Finding the <i>k</i> shortest paths</a>\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Finding common ancestors and disjoint paths in DAGs\">BibTeX</a>)\n<p>\n<li><b>Beta-skeletons have unbounded dilation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-15.pdf\">Tech. Rep. 96-15</a>, ICS, UCI, 1996.<br>\n<a href=\"//arXiv.org/abs/cs.CG/9907031\">arXiv:cs.CG/9907031</a>.<br>\n<a href=\"//doi.org/10.1016/S0925-7721(01)00055-4\">\n<i>Comp. Geom. Theory &amp; Applications</i> 23: 43&ndash;52, 2002</a>.\n<p>\nBeta-skeletons are geometric graphs used among other purposes\nfor <a href=\"//www.ics.uci.edu/~eppstein/junkyard/betadil.html\">empirical\nnetwork analysis</a> and minimum weight triangulation.\nA fractal construction shows that, for any beta&gt;0,\nthe beta-skeleton of a point set can have arbitrarily large dilation:\nOmega(n<sup>c</sup>), where c is a constant depending on beta\nand going to zero in the limit as beta goes to zero.\nIn particular this applies to the Gabriel graph.\nWe also show upper bounds on dilation of the same form.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Beta-skeletons have unbounded dilation\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Beta-skeletons-have-unbounded-dilation.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=599525\">ACM DL</a>)\n<p>\n<li><b>Spanning trees and spanners</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-16.pdf\">Tech. Rep. 96-16</a>, ICS, UCI, 1996.<br>\n<i>Handbook of Computational Geometry,</i> J.-R. Sack and J. Urrutia,\neds., Elsevier, 1999, pp. 425&ndash;461.\n<p>\nSurveys results in geometric network design theory, including algorithms for\nconstructing minimum spanning trees and low-dilation graphs.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Spanning trees and spanners\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Spanning-trees-and-spanners.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein98spanning.html\">CiteSeer</a>)\n<p>\n<li><b>An efficient algorithm for shortest paths in vertical and horizontal\nsegments</b>.<br>\nD. Eppstein and\n<a href=\"//www.cs.wayne.edu/~hart/\">D. Hart</a>.<br>\n<a href=\"EppHar-WADS-97.ps.gz\"><i>5th Worksh. Algorithms and Data Structures,</i> Halifax, Nova Scotia, 1997</a>.<br>\nSpringer, <i>Lecture Notes in\nComp. Sci.</i> 1272, 1997, pp. 234&ndash;247.\n<p>\nWe show how to find shortest paths along the segments of\nan arrangement of <i>n</i> vertical and horizontal line segments in the\nplane, in time O(<i>n</i><sup>3/2</sup>).\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#An efficient algorithm for shortest paths in vertical and horizontal segments\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/An-efficient-algorithm-for-shortest-paths-in-vertical-and-horizontal-segments.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein97efficient.html\">CiteSeer</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=673171\">ACM DL</a>)\n<p>\n<li><b>Diameter and treewidth in minor-closed graph families</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/math.CO/9907126\">arXiv:math.CO/9907126</a>.<br>\n<i>Algorithmica</i> 27: 275&ndash;291, 2000\n(special issue on treewidth, graph minors, and algorithms).\n<p>\nThis paper introduces the <i>diameter-treewidth\nproperty</i> (later known as <i>bounded local treewidth</i>): a\nfunctional relationship between the diameter of its graph and its treewidth.\nPreviously known results imply that planar graphs have\nbounded local treewidth; we characterize the\nother minor-closed families with this property. Specifically,\nminor-closed family F has bounded local treewidth if and only if there\nexists an <i>apex graph</i> G that is not in F; an apex graph is a graph\nthat can be made planar by removing a single vertex.\nThe minor-free families that exclude an apex graph (and therefore have\nbounded local treewidth) include the bounded-genus\ngraphs (for which, as with planar graphs, we show a linear bound for the\ntreewidth as a function of the diameter) and K<sub>3,a</sub>-free graphs.  As\na consequence, subgraph isomorphism for subgraphs of bounded size and\napproximations to several NP-hard optimization problems can be computed\nefficiently on these graphs, extending previous results for planar\ngraphs.\n<p>Some of these results\nwere announced in the conference version of\n\"<a href=\"p-psgi.html\">subgraph isomorphism for planar graphs and related\nproblems</a>\" but not included in the journal version. Since its\npublication, there have been many more works on local treewidth. The class of\nproblems that could be solved quickly on graphs of bounded local\ntreewidth was extended and classified by Frick and Grohe, \"<a\nhref=\"//doi.org/10.1145/504794.504798\">Deciding first-order\nproperties of locally tree-decomposable structures</a>\", <i>J. ACM</i>\n48: 1184&ndash;1206, 2001;\nthe proof that bounded local treewidth is equivalent to having an\nexcluded apex minor was simplified, and the dependence of the treewidth\non diameter\nimproved, by a subsequent paper of Demaine and Hajiaghayi, \"<a href=\"//erikdemaine.org/papers/DiameterTreewidth_Algorithmica/\">Diameter and\ntreewidth in minor-closed graph families, revisited</a>\", <i>Algorithmica</i>\n40: 211&ndash;215, 2004. The concept of local treewidth is the basis for the\ntheory of <i>bidimensionality</i>, a general framework for\nfixed-parameter-tractable algorithms and approximation algorithms in\nminor-closed graph families; for a survey, see Demaine and Hajiaghayi,\n\"<a href=\"//erikdemaine.org/papers/BidimensionalSurvey_CJ/\">The\nbidimensionality theory and its algorithmic applications</a>\", <i>The\nComputer J.</i> 51: 292&ndash;302, 2008.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Diameter and treewidth in minor-closed graph families\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Diameter-and-treewidth-in-minor-closed-graph-families.html\">Citations</a>)\n<p>\n<li><b>Shortest paths in an arrangement with <i>k</i> line orientations</b>.<br>\nD. Eppstein and\n<a href=\"//www.cs.wayne.edu/~hart/\">D. Hart</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=314580\">\n<i>10th ACM-SIAM Symp. Discrete Algorithms,</i> Baltimore, 1999, pp. 310&ndash;316</a>.\n<p>\nWe show how to find shortest paths between two points on the lines of\nan arrangement of <i>n</i> lines with <i>k</i> distinct orientations,\nin time O(<i>n</i>&nbsp;+&nbsp;<i>k</i><sup>2</sup>).\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Shortest paths in an arrangement with $k$ line orientations\">BibTeX</a> &ndash;\n<a href=\"EppHar-SODA-99.ps.gz\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Shortest-paths-in-an-arrangement-with-k-line-orientations.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein99shortest.html\">CiteSeer</a>)\n<p>\n<li><b>Setting parameters by example</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.DS/9907001\">arXiv:cs.DS/9907001</a>.<br>\n<a href=\"//www.computer.org/proceedings/focs/0409/04090309abs.htm\"><i>40th\nIEEE Symp. Foundations of Comp. Sci.</i>, 1999, pp. 309&ndash;318</a>.<br>\n<a href=\"//doi.org/10.1137/S0097539700370084\">\n<i>SIAM J. Computing</i> 32 (3): 643&ndash;653, 2003</a>.\n<p>\nWe introduce a class of \"inverse parametric optimization\"\nproblems, in which one is given both a parametric optimization problem\nand a desired optimal solution; the task is to determine parameter\nvalues that lead to the given solution.  We use\n<a href=\"geom-lp.html\">low-dimensional linear programming</a>\nand geometric sampling techniques to solve\nsuch problems for\n<a href=\"mst.html\">minimum spanning trees</a>,\n<a href=\"graph-path.html\">shortest paths</a>, and\nother optimal subgraph problems, and discuss applications in\nmulticast routing, vehicle path planning, resource allocation, and board\ngame programming.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Setting parameters by\nexample\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Setting-parameters-by-example.html\">Citations</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=796502\">ACM DL (FOCS)</a> &ndash;\n<a href=\"//portal.acm.org/citation.cfm?id=639091\">ACM DL (SJC)</a>)\n<p>\n<li><b>Searching for spaceships</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.AI/0004003\">arXiv:cs.AI/0004003</a>.<br>\nMSRI Combinatorial Game Theory Research Worksh., July 2000.<br>\n<a href=\"//www.msri.org/publications/books/Book42/files/eppstein.pdf\">\n<em>More Games of No Chance</em>,\nR. J. Nowakowski, ed., MSRI Publications 42, pp. 433&ndash;453</a>.\n<p>\nWe describe software that searches for\n<a href=\"/~eppstein/ca/\">spaceships in Conway's Game of\nLife and related two-dimensional cellular automata</a>.\nOur program searches through a state space\nrelated to the de Bruijn graph of the automaton,\nusing a method that combines features of breadth first and\niterative deepening search, and includes fast\nbit-parallel <a href=\"graph-path.html\">graph reachability</a>\nand <a href=\"kbest.html\">path enumeration</a> algorithms\nfor finding the successors of each state.\nSuccessful results include a\n<a href=\"//fano.ics.uci.edu/ca/rules/b3s23/g9.html\">new 2c/7\nspaceship in Life</a>, found by searching a space with 2^126 states. \n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Searching for spaceships\">BibTeX</a> &ndash;\n<a href=\"//www.msri.org/publications/ln/msri/2000/gametheory/eppstein/1/\">MSRI\ntalk on streaming video</a> and\n<a href=\"Epp-MSRI-00.pdf\">Slides</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Searching-for-spaceships.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein02searching.html\">CiteSeer</a>)\n<p>\n<li><b>One-dimensional peg solitaire, and duotaire</b>.<br>\n<a href=\"//www.santafe.edu/~moore/\">C. Moore</a>\nand D. Eppstein.<br>\n<a href=\"//arXiv.org/abs/math.CO/0006067\">arXiv:math.CO/0006067</a> and\n<a href=\"//arXiv.org/abs/math.CO/0008172\">math.CO/0008172</a>.<br>\nMSRI Combinatorial Game Theory Research Worksh., July 2000.<br>\n<a href=\"//www.santafe.edu/media/workingpapers/00-09-050.pdf\">Santa Fe Inst. working paper 00-09-050</a>, September 2000.<br>\n<a href=\"//www.msri.org/publications/books/Book42/files/moore.pdf\">\n<em>More Games of No Chance</em>,\nR. J. Nowakowski, ed., MSRI Publications 42, pp. 341&ndash;350</a>.\n<p>\nWe describe by a regular expression the one-dimensional peg-solitaire\npositions reducible to a single peg, and provide a linear-time algorithm\n(based on finding <a href=\"graph-path.html\">shortest paths</a> in an\nassociated DAG) for\nreducing any such position to the minimum number of pegs.\nWe then investigate impartial games in which players alternate peg\nsolitaire moves in an attempt to be the one to move last.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#One-dimensional peg solitaire, and duotaire\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/One-dimensional-peg-solitaire-and-duotaire.html\">Citations</a> &ndash;\n<a href=\"//www.msri.org/publications/ln/msri/2000/gametheory/moore/2/\">Cris' MSRI\ntalk on streaming video</a> &ndash;\n<a href=\"//www.santafe.edu/~moore/pubs/peg.html\">Cris' publications page</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/moore02onedimensional.html\">CiteSeer</a>)\n<p>\n<li><b>Phutball endgames are hard</b>.<br>\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\n<a href=\"//martindemaine.org/\">M. Demaine</a>,\nand D. Eppstein.<br>\n<a href=\"//arXiv.org/abs/cs.CC/0008025\">arXiv:cs.CC/0008025</a>.<br>\n<a href=\"//www.msri.org/publications/books/Book42/files/dephut.pdf\">\n<em>More Games of No Chance</em>,\nR. J. Nowakowski, ed., MSRI Publications 42, pp. 351&ndash;360</a>.\n<p>\nWe show that, in John Conway's board game Phutball (or Philosopher's\nFootball), it is NP-complete to determine whether the\ncurrent player has a move that immediately wins the game. In\ncontrast, the similar problems of determining whether there is an\nimmediately winning move in checkers, or a move that kings a man,\nare both solvable in polynomial time. \n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Phutball endgames are hard\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Phutball-endgames-are-hard.html\">Citations</a> &ndash;\n<a href=\"//erikdemaine.org/papers/Phutball/\">Erik's\npublications page</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/demaine02phutball.html\">CiteSeer</a>)\n<p>\n<li><b>Fast approximation of centrality</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~josephw/\">J. Wang</a>.<br>\n<a href=\"//arXiv.org/abs/cs.DS/0009005\">arXiv:cs.DS/0009005</a>.<br>\n<a href=\"//portal.acm.org/citation.cfm?id=365449\">\n<i>12th ACM-SIAM Symp. Discrete Algorithms,</i>\nWashington, 2001, pp. 228&ndash;229</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00081\"><i>J. Graph Algorithms &amp; Applications</i> 8 (1): 39&ndash;45, 2004</a>.\n<p>\nWe use random sampling to quickly estimate, for each vertex in a graph,\nthe average <a href=\"graph-path.html\">distance</a> to all other vertices.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Fast approximation of centrality\">BibTeX</a> &ndash;\n<a href=\"EppWan-SODA-01.pdf\">SODA paper</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Fast-approximation-of-centrality.html\">Citations</a> &ndash;\n<a href=\"//citeseer.ist.psu.edu/eppstein01fast.html\">CiteSeer</a>)\n<p>\n<li><b>Nonrepetitive paths and cycles in graphs with application to Sudoku</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/cs.DS/0507053\">arXiv:cs.DS/0507053</a>.\n<p>\nWe describe algorithms and hardness results for finding paths in\nedge-labeled graphs such that no two consecutive edges have the same label,\nand use our algorithms to implement heuristics for a program that\nautomatically solves and generates Sudoku puzzles.\n<p>\n(<a href=\"//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Nonrepetitive paths and cycles in graphs with application to Sudoku\">BibTeX</a> &ndash;\n<a href=\"//fano.ics.uci.edu/cites/Document/Nonrepetitive-paths-and-cycles-in-graphs-with-application-to-Sudoku.html\">Citations</a>)\n<p>\n<li><b>Succinct greedy geometric routing using hyperbolic geometry</b>.<br>\nD. Eppstein and\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>.<br>\n<a href=\"//arxiv.org/abs/0806.0341\">arXiv:0806.0341</a>.<br>\n<i>Proc. 16th Int. Symp. Graph Drawing</i>, Heraklion, Crete, 2008<br>\n(under the different title \"Succinct greedy graph drawing in the\nhyperbolic plane\"),<br>\nSpringer, <i>Lecture Notes in Comp. Sci.</i> 5417, 2009, pp. 14&ndash;25.<br>\n<a href=\"//doi.ieeecomputersociety.org/10.1109/TC.2010.257\"><i>IEEE Transactions on Computing</i> 60 (11): 1571&ndash;1580, 2011</a>.\n<p>\nGreedy drawing is an idea for encoding network routing tables into the\ngeometric coordinates of an embedding of the network, but most previous\nwork in this area has ignored the space complexity of these encoded tables.\nWe refine a method of R. Kleinberg for embedding arbitrary graphs into\nthe hyperbolic plane, which uses linearly many bits to represent each\nvertex, and show that only logarithmic bits per point are needed.\n<p>\n<li><b>Studying (non-planar) road networks through an algorithmic lens</b>.<br>\nD. Eppstein, and\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>.<br>\n<a href=\"//arxiv.org/abs/0808.3694\">arXiv:0808.3694</a>.<br>\n<a href=\"//doi.org/10.1145/1463434.1463455\"><i>Proc. 16th ACM SIGSPATIAL Int. Conf. Advances in Geographic\nInformation Systems (ACM GIS 2008)</i>, Article 16</a> (best paper award).<br>\nInvited talk at INFORMS 2009, San Diego.\n<p>\nWe examine US road network data and show that, contrary to the\nassumptions of much past GIS work, these networks are highly nonplanar.\nWe introduce a class of \"multiscale dispersed\" networks that better fit\nthe data; these networks are defined by a family of disks of varying\nsizes such that, if a small number of outliers is removed, the remaining\ndisks cover each point of the plane a constant number of times.\nAs we show, these networks have good graph separators, allowing for\nefficient algorithms for minimum spanning trees, graph Voronoi diagrams,\nand related problems.\n<p>\n<li><b>Linear-time algorithms for geometric graphs with sublinearly many\ncrossings</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>.<br>\n<a href=\"//arxiv.org/abs/0812.0893\">arXiv:0812.0893</a>.<br>\n<a href=\"//www.siam.org/proceedings/soda/2009/SODA09_018_eppsteind.pdf\"><i>20th ACM-SIAM Symp. Discrete Algorithms,</i>\nNew York, 2009, pp. 150&ndash;159</a>.<br>\n<a href=\"//doi.org/10.1137/090759112\"><i>SIAM J. Computing</i> 39 (8): 3814&ndash;3829, 2010</a>.\n<p>\nIf a connected graph corresponds to a set of points and line segments in\nthe plane, in such a way that the number of crossing pairs of line\nsegments is sublinear in the size of the graph by an iterated-log\nfactor, then we can find the arrangement of the segments in linear\ntime. It was previously known how to find the arrangement in linear time\nwhen the number of crossings is superlinear by an iterated-log factor,\nso the only remaining open case is when the number of crossings is close to the\nsize of the graph.\n<p>\n<li><b>Optimal angular resolution for face-symmetric drawings</b>.<br>\nD. Eppstein and\n<a href=\"//kwortman.ecs.fullerton.edu/\">K. Wortman</a>.<br>\n<a href=\"//arxiv.org/abs/0907.5474\">arXiv:0907.5474</a>.<br>\n<a href=\"//jgaa.info/accepted/2011/EppsteinWortman2011.15.4.pdf\"><i>J. Graph\nAlgorithms and Applications</i> 15 (4): 551&ndash;564, 2011</a>.\n<p>\nWe consider drawings of planar partial cubes in which all interior faces are\ncentrally symmetric convex polygons, as in my previous\npaper <a href=\"p-afdm.html\">Algorithms for Drawing Media</a>. Among all\ndrawings of this type, we show how to find the one with optimal angular\nresolution. The solution involves a transformation from the problem\ninto the parametric negative cycle detection problem: given a graph in\nwhich the edge weights are linear functions of a parameter &lambda;,\nfind the minimum value of &lambda; for which the graph contains no\nnegative cycles.\n<p>\n<li><b>Category-based routing in social networks: membership dimension and the small-world phenomenon</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"//www.ics.uci.edu/~mloffler/\">M. L&ouml;ffler</a>,\n<a href=\"//www.ics.uci.edu/~dstrash/\">D. Strash</a>, and\n<a href=\"//www.ics.uci.edu/~ltrott/\">L. Trott</a>.<br>\n<i>Workshop on Graph Algorithms and Applications</i>, Z&uuml;rich,\nSwitzerland, July 2011.<br>\n<i>International Conference on Computational\nAspects of Social Networks (CASoN 2011)</i>, Salamanca, Spain, October\n2011.<br>\n<a href=\"//arxiv.org/abs/1108.4675\">arXiv:1108.4675</a>.<br>\n<a href=\"//doi.org/10.1016/j.tcs.2013.04.027\"><i>Theor. Comput. Sci.</i> 514: 96&ndash;104, 2013</a>. (Special issue on Graph\nAlgorithms and Applications: in Honor of Professor Giorgio Ausiello)<br>\n<p>\nWe investigate greedy routing schemes for social networks, in which\nparticipants know categorical information about some other participants\nand use it to guide message delivery by forwarding messages to neighbors\nthat have more categories in common with the eventual destination.\nWe define the membership dimension of such a scheme to be the maximum\nnumber of categories that any individual belongs to, a natural measure\nof the cognitive load of greedy routing on its participants.\nAnd we show that membership dimension is closely related to the small\nworld phenomenon: a social network can be given a category system with\npolylogarithmic membership dimension that supports greedy routing if,\nand only if, the network has polylogarithmic diameter.\n<p>\n<li><b>Randomized speedup of the Bellman&ndash;Ford algorithm</b>.<br>\n<a href=\"//michaeljbannister.com/\">M. J. Bannister</a> and\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1111.5414\">arXiv:1111.5414</a>.<br>\n<a href=\"//siam.omnibooksonline.com/2012ANALCO/data/papers/005.pdf\"><i>Analytic Algorithmics and Combinatorics (ANALCO12)</i>, Kyoto, Japan, 2012, pp. 41&ndash;47</a>.\n<p>\nThe Bellman&ndash;Ford algorithm for single-source shortest paths in graphs\nthat may have negatively weighted edges but no negative cycles can be\nsped up by a technique of Yen in which the graph is partitioned into two\ndirected acyclic subgraphs and edge relaxations alternate between these\ntwo subgraphs. We show that choosing this partition randomly gains an\nadditional factor of 2/3 in running time.\n<p>\n<li><b>Solving single-digit Sudoku subproblems</b>.<br>\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1202.5074\">arXiv:1202.5074</a>.<br>\n<i>6th International Conference on Fun with Algorithms (FUN 2012)</i>,\nVenice, Italy, 2012.<br>\n<a href=\"//doi.org/10.1007/978-3-642-30347-0_16\">Springer, <i>Lecture Notes in\nComp. Sci.</i> 7288, 2012, pp. 142&ndash;153</a>.\n<p>\nWe find an algorithm for making all possible deductions based on the set\nof candidate locations for a single digit in a Sudoku puzzle; the\nproblem is NP-hard, and our algorithm takes exponential time, but the\nmild form of the exponential allows it to be fast for practical problem sizes.\n<p>\n(<a href=\"Epp-FUN-12-slides.pdf\">Slides</a>)\n<p>\n<li><b>Near-linear-time deterministic plane Steiner spanners and TSP\napproximation for well-spaced point sets</b>.<br>\n<a href=\"//blogs.oregonstate.edu/glencora/\">G. Borradaile</a> and\nD. Eppstein.<br>\n<a href=\"//arxiv.org/abs/1206.2254\">arXiv:1206.2254</a>.<br>\n<i>24th Canadian Conference on Computational Geometry (CCCG 2012)</i>,\nPrince Edward Island, Canada, 2012, pp. 311&ndash;316.<br>\n<a href=\"//doi.org/10.1016/j.comgeo.2015.04.005\"><i>Comp. Geom. Theory\n&amp; Applications</i> 49: 8&ndash;16, 2015</a> (special issue for CCCG 2012).\n<p>\nWhen a planar point set has the property that its Delaunay triangulation\nhas no large angles, we show how to connect it by a plane graph (having\nlinearly many additional Steiner vertices) in which the distances\nbetween the original points are approximations to their Euclidean\ndistance, and in which the total graph weight is at most a constant\ntimes the minimum spanning tree weight. The time to construct this graph\nis near-linear, the same as for integer sorting. We use this result to\napproximate the traveling salesman problem, for these point sets, in the\nsame time bound.\n<p>\n<li><b><i>k</i>-best enumeration</b>.<br>\nD. Eppstein.<br>\n<a href=\"//doi.org/10.1007/978-3-642-27848-8_733-1\"><i>Encyclopedia of Algorithms</i></a> (Ming-Yang Kao, ed.), Springer, added 2014.<br>\n<a href=\"//arxiv.org/abs/1412.5075\">arXiv:1412.5075</a>.<br>\n<a href=\"//bulletin.eatcs.org/index.php/beatcs/article/view/322\"><i>Bull. EATCS</i> 115, 2015</a>.\n<p>\nA brief survey of algorithms for finding the <i>k</i> shortest paths and\nrelated <i>k</i>-best enumeration problems. The arXiv/EATCS version is\nsignificantly longer and with more references than the Springer version.\n<p>\n<li><b>Rooted cycle bases</b>.<br>\nD. Eppstein,\n<a href=\"//www.eng.uci.edu/users/j-michael-mccarthy\">J. M. McCarthy</a>, and\nB. E. Parrish.<br>\n<a href=\"//arxiv.org/abs/1504.04931\">arXiv:1504.04931</a>.<br>\n14th Algorithms and Data Structures Symp. (WADS 2015), Victoria, BC.<br>\n<a href=\"//doi.org/10.1007/978-3-319-21840-3_28\">Springer, <i>Lecture Notes in Comp. Sci.</i> 9214 (2015), pp. 339&ndash;350</a>.<br>\n<a href=\"//doi.org/10.7155/jgaa.00434\"><i>J. Graph Algorithms &\nApplications</i> 21 (4): 663&ndash;686, 2017</a>.\n<p>\nWe consider the problem of finding a cycle basis for a graph in which\nall basis cycles contain a specified edge. We characterize the graphs\nhaving such a basis in terms of their vertex connectivity, we show that\nthe minimum weight cycle basis with this constraint can be found in\npolynomial time and is weakly fundamental, and we show that finding a\nfundamental cycle basis with this constraint is NP-hard but\nfixed-parameter tractable.\n<p>\n(<a href=\"EppMcCPar-WADS-15-slides.pdf\">Slides</a>)\n<p>\n<li><b>Approximate greedy clustering and distance selection for graph metrics</b>.<br>\nD. Eppstein,\n<a href=\"//sarielhp.org/\">S. Har-Peled</a>, and\n<a href=\"//web.cse.ohio-state.edu/~tasos/\">A. Sidiropoulos</a>.<br>\n<a href=\"//arxiv.org/abs/1507.01555\">arXiv:1507.01555</a>.<br>\n<p>\nWe provide fast approximation algorithms for the farthest-first\ntraversal of graph metrics.\n<p>\n<li><b><i>K</i>-best solutions of MSO problems on tree-decomposable graphs</b>.<br>\nD. Eppstein and\n<a href=\"//ls11-www.cs.uni-dortmund.de/staff/kurz\">D. Kurz</a>.<br>\n<a href=\"//arxiv.org/abs/1703.02784\">arXiv:1703.02784</a>.<br>\n<i>Proc. 12th International Symposium on Parameterized and Exact\nComputation (IPEC 2017)</i>, Vienna, Austria, 2017.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.IPEC.2017.16\">Leibniz International\nProceedings in Informatics (LIPIcs) 89, pp. 16.1&ndash;16.13</a>\n<p>\nWe show that, on graphs of bounded treewidth, for any\noptimization problem definable in monadic second-order logic, we can\nfind the <i>k</i> best solutions in logarithmic time per solution.\n<p>\n<li><b>Crossing patterns in nonplanar road networks</b>.<br>\nD. Eppstein and\nS. Gupta.<br>\n<a href=\"//arxiv.org/abs/1709.06113\">arXiv:1709.06113</a>.<br>\n<a href=\"//doi.org/10.1145/3139958.3139999\"><i>Proc. 25th ACM SIGSPATIAL Int. Conf. Advances\nin Geographic Information Systems (ACM SIGSPATIAL 2017)</i>,\nRedondo Beach, California, pp. 40:1&ndash;40:9</a>.<br>\n<p>\nWe show that, although an individual edge in a road network can have\nmany crossings, real-world road networks have the property that the\ncrossing graph of their edges is sparse.\nWe prove that networks with this property are themselves sparse and have\nsmall separators, allowing many fast algorithms to be generalized from\nplanar graphs to these networks.\n<p>\n<li><b>Reconfiguring undirected paths</b>.<br>\n<a href=\"//erikdemaine.org/\">E. Demaine</a>,\nD. Eppstein,\n<a href=\"//math.mit.edu/directory/profile.php?pid=1468\">A. Hesterberg</a>,\nK. Jain,\n<a href=\"//cs.uwaterloo.ca/~alubiw/Site/Anna_Lubiw.html\">A. Lubiw</a>,\n<a href=\"//www.jaist.ac.jp/~uehara/index-e.html\">R. Uehara</a>, and\n<a href=\"//jazz.cias.osakafu-u.ac.jp/~uno/index-e.htm\">Y. Uno</a>.<br>\n<a href=\"https://arxiv.org/abs/1905.00518\">arXiv:1905.00518</a>.<br>\n<i>16th Algorithms and Data Structures Symp. (WADS 2019)</i>, Edmonton,\nAlberta.<br>\n<a href=\"//doi.org/10.1007/978-3-030-24766-9_26\">Springer, <i>Lecture\nNotes in Comp. Sci.</i> 11646 (2019), pp. 353&ndash;365</a>.<br>\n<p>\nA motion that slides an undirected path along its length from one\nconfiguration to another in a graph (allowing moves in both directions)\ncan be found in time that is fixed-parameter tractable in the path length.\nHowever the problem is PSPACE-complete for paths of unbounded length,\neven when the host graph has bounded bandwidth.\n<p>\n(<a href=\"DemEppHes-WADS-19.pdf\">Slides</a>)\n<p>\n<li><b>Tracking paths in planar graphs</b>.<br>\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, \n<a href=\"//pmatias.com/\">P. Matias</a>, and\n<a href=\"//www.ics.uci.edu/~jamesal1/\">J. A. Liu</a>.<br>\n<a href=\"//arxiv.org/abs/1908.05445\">arXiv:1908.05445</a>.<br>\n<i>Proc. 30th International Symposium on Algorithms and Computation\n(ISAAC 2019)</i>, Shanghai, China, 2019.<br>\n<p>\n</ul>\n\n<hr><p>\n<a href=\"graph.html\">Graph Theory</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}