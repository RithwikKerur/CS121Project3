{"url": "https://www.ics.uci.edu/~jacobson/ics21/LabManual/07-Assignment2.html", "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n    \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<meta name=\"Generator\" content=\"Microsoft Word 97/98\">\n<title>Lab Assignment 2</title>\n<link rel=\"stylesheet\" href=\"../course.css\" type=\"text/css\">\n</head>\n\n<body>\n\n<div class=\"title\">\n<center>\n<h2>Animated Smiley</h2>\n<h4>Lab Assignment 2<br>\nto prepare for Lab Exam 2</h4>\n</center>\n</div>\n\n<p>This assignment gives you some more practice in basic Java programming, including practice with <font class = \"codefacesmall\">if</font> statments and simple loops, by enhancing the previous Smiley program to handle animation of a smiley face as it interacts with the walls (boundaries) of the graphics window.</p>\n\n<div class=\"section\">\n<hr>\n<h3>Program Behavior and General Requirements</h3>\n</div>\n\n<p>You are to complete the Java class SmileyAnimation, which we&#146;ve added to the Smiley program so that smiley faces can be animated. </p>\n\n<p>When you run a  (correctly) implemented version of this program, a graphics window appears, with a smiley face in it; the exact shape and color of the face are up to you, within the bounds that the face must be small enough that it can move around within the graphics window and be recognizable as a smiley face.  That smiley heads off towards a wall, an edge of the graphics window. When it hits the wall it should \n<p>\n<ol>\n<li>Change the color of its face to the color of the wall, and the wall color should become the color of the smiley face; in other words, the colors swap.</p>\n<li>Rebound from the wall, either directly (going back the way it came), or at 45 degrees up or down (if it hit the left or right wall) or 45 degrees left or right (if it hit the top or bottom wall); the direction is randomly chosen and each direction has an equal probability of occurring.\n</ol>\n<p>This behavior continues for a number of milliseconds, set as a constant in the program; every time the smiley hits a wall, it and the wall swap colors and the smiley rebounds, heading to another wall.</p>\n<p>Closing the window ends the program, even if the window is closed while the smiley is still moving.</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Technical Details</h3>\n</div>\n\n<p>For this assignment, we&#146;ve again helped you get started by providing some code and lots of comments and documentation. All of your work is to be done in the SmileyAmination class. We provide several already-written classes, in compiled form, that provide functions you will likely need to use in your program. Three of these, SmileyFace, SmileyFacePart, and SmileyDisplay, have public methods you may need to employ, so we included text files, SmileyFace.txt, SmileyFacePart.txt, and SmileyDisplay.txt, that describe those methods. You may be surprised that SmileyFace and SmileyFacePart are not provided in source code form, since you wrote those classes in the last assignment. But that is exactly the point: having written and thoroughly tested them, we can now use their methods to make and manipulate smiley face characterisics without paying attention to the class&#146; details; we don&#146;t need the source to use the  class&#146; capabilities.</p>\n\n<p>These files have been collected into an Eclipse project and zipped into an archive called \n<a href=\"//www.ics.uci.edu/~jacobson/ics21/LabManual/LabFiles/21Lab2.zip\"><font class = \"codefacesmall\"><font class = \"codefacesmall\">21Lab2.zip</font></font></a>. Using the same procedure that you followed in the last assignment, import this project into your Eclipse workspace.</p>\n\n\n<div class=\"section\">\n<hr>\n<h3>Testing Tips</h3>\n</div>\n\n<p>It&#146;s typically fastest to implement and debug a program when it is done in stages; when something goes wrong, you know it was because of changes made at the current stage, thus reducing the amount of code you have to search to find the mistake. Testing in stages can take many forms. For this assignment, since all the methods you are writing are in one class, testing in stages boils down to adding and testing a method or two at a time, judiciously choosing them so that, as you add them, you are incrementally heading to a completed program.</p>\n\n<p>For example, here&#146;s an outline of one way to incrementally implement and test your program:</p>\n<ul>\n<li>Staert by just constructing and painting the initial smiley face; don&#146;t animate it yet.\n<li>Move the smiley in one, chosen direction (not randomly) and make sure it goes that direction. Change the chosen direction a few times and re-run the program, making sure each time that the smiley face goes where it&#146;s supposed to go.\n<li>Using a chosen direction, make the smiley stop at a wall; repeat for all four walls.\n<li>When the smiley hits a wall, swap the color of the wall with the face&#146;s color; repeat for all four walls.\n<li>Have the smiley hit the wall &#147;dead on,&#148; swap colors and have the smiley return back the way it came; repeat for all four walls.\n<li>Have the smiley rebound from a wall at the three angles that can (later) randomly occur; repeat for each angle and each of the four walls.\n<li>Choose the &#147;bounce direction&#148; randomly, as described above.\n<li>Test the whole program with various starting positions, sizes and colors of smiley faces.\n</ul>\n\n<div class=\"section\">\n<hr>\n<h3>About Lab Exam 2</h3>\n</div>\n\n<p>Lab exam 2 will be very similar, but perhaps not identical, to the program you are to code for this assignment. You will  implement one or more of the following methods (all are from the SmileyAnimation class):</p>\n\n<ul>\n<li>the constructor</li>\n<li>animate</li>\n<li>hitSomething</li>\n<li>adjustColorAndDirection</li>\n<li>adjustColor</li>\n<li>adjustDirection</li>\n<li>hitLeftWall</li>\n<li>hitRightWall</li>\n<li>hitTopWall</li>\n<li>hitBottomWall</li>\n</ul>\n\n<p>Remember to read over <font class = \"codefacesmall\">INSTRUCTIONS!.txt</font> and  program comments before beginning; they will tell you what you are to complete and give any particulars (such as, for example, the characteristics of a smiley face you are to draw or the kind of movement it should exhibit when animated).</p>\n\n<hr>\n<div class=\"history\">\nWritten by Norman Jacobson for ICS 21 Fall 2006, October 2006.\n<br>Minor edits by Norman Jacobson, December 2006 and September 2008.\n<br>Minor edits to reflect use of Eclipse, by Norman Jacobson September 2009. \n<br>&nbsp;&nbsp;Includes some text adapted from Alex Thornton's \"Lab 2\" for ICS 21 Summer 2009.\n<br>Minor edits by Norman Jacobson September 2010. \n<br>Minor revision to make clear that all directions of return after bouncing off a wall\n<br>&nbsp;&nbsp;have the same probability, by Norman Jacobson November 2010. \n\n</div>\n\n</body>\n</html>\n", "encoding": "ascii"}