{"url": "https://www.ics.uci.edu/~eppstein/pubs/a-johnson.html", "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nPublications with \n<a href=\"//www.ics.uci.edu/~tujohnso/\">\nTimothy Johnson\n</a>\n</h2>\n<ul>\n<li><b>Square-contact representations of partial 2-trees and\ntriconnected simply-nested graphs</b>.<br>\n<a href=\"//www.dia.uniroma3.it/~dalozzo/\">G. Da Lozzo</a>,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein, and\n<a href=\"//www.ics.uci.edu/~tujohnso/\">T. Johnson</a>.<br>\n<a href=\"//arxiv.org/abs/1710.00426\">arXiv:1710.00426</a>.<br>\n<i>Proc. 28th Int. Symp. Algorithms and Computation (ISAAC 2017)</i>,\nPhuket, Thailand, 2017.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.ISAAC.2017.24\">Leibniz International\nProceedings in Informatics (LIPIcs) 92, pp. 24:1&ndash;24:16</a>.<br>\n<p>\nWe show that the <i>K</i><sub>1,1,3</sub>-free partial 2-trees and the\nHalin graphs other than <i>K</i><sub>4</sub> can all be\nrepresented as proper contact graphs of squares in the plane. Among partial\n2-trees and Halin graphs, these are exactly the ones that can be\nembedded without nonempty triangles, which form an obstacle to the\nexistence of square contact representations. However the graph\nof a square antiprism has no such representation despite being\nembeddable without any nonempty triangles.\n<p>\n<li><b>Quadratic time algorithms appear to be optimal for sorting\nevolving data</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\n<a href=\"//www.ics.uci.edu/~tujohnso/\">T. Johnson</a>.<br>\n<a href=\"//doi.org/10.1137/1.9781611975055.8\"><i>Proc. Algorithm\nEngineering &amp; Experiments (ALENEX 2018)</i>, New Orleans, 2018,\npp. 87&ndash;96</a>.<br>\n<a href=\"//arxiv.org/abs/1805.05443\">arXiv:1805.05443</a>.\n<p>\nWe experiment with sorting algorithms in the evolving data model,\nin which, at the same time as the algorithm compares pairs of elements\nand possibly chooses a new ordering based on the results of the comparison,\nan adversary randomly chooses two adjacent elements in the sorted order\nand swaps them. As we show, bubble sort and its variants appear to\nmaintain an order that is within inversion distance of optimal.\n<p>\n<li><b>Optimally sorting evolving data</b>.<br>\nJ. Besa,\n<a href=\"//www.ics.uci.edu/~wdevanny/\">W. E. Devanny</a>,\nD. Eppstein,\n<a href=\"//www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>, and\nT. Johnson.<br>\n<a href=\"//arxiv.org/abs/1805.03350\">arXiv:1805.03350</a><br>\n<i>Proc. 45th International Colloquium on Automata, Languages, and\nProgramming (ICALP 2018)</i>, Prague.<br>\n<a href=\"//doi.org/10.4230/LIPIcs.ICALP.2018.81\">Leibniz International Proceedings in Informatics (LIPIcs) 107, pp. 81:1&ndash;81:13</a>.<br>\n<p>\nSuppose that a collection of objects has a linear order that is evolving\nby swaps of randomly chosen consecutive elements. We would like to\nmaintain an approximation to this order using an algorithm that performs\none comparison per swap. We show that repeated insertion sort can\nmaintain linear inversion distance from the underlying order, the best\npossible.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"auth.html\">Co-authors</a> &ndash;\n<a href=\"/~eppstein/pubs/\">Publications</a> &ndash;\n<a href=\"/~eppstein/\">David Eppstein</a> &ndash;\n<a href=\"/~theory/\">Theory Group</a> &ndash;\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> &ndash;\n<a href=\"//www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "encoding": "ascii"}