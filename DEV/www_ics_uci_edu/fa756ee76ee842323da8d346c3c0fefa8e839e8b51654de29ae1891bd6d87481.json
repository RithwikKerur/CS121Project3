{"url": "https://www.ics.uci.edu/~ejw/versioning/arch/0155.html", "content": "<!-- received=\"Tue Sep  3 22:36:00 1996 PDT\" -->\n<!-- sent=\"Tue, 3 Sep 1996 22:30:44 -0700\" -->\n<!-- name=\"Christopher Seiwald\" -->\n<!-- email=\"seiwald@perforce.com\" -->\n<!-- subject=\"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies -- final volley\" -->\n<!-- id=\"199609040530.WAA05546@spice.perforce.com\" -->\n<!-- inreplyto=\"Seiwald Q &amp; A -- \"GET for EDIT\" cookies -- final volley\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies -- final volley</title>\n<h1>Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies -- final volley</h1>\n<b>Christopher Seiwald</b> (<a href=\"mailto:seiwald@perforce.com\"><i>seiwald@perforce.com</i></a>)<br>\n<i>Tue, 3 Sep 1996 22:30:44 -0700</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#155\">[ date ]</a><a href=\"thread.html#155\">[ thread ]</a><a href=\"subject.html#155\">[ subject ]</a><a href=\"author.html#155\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0156.html\">Larry Masinter: \"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\"</a>\n<li> <b>Previous message:</b> <a href=\"0154.html\">David G. Durand: \"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\"</a>\n<!-- nextthread=\"start\" -->\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\nThis is my last volley on this subject.  I promise!\n\n| From: \"David G. Durand\" &lt;<a href=\"mailto:dgd@cs.bu.edu\">dgd@cs.bu.edu</a>&gt;\n|\n| If we have a CHECKOUT method, then we don't need the LOCK method I propose.\n| But we must tell clients to ask for a checkout before trying a put, in case\n| they need one. We cannot require that clients do a special GET operation\n| before posting an update because it's not always required, and could just\n| send a lot of redundant bytes. A system is free to implement the protocol\n| so that sending the redundant bytes is a requirement, but I don't think the\n| protocol should require it.\n\nCHECKOUT is, I believe, your LOCK method renamed.  The LOCK that I talk\nabout is the securing of the right to PUT the next rev of the document.\n\nI admit that I would require a special GET (namely CHECKOUT), but it could\ndo the double-duty of CHECKOUT and \"GET for EDIT\" (with apologies to Yaron).\nAs for the extra bytes, there are already mechanisms where a client can\n\"GET if different\", so that shouldn't be a concern.\n\n|     I myself don't see, nor have I heard any argument showing how my\n| proposal for a separate operation (wh/ probably should not be called LOCK)\n| to reserve a resource, separate from GETing it, is functionally inferior to\n| a joined-at-the-hip checkout that is not as flexible. Maybe the REQUEST(old\n| LOCK) operation needs a \"GET required\" status code for systems that want to\n| make me consume some fresh bytes.\n\nOr, as I said, CHECKOUT can, like GET, have \"if different\" tags to tide\nthe flow of data.\n\n|    This brings me to a question. One of the points that I am most attached\n| to is the \"configuration management treated separately\" requirement. The\n| simplest foundation for any versioning system is to turn resource addresses\n| into ordered pairs of (ID x version). Once we have that we can implement\n| lots of policies on top -- the number of CM systems implemented on top of\n| RCS tends to support that claim. So I'd like to hold off discussions of\n| these complex policy issues until we have to get to them. And I think that\n| if Content-version can serve as a cookie, then it should, because it makes\n| the model for the simple stuff simpler, and doesn't add much work for a\n| complex system anyway.\n|\n| I'm  afraid that with tabs changed to spaces by some mailer, your table of\n| policies was too hard for me to decipher. But I think that this needs to go\n| on hold.\n\nThis may be shortsighted.  I'm not an expert in distributed web authoring,\nbut I know configuration management, and I offer this: a cookie _of the\nserver's choice_ will carry the semantics of all config mgmt systems out\nthere; a cookie of our design will not.  Content-version is a fine name\nfor this cookie (but not my first choice).\n\nChristopher\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0156.html\">Larry Masinter: \"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\"</a>\n<li> <b>Previous message:</b> <a href=\"0154.html\">David G. Durand: \"Re: Seiwald Q &amp; A -- \"GET for EDIT\" cookies\"</a>\n<!-- nextthread=\"start\" -->\n<!-- reply=\"end\" -->\n</ul>\n", "encoding": "ascii"}