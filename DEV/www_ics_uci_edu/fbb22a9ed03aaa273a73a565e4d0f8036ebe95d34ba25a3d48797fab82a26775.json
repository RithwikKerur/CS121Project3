{"url": "https://www.ics.uci.edu/~theory/269/110415.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, 15 April 2011</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"http://www.ics.uci.edu/~theory/logo/CATOC2.jpg\"></a>\n<h2><a href=\"/~theory/269/\">CS 269S, Winter 2011: Theory Seminar</a><br>\nBren Hall, Room 1427\n\n<hr>\n15 April 2011:</h2>\n<h1>Saumi Bandyopadhyay</h1>\n<h2>\"Three Problems About Dynamic Convex Hulls\" by Timothy Chan </h2>\n\n<p>\nWe present three results related to dynamic convex hulls: \n<ul>\n<li>\nA fully dynamic data structure for maintaining a set of n points in the plane so that we\ncan and the edges of the convex hull intersecting a query line, with expected query and\namortized update time O(log1+\" n) for an arbitrarily small constant \" > 0. This improves\nthe previous bound of O(log3=2 n). \n</li>\n<li>\nA fully dynamic data structure for maintaining a set of n points in the plane to support\nhalfplane range reporting queries in O(logn+k) time with O(polylogn) expected amortized\nupdate time. A similar result holds for 3-dimensional orthogonal range reporting. For\n3-dimensional halfspace range reporting, the query time increases to O(log2 n= log logn+k). \n</li>\n<li>\nA semi-online dynamic data structure for maintaining a set of n line segments in the plane,\nso that we can decide whether a query line segment lies completely above the lower envelope,\nwith query time O(logn) and amortized update time O(n\"). As a corollary, we can solve\nthe following problem in O(n1+\") time: given a triangulated terrain in 3-d of size n, identify\nall faces that are partially visible from a fixed viewpoint. \n</li>\n</ul>\n</p>\n\n\n</body>\n</html>\n\n", "encoding": "ascii"}