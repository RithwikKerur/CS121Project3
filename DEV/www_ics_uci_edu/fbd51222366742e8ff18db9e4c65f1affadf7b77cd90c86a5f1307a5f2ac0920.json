{"url": "https://www.ics.uci.edu/~theory/269/100219.html", "content": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, February 19, 2010</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"\n521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a>\n<h2> February 19, Winter Quarter 2010: Theory Seminar </h2>\n<h3>1:00pm in 1423 Bren Hall</h3>\n<h1>   \nApplications of Forbidden 0-1 Matrices to Search Tree and Path\nCompression-Based Data Structures\n</h1>\n<h2> Pawel Pszona, UC Irvine </h2>\n\n<p>\nPresenting a paper by Seth Pettie, from SODA 2010\n\n<p>\nAbstract: In this paper we improve, reprove, and simplify a variety\nof theorems\nconcerning the performance of data structures based on path\ncompression and\nsearch trees. We apply a technique very familiar to computational\ngeometers\nbut still foreign to many researchers in (non-geometric) algorithms\nand data\nstructures, namely, to bound the complexity of an object via its\nforbidden substructures.\n\n<p>\nTo analyze an algorithm or data structure in the forbidden\nsubstructure\nframework one proceeds in three discrete steps. First, one\ntranscribes the\nbehavior of the algorithm as some combinatorial object $M$; for\nexample, $M$\nmay be a graph, sequence, permutation, matrix, set system, or tree.\n(The size\nof $M$ should ideally be linear in the running time.) Second, one\nshows that $M$\nexcludes some forbidden substructure $P$, and third, one bounds the\nsize of\nany object avoiding this substructure. The power of this framework\nderives\nfrom the fact that $M$ lies in a more pristine environment and that\nupper bounds\non the size of a $P$-free object $M$ may be taken \"off the shelf\". \n\n\n</body>\n</html>\n", "encoding": "ascii"}